import { expect } from '@esm-bundle/chai';
import { Ms932 } from "../../dist/index.js";

describe("Ms932.Encoder.prototype.encode 14", () => {

  it("encode(string) - U+D000-U+DFFF", () => {
    const ms932Encoder = new Ms932.Encoder({fatal:true});

expect(() => {ms932Encoder.encode("\uD000")}).to.throw(Error, "EncodingError U+D000");
expect(() => {ms932Encoder.encode("\uD001")}).to.throw(Error, "EncodingError U+D001");
expect(() => {ms932Encoder.encode("\uD002")}).to.throw(Error, "EncodingError U+D002");
expect(() => {ms932Encoder.encode("\uD003")}).to.throw(Error, "EncodingError U+D003");
expect(() => {ms932Encoder.encode("\uD004")}).to.throw(Error, "EncodingError U+D004");
expect(() => {ms932Encoder.encode("\uD005")}).to.throw(Error, "EncodingError U+D005");
expect(() => {ms932Encoder.encode("\uD006")}).to.throw(Error, "EncodingError U+D006");
expect(() => {ms932Encoder.encode("\uD007")}).to.throw(Error, "EncodingError U+D007");
expect(() => {ms932Encoder.encode("\uD008")}).to.throw(Error, "EncodingError U+D008");
expect(() => {ms932Encoder.encode("\uD009")}).to.throw(Error, "EncodingError U+D009");
expect(() => {ms932Encoder.encode("\uD00A")}).to.throw(Error, "EncodingError U+D00A");
expect(() => {ms932Encoder.encode("\uD00B")}).to.throw(Error, "EncodingError U+D00B");
expect(() => {ms932Encoder.encode("\uD00C")}).to.throw(Error, "EncodingError U+D00C");
expect(() => {ms932Encoder.encode("\uD00D")}).to.throw(Error, "EncodingError U+D00D");
expect(() => {ms932Encoder.encode("\uD00E")}).to.throw(Error, "EncodingError U+D00E");
expect(() => {ms932Encoder.encode("\uD00F")}).to.throw(Error, "EncodingError U+D00F");
expect(() => {ms932Encoder.encode("\uD010")}).to.throw(Error, "EncodingError U+D010");
expect(() => {ms932Encoder.encode("\uD011")}).to.throw(Error, "EncodingError U+D011");
expect(() => {ms932Encoder.encode("\uD012")}).to.throw(Error, "EncodingError U+D012");
expect(() => {ms932Encoder.encode("\uD013")}).to.throw(Error, "EncodingError U+D013");
expect(() => {ms932Encoder.encode("\uD014")}).to.throw(Error, "EncodingError U+D014");
expect(() => {ms932Encoder.encode("\uD015")}).to.throw(Error, "EncodingError U+D015");
expect(() => {ms932Encoder.encode("\uD016")}).to.throw(Error, "EncodingError U+D016");
expect(() => {ms932Encoder.encode("\uD017")}).to.throw(Error, "EncodingError U+D017");
expect(() => {ms932Encoder.encode("\uD018")}).to.throw(Error, "EncodingError U+D018");
expect(() => {ms932Encoder.encode("\uD019")}).to.throw(Error, "EncodingError U+D019");
expect(() => {ms932Encoder.encode("\uD01A")}).to.throw(Error, "EncodingError U+D01A");
expect(() => {ms932Encoder.encode("\uD01B")}).to.throw(Error, "EncodingError U+D01B");
expect(() => {ms932Encoder.encode("\uD01C")}).to.throw(Error, "EncodingError U+D01C");
expect(() => {ms932Encoder.encode("\uD01D")}).to.throw(Error, "EncodingError U+D01D");
expect(() => {ms932Encoder.encode("\uD01E")}).to.throw(Error, "EncodingError U+D01E");
expect(() => {ms932Encoder.encode("\uD01F")}).to.throw(Error, "EncodingError U+D01F");
expect(() => {ms932Encoder.encode("\uD020")}).to.throw(Error, "EncodingError U+D020");
expect(() => {ms932Encoder.encode("\uD021")}).to.throw(Error, "EncodingError U+D021");
expect(() => {ms932Encoder.encode("\uD022")}).to.throw(Error, "EncodingError U+D022");
expect(() => {ms932Encoder.encode("\uD023")}).to.throw(Error, "EncodingError U+D023");
expect(() => {ms932Encoder.encode("\uD024")}).to.throw(Error, "EncodingError U+D024");
expect(() => {ms932Encoder.encode("\uD025")}).to.throw(Error, "EncodingError U+D025");
expect(() => {ms932Encoder.encode("\uD026")}).to.throw(Error, "EncodingError U+D026");
expect(() => {ms932Encoder.encode("\uD027")}).to.throw(Error, "EncodingError U+D027");
expect(() => {ms932Encoder.encode("\uD028")}).to.throw(Error, "EncodingError U+D028");
expect(() => {ms932Encoder.encode("\uD029")}).to.throw(Error, "EncodingError U+D029");
expect(() => {ms932Encoder.encode("\uD02A")}).to.throw(Error, "EncodingError U+D02A");
expect(() => {ms932Encoder.encode("\uD02B")}).to.throw(Error, "EncodingError U+D02B");
expect(() => {ms932Encoder.encode("\uD02C")}).to.throw(Error, "EncodingError U+D02C");
expect(() => {ms932Encoder.encode("\uD02D")}).to.throw(Error, "EncodingError U+D02D");
expect(() => {ms932Encoder.encode("\uD02E")}).to.throw(Error, "EncodingError U+D02E");
expect(() => {ms932Encoder.encode("\uD02F")}).to.throw(Error, "EncodingError U+D02F");
expect(() => {ms932Encoder.encode("\uD030")}).to.throw(Error, "EncodingError U+D030");
expect(() => {ms932Encoder.encode("\uD031")}).to.throw(Error, "EncodingError U+D031");
expect(() => {ms932Encoder.encode("\uD032")}).to.throw(Error, "EncodingError U+D032");
expect(() => {ms932Encoder.encode("\uD033")}).to.throw(Error, "EncodingError U+D033");
expect(() => {ms932Encoder.encode("\uD034")}).to.throw(Error, "EncodingError U+D034");
expect(() => {ms932Encoder.encode("\uD035")}).to.throw(Error, "EncodingError U+D035");
expect(() => {ms932Encoder.encode("\uD036")}).to.throw(Error, "EncodingError U+D036");
expect(() => {ms932Encoder.encode("\uD037")}).to.throw(Error, "EncodingError U+D037");
expect(() => {ms932Encoder.encode("\uD038")}).to.throw(Error, "EncodingError U+D038");
expect(() => {ms932Encoder.encode("\uD039")}).to.throw(Error, "EncodingError U+D039");
expect(() => {ms932Encoder.encode("\uD03A")}).to.throw(Error, "EncodingError U+D03A");
expect(() => {ms932Encoder.encode("\uD03B")}).to.throw(Error, "EncodingError U+D03B");
expect(() => {ms932Encoder.encode("\uD03C")}).to.throw(Error, "EncodingError U+D03C");
expect(() => {ms932Encoder.encode("\uD03D")}).to.throw(Error, "EncodingError U+D03D");
expect(() => {ms932Encoder.encode("\uD03E")}).to.throw(Error, "EncodingError U+D03E");
expect(() => {ms932Encoder.encode("\uD03F")}).to.throw(Error, "EncodingError U+D03F");
expect(() => {ms932Encoder.encode("\uD040")}).to.throw(Error, "EncodingError U+D040");
expect(() => {ms932Encoder.encode("\uD041")}).to.throw(Error, "EncodingError U+D041");
expect(() => {ms932Encoder.encode("\uD042")}).to.throw(Error, "EncodingError U+D042");
expect(() => {ms932Encoder.encode("\uD043")}).to.throw(Error, "EncodingError U+D043");
expect(() => {ms932Encoder.encode("\uD044")}).to.throw(Error, "EncodingError U+D044");
expect(() => {ms932Encoder.encode("\uD045")}).to.throw(Error, "EncodingError U+D045");
expect(() => {ms932Encoder.encode("\uD046")}).to.throw(Error, "EncodingError U+D046");
expect(() => {ms932Encoder.encode("\uD047")}).to.throw(Error, "EncodingError U+D047");
expect(() => {ms932Encoder.encode("\uD048")}).to.throw(Error, "EncodingError U+D048");
expect(() => {ms932Encoder.encode("\uD049")}).to.throw(Error, "EncodingError U+D049");
expect(() => {ms932Encoder.encode("\uD04A")}).to.throw(Error, "EncodingError U+D04A");
expect(() => {ms932Encoder.encode("\uD04B")}).to.throw(Error, "EncodingError U+D04B");
expect(() => {ms932Encoder.encode("\uD04C")}).to.throw(Error, "EncodingError U+D04C");
expect(() => {ms932Encoder.encode("\uD04D")}).to.throw(Error, "EncodingError U+D04D");
expect(() => {ms932Encoder.encode("\uD04E")}).to.throw(Error, "EncodingError U+D04E");
expect(() => {ms932Encoder.encode("\uD04F")}).to.throw(Error, "EncodingError U+D04F");
expect(() => {ms932Encoder.encode("\uD050")}).to.throw(Error, "EncodingError U+D050");
expect(() => {ms932Encoder.encode("\uD051")}).to.throw(Error, "EncodingError U+D051");
expect(() => {ms932Encoder.encode("\uD052")}).to.throw(Error, "EncodingError U+D052");
expect(() => {ms932Encoder.encode("\uD053")}).to.throw(Error, "EncodingError U+D053");
expect(() => {ms932Encoder.encode("\uD054")}).to.throw(Error, "EncodingError U+D054");
expect(() => {ms932Encoder.encode("\uD055")}).to.throw(Error, "EncodingError U+D055");
expect(() => {ms932Encoder.encode("\uD056")}).to.throw(Error, "EncodingError U+D056");
expect(() => {ms932Encoder.encode("\uD057")}).to.throw(Error, "EncodingError U+D057");
expect(() => {ms932Encoder.encode("\uD058")}).to.throw(Error, "EncodingError U+D058");
expect(() => {ms932Encoder.encode("\uD059")}).to.throw(Error, "EncodingError U+D059");
expect(() => {ms932Encoder.encode("\uD05A")}).to.throw(Error, "EncodingError U+D05A");
expect(() => {ms932Encoder.encode("\uD05B")}).to.throw(Error, "EncodingError U+D05B");
expect(() => {ms932Encoder.encode("\uD05C")}).to.throw(Error, "EncodingError U+D05C");
expect(() => {ms932Encoder.encode("\uD05D")}).to.throw(Error, "EncodingError U+D05D");
expect(() => {ms932Encoder.encode("\uD05E")}).to.throw(Error, "EncodingError U+D05E");
expect(() => {ms932Encoder.encode("\uD05F")}).to.throw(Error, "EncodingError U+D05F");
expect(() => {ms932Encoder.encode("\uD060")}).to.throw(Error, "EncodingError U+D060");
expect(() => {ms932Encoder.encode("\uD061")}).to.throw(Error, "EncodingError U+D061");
expect(() => {ms932Encoder.encode("\uD062")}).to.throw(Error, "EncodingError U+D062");
expect(() => {ms932Encoder.encode("\uD063")}).to.throw(Error, "EncodingError U+D063");
expect(() => {ms932Encoder.encode("\uD064")}).to.throw(Error, "EncodingError U+D064");
expect(() => {ms932Encoder.encode("\uD065")}).to.throw(Error, "EncodingError U+D065");
expect(() => {ms932Encoder.encode("\uD066")}).to.throw(Error, "EncodingError U+D066");
expect(() => {ms932Encoder.encode("\uD067")}).to.throw(Error, "EncodingError U+D067");
expect(() => {ms932Encoder.encode("\uD068")}).to.throw(Error, "EncodingError U+D068");
expect(() => {ms932Encoder.encode("\uD069")}).to.throw(Error, "EncodingError U+D069");
expect(() => {ms932Encoder.encode("\uD06A")}).to.throw(Error, "EncodingError U+D06A");
expect(() => {ms932Encoder.encode("\uD06B")}).to.throw(Error, "EncodingError U+D06B");
expect(() => {ms932Encoder.encode("\uD06C")}).to.throw(Error, "EncodingError U+D06C");
expect(() => {ms932Encoder.encode("\uD06D")}).to.throw(Error, "EncodingError U+D06D");
expect(() => {ms932Encoder.encode("\uD06E")}).to.throw(Error, "EncodingError U+D06E");
expect(() => {ms932Encoder.encode("\uD06F")}).to.throw(Error, "EncodingError U+D06F");
expect(() => {ms932Encoder.encode("\uD070")}).to.throw(Error, "EncodingError U+D070");
expect(() => {ms932Encoder.encode("\uD071")}).to.throw(Error, "EncodingError U+D071");
expect(() => {ms932Encoder.encode("\uD072")}).to.throw(Error, "EncodingError U+D072");
expect(() => {ms932Encoder.encode("\uD073")}).to.throw(Error, "EncodingError U+D073");
expect(() => {ms932Encoder.encode("\uD074")}).to.throw(Error, "EncodingError U+D074");
expect(() => {ms932Encoder.encode("\uD075")}).to.throw(Error, "EncodingError U+D075");
expect(() => {ms932Encoder.encode("\uD076")}).to.throw(Error, "EncodingError U+D076");
expect(() => {ms932Encoder.encode("\uD077")}).to.throw(Error, "EncodingError U+D077");
expect(() => {ms932Encoder.encode("\uD078")}).to.throw(Error, "EncodingError U+D078");
expect(() => {ms932Encoder.encode("\uD079")}).to.throw(Error, "EncodingError U+D079");
expect(() => {ms932Encoder.encode("\uD07A")}).to.throw(Error, "EncodingError U+D07A");
expect(() => {ms932Encoder.encode("\uD07B")}).to.throw(Error, "EncodingError U+D07B");
expect(() => {ms932Encoder.encode("\uD07C")}).to.throw(Error, "EncodingError U+D07C");
expect(() => {ms932Encoder.encode("\uD07D")}).to.throw(Error, "EncodingError U+D07D");
expect(() => {ms932Encoder.encode("\uD07E")}).to.throw(Error, "EncodingError U+D07E");
expect(() => {ms932Encoder.encode("\uD07F")}).to.throw(Error, "EncodingError U+D07F");
expect(() => {ms932Encoder.encode("\uD080")}).to.throw(Error, "EncodingError U+D080");
expect(() => {ms932Encoder.encode("\uD081")}).to.throw(Error, "EncodingError U+D081");
expect(() => {ms932Encoder.encode("\uD082")}).to.throw(Error, "EncodingError U+D082");
expect(() => {ms932Encoder.encode("\uD083")}).to.throw(Error, "EncodingError U+D083");
expect(() => {ms932Encoder.encode("\uD084")}).to.throw(Error, "EncodingError U+D084");
expect(() => {ms932Encoder.encode("\uD085")}).to.throw(Error, "EncodingError U+D085");
expect(() => {ms932Encoder.encode("\uD086")}).to.throw(Error, "EncodingError U+D086");
expect(() => {ms932Encoder.encode("\uD087")}).to.throw(Error, "EncodingError U+D087");
expect(() => {ms932Encoder.encode("\uD088")}).to.throw(Error, "EncodingError U+D088");
expect(() => {ms932Encoder.encode("\uD089")}).to.throw(Error, "EncodingError U+D089");
expect(() => {ms932Encoder.encode("\uD08A")}).to.throw(Error, "EncodingError U+D08A");
expect(() => {ms932Encoder.encode("\uD08B")}).to.throw(Error, "EncodingError U+D08B");
expect(() => {ms932Encoder.encode("\uD08C")}).to.throw(Error, "EncodingError U+D08C");
expect(() => {ms932Encoder.encode("\uD08D")}).to.throw(Error, "EncodingError U+D08D");
expect(() => {ms932Encoder.encode("\uD08E")}).to.throw(Error, "EncodingError U+D08E");
expect(() => {ms932Encoder.encode("\uD08F")}).to.throw(Error, "EncodingError U+D08F");
expect(() => {ms932Encoder.encode("\uD090")}).to.throw(Error, "EncodingError U+D090");
expect(() => {ms932Encoder.encode("\uD091")}).to.throw(Error, "EncodingError U+D091");
expect(() => {ms932Encoder.encode("\uD092")}).to.throw(Error, "EncodingError U+D092");
expect(() => {ms932Encoder.encode("\uD093")}).to.throw(Error, "EncodingError U+D093");
expect(() => {ms932Encoder.encode("\uD094")}).to.throw(Error, "EncodingError U+D094");
expect(() => {ms932Encoder.encode("\uD095")}).to.throw(Error, "EncodingError U+D095");
expect(() => {ms932Encoder.encode("\uD096")}).to.throw(Error, "EncodingError U+D096");
expect(() => {ms932Encoder.encode("\uD097")}).to.throw(Error, "EncodingError U+D097");
expect(() => {ms932Encoder.encode("\uD098")}).to.throw(Error, "EncodingError U+D098");
expect(() => {ms932Encoder.encode("\uD099")}).to.throw(Error, "EncodingError U+D099");
expect(() => {ms932Encoder.encode("\uD09A")}).to.throw(Error, "EncodingError U+D09A");
expect(() => {ms932Encoder.encode("\uD09B")}).to.throw(Error, "EncodingError U+D09B");
expect(() => {ms932Encoder.encode("\uD09C")}).to.throw(Error, "EncodingError U+D09C");
expect(() => {ms932Encoder.encode("\uD09D")}).to.throw(Error, "EncodingError U+D09D");
expect(() => {ms932Encoder.encode("\uD09E")}).to.throw(Error, "EncodingError U+D09E");
expect(() => {ms932Encoder.encode("\uD09F")}).to.throw(Error, "EncodingError U+D09F");
expect(() => {ms932Encoder.encode("\uD0A0")}).to.throw(Error, "EncodingError U+D0A0");
expect(() => {ms932Encoder.encode("\uD0A1")}).to.throw(Error, "EncodingError U+D0A1");
expect(() => {ms932Encoder.encode("\uD0A2")}).to.throw(Error, "EncodingError U+D0A2");
expect(() => {ms932Encoder.encode("\uD0A3")}).to.throw(Error, "EncodingError U+D0A3");
expect(() => {ms932Encoder.encode("\uD0A4")}).to.throw(Error, "EncodingError U+D0A4");
expect(() => {ms932Encoder.encode("\uD0A5")}).to.throw(Error, "EncodingError U+D0A5");
expect(() => {ms932Encoder.encode("\uD0A6")}).to.throw(Error, "EncodingError U+D0A6");
expect(() => {ms932Encoder.encode("\uD0A7")}).to.throw(Error, "EncodingError U+D0A7");
expect(() => {ms932Encoder.encode("\uD0A8")}).to.throw(Error, "EncodingError U+D0A8");
expect(() => {ms932Encoder.encode("\uD0A9")}).to.throw(Error, "EncodingError U+D0A9");
expect(() => {ms932Encoder.encode("\uD0AA")}).to.throw(Error, "EncodingError U+D0AA");
expect(() => {ms932Encoder.encode("\uD0AB")}).to.throw(Error, "EncodingError U+D0AB");
expect(() => {ms932Encoder.encode("\uD0AC")}).to.throw(Error, "EncodingError U+D0AC");
expect(() => {ms932Encoder.encode("\uD0AD")}).to.throw(Error, "EncodingError U+D0AD");
expect(() => {ms932Encoder.encode("\uD0AE")}).to.throw(Error, "EncodingError U+D0AE");
expect(() => {ms932Encoder.encode("\uD0AF")}).to.throw(Error, "EncodingError U+D0AF");
expect(() => {ms932Encoder.encode("\uD0B0")}).to.throw(Error, "EncodingError U+D0B0");
expect(() => {ms932Encoder.encode("\uD0B1")}).to.throw(Error, "EncodingError U+D0B1");
expect(() => {ms932Encoder.encode("\uD0B2")}).to.throw(Error, "EncodingError U+D0B2");
expect(() => {ms932Encoder.encode("\uD0B3")}).to.throw(Error, "EncodingError U+D0B3");
expect(() => {ms932Encoder.encode("\uD0B4")}).to.throw(Error, "EncodingError U+D0B4");
expect(() => {ms932Encoder.encode("\uD0B5")}).to.throw(Error, "EncodingError U+D0B5");
expect(() => {ms932Encoder.encode("\uD0B6")}).to.throw(Error, "EncodingError U+D0B6");
expect(() => {ms932Encoder.encode("\uD0B7")}).to.throw(Error, "EncodingError U+D0B7");
expect(() => {ms932Encoder.encode("\uD0B8")}).to.throw(Error, "EncodingError U+D0B8");
expect(() => {ms932Encoder.encode("\uD0B9")}).to.throw(Error, "EncodingError U+D0B9");
expect(() => {ms932Encoder.encode("\uD0BA")}).to.throw(Error, "EncodingError U+D0BA");
expect(() => {ms932Encoder.encode("\uD0BB")}).to.throw(Error, "EncodingError U+D0BB");
expect(() => {ms932Encoder.encode("\uD0BC")}).to.throw(Error, "EncodingError U+D0BC");
expect(() => {ms932Encoder.encode("\uD0BD")}).to.throw(Error, "EncodingError U+D0BD");
expect(() => {ms932Encoder.encode("\uD0BE")}).to.throw(Error, "EncodingError U+D0BE");
expect(() => {ms932Encoder.encode("\uD0BF")}).to.throw(Error, "EncodingError U+D0BF");
expect(() => {ms932Encoder.encode("\uD0C0")}).to.throw(Error, "EncodingError U+D0C0");
expect(() => {ms932Encoder.encode("\uD0C1")}).to.throw(Error, "EncodingError U+D0C1");
expect(() => {ms932Encoder.encode("\uD0C2")}).to.throw(Error, "EncodingError U+D0C2");
expect(() => {ms932Encoder.encode("\uD0C3")}).to.throw(Error, "EncodingError U+D0C3");
expect(() => {ms932Encoder.encode("\uD0C4")}).to.throw(Error, "EncodingError U+D0C4");
expect(() => {ms932Encoder.encode("\uD0C5")}).to.throw(Error, "EncodingError U+D0C5");
expect(() => {ms932Encoder.encode("\uD0C6")}).to.throw(Error, "EncodingError U+D0C6");
expect(() => {ms932Encoder.encode("\uD0C7")}).to.throw(Error, "EncodingError U+D0C7");
expect(() => {ms932Encoder.encode("\uD0C8")}).to.throw(Error, "EncodingError U+D0C8");
expect(() => {ms932Encoder.encode("\uD0C9")}).to.throw(Error, "EncodingError U+D0C9");
expect(() => {ms932Encoder.encode("\uD0CA")}).to.throw(Error, "EncodingError U+D0CA");
expect(() => {ms932Encoder.encode("\uD0CB")}).to.throw(Error, "EncodingError U+D0CB");
expect(() => {ms932Encoder.encode("\uD0CC")}).to.throw(Error, "EncodingError U+D0CC");
expect(() => {ms932Encoder.encode("\uD0CD")}).to.throw(Error, "EncodingError U+D0CD");
expect(() => {ms932Encoder.encode("\uD0CE")}).to.throw(Error, "EncodingError U+D0CE");
expect(() => {ms932Encoder.encode("\uD0CF")}).to.throw(Error, "EncodingError U+D0CF");
expect(() => {ms932Encoder.encode("\uD0D0")}).to.throw(Error, "EncodingError U+D0D0");
expect(() => {ms932Encoder.encode("\uD0D1")}).to.throw(Error, "EncodingError U+D0D1");
expect(() => {ms932Encoder.encode("\uD0D2")}).to.throw(Error, "EncodingError U+D0D2");
expect(() => {ms932Encoder.encode("\uD0D3")}).to.throw(Error, "EncodingError U+D0D3");
expect(() => {ms932Encoder.encode("\uD0D4")}).to.throw(Error, "EncodingError U+D0D4");
expect(() => {ms932Encoder.encode("\uD0D5")}).to.throw(Error, "EncodingError U+D0D5");
expect(() => {ms932Encoder.encode("\uD0D6")}).to.throw(Error, "EncodingError U+D0D6");
expect(() => {ms932Encoder.encode("\uD0D7")}).to.throw(Error, "EncodingError U+D0D7");
expect(() => {ms932Encoder.encode("\uD0D8")}).to.throw(Error, "EncodingError U+D0D8");
expect(() => {ms932Encoder.encode("\uD0D9")}).to.throw(Error, "EncodingError U+D0D9");
expect(() => {ms932Encoder.encode("\uD0DA")}).to.throw(Error, "EncodingError U+D0DA");
expect(() => {ms932Encoder.encode("\uD0DB")}).to.throw(Error, "EncodingError U+D0DB");
expect(() => {ms932Encoder.encode("\uD0DC")}).to.throw(Error, "EncodingError U+D0DC");
expect(() => {ms932Encoder.encode("\uD0DD")}).to.throw(Error, "EncodingError U+D0DD");
expect(() => {ms932Encoder.encode("\uD0DE")}).to.throw(Error, "EncodingError U+D0DE");
expect(() => {ms932Encoder.encode("\uD0DF")}).to.throw(Error, "EncodingError U+D0DF");
expect(() => {ms932Encoder.encode("\uD0E0")}).to.throw(Error, "EncodingError U+D0E0");
expect(() => {ms932Encoder.encode("\uD0E1")}).to.throw(Error, "EncodingError U+D0E1");
expect(() => {ms932Encoder.encode("\uD0E2")}).to.throw(Error, "EncodingError U+D0E2");
expect(() => {ms932Encoder.encode("\uD0E3")}).to.throw(Error, "EncodingError U+D0E3");
expect(() => {ms932Encoder.encode("\uD0E4")}).to.throw(Error, "EncodingError U+D0E4");
expect(() => {ms932Encoder.encode("\uD0E5")}).to.throw(Error, "EncodingError U+D0E5");
expect(() => {ms932Encoder.encode("\uD0E6")}).to.throw(Error, "EncodingError U+D0E6");
expect(() => {ms932Encoder.encode("\uD0E7")}).to.throw(Error, "EncodingError U+D0E7");
expect(() => {ms932Encoder.encode("\uD0E8")}).to.throw(Error, "EncodingError U+D0E8");
expect(() => {ms932Encoder.encode("\uD0E9")}).to.throw(Error, "EncodingError U+D0E9");
expect(() => {ms932Encoder.encode("\uD0EA")}).to.throw(Error, "EncodingError U+D0EA");
expect(() => {ms932Encoder.encode("\uD0EB")}).to.throw(Error, "EncodingError U+D0EB");
expect(() => {ms932Encoder.encode("\uD0EC")}).to.throw(Error, "EncodingError U+D0EC");
expect(() => {ms932Encoder.encode("\uD0ED")}).to.throw(Error, "EncodingError U+D0ED");
expect(() => {ms932Encoder.encode("\uD0EE")}).to.throw(Error, "EncodingError U+D0EE");
expect(() => {ms932Encoder.encode("\uD0EF")}).to.throw(Error, "EncodingError U+D0EF");
expect(() => {ms932Encoder.encode("\uD0F0")}).to.throw(Error, "EncodingError U+D0F0");
expect(() => {ms932Encoder.encode("\uD0F1")}).to.throw(Error, "EncodingError U+D0F1");
expect(() => {ms932Encoder.encode("\uD0F2")}).to.throw(Error, "EncodingError U+D0F2");
expect(() => {ms932Encoder.encode("\uD0F3")}).to.throw(Error, "EncodingError U+D0F3");
expect(() => {ms932Encoder.encode("\uD0F4")}).to.throw(Error, "EncodingError U+D0F4");
expect(() => {ms932Encoder.encode("\uD0F5")}).to.throw(Error, "EncodingError U+D0F5");
expect(() => {ms932Encoder.encode("\uD0F6")}).to.throw(Error, "EncodingError U+D0F6");
expect(() => {ms932Encoder.encode("\uD0F7")}).to.throw(Error, "EncodingError U+D0F7");
expect(() => {ms932Encoder.encode("\uD0F8")}).to.throw(Error, "EncodingError U+D0F8");
expect(() => {ms932Encoder.encode("\uD0F9")}).to.throw(Error, "EncodingError U+D0F9");
expect(() => {ms932Encoder.encode("\uD0FA")}).to.throw(Error, "EncodingError U+D0FA");
expect(() => {ms932Encoder.encode("\uD0FB")}).to.throw(Error, "EncodingError U+D0FB");
expect(() => {ms932Encoder.encode("\uD0FC")}).to.throw(Error, "EncodingError U+D0FC");
expect(() => {ms932Encoder.encode("\uD0FD")}).to.throw(Error, "EncodingError U+D0FD");
expect(() => {ms932Encoder.encode("\uD0FE")}).to.throw(Error, "EncodingError U+D0FE");
expect(() => {ms932Encoder.encode("\uD0FF")}).to.throw(Error, "EncodingError U+D0FF");
expect(() => {ms932Encoder.encode("\uD100")}).to.throw(Error, "EncodingError U+D100");
expect(() => {ms932Encoder.encode("\uD101")}).to.throw(Error, "EncodingError U+D101");
expect(() => {ms932Encoder.encode("\uD102")}).to.throw(Error, "EncodingError U+D102");
expect(() => {ms932Encoder.encode("\uD103")}).to.throw(Error, "EncodingError U+D103");
expect(() => {ms932Encoder.encode("\uD104")}).to.throw(Error, "EncodingError U+D104");
expect(() => {ms932Encoder.encode("\uD105")}).to.throw(Error, "EncodingError U+D105");
expect(() => {ms932Encoder.encode("\uD106")}).to.throw(Error, "EncodingError U+D106");
expect(() => {ms932Encoder.encode("\uD107")}).to.throw(Error, "EncodingError U+D107");
expect(() => {ms932Encoder.encode("\uD108")}).to.throw(Error, "EncodingError U+D108");
expect(() => {ms932Encoder.encode("\uD109")}).to.throw(Error, "EncodingError U+D109");
expect(() => {ms932Encoder.encode("\uD10A")}).to.throw(Error, "EncodingError U+D10A");
expect(() => {ms932Encoder.encode("\uD10B")}).to.throw(Error, "EncodingError U+D10B");
expect(() => {ms932Encoder.encode("\uD10C")}).to.throw(Error, "EncodingError U+D10C");
expect(() => {ms932Encoder.encode("\uD10D")}).to.throw(Error, "EncodingError U+D10D");
expect(() => {ms932Encoder.encode("\uD10E")}).to.throw(Error, "EncodingError U+D10E");
expect(() => {ms932Encoder.encode("\uD10F")}).to.throw(Error, "EncodingError U+D10F");
expect(() => {ms932Encoder.encode("\uD110")}).to.throw(Error, "EncodingError U+D110");
expect(() => {ms932Encoder.encode("\uD111")}).to.throw(Error, "EncodingError U+D111");
expect(() => {ms932Encoder.encode("\uD112")}).to.throw(Error, "EncodingError U+D112");
expect(() => {ms932Encoder.encode("\uD113")}).to.throw(Error, "EncodingError U+D113");
expect(() => {ms932Encoder.encode("\uD114")}).to.throw(Error, "EncodingError U+D114");
expect(() => {ms932Encoder.encode("\uD115")}).to.throw(Error, "EncodingError U+D115");
expect(() => {ms932Encoder.encode("\uD116")}).to.throw(Error, "EncodingError U+D116");
expect(() => {ms932Encoder.encode("\uD117")}).to.throw(Error, "EncodingError U+D117");
expect(() => {ms932Encoder.encode("\uD118")}).to.throw(Error, "EncodingError U+D118");
expect(() => {ms932Encoder.encode("\uD119")}).to.throw(Error, "EncodingError U+D119");
expect(() => {ms932Encoder.encode("\uD11A")}).to.throw(Error, "EncodingError U+D11A");
expect(() => {ms932Encoder.encode("\uD11B")}).to.throw(Error, "EncodingError U+D11B");
expect(() => {ms932Encoder.encode("\uD11C")}).to.throw(Error, "EncodingError U+D11C");
expect(() => {ms932Encoder.encode("\uD11D")}).to.throw(Error, "EncodingError U+D11D");
expect(() => {ms932Encoder.encode("\uD11E")}).to.throw(Error, "EncodingError U+D11E");
expect(() => {ms932Encoder.encode("\uD11F")}).to.throw(Error, "EncodingError U+D11F");
expect(() => {ms932Encoder.encode("\uD120")}).to.throw(Error, "EncodingError U+D120");
expect(() => {ms932Encoder.encode("\uD121")}).to.throw(Error, "EncodingError U+D121");
expect(() => {ms932Encoder.encode("\uD122")}).to.throw(Error, "EncodingError U+D122");
expect(() => {ms932Encoder.encode("\uD123")}).to.throw(Error, "EncodingError U+D123");
expect(() => {ms932Encoder.encode("\uD124")}).to.throw(Error, "EncodingError U+D124");
expect(() => {ms932Encoder.encode("\uD125")}).to.throw(Error, "EncodingError U+D125");
expect(() => {ms932Encoder.encode("\uD126")}).to.throw(Error, "EncodingError U+D126");
expect(() => {ms932Encoder.encode("\uD127")}).to.throw(Error, "EncodingError U+D127");
expect(() => {ms932Encoder.encode("\uD128")}).to.throw(Error, "EncodingError U+D128");
expect(() => {ms932Encoder.encode("\uD129")}).to.throw(Error, "EncodingError U+D129");
expect(() => {ms932Encoder.encode("\uD12A")}).to.throw(Error, "EncodingError U+D12A");
expect(() => {ms932Encoder.encode("\uD12B")}).to.throw(Error, "EncodingError U+D12B");
expect(() => {ms932Encoder.encode("\uD12C")}).to.throw(Error, "EncodingError U+D12C");
expect(() => {ms932Encoder.encode("\uD12D")}).to.throw(Error, "EncodingError U+D12D");
expect(() => {ms932Encoder.encode("\uD12E")}).to.throw(Error, "EncodingError U+D12E");
expect(() => {ms932Encoder.encode("\uD12F")}).to.throw(Error, "EncodingError U+D12F");
expect(() => {ms932Encoder.encode("\uD130")}).to.throw(Error, "EncodingError U+D130");
expect(() => {ms932Encoder.encode("\uD131")}).to.throw(Error, "EncodingError U+D131");
expect(() => {ms932Encoder.encode("\uD132")}).to.throw(Error, "EncodingError U+D132");
expect(() => {ms932Encoder.encode("\uD133")}).to.throw(Error, "EncodingError U+D133");
expect(() => {ms932Encoder.encode("\uD134")}).to.throw(Error, "EncodingError U+D134");
expect(() => {ms932Encoder.encode("\uD135")}).to.throw(Error, "EncodingError U+D135");
expect(() => {ms932Encoder.encode("\uD136")}).to.throw(Error, "EncodingError U+D136");
expect(() => {ms932Encoder.encode("\uD137")}).to.throw(Error, "EncodingError U+D137");
expect(() => {ms932Encoder.encode("\uD138")}).to.throw(Error, "EncodingError U+D138");
expect(() => {ms932Encoder.encode("\uD139")}).to.throw(Error, "EncodingError U+D139");
expect(() => {ms932Encoder.encode("\uD13A")}).to.throw(Error, "EncodingError U+D13A");
expect(() => {ms932Encoder.encode("\uD13B")}).to.throw(Error, "EncodingError U+D13B");
expect(() => {ms932Encoder.encode("\uD13C")}).to.throw(Error, "EncodingError U+D13C");
expect(() => {ms932Encoder.encode("\uD13D")}).to.throw(Error, "EncodingError U+D13D");
expect(() => {ms932Encoder.encode("\uD13E")}).to.throw(Error, "EncodingError U+D13E");
expect(() => {ms932Encoder.encode("\uD13F")}).to.throw(Error, "EncodingError U+D13F");
expect(() => {ms932Encoder.encode("\uD140")}).to.throw(Error, "EncodingError U+D140");
expect(() => {ms932Encoder.encode("\uD141")}).to.throw(Error, "EncodingError U+D141");
expect(() => {ms932Encoder.encode("\uD142")}).to.throw(Error, "EncodingError U+D142");
expect(() => {ms932Encoder.encode("\uD143")}).to.throw(Error, "EncodingError U+D143");
expect(() => {ms932Encoder.encode("\uD144")}).to.throw(Error, "EncodingError U+D144");
expect(() => {ms932Encoder.encode("\uD145")}).to.throw(Error, "EncodingError U+D145");
expect(() => {ms932Encoder.encode("\uD146")}).to.throw(Error, "EncodingError U+D146");
expect(() => {ms932Encoder.encode("\uD147")}).to.throw(Error, "EncodingError U+D147");
expect(() => {ms932Encoder.encode("\uD148")}).to.throw(Error, "EncodingError U+D148");
expect(() => {ms932Encoder.encode("\uD149")}).to.throw(Error, "EncodingError U+D149");
expect(() => {ms932Encoder.encode("\uD14A")}).to.throw(Error, "EncodingError U+D14A");
expect(() => {ms932Encoder.encode("\uD14B")}).to.throw(Error, "EncodingError U+D14B");
expect(() => {ms932Encoder.encode("\uD14C")}).to.throw(Error, "EncodingError U+D14C");
expect(() => {ms932Encoder.encode("\uD14D")}).to.throw(Error, "EncodingError U+D14D");
expect(() => {ms932Encoder.encode("\uD14E")}).to.throw(Error, "EncodingError U+D14E");
expect(() => {ms932Encoder.encode("\uD14F")}).to.throw(Error, "EncodingError U+D14F");
expect(() => {ms932Encoder.encode("\uD150")}).to.throw(Error, "EncodingError U+D150");
expect(() => {ms932Encoder.encode("\uD151")}).to.throw(Error, "EncodingError U+D151");
expect(() => {ms932Encoder.encode("\uD152")}).to.throw(Error, "EncodingError U+D152");
expect(() => {ms932Encoder.encode("\uD153")}).to.throw(Error, "EncodingError U+D153");
expect(() => {ms932Encoder.encode("\uD154")}).to.throw(Error, "EncodingError U+D154");
expect(() => {ms932Encoder.encode("\uD155")}).to.throw(Error, "EncodingError U+D155");
expect(() => {ms932Encoder.encode("\uD156")}).to.throw(Error, "EncodingError U+D156");
expect(() => {ms932Encoder.encode("\uD157")}).to.throw(Error, "EncodingError U+D157");
expect(() => {ms932Encoder.encode("\uD158")}).to.throw(Error, "EncodingError U+D158");
expect(() => {ms932Encoder.encode("\uD159")}).to.throw(Error, "EncodingError U+D159");
expect(() => {ms932Encoder.encode("\uD15A")}).to.throw(Error, "EncodingError U+D15A");
expect(() => {ms932Encoder.encode("\uD15B")}).to.throw(Error, "EncodingError U+D15B");
expect(() => {ms932Encoder.encode("\uD15C")}).to.throw(Error, "EncodingError U+D15C");
expect(() => {ms932Encoder.encode("\uD15D")}).to.throw(Error, "EncodingError U+D15D");
expect(() => {ms932Encoder.encode("\uD15E")}).to.throw(Error, "EncodingError U+D15E");
expect(() => {ms932Encoder.encode("\uD15F")}).to.throw(Error, "EncodingError U+D15F");
expect(() => {ms932Encoder.encode("\uD160")}).to.throw(Error, "EncodingError U+D160");
expect(() => {ms932Encoder.encode("\uD161")}).to.throw(Error, "EncodingError U+D161");
expect(() => {ms932Encoder.encode("\uD162")}).to.throw(Error, "EncodingError U+D162");
expect(() => {ms932Encoder.encode("\uD163")}).to.throw(Error, "EncodingError U+D163");
expect(() => {ms932Encoder.encode("\uD164")}).to.throw(Error, "EncodingError U+D164");
expect(() => {ms932Encoder.encode("\uD165")}).to.throw(Error, "EncodingError U+D165");
expect(() => {ms932Encoder.encode("\uD166")}).to.throw(Error, "EncodingError U+D166");
expect(() => {ms932Encoder.encode("\uD167")}).to.throw(Error, "EncodingError U+D167");
expect(() => {ms932Encoder.encode("\uD168")}).to.throw(Error, "EncodingError U+D168");
expect(() => {ms932Encoder.encode("\uD169")}).to.throw(Error, "EncodingError U+D169");
expect(() => {ms932Encoder.encode("\uD16A")}).to.throw(Error, "EncodingError U+D16A");
expect(() => {ms932Encoder.encode("\uD16B")}).to.throw(Error, "EncodingError U+D16B");
expect(() => {ms932Encoder.encode("\uD16C")}).to.throw(Error, "EncodingError U+D16C");
expect(() => {ms932Encoder.encode("\uD16D")}).to.throw(Error, "EncodingError U+D16D");
expect(() => {ms932Encoder.encode("\uD16E")}).to.throw(Error, "EncodingError U+D16E");
expect(() => {ms932Encoder.encode("\uD16F")}).to.throw(Error, "EncodingError U+D16F");
expect(() => {ms932Encoder.encode("\uD170")}).to.throw(Error, "EncodingError U+D170");
expect(() => {ms932Encoder.encode("\uD171")}).to.throw(Error, "EncodingError U+D171");
expect(() => {ms932Encoder.encode("\uD172")}).to.throw(Error, "EncodingError U+D172");
expect(() => {ms932Encoder.encode("\uD173")}).to.throw(Error, "EncodingError U+D173");
expect(() => {ms932Encoder.encode("\uD174")}).to.throw(Error, "EncodingError U+D174");
expect(() => {ms932Encoder.encode("\uD175")}).to.throw(Error, "EncodingError U+D175");
expect(() => {ms932Encoder.encode("\uD176")}).to.throw(Error, "EncodingError U+D176");
expect(() => {ms932Encoder.encode("\uD177")}).to.throw(Error, "EncodingError U+D177");
expect(() => {ms932Encoder.encode("\uD178")}).to.throw(Error, "EncodingError U+D178");
expect(() => {ms932Encoder.encode("\uD179")}).to.throw(Error, "EncodingError U+D179");
expect(() => {ms932Encoder.encode("\uD17A")}).to.throw(Error, "EncodingError U+D17A");
expect(() => {ms932Encoder.encode("\uD17B")}).to.throw(Error, "EncodingError U+D17B");
expect(() => {ms932Encoder.encode("\uD17C")}).to.throw(Error, "EncodingError U+D17C");
expect(() => {ms932Encoder.encode("\uD17D")}).to.throw(Error, "EncodingError U+D17D");
expect(() => {ms932Encoder.encode("\uD17E")}).to.throw(Error, "EncodingError U+D17E");
expect(() => {ms932Encoder.encode("\uD17F")}).to.throw(Error, "EncodingError U+D17F");
expect(() => {ms932Encoder.encode("\uD180")}).to.throw(Error, "EncodingError U+D180");
expect(() => {ms932Encoder.encode("\uD181")}).to.throw(Error, "EncodingError U+D181");
expect(() => {ms932Encoder.encode("\uD182")}).to.throw(Error, "EncodingError U+D182");
expect(() => {ms932Encoder.encode("\uD183")}).to.throw(Error, "EncodingError U+D183");
expect(() => {ms932Encoder.encode("\uD184")}).to.throw(Error, "EncodingError U+D184");
expect(() => {ms932Encoder.encode("\uD185")}).to.throw(Error, "EncodingError U+D185");
expect(() => {ms932Encoder.encode("\uD186")}).to.throw(Error, "EncodingError U+D186");
expect(() => {ms932Encoder.encode("\uD187")}).to.throw(Error, "EncodingError U+D187");
expect(() => {ms932Encoder.encode("\uD188")}).to.throw(Error, "EncodingError U+D188");
expect(() => {ms932Encoder.encode("\uD189")}).to.throw(Error, "EncodingError U+D189");
expect(() => {ms932Encoder.encode("\uD18A")}).to.throw(Error, "EncodingError U+D18A");
expect(() => {ms932Encoder.encode("\uD18B")}).to.throw(Error, "EncodingError U+D18B");
expect(() => {ms932Encoder.encode("\uD18C")}).to.throw(Error, "EncodingError U+D18C");
expect(() => {ms932Encoder.encode("\uD18D")}).to.throw(Error, "EncodingError U+D18D");
expect(() => {ms932Encoder.encode("\uD18E")}).to.throw(Error, "EncodingError U+D18E");
expect(() => {ms932Encoder.encode("\uD18F")}).to.throw(Error, "EncodingError U+D18F");
expect(() => {ms932Encoder.encode("\uD190")}).to.throw(Error, "EncodingError U+D190");
expect(() => {ms932Encoder.encode("\uD191")}).to.throw(Error, "EncodingError U+D191");
expect(() => {ms932Encoder.encode("\uD192")}).to.throw(Error, "EncodingError U+D192");
expect(() => {ms932Encoder.encode("\uD193")}).to.throw(Error, "EncodingError U+D193");
expect(() => {ms932Encoder.encode("\uD194")}).to.throw(Error, "EncodingError U+D194");
expect(() => {ms932Encoder.encode("\uD195")}).to.throw(Error, "EncodingError U+D195");
expect(() => {ms932Encoder.encode("\uD196")}).to.throw(Error, "EncodingError U+D196");
expect(() => {ms932Encoder.encode("\uD197")}).to.throw(Error, "EncodingError U+D197");
expect(() => {ms932Encoder.encode("\uD198")}).to.throw(Error, "EncodingError U+D198");
expect(() => {ms932Encoder.encode("\uD199")}).to.throw(Error, "EncodingError U+D199");
expect(() => {ms932Encoder.encode("\uD19A")}).to.throw(Error, "EncodingError U+D19A");
expect(() => {ms932Encoder.encode("\uD19B")}).to.throw(Error, "EncodingError U+D19B");
expect(() => {ms932Encoder.encode("\uD19C")}).to.throw(Error, "EncodingError U+D19C");
expect(() => {ms932Encoder.encode("\uD19D")}).to.throw(Error, "EncodingError U+D19D");
expect(() => {ms932Encoder.encode("\uD19E")}).to.throw(Error, "EncodingError U+D19E");
expect(() => {ms932Encoder.encode("\uD19F")}).to.throw(Error, "EncodingError U+D19F");
expect(() => {ms932Encoder.encode("\uD1A0")}).to.throw(Error, "EncodingError U+D1A0");
expect(() => {ms932Encoder.encode("\uD1A1")}).to.throw(Error, "EncodingError U+D1A1");
expect(() => {ms932Encoder.encode("\uD1A2")}).to.throw(Error, "EncodingError U+D1A2");
expect(() => {ms932Encoder.encode("\uD1A3")}).to.throw(Error, "EncodingError U+D1A3");
expect(() => {ms932Encoder.encode("\uD1A4")}).to.throw(Error, "EncodingError U+D1A4");
expect(() => {ms932Encoder.encode("\uD1A5")}).to.throw(Error, "EncodingError U+D1A5");
expect(() => {ms932Encoder.encode("\uD1A6")}).to.throw(Error, "EncodingError U+D1A6");
expect(() => {ms932Encoder.encode("\uD1A7")}).to.throw(Error, "EncodingError U+D1A7");
expect(() => {ms932Encoder.encode("\uD1A8")}).to.throw(Error, "EncodingError U+D1A8");
expect(() => {ms932Encoder.encode("\uD1A9")}).to.throw(Error, "EncodingError U+D1A9");
expect(() => {ms932Encoder.encode("\uD1AA")}).to.throw(Error, "EncodingError U+D1AA");
expect(() => {ms932Encoder.encode("\uD1AB")}).to.throw(Error, "EncodingError U+D1AB");
expect(() => {ms932Encoder.encode("\uD1AC")}).to.throw(Error, "EncodingError U+D1AC");
expect(() => {ms932Encoder.encode("\uD1AD")}).to.throw(Error, "EncodingError U+D1AD");
expect(() => {ms932Encoder.encode("\uD1AE")}).to.throw(Error, "EncodingError U+D1AE");
expect(() => {ms932Encoder.encode("\uD1AF")}).to.throw(Error, "EncodingError U+D1AF");
expect(() => {ms932Encoder.encode("\uD1B0")}).to.throw(Error, "EncodingError U+D1B0");
expect(() => {ms932Encoder.encode("\uD1B1")}).to.throw(Error, "EncodingError U+D1B1");
expect(() => {ms932Encoder.encode("\uD1B2")}).to.throw(Error, "EncodingError U+D1B2");
expect(() => {ms932Encoder.encode("\uD1B3")}).to.throw(Error, "EncodingError U+D1B3");
expect(() => {ms932Encoder.encode("\uD1B4")}).to.throw(Error, "EncodingError U+D1B4");
expect(() => {ms932Encoder.encode("\uD1B5")}).to.throw(Error, "EncodingError U+D1B5");
expect(() => {ms932Encoder.encode("\uD1B6")}).to.throw(Error, "EncodingError U+D1B6");
expect(() => {ms932Encoder.encode("\uD1B7")}).to.throw(Error, "EncodingError U+D1B7");
expect(() => {ms932Encoder.encode("\uD1B8")}).to.throw(Error, "EncodingError U+D1B8");
expect(() => {ms932Encoder.encode("\uD1B9")}).to.throw(Error, "EncodingError U+D1B9");
expect(() => {ms932Encoder.encode("\uD1BA")}).to.throw(Error, "EncodingError U+D1BA");
expect(() => {ms932Encoder.encode("\uD1BB")}).to.throw(Error, "EncodingError U+D1BB");
expect(() => {ms932Encoder.encode("\uD1BC")}).to.throw(Error, "EncodingError U+D1BC");
expect(() => {ms932Encoder.encode("\uD1BD")}).to.throw(Error, "EncodingError U+D1BD");
expect(() => {ms932Encoder.encode("\uD1BE")}).to.throw(Error, "EncodingError U+D1BE");
expect(() => {ms932Encoder.encode("\uD1BF")}).to.throw(Error, "EncodingError U+D1BF");
expect(() => {ms932Encoder.encode("\uD1C0")}).to.throw(Error, "EncodingError U+D1C0");
expect(() => {ms932Encoder.encode("\uD1C1")}).to.throw(Error, "EncodingError U+D1C1");
expect(() => {ms932Encoder.encode("\uD1C2")}).to.throw(Error, "EncodingError U+D1C2");
expect(() => {ms932Encoder.encode("\uD1C3")}).to.throw(Error, "EncodingError U+D1C3");
expect(() => {ms932Encoder.encode("\uD1C4")}).to.throw(Error, "EncodingError U+D1C4");
expect(() => {ms932Encoder.encode("\uD1C5")}).to.throw(Error, "EncodingError U+D1C5");
expect(() => {ms932Encoder.encode("\uD1C6")}).to.throw(Error, "EncodingError U+D1C6");
expect(() => {ms932Encoder.encode("\uD1C7")}).to.throw(Error, "EncodingError U+D1C7");
expect(() => {ms932Encoder.encode("\uD1C8")}).to.throw(Error, "EncodingError U+D1C8");
expect(() => {ms932Encoder.encode("\uD1C9")}).to.throw(Error, "EncodingError U+D1C9");
expect(() => {ms932Encoder.encode("\uD1CA")}).to.throw(Error, "EncodingError U+D1CA");
expect(() => {ms932Encoder.encode("\uD1CB")}).to.throw(Error, "EncodingError U+D1CB");
expect(() => {ms932Encoder.encode("\uD1CC")}).to.throw(Error, "EncodingError U+D1CC");
expect(() => {ms932Encoder.encode("\uD1CD")}).to.throw(Error, "EncodingError U+D1CD");
expect(() => {ms932Encoder.encode("\uD1CE")}).to.throw(Error, "EncodingError U+D1CE");
expect(() => {ms932Encoder.encode("\uD1CF")}).to.throw(Error, "EncodingError U+D1CF");
expect(() => {ms932Encoder.encode("\uD1D0")}).to.throw(Error, "EncodingError U+D1D0");
expect(() => {ms932Encoder.encode("\uD1D1")}).to.throw(Error, "EncodingError U+D1D1");
expect(() => {ms932Encoder.encode("\uD1D2")}).to.throw(Error, "EncodingError U+D1D2");
expect(() => {ms932Encoder.encode("\uD1D3")}).to.throw(Error, "EncodingError U+D1D3");
expect(() => {ms932Encoder.encode("\uD1D4")}).to.throw(Error, "EncodingError U+D1D4");
expect(() => {ms932Encoder.encode("\uD1D5")}).to.throw(Error, "EncodingError U+D1D5");
expect(() => {ms932Encoder.encode("\uD1D6")}).to.throw(Error, "EncodingError U+D1D6");
expect(() => {ms932Encoder.encode("\uD1D7")}).to.throw(Error, "EncodingError U+D1D7");
expect(() => {ms932Encoder.encode("\uD1D8")}).to.throw(Error, "EncodingError U+D1D8");
expect(() => {ms932Encoder.encode("\uD1D9")}).to.throw(Error, "EncodingError U+D1D9");
expect(() => {ms932Encoder.encode("\uD1DA")}).to.throw(Error, "EncodingError U+D1DA");
expect(() => {ms932Encoder.encode("\uD1DB")}).to.throw(Error, "EncodingError U+D1DB");
expect(() => {ms932Encoder.encode("\uD1DC")}).to.throw(Error, "EncodingError U+D1DC");
expect(() => {ms932Encoder.encode("\uD1DD")}).to.throw(Error, "EncodingError U+D1DD");
expect(() => {ms932Encoder.encode("\uD1DE")}).to.throw(Error, "EncodingError U+D1DE");
expect(() => {ms932Encoder.encode("\uD1DF")}).to.throw(Error, "EncodingError U+D1DF");
expect(() => {ms932Encoder.encode("\uD1E0")}).to.throw(Error, "EncodingError U+D1E0");
expect(() => {ms932Encoder.encode("\uD1E1")}).to.throw(Error, "EncodingError U+D1E1");
expect(() => {ms932Encoder.encode("\uD1E2")}).to.throw(Error, "EncodingError U+D1E2");
expect(() => {ms932Encoder.encode("\uD1E3")}).to.throw(Error, "EncodingError U+D1E3");
expect(() => {ms932Encoder.encode("\uD1E4")}).to.throw(Error, "EncodingError U+D1E4");
expect(() => {ms932Encoder.encode("\uD1E5")}).to.throw(Error, "EncodingError U+D1E5");
expect(() => {ms932Encoder.encode("\uD1E6")}).to.throw(Error, "EncodingError U+D1E6");
expect(() => {ms932Encoder.encode("\uD1E7")}).to.throw(Error, "EncodingError U+D1E7");
expect(() => {ms932Encoder.encode("\uD1E8")}).to.throw(Error, "EncodingError U+D1E8");
expect(() => {ms932Encoder.encode("\uD1E9")}).to.throw(Error, "EncodingError U+D1E9");
expect(() => {ms932Encoder.encode("\uD1EA")}).to.throw(Error, "EncodingError U+D1EA");
expect(() => {ms932Encoder.encode("\uD1EB")}).to.throw(Error, "EncodingError U+D1EB");
expect(() => {ms932Encoder.encode("\uD1EC")}).to.throw(Error, "EncodingError U+D1EC");
expect(() => {ms932Encoder.encode("\uD1ED")}).to.throw(Error, "EncodingError U+D1ED");
expect(() => {ms932Encoder.encode("\uD1EE")}).to.throw(Error, "EncodingError U+D1EE");
expect(() => {ms932Encoder.encode("\uD1EF")}).to.throw(Error, "EncodingError U+D1EF");
expect(() => {ms932Encoder.encode("\uD1F0")}).to.throw(Error, "EncodingError U+D1F0");
expect(() => {ms932Encoder.encode("\uD1F1")}).to.throw(Error, "EncodingError U+D1F1");
expect(() => {ms932Encoder.encode("\uD1F2")}).to.throw(Error, "EncodingError U+D1F2");
expect(() => {ms932Encoder.encode("\uD1F3")}).to.throw(Error, "EncodingError U+D1F3");
expect(() => {ms932Encoder.encode("\uD1F4")}).to.throw(Error, "EncodingError U+D1F4");
expect(() => {ms932Encoder.encode("\uD1F5")}).to.throw(Error, "EncodingError U+D1F5");
expect(() => {ms932Encoder.encode("\uD1F6")}).to.throw(Error, "EncodingError U+D1F6");
expect(() => {ms932Encoder.encode("\uD1F7")}).to.throw(Error, "EncodingError U+D1F7");
expect(() => {ms932Encoder.encode("\uD1F8")}).to.throw(Error, "EncodingError U+D1F8");
expect(() => {ms932Encoder.encode("\uD1F9")}).to.throw(Error, "EncodingError U+D1F9");
expect(() => {ms932Encoder.encode("\uD1FA")}).to.throw(Error, "EncodingError U+D1FA");
expect(() => {ms932Encoder.encode("\uD1FB")}).to.throw(Error, "EncodingError U+D1FB");
expect(() => {ms932Encoder.encode("\uD1FC")}).to.throw(Error, "EncodingError U+D1FC");
expect(() => {ms932Encoder.encode("\uD1FD")}).to.throw(Error, "EncodingError U+D1FD");
expect(() => {ms932Encoder.encode("\uD1FE")}).to.throw(Error, "EncodingError U+D1FE");
expect(() => {ms932Encoder.encode("\uD1FF")}).to.throw(Error, "EncodingError U+D1FF");
expect(() => {ms932Encoder.encode("\uD200")}).to.throw(Error, "EncodingError U+D200");
expect(() => {ms932Encoder.encode("\uD201")}).to.throw(Error, "EncodingError U+D201");
expect(() => {ms932Encoder.encode("\uD202")}).to.throw(Error, "EncodingError U+D202");
expect(() => {ms932Encoder.encode("\uD203")}).to.throw(Error, "EncodingError U+D203");
expect(() => {ms932Encoder.encode("\uD204")}).to.throw(Error, "EncodingError U+D204");
expect(() => {ms932Encoder.encode("\uD205")}).to.throw(Error, "EncodingError U+D205");
expect(() => {ms932Encoder.encode("\uD206")}).to.throw(Error, "EncodingError U+D206");
expect(() => {ms932Encoder.encode("\uD207")}).to.throw(Error, "EncodingError U+D207");
expect(() => {ms932Encoder.encode("\uD208")}).to.throw(Error, "EncodingError U+D208");
expect(() => {ms932Encoder.encode("\uD209")}).to.throw(Error, "EncodingError U+D209");
expect(() => {ms932Encoder.encode("\uD20A")}).to.throw(Error, "EncodingError U+D20A");
expect(() => {ms932Encoder.encode("\uD20B")}).to.throw(Error, "EncodingError U+D20B");
expect(() => {ms932Encoder.encode("\uD20C")}).to.throw(Error, "EncodingError U+D20C");
expect(() => {ms932Encoder.encode("\uD20D")}).to.throw(Error, "EncodingError U+D20D");
expect(() => {ms932Encoder.encode("\uD20E")}).to.throw(Error, "EncodingError U+D20E");
expect(() => {ms932Encoder.encode("\uD20F")}).to.throw(Error, "EncodingError U+D20F");
expect(() => {ms932Encoder.encode("\uD210")}).to.throw(Error, "EncodingError U+D210");
expect(() => {ms932Encoder.encode("\uD211")}).to.throw(Error, "EncodingError U+D211");
expect(() => {ms932Encoder.encode("\uD212")}).to.throw(Error, "EncodingError U+D212");
expect(() => {ms932Encoder.encode("\uD213")}).to.throw(Error, "EncodingError U+D213");
expect(() => {ms932Encoder.encode("\uD214")}).to.throw(Error, "EncodingError U+D214");
expect(() => {ms932Encoder.encode("\uD215")}).to.throw(Error, "EncodingError U+D215");
expect(() => {ms932Encoder.encode("\uD216")}).to.throw(Error, "EncodingError U+D216");
expect(() => {ms932Encoder.encode("\uD217")}).to.throw(Error, "EncodingError U+D217");
expect(() => {ms932Encoder.encode("\uD218")}).to.throw(Error, "EncodingError U+D218");
expect(() => {ms932Encoder.encode("\uD219")}).to.throw(Error, "EncodingError U+D219");
expect(() => {ms932Encoder.encode("\uD21A")}).to.throw(Error, "EncodingError U+D21A");
expect(() => {ms932Encoder.encode("\uD21B")}).to.throw(Error, "EncodingError U+D21B");
expect(() => {ms932Encoder.encode("\uD21C")}).to.throw(Error, "EncodingError U+D21C");
expect(() => {ms932Encoder.encode("\uD21D")}).to.throw(Error, "EncodingError U+D21D");
expect(() => {ms932Encoder.encode("\uD21E")}).to.throw(Error, "EncodingError U+D21E");
expect(() => {ms932Encoder.encode("\uD21F")}).to.throw(Error, "EncodingError U+D21F");
expect(() => {ms932Encoder.encode("\uD220")}).to.throw(Error, "EncodingError U+D220");
expect(() => {ms932Encoder.encode("\uD221")}).to.throw(Error, "EncodingError U+D221");
expect(() => {ms932Encoder.encode("\uD222")}).to.throw(Error, "EncodingError U+D222");
expect(() => {ms932Encoder.encode("\uD223")}).to.throw(Error, "EncodingError U+D223");
expect(() => {ms932Encoder.encode("\uD224")}).to.throw(Error, "EncodingError U+D224");
expect(() => {ms932Encoder.encode("\uD225")}).to.throw(Error, "EncodingError U+D225");
expect(() => {ms932Encoder.encode("\uD226")}).to.throw(Error, "EncodingError U+D226");
expect(() => {ms932Encoder.encode("\uD227")}).to.throw(Error, "EncodingError U+D227");
expect(() => {ms932Encoder.encode("\uD228")}).to.throw(Error, "EncodingError U+D228");
expect(() => {ms932Encoder.encode("\uD229")}).to.throw(Error, "EncodingError U+D229");
expect(() => {ms932Encoder.encode("\uD22A")}).to.throw(Error, "EncodingError U+D22A");
expect(() => {ms932Encoder.encode("\uD22B")}).to.throw(Error, "EncodingError U+D22B");
expect(() => {ms932Encoder.encode("\uD22C")}).to.throw(Error, "EncodingError U+D22C");
expect(() => {ms932Encoder.encode("\uD22D")}).to.throw(Error, "EncodingError U+D22D");
expect(() => {ms932Encoder.encode("\uD22E")}).to.throw(Error, "EncodingError U+D22E");
expect(() => {ms932Encoder.encode("\uD22F")}).to.throw(Error, "EncodingError U+D22F");
expect(() => {ms932Encoder.encode("\uD230")}).to.throw(Error, "EncodingError U+D230");
expect(() => {ms932Encoder.encode("\uD231")}).to.throw(Error, "EncodingError U+D231");
expect(() => {ms932Encoder.encode("\uD232")}).to.throw(Error, "EncodingError U+D232");
expect(() => {ms932Encoder.encode("\uD233")}).to.throw(Error, "EncodingError U+D233");
expect(() => {ms932Encoder.encode("\uD234")}).to.throw(Error, "EncodingError U+D234");
expect(() => {ms932Encoder.encode("\uD235")}).to.throw(Error, "EncodingError U+D235");
expect(() => {ms932Encoder.encode("\uD236")}).to.throw(Error, "EncodingError U+D236");
expect(() => {ms932Encoder.encode("\uD237")}).to.throw(Error, "EncodingError U+D237");
expect(() => {ms932Encoder.encode("\uD238")}).to.throw(Error, "EncodingError U+D238");
expect(() => {ms932Encoder.encode("\uD239")}).to.throw(Error, "EncodingError U+D239");
expect(() => {ms932Encoder.encode("\uD23A")}).to.throw(Error, "EncodingError U+D23A");
expect(() => {ms932Encoder.encode("\uD23B")}).to.throw(Error, "EncodingError U+D23B");
expect(() => {ms932Encoder.encode("\uD23C")}).to.throw(Error, "EncodingError U+D23C");
expect(() => {ms932Encoder.encode("\uD23D")}).to.throw(Error, "EncodingError U+D23D");
expect(() => {ms932Encoder.encode("\uD23E")}).to.throw(Error, "EncodingError U+D23E");
expect(() => {ms932Encoder.encode("\uD23F")}).to.throw(Error, "EncodingError U+D23F");
expect(() => {ms932Encoder.encode("\uD240")}).to.throw(Error, "EncodingError U+D240");
expect(() => {ms932Encoder.encode("\uD241")}).to.throw(Error, "EncodingError U+D241");
expect(() => {ms932Encoder.encode("\uD242")}).to.throw(Error, "EncodingError U+D242");
expect(() => {ms932Encoder.encode("\uD243")}).to.throw(Error, "EncodingError U+D243");
expect(() => {ms932Encoder.encode("\uD244")}).to.throw(Error, "EncodingError U+D244");
expect(() => {ms932Encoder.encode("\uD245")}).to.throw(Error, "EncodingError U+D245");
expect(() => {ms932Encoder.encode("\uD246")}).to.throw(Error, "EncodingError U+D246");
expect(() => {ms932Encoder.encode("\uD247")}).to.throw(Error, "EncodingError U+D247");
expect(() => {ms932Encoder.encode("\uD248")}).to.throw(Error, "EncodingError U+D248");
expect(() => {ms932Encoder.encode("\uD249")}).to.throw(Error, "EncodingError U+D249");
expect(() => {ms932Encoder.encode("\uD24A")}).to.throw(Error, "EncodingError U+D24A");
expect(() => {ms932Encoder.encode("\uD24B")}).to.throw(Error, "EncodingError U+D24B");
expect(() => {ms932Encoder.encode("\uD24C")}).to.throw(Error, "EncodingError U+D24C");
expect(() => {ms932Encoder.encode("\uD24D")}).to.throw(Error, "EncodingError U+D24D");
expect(() => {ms932Encoder.encode("\uD24E")}).to.throw(Error, "EncodingError U+D24E");
expect(() => {ms932Encoder.encode("\uD24F")}).to.throw(Error, "EncodingError U+D24F");
expect(() => {ms932Encoder.encode("\uD250")}).to.throw(Error, "EncodingError U+D250");
expect(() => {ms932Encoder.encode("\uD251")}).to.throw(Error, "EncodingError U+D251");
expect(() => {ms932Encoder.encode("\uD252")}).to.throw(Error, "EncodingError U+D252");
expect(() => {ms932Encoder.encode("\uD253")}).to.throw(Error, "EncodingError U+D253");
expect(() => {ms932Encoder.encode("\uD254")}).to.throw(Error, "EncodingError U+D254");
expect(() => {ms932Encoder.encode("\uD255")}).to.throw(Error, "EncodingError U+D255");
expect(() => {ms932Encoder.encode("\uD256")}).to.throw(Error, "EncodingError U+D256");
expect(() => {ms932Encoder.encode("\uD257")}).to.throw(Error, "EncodingError U+D257");
expect(() => {ms932Encoder.encode("\uD258")}).to.throw(Error, "EncodingError U+D258");
expect(() => {ms932Encoder.encode("\uD259")}).to.throw(Error, "EncodingError U+D259");
expect(() => {ms932Encoder.encode("\uD25A")}).to.throw(Error, "EncodingError U+D25A");
expect(() => {ms932Encoder.encode("\uD25B")}).to.throw(Error, "EncodingError U+D25B");
expect(() => {ms932Encoder.encode("\uD25C")}).to.throw(Error, "EncodingError U+D25C");
expect(() => {ms932Encoder.encode("\uD25D")}).to.throw(Error, "EncodingError U+D25D");
expect(() => {ms932Encoder.encode("\uD25E")}).to.throw(Error, "EncodingError U+D25E");
expect(() => {ms932Encoder.encode("\uD25F")}).to.throw(Error, "EncodingError U+D25F");
expect(() => {ms932Encoder.encode("\uD260")}).to.throw(Error, "EncodingError U+D260");
expect(() => {ms932Encoder.encode("\uD261")}).to.throw(Error, "EncodingError U+D261");
expect(() => {ms932Encoder.encode("\uD262")}).to.throw(Error, "EncodingError U+D262");
expect(() => {ms932Encoder.encode("\uD263")}).to.throw(Error, "EncodingError U+D263");
expect(() => {ms932Encoder.encode("\uD264")}).to.throw(Error, "EncodingError U+D264");
expect(() => {ms932Encoder.encode("\uD265")}).to.throw(Error, "EncodingError U+D265");
expect(() => {ms932Encoder.encode("\uD266")}).to.throw(Error, "EncodingError U+D266");
expect(() => {ms932Encoder.encode("\uD267")}).to.throw(Error, "EncodingError U+D267");
expect(() => {ms932Encoder.encode("\uD268")}).to.throw(Error, "EncodingError U+D268");
expect(() => {ms932Encoder.encode("\uD269")}).to.throw(Error, "EncodingError U+D269");
expect(() => {ms932Encoder.encode("\uD26A")}).to.throw(Error, "EncodingError U+D26A");
expect(() => {ms932Encoder.encode("\uD26B")}).to.throw(Error, "EncodingError U+D26B");
expect(() => {ms932Encoder.encode("\uD26C")}).to.throw(Error, "EncodingError U+D26C");
expect(() => {ms932Encoder.encode("\uD26D")}).to.throw(Error, "EncodingError U+D26D");
expect(() => {ms932Encoder.encode("\uD26E")}).to.throw(Error, "EncodingError U+D26E");
expect(() => {ms932Encoder.encode("\uD26F")}).to.throw(Error, "EncodingError U+D26F");
expect(() => {ms932Encoder.encode("\uD270")}).to.throw(Error, "EncodingError U+D270");
expect(() => {ms932Encoder.encode("\uD271")}).to.throw(Error, "EncodingError U+D271");
expect(() => {ms932Encoder.encode("\uD272")}).to.throw(Error, "EncodingError U+D272");
expect(() => {ms932Encoder.encode("\uD273")}).to.throw(Error, "EncodingError U+D273");
expect(() => {ms932Encoder.encode("\uD274")}).to.throw(Error, "EncodingError U+D274");
expect(() => {ms932Encoder.encode("\uD275")}).to.throw(Error, "EncodingError U+D275");
expect(() => {ms932Encoder.encode("\uD276")}).to.throw(Error, "EncodingError U+D276");
expect(() => {ms932Encoder.encode("\uD277")}).to.throw(Error, "EncodingError U+D277");
expect(() => {ms932Encoder.encode("\uD278")}).to.throw(Error, "EncodingError U+D278");
expect(() => {ms932Encoder.encode("\uD279")}).to.throw(Error, "EncodingError U+D279");
expect(() => {ms932Encoder.encode("\uD27A")}).to.throw(Error, "EncodingError U+D27A");
expect(() => {ms932Encoder.encode("\uD27B")}).to.throw(Error, "EncodingError U+D27B");
expect(() => {ms932Encoder.encode("\uD27C")}).to.throw(Error, "EncodingError U+D27C");
expect(() => {ms932Encoder.encode("\uD27D")}).to.throw(Error, "EncodingError U+D27D");
expect(() => {ms932Encoder.encode("\uD27E")}).to.throw(Error, "EncodingError U+D27E");
expect(() => {ms932Encoder.encode("\uD27F")}).to.throw(Error, "EncodingError U+D27F");
expect(() => {ms932Encoder.encode("\uD280")}).to.throw(Error, "EncodingError U+D280");
expect(() => {ms932Encoder.encode("\uD281")}).to.throw(Error, "EncodingError U+D281");
expect(() => {ms932Encoder.encode("\uD282")}).to.throw(Error, "EncodingError U+D282");
expect(() => {ms932Encoder.encode("\uD283")}).to.throw(Error, "EncodingError U+D283");
expect(() => {ms932Encoder.encode("\uD284")}).to.throw(Error, "EncodingError U+D284");
expect(() => {ms932Encoder.encode("\uD285")}).to.throw(Error, "EncodingError U+D285");
expect(() => {ms932Encoder.encode("\uD286")}).to.throw(Error, "EncodingError U+D286");
expect(() => {ms932Encoder.encode("\uD287")}).to.throw(Error, "EncodingError U+D287");
expect(() => {ms932Encoder.encode("\uD288")}).to.throw(Error, "EncodingError U+D288");
expect(() => {ms932Encoder.encode("\uD289")}).to.throw(Error, "EncodingError U+D289");
expect(() => {ms932Encoder.encode("\uD28A")}).to.throw(Error, "EncodingError U+D28A");
expect(() => {ms932Encoder.encode("\uD28B")}).to.throw(Error, "EncodingError U+D28B");
expect(() => {ms932Encoder.encode("\uD28C")}).to.throw(Error, "EncodingError U+D28C");
expect(() => {ms932Encoder.encode("\uD28D")}).to.throw(Error, "EncodingError U+D28D");
expect(() => {ms932Encoder.encode("\uD28E")}).to.throw(Error, "EncodingError U+D28E");
expect(() => {ms932Encoder.encode("\uD28F")}).to.throw(Error, "EncodingError U+D28F");
expect(() => {ms932Encoder.encode("\uD290")}).to.throw(Error, "EncodingError U+D290");
expect(() => {ms932Encoder.encode("\uD291")}).to.throw(Error, "EncodingError U+D291");
expect(() => {ms932Encoder.encode("\uD292")}).to.throw(Error, "EncodingError U+D292");
expect(() => {ms932Encoder.encode("\uD293")}).to.throw(Error, "EncodingError U+D293");
expect(() => {ms932Encoder.encode("\uD294")}).to.throw(Error, "EncodingError U+D294");
expect(() => {ms932Encoder.encode("\uD295")}).to.throw(Error, "EncodingError U+D295");
expect(() => {ms932Encoder.encode("\uD296")}).to.throw(Error, "EncodingError U+D296");
expect(() => {ms932Encoder.encode("\uD297")}).to.throw(Error, "EncodingError U+D297");
expect(() => {ms932Encoder.encode("\uD298")}).to.throw(Error, "EncodingError U+D298");
expect(() => {ms932Encoder.encode("\uD299")}).to.throw(Error, "EncodingError U+D299");
expect(() => {ms932Encoder.encode("\uD29A")}).to.throw(Error, "EncodingError U+D29A");
expect(() => {ms932Encoder.encode("\uD29B")}).to.throw(Error, "EncodingError U+D29B");
expect(() => {ms932Encoder.encode("\uD29C")}).to.throw(Error, "EncodingError U+D29C");
expect(() => {ms932Encoder.encode("\uD29D")}).to.throw(Error, "EncodingError U+D29D");
expect(() => {ms932Encoder.encode("\uD29E")}).to.throw(Error, "EncodingError U+D29E");
expect(() => {ms932Encoder.encode("\uD29F")}).to.throw(Error, "EncodingError U+D29F");
expect(() => {ms932Encoder.encode("\uD2A0")}).to.throw(Error, "EncodingError U+D2A0");
expect(() => {ms932Encoder.encode("\uD2A1")}).to.throw(Error, "EncodingError U+D2A1");
expect(() => {ms932Encoder.encode("\uD2A2")}).to.throw(Error, "EncodingError U+D2A2");
expect(() => {ms932Encoder.encode("\uD2A3")}).to.throw(Error, "EncodingError U+D2A3");
expect(() => {ms932Encoder.encode("\uD2A4")}).to.throw(Error, "EncodingError U+D2A4");
expect(() => {ms932Encoder.encode("\uD2A5")}).to.throw(Error, "EncodingError U+D2A5");
expect(() => {ms932Encoder.encode("\uD2A6")}).to.throw(Error, "EncodingError U+D2A6");
expect(() => {ms932Encoder.encode("\uD2A7")}).to.throw(Error, "EncodingError U+D2A7");
expect(() => {ms932Encoder.encode("\uD2A8")}).to.throw(Error, "EncodingError U+D2A8");
expect(() => {ms932Encoder.encode("\uD2A9")}).to.throw(Error, "EncodingError U+D2A9");
expect(() => {ms932Encoder.encode("\uD2AA")}).to.throw(Error, "EncodingError U+D2AA");
expect(() => {ms932Encoder.encode("\uD2AB")}).to.throw(Error, "EncodingError U+D2AB");
expect(() => {ms932Encoder.encode("\uD2AC")}).to.throw(Error, "EncodingError U+D2AC");
expect(() => {ms932Encoder.encode("\uD2AD")}).to.throw(Error, "EncodingError U+D2AD");
expect(() => {ms932Encoder.encode("\uD2AE")}).to.throw(Error, "EncodingError U+D2AE");
expect(() => {ms932Encoder.encode("\uD2AF")}).to.throw(Error, "EncodingError U+D2AF");
expect(() => {ms932Encoder.encode("\uD2B0")}).to.throw(Error, "EncodingError U+D2B0");
expect(() => {ms932Encoder.encode("\uD2B1")}).to.throw(Error, "EncodingError U+D2B1");
expect(() => {ms932Encoder.encode("\uD2B2")}).to.throw(Error, "EncodingError U+D2B2");
expect(() => {ms932Encoder.encode("\uD2B3")}).to.throw(Error, "EncodingError U+D2B3");
expect(() => {ms932Encoder.encode("\uD2B4")}).to.throw(Error, "EncodingError U+D2B4");
expect(() => {ms932Encoder.encode("\uD2B5")}).to.throw(Error, "EncodingError U+D2B5");
expect(() => {ms932Encoder.encode("\uD2B6")}).to.throw(Error, "EncodingError U+D2B6");
expect(() => {ms932Encoder.encode("\uD2B7")}).to.throw(Error, "EncodingError U+D2B7");
expect(() => {ms932Encoder.encode("\uD2B8")}).to.throw(Error, "EncodingError U+D2B8");
expect(() => {ms932Encoder.encode("\uD2B9")}).to.throw(Error, "EncodingError U+D2B9");
expect(() => {ms932Encoder.encode("\uD2BA")}).to.throw(Error, "EncodingError U+D2BA");
expect(() => {ms932Encoder.encode("\uD2BB")}).to.throw(Error, "EncodingError U+D2BB");
expect(() => {ms932Encoder.encode("\uD2BC")}).to.throw(Error, "EncodingError U+D2BC");
expect(() => {ms932Encoder.encode("\uD2BD")}).to.throw(Error, "EncodingError U+D2BD");
expect(() => {ms932Encoder.encode("\uD2BE")}).to.throw(Error, "EncodingError U+D2BE");
expect(() => {ms932Encoder.encode("\uD2BF")}).to.throw(Error, "EncodingError U+D2BF");
expect(() => {ms932Encoder.encode("\uD2C0")}).to.throw(Error, "EncodingError U+D2C0");
expect(() => {ms932Encoder.encode("\uD2C1")}).to.throw(Error, "EncodingError U+D2C1");
expect(() => {ms932Encoder.encode("\uD2C2")}).to.throw(Error, "EncodingError U+D2C2");
expect(() => {ms932Encoder.encode("\uD2C3")}).to.throw(Error, "EncodingError U+D2C3");
expect(() => {ms932Encoder.encode("\uD2C4")}).to.throw(Error, "EncodingError U+D2C4");
expect(() => {ms932Encoder.encode("\uD2C5")}).to.throw(Error, "EncodingError U+D2C5");
expect(() => {ms932Encoder.encode("\uD2C6")}).to.throw(Error, "EncodingError U+D2C6");
expect(() => {ms932Encoder.encode("\uD2C7")}).to.throw(Error, "EncodingError U+D2C7");
expect(() => {ms932Encoder.encode("\uD2C8")}).to.throw(Error, "EncodingError U+D2C8");
expect(() => {ms932Encoder.encode("\uD2C9")}).to.throw(Error, "EncodingError U+D2C9");
expect(() => {ms932Encoder.encode("\uD2CA")}).to.throw(Error, "EncodingError U+D2CA");
expect(() => {ms932Encoder.encode("\uD2CB")}).to.throw(Error, "EncodingError U+D2CB");
expect(() => {ms932Encoder.encode("\uD2CC")}).to.throw(Error, "EncodingError U+D2CC");
expect(() => {ms932Encoder.encode("\uD2CD")}).to.throw(Error, "EncodingError U+D2CD");
expect(() => {ms932Encoder.encode("\uD2CE")}).to.throw(Error, "EncodingError U+D2CE");
expect(() => {ms932Encoder.encode("\uD2CF")}).to.throw(Error, "EncodingError U+D2CF");
expect(() => {ms932Encoder.encode("\uD2D0")}).to.throw(Error, "EncodingError U+D2D0");
expect(() => {ms932Encoder.encode("\uD2D1")}).to.throw(Error, "EncodingError U+D2D1");
expect(() => {ms932Encoder.encode("\uD2D2")}).to.throw(Error, "EncodingError U+D2D2");
expect(() => {ms932Encoder.encode("\uD2D3")}).to.throw(Error, "EncodingError U+D2D3");
expect(() => {ms932Encoder.encode("\uD2D4")}).to.throw(Error, "EncodingError U+D2D4");
expect(() => {ms932Encoder.encode("\uD2D5")}).to.throw(Error, "EncodingError U+D2D5");
expect(() => {ms932Encoder.encode("\uD2D6")}).to.throw(Error, "EncodingError U+D2D6");
expect(() => {ms932Encoder.encode("\uD2D7")}).to.throw(Error, "EncodingError U+D2D7");
expect(() => {ms932Encoder.encode("\uD2D8")}).to.throw(Error, "EncodingError U+D2D8");
expect(() => {ms932Encoder.encode("\uD2D9")}).to.throw(Error, "EncodingError U+D2D9");
expect(() => {ms932Encoder.encode("\uD2DA")}).to.throw(Error, "EncodingError U+D2DA");
expect(() => {ms932Encoder.encode("\uD2DB")}).to.throw(Error, "EncodingError U+D2DB");
expect(() => {ms932Encoder.encode("\uD2DC")}).to.throw(Error, "EncodingError U+D2DC");
expect(() => {ms932Encoder.encode("\uD2DD")}).to.throw(Error, "EncodingError U+D2DD");
expect(() => {ms932Encoder.encode("\uD2DE")}).to.throw(Error, "EncodingError U+D2DE");
expect(() => {ms932Encoder.encode("\uD2DF")}).to.throw(Error, "EncodingError U+D2DF");
expect(() => {ms932Encoder.encode("\uD2E0")}).to.throw(Error, "EncodingError U+D2E0");
expect(() => {ms932Encoder.encode("\uD2E1")}).to.throw(Error, "EncodingError U+D2E1");
expect(() => {ms932Encoder.encode("\uD2E2")}).to.throw(Error, "EncodingError U+D2E2");
expect(() => {ms932Encoder.encode("\uD2E3")}).to.throw(Error, "EncodingError U+D2E3");
expect(() => {ms932Encoder.encode("\uD2E4")}).to.throw(Error, "EncodingError U+D2E4");
expect(() => {ms932Encoder.encode("\uD2E5")}).to.throw(Error, "EncodingError U+D2E5");
expect(() => {ms932Encoder.encode("\uD2E6")}).to.throw(Error, "EncodingError U+D2E6");
expect(() => {ms932Encoder.encode("\uD2E7")}).to.throw(Error, "EncodingError U+D2E7");
expect(() => {ms932Encoder.encode("\uD2E8")}).to.throw(Error, "EncodingError U+D2E8");
expect(() => {ms932Encoder.encode("\uD2E9")}).to.throw(Error, "EncodingError U+D2E9");
expect(() => {ms932Encoder.encode("\uD2EA")}).to.throw(Error, "EncodingError U+D2EA");
expect(() => {ms932Encoder.encode("\uD2EB")}).to.throw(Error, "EncodingError U+D2EB");
expect(() => {ms932Encoder.encode("\uD2EC")}).to.throw(Error, "EncodingError U+D2EC");
expect(() => {ms932Encoder.encode("\uD2ED")}).to.throw(Error, "EncodingError U+D2ED");
expect(() => {ms932Encoder.encode("\uD2EE")}).to.throw(Error, "EncodingError U+D2EE");
expect(() => {ms932Encoder.encode("\uD2EF")}).to.throw(Error, "EncodingError U+D2EF");
expect(() => {ms932Encoder.encode("\uD2F0")}).to.throw(Error, "EncodingError U+D2F0");
expect(() => {ms932Encoder.encode("\uD2F1")}).to.throw(Error, "EncodingError U+D2F1");
expect(() => {ms932Encoder.encode("\uD2F2")}).to.throw(Error, "EncodingError U+D2F2");
expect(() => {ms932Encoder.encode("\uD2F3")}).to.throw(Error, "EncodingError U+D2F3");
expect(() => {ms932Encoder.encode("\uD2F4")}).to.throw(Error, "EncodingError U+D2F4");
expect(() => {ms932Encoder.encode("\uD2F5")}).to.throw(Error, "EncodingError U+D2F5");
expect(() => {ms932Encoder.encode("\uD2F6")}).to.throw(Error, "EncodingError U+D2F6");
expect(() => {ms932Encoder.encode("\uD2F7")}).to.throw(Error, "EncodingError U+D2F7");
expect(() => {ms932Encoder.encode("\uD2F8")}).to.throw(Error, "EncodingError U+D2F8");
expect(() => {ms932Encoder.encode("\uD2F9")}).to.throw(Error, "EncodingError U+D2F9");
expect(() => {ms932Encoder.encode("\uD2FA")}).to.throw(Error, "EncodingError U+D2FA");
expect(() => {ms932Encoder.encode("\uD2FB")}).to.throw(Error, "EncodingError U+D2FB");
expect(() => {ms932Encoder.encode("\uD2FC")}).to.throw(Error, "EncodingError U+D2FC");
expect(() => {ms932Encoder.encode("\uD2FD")}).to.throw(Error, "EncodingError U+D2FD");
expect(() => {ms932Encoder.encode("\uD2FE")}).to.throw(Error, "EncodingError U+D2FE");
expect(() => {ms932Encoder.encode("\uD2FF")}).to.throw(Error, "EncodingError U+D2FF");
expect(() => {ms932Encoder.encode("\uD300")}).to.throw(Error, "EncodingError U+D300");
expect(() => {ms932Encoder.encode("\uD301")}).to.throw(Error, "EncodingError U+D301");
expect(() => {ms932Encoder.encode("\uD302")}).to.throw(Error, "EncodingError U+D302");
expect(() => {ms932Encoder.encode("\uD303")}).to.throw(Error, "EncodingError U+D303");
expect(() => {ms932Encoder.encode("\uD304")}).to.throw(Error, "EncodingError U+D304");
expect(() => {ms932Encoder.encode("\uD305")}).to.throw(Error, "EncodingError U+D305");
expect(() => {ms932Encoder.encode("\uD306")}).to.throw(Error, "EncodingError U+D306");
expect(() => {ms932Encoder.encode("\uD307")}).to.throw(Error, "EncodingError U+D307");
expect(() => {ms932Encoder.encode("\uD308")}).to.throw(Error, "EncodingError U+D308");
expect(() => {ms932Encoder.encode("\uD309")}).to.throw(Error, "EncodingError U+D309");
expect(() => {ms932Encoder.encode("\uD30A")}).to.throw(Error, "EncodingError U+D30A");
expect(() => {ms932Encoder.encode("\uD30B")}).to.throw(Error, "EncodingError U+D30B");
expect(() => {ms932Encoder.encode("\uD30C")}).to.throw(Error, "EncodingError U+D30C");
expect(() => {ms932Encoder.encode("\uD30D")}).to.throw(Error, "EncodingError U+D30D");
expect(() => {ms932Encoder.encode("\uD30E")}).to.throw(Error, "EncodingError U+D30E");
expect(() => {ms932Encoder.encode("\uD30F")}).to.throw(Error, "EncodingError U+D30F");
expect(() => {ms932Encoder.encode("\uD310")}).to.throw(Error, "EncodingError U+D310");
expect(() => {ms932Encoder.encode("\uD311")}).to.throw(Error, "EncodingError U+D311");
expect(() => {ms932Encoder.encode("\uD312")}).to.throw(Error, "EncodingError U+D312");
expect(() => {ms932Encoder.encode("\uD313")}).to.throw(Error, "EncodingError U+D313");
expect(() => {ms932Encoder.encode("\uD314")}).to.throw(Error, "EncodingError U+D314");
expect(() => {ms932Encoder.encode("\uD315")}).to.throw(Error, "EncodingError U+D315");
expect(() => {ms932Encoder.encode("\uD316")}).to.throw(Error, "EncodingError U+D316");
expect(() => {ms932Encoder.encode("\uD317")}).to.throw(Error, "EncodingError U+D317");
expect(() => {ms932Encoder.encode("\uD318")}).to.throw(Error, "EncodingError U+D318");
expect(() => {ms932Encoder.encode("\uD319")}).to.throw(Error, "EncodingError U+D319");
expect(() => {ms932Encoder.encode("\uD31A")}).to.throw(Error, "EncodingError U+D31A");
expect(() => {ms932Encoder.encode("\uD31B")}).to.throw(Error, "EncodingError U+D31B");
expect(() => {ms932Encoder.encode("\uD31C")}).to.throw(Error, "EncodingError U+D31C");
expect(() => {ms932Encoder.encode("\uD31D")}).to.throw(Error, "EncodingError U+D31D");
expect(() => {ms932Encoder.encode("\uD31E")}).to.throw(Error, "EncodingError U+D31E");
expect(() => {ms932Encoder.encode("\uD31F")}).to.throw(Error, "EncodingError U+D31F");
expect(() => {ms932Encoder.encode("\uD320")}).to.throw(Error, "EncodingError U+D320");
expect(() => {ms932Encoder.encode("\uD321")}).to.throw(Error, "EncodingError U+D321");
expect(() => {ms932Encoder.encode("\uD322")}).to.throw(Error, "EncodingError U+D322");
expect(() => {ms932Encoder.encode("\uD323")}).to.throw(Error, "EncodingError U+D323");
expect(() => {ms932Encoder.encode("\uD324")}).to.throw(Error, "EncodingError U+D324");
expect(() => {ms932Encoder.encode("\uD325")}).to.throw(Error, "EncodingError U+D325");
expect(() => {ms932Encoder.encode("\uD326")}).to.throw(Error, "EncodingError U+D326");
expect(() => {ms932Encoder.encode("\uD327")}).to.throw(Error, "EncodingError U+D327");
expect(() => {ms932Encoder.encode("\uD328")}).to.throw(Error, "EncodingError U+D328");
expect(() => {ms932Encoder.encode("\uD329")}).to.throw(Error, "EncodingError U+D329");
expect(() => {ms932Encoder.encode("\uD32A")}).to.throw(Error, "EncodingError U+D32A");
expect(() => {ms932Encoder.encode("\uD32B")}).to.throw(Error, "EncodingError U+D32B");
expect(() => {ms932Encoder.encode("\uD32C")}).to.throw(Error, "EncodingError U+D32C");
expect(() => {ms932Encoder.encode("\uD32D")}).to.throw(Error, "EncodingError U+D32D");
expect(() => {ms932Encoder.encode("\uD32E")}).to.throw(Error, "EncodingError U+D32E");
expect(() => {ms932Encoder.encode("\uD32F")}).to.throw(Error, "EncodingError U+D32F");
expect(() => {ms932Encoder.encode("\uD330")}).to.throw(Error, "EncodingError U+D330");
expect(() => {ms932Encoder.encode("\uD331")}).to.throw(Error, "EncodingError U+D331");
expect(() => {ms932Encoder.encode("\uD332")}).to.throw(Error, "EncodingError U+D332");
expect(() => {ms932Encoder.encode("\uD333")}).to.throw(Error, "EncodingError U+D333");
expect(() => {ms932Encoder.encode("\uD334")}).to.throw(Error, "EncodingError U+D334");
expect(() => {ms932Encoder.encode("\uD335")}).to.throw(Error, "EncodingError U+D335");
expect(() => {ms932Encoder.encode("\uD336")}).to.throw(Error, "EncodingError U+D336");
expect(() => {ms932Encoder.encode("\uD337")}).to.throw(Error, "EncodingError U+D337");
expect(() => {ms932Encoder.encode("\uD338")}).to.throw(Error, "EncodingError U+D338");
expect(() => {ms932Encoder.encode("\uD339")}).to.throw(Error, "EncodingError U+D339");
expect(() => {ms932Encoder.encode("\uD33A")}).to.throw(Error, "EncodingError U+D33A");
expect(() => {ms932Encoder.encode("\uD33B")}).to.throw(Error, "EncodingError U+D33B");
expect(() => {ms932Encoder.encode("\uD33C")}).to.throw(Error, "EncodingError U+D33C");
expect(() => {ms932Encoder.encode("\uD33D")}).to.throw(Error, "EncodingError U+D33D");
expect(() => {ms932Encoder.encode("\uD33E")}).to.throw(Error, "EncodingError U+D33E");
expect(() => {ms932Encoder.encode("\uD33F")}).to.throw(Error, "EncodingError U+D33F");
expect(() => {ms932Encoder.encode("\uD340")}).to.throw(Error, "EncodingError U+D340");
expect(() => {ms932Encoder.encode("\uD341")}).to.throw(Error, "EncodingError U+D341");
expect(() => {ms932Encoder.encode("\uD342")}).to.throw(Error, "EncodingError U+D342");
expect(() => {ms932Encoder.encode("\uD343")}).to.throw(Error, "EncodingError U+D343");
expect(() => {ms932Encoder.encode("\uD344")}).to.throw(Error, "EncodingError U+D344");
expect(() => {ms932Encoder.encode("\uD345")}).to.throw(Error, "EncodingError U+D345");
expect(() => {ms932Encoder.encode("\uD346")}).to.throw(Error, "EncodingError U+D346");
expect(() => {ms932Encoder.encode("\uD347")}).to.throw(Error, "EncodingError U+D347");
expect(() => {ms932Encoder.encode("\uD348")}).to.throw(Error, "EncodingError U+D348");
expect(() => {ms932Encoder.encode("\uD349")}).to.throw(Error, "EncodingError U+D349");
expect(() => {ms932Encoder.encode("\uD34A")}).to.throw(Error, "EncodingError U+D34A");
expect(() => {ms932Encoder.encode("\uD34B")}).to.throw(Error, "EncodingError U+D34B");
expect(() => {ms932Encoder.encode("\uD34C")}).to.throw(Error, "EncodingError U+D34C");
expect(() => {ms932Encoder.encode("\uD34D")}).to.throw(Error, "EncodingError U+D34D");
expect(() => {ms932Encoder.encode("\uD34E")}).to.throw(Error, "EncodingError U+D34E");
expect(() => {ms932Encoder.encode("\uD34F")}).to.throw(Error, "EncodingError U+D34F");
expect(() => {ms932Encoder.encode("\uD350")}).to.throw(Error, "EncodingError U+D350");
expect(() => {ms932Encoder.encode("\uD351")}).to.throw(Error, "EncodingError U+D351");
expect(() => {ms932Encoder.encode("\uD352")}).to.throw(Error, "EncodingError U+D352");
expect(() => {ms932Encoder.encode("\uD353")}).to.throw(Error, "EncodingError U+D353");
expect(() => {ms932Encoder.encode("\uD354")}).to.throw(Error, "EncodingError U+D354");
expect(() => {ms932Encoder.encode("\uD355")}).to.throw(Error, "EncodingError U+D355");
expect(() => {ms932Encoder.encode("\uD356")}).to.throw(Error, "EncodingError U+D356");
expect(() => {ms932Encoder.encode("\uD357")}).to.throw(Error, "EncodingError U+D357");
expect(() => {ms932Encoder.encode("\uD358")}).to.throw(Error, "EncodingError U+D358");
expect(() => {ms932Encoder.encode("\uD359")}).to.throw(Error, "EncodingError U+D359");
expect(() => {ms932Encoder.encode("\uD35A")}).to.throw(Error, "EncodingError U+D35A");
expect(() => {ms932Encoder.encode("\uD35B")}).to.throw(Error, "EncodingError U+D35B");
expect(() => {ms932Encoder.encode("\uD35C")}).to.throw(Error, "EncodingError U+D35C");
expect(() => {ms932Encoder.encode("\uD35D")}).to.throw(Error, "EncodingError U+D35D");
expect(() => {ms932Encoder.encode("\uD35E")}).to.throw(Error, "EncodingError U+D35E");
expect(() => {ms932Encoder.encode("\uD35F")}).to.throw(Error, "EncodingError U+D35F");
expect(() => {ms932Encoder.encode("\uD360")}).to.throw(Error, "EncodingError U+D360");
expect(() => {ms932Encoder.encode("\uD361")}).to.throw(Error, "EncodingError U+D361");
expect(() => {ms932Encoder.encode("\uD362")}).to.throw(Error, "EncodingError U+D362");
expect(() => {ms932Encoder.encode("\uD363")}).to.throw(Error, "EncodingError U+D363");
expect(() => {ms932Encoder.encode("\uD364")}).to.throw(Error, "EncodingError U+D364");
expect(() => {ms932Encoder.encode("\uD365")}).to.throw(Error, "EncodingError U+D365");
expect(() => {ms932Encoder.encode("\uD366")}).to.throw(Error, "EncodingError U+D366");
expect(() => {ms932Encoder.encode("\uD367")}).to.throw(Error, "EncodingError U+D367");
expect(() => {ms932Encoder.encode("\uD368")}).to.throw(Error, "EncodingError U+D368");
expect(() => {ms932Encoder.encode("\uD369")}).to.throw(Error, "EncodingError U+D369");
expect(() => {ms932Encoder.encode("\uD36A")}).to.throw(Error, "EncodingError U+D36A");
expect(() => {ms932Encoder.encode("\uD36B")}).to.throw(Error, "EncodingError U+D36B");
expect(() => {ms932Encoder.encode("\uD36C")}).to.throw(Error, "EncodingError U+D36C");
expect(() => {ms932Encoder.encode("\uD36D")}).to.throw(Error, "EncodingError U+D36D");
expect(() => {ms932Encoder.encode("\uD36E")}).to.throw(Error, "EncodingError U+D36E");
expect(() => {ms932Encoder.encode("\uD36F")}).to.throw(Error, "EncodingError U+D36F");
expect(() => {ms932Encoder.encode("\uD370")}).to.throw(Error, "EncodingError U+D370");
expect(() => {ms932Encoder.encode("\uD371")}).to.throw(Error, "EncodingError U+D371");
expect(() => {ms932Encoder.encode("\uD372")}).to.throw(Error, "EncodingError U+D372");
expect(() => {ms932Encoder.encode("\uD373")}).to.throw(Error, "EncodingError U+D373");
expect(() => {ms932Encoder.encode("\uD374")}).to.throw(Error, "EncodingError U+D374");
expect(() => {ms932Encoder.encode("\uD375")}).to.throw(Error, "EncodingError U+D375");
expect(() => {ms932Encoder.encode("\uD376")}).to.throw(Error, "EncodingError U+D376");
expect(() => {ms932Encoder.encode("\uD377")}).to.throw(Error, "EncodingError U+D377");
expect(() => {ms932Encoder.encode("\uD378")}).to.throw(Error, "EncodingError U+D378");
expect(() => {ms932Encoder.encode("\uD379")}).to.throw(Error, "EncodingError U+D379");
expect(() => {ms932Encoder.encode("\uD37A")}).to.throw(Error, "EncodingError U+D37A");
expect(() => {ms932Encoder.encode("\uD37B")}).to.throw(Error, "EncodingError U+D37B");
expect(() => {ms932Encoder.encode("\uD37C")}).to.throw(Error, "EncodingError U+D37C");
expect(() => {ms932Encoder.encode("\uD37D")}).to.throw(Error, "EncodingError U+D37D");
expect(() => {ms932Encoder.encode("\uD37E")}).to.throw(Error, "EncodingError U+D37E");
expect(() => {ms932Encoder.encode("\uD37F")}).to.throw(Error, "EncodingError U+D37F");
expect(() => {ms932Encoder.encode("\uD380")}).to.throw(Error, "EncodingError U+D380");
expect(() => {ms932Encoder.encode("\uD381")}).to.throw(Error, "EncodingError U+D381");
expect(() => {ms932Encoder.encode("\uD382")}).to.throw(Error, "EncodingError U+D382");
expect(() => {ms932Encoder.encode("\uD383")}).to.throw(Error, "EncodingError U+D383");
expect(() => {ms932Encoder.encode("\uD384")}).to.throw(Error, "EncodingError U+D384");
expect(() => {ms932Encoder.encode("\uD385")}).to.throw(Error, "EncodingError U+D385");
expect(() => {ms932Encoder.encode("\uD386")}).to.throw(Error, "EncodingError U+D386");
expect(() => {ms932Encoder.encode("\uD387")}).to.throw(Error, "EncodingError U+D387");
expect(() => {ms932Encoder.encode("\uD388")}).to.throw(Error, "EncodingError U+D388");
expect(() => {ms932Encoder.encode("\uD389")}).to.throw(Error, "EncodingError U+D389");
expect(() => {ms932Encoder.encode("\uD38A")}).to.throw(Error, "EncodingError U+D38A");
expect(() => {ms932Encoder.encode("\uD38B")}).to.throw(Error, "EncodingError U+D38B");
expect(() => {ms932Encoder.encode("\uD38C")}).to.throw(Error, "EncodingError U+D38C");
expect(() => {ms932Encoder.encode("\uD38D")}).to.throw(Error, "EncodingError U+D38D");
expect(() => {ms932Encoder.encode("\uD38E")}).to.throw(Error, "EncodingError U+D38E");
expect(() => {ms932Encoder.encode("\uD38F")}).to.throw(Error, "EncodingError U+D38F");
expect(() => {ms932Encoder.encode("\uD390")}).to.throw(Error, "EncodingError U+D390");
expect(() => {ms932Encoder.encode("\uD391")}).to.throw(Error, "EncodingError U+D391");
expect(() => {ms932Encoder.encode("\uD392")}).to.throw(Error, "EncodingError U+D392");
expect(() => {ms932Encoder.encode("\uD393")}).to.throw(Error, "EncodingError U+D393");
expect(() => {ms932Encoder.encode("\uD394")}).to.throw(Error, "EncodingError U+D394");
expect(() => {ms932Encoder.encode("\uD395")}).to.throw(Error, "EncodingError U+D395");
expect(() => {ms932Encoder.encode("\uD396")}).to.throw(Error, "EncodingError U+D396");
expect(() => {ms932Encoder.encode("\uD397")}).to.throw(Error, "EncodingError U+D397");
expect(() => {ms932Encoder.encode("\uD398")}).to.throw(Error, "EncodingError U+D398");
expect(() => {ms932Encoder.encode("\uD399")}).to.throw(Error, "EncodingError U+D399");
expect(() => {ms932Encoder.encode("\uD39A")}).to.throw(Error, "EncodingError U+D39A");
expect(() => {ms932Encoder.encode("\uD39B")}).to.throw(Error, "EncodingError U+D39B");
expect(() => {ms932Encoder.encode("\uD39C")}).to.throw(Error, "EncodingError U+D39C");
expect(() => {ms932Encoder.encode("\uD39D")}).to.throw(Error, "EncodingError U+D39D");
expect(() => {ms932Encoder.encode("\uD39E")}).to.throw(Error, "EncodingError U+D39E");
expect(() => {ms932Encoder.encode("\uD39F")}).to.throw(Error, "EncodingError U+D39F");
expect(() => {ms932Encoder.encode("\uD3A0")}).to.throw(Error, "EncodingError U+D3A0");
expect(() => {ms932Encoder.encode("\uD3A1")}).to.throw(Error, "EncodingError U+D3A1");
expect(() => {ms932Encoder.encode("\uD3A2")}).to.throw(Error, "EncodingError U+D3A2");
expect(() => {ms932Encoder.encode("\uD3A3")}).to.throw(Error, "EncodingError U+D3A3");
expect(() => {ms932Encoder.encode("\uD3A4")}).to.throw(Error, "EncodingError U+D3A4");
expect(() => {ms932Encoder.encode("\uD3A5")}).to.throw(Error, "EncodingError U+D3A5");
expect(() => {ms932Encoder.encode("\uD3A6")}).to.throw(Error, "EncodingError U+D3A6");
expect(() => {ms932Encoder.encode("\uD3A7")}).to.throw(Error, "EncodingError U+D3A7");
expect(() => {ms932Encoder.encode("\uD3A8")}).to.throw(Error, "EncodingError U+D3A8");
expect(() => {ms932Encoder.encode("\uD3A9")}).to.throw(Error, "EncodingError U+D3A9");
expect(() => {ms932Encoder.encode("\uD3AA")}).to.throw(Error, "EncodingError U+D3AA");
expect(() => {ms932Encoder.encode("\uD3AB")}).to.throw(Error, "EncodingError U+D3AB");
expect(() => {ms932Encoder.encode("\uD3AC")}).to.throw(Error, "EncodingError U+D3AC");
expect(() => {ms932Encoder.encode("\uD3AD")}).to.throw(Error, "EncodingError U+D3AD");
expect(() => {ms932Encoder.encode("\uD3AE")}).to.throw(Error, "EncodingError U+D3AE");
expect(() => {ms932Encoder.encode("\uD3AF")}).to.throw(Error, "EncodingError U+D3AF");
expect(() => {ms932Encoder.encode("\uD3B0")}).to.throw(Error, "EncodingError U+D3B0");
expect(() => {ms932Encoder.encode("\uD3B1")}).to.throw(Error, "EncodingError U+D3B1");
expect(() => {ms932Encoder.encode("\uD3B2")}).to.throw(Error, "EncodingError U+D3B2");
expect(() => {ms932Encoder.encode("\uD3B3")}).to.throw(Error, "EncodingError U+D3B3");
expect(() => {ms932Encoder.encode("\uD3B4")}).to.throw(Error, "EncodingError U+D3B4");
expect(() => {ms932Encoder.encode("\uD3B5")}).to.throw(Error, "EncodingError U+D3B5");
expect(() => {ms932Encoder.encode("\uD3B6")}).to.throw(Error, "EncodingError U+D3B6");
expect(() => {ms932Encoder.encode("\uD3B7")}).to.throw(Error, "EncodingError U+D3B7");
expect(() => {ms932Encoder.encode("\uD3B8")}).to.throw(Error, "EncodingError U+D3B8");
expect(() => {ms932Encoder.encode("\uD3B9")}).to.throw(Error, "EncodingError U+D3B9");
expect(() => {ms932Encoder.encode("\uD3BA")}).to.throw(Error, "EncodingError U+D3BA");
expect(() => {ms932Encoder.encode("\uD3BB")}).to.throw(Error, "EncodingError U+D3BB");
expect(() => {ms932Encoder.encode("\uD3BC")}).to.throw(Error, "EncodingError U+D3BC");
expect(() => {ms932Encoder.encode("\uD3BD")}).to.throw(Error, "EncodingError U+D3BD");
expect(() => {ms932Encoder.encode("\uD3BE")}).to.throw(Error, "EncodingError U+D3BE");
expect(() => {ms932Encoder.encode("\uD3BF")}).to.throw(Error, "EncodingError U+D3BF");
expect(() => {ms932Encoder.encode("\uD3C0")}).to.throw(Error, "EncodingError U+D3C0");
expect(() => {ms932Encoder.encode("\uD3C1")}).to.throw(Error, "EncodingError U+D3C1");
expect(() => {ms932Encoder.encode("\uD3C2")}).to.throw(Error, "EncodingError U+D3C2");
expect(() => {ms932Encoder.encode("\uD3C3")}).to.throw(Error, "EncodingError U+D3C3");
expect(() => {ms932Encoder.encode("\uD3C4")}).to.throw(Error, "EncodingError U+D3C4");
expect(() => {ms932Encoder.encode("\uD3C5")}).to.throw(Error, "EncodingError U+D3C5");
expect(() => {ms932Encoder.encode("\uD3C6")}).to.throw(Error, "EncodingError U+D3C6");
expect(() => {ms932Encoder.encode("\uD3C7")}).to.throw(Error, "EncodingError U+D3C7");
expect(() => {ms932Encoder.encode("\uD3C8")}).to.throw(Error, "EncodingError U+D3C8");
expect(() => {ms932Encoder.encode("\uD3C9")}).to.throw(Error, "EncodingError U+D3C9");
expect(() => {ms932Encoder.encode("\uD3CA")}).to.throw(Error, "EncodingError U+D3CA");
expect(() => {ms932Encoder.encode("\uD3CB")}).to.throw(Error, "EncodingError U+D3CB");
expect(() => {ms932Encoder.encode("\uD3CC")}).to.throw(Error, "EncodingError U+D3CC");
expect(() => {ms932Encoder.encode("\uD3CD")}).to.throw(Error, "EncodingError U+D3CD");
expect(() => {ms932Encoder.encode("\uD3CE")}).to.throw(Error, "EncodingError U+D3CE");
expect(() => {ms932Encoder.encode("\uD3CF")}).to.throw(Error, "EncodingError U+D3CF");
expect(() => {ms932Encoder.encode("\uD3D0")}).to.throw(Error, "EncodingError U+D3D0");
expect(() => {ms932Encoder.encode("\uD3D1")}).to.throw(Error, "EncodingError U+D3D1");
expect(() => {ms932Encoder.encode("\uD3D2")}).to.throw(Error, "EncodingError U+D3D2");
expect(() => {ms932Encoder.encode("\uD3D3")}).to.throw(Error, "EncodingError U+D3D3");
expect(() => {ms932Encoder.encode("\uD3D4")}).to.throw(Error, "EncodingError U+D3D4");
expect(() => {ms932Encoder.encode("\uD3D5")}).to.throw(Error, "EncodingError U+D3D5");
expect(() => {ms932Encoder.encode("\uD3D6")}).to.throw(Error, "EncodingError U+D3D6");
expect(() => {ms932Encoder.encode("\uD3D7")}).to.throw(Error, "EncodingError U+D3D7");
expect(() => {ms932Encoder.encode("\uD3D8")}).to.throw(Error, "EncodingError U+D3D8");
expect(() => {ms932Encoder.encode("\uD3D9")}).to.throw(Error, "EncodingError U+D3D9");
expect(() => {ms932Encoder.encode("\uD3DA")}).to.throw(Error, "EncodingError U+D3DA");
expect(() => {ms932Encoder.encode("\uD3DB")}).to.throw(Error, "EncodingError U+D3DB");
expect(() => {ms932Encoder.encode("\uD3DC")}).to.throw(Error, "EncodingError U+D3DC");
expect(() => {ms932Encoder.encode("\uD3DD")}).to.throw(Error, "EncodingError U+D3DD");
expect(() => {ms932Encoder.encode("\uD3DE")}).to.throw(Error, "EncodingError U+D3DE");
expect(() => {ms932Encoder.encode("\uD3DF")}).to.throw(Error, "EncodingError U+D3DF");
expect(() => {ms932Encoder.encode("\uD3E0")}).to.throw(Error, "EncodingError U+D3E0");
expect(() => {ms932Encoder.encode("\uD3E1")}).to.throw(Error, "EncodingError U+D3E1");
expect(() => {ms932Encoder.encode("\uD3E2")}).to.throw(Error, "EncodingError U+D3E2");
expect(() => {ms932Encoder.encode("\uD3E3")}).to.throw(Error, "EncodingError U+D3E3");
expect(() => {ms932Encoder.encode("\uD3E4")}).to.throw(Error, "EncodingError U+D3E4");
expect(() => {ms932Encoder.encode("\uD3E5")}).to.throw(Error, "EncodingError U+D3E5");
expect(() => {ms932Encoder.encode("\uD3E6")}).to.throw(Error, "EncodingError U+D3E6");
expect(() => {ms932Encoder.encode("\uD3E7")}).to.throw(Error, "EncodingError U+D3E7");
expect(() => {ms932Encoder.encode("\uD3E8")}).to.throw(Error, "EncodingError U+D3E8");
expect(() => {ms932Encoder.encode("\uD3E9")}).to.throw(Error, "EncodingError U+D3E9");
expect(() => {ms932Encoder.encode("\uD3EA")}).to.throw(Error, "EncodingError U+D3EA");
expect(() => {ms932Encoder.encode("\uD3EB")}).to.throw(Error, "EncodingError U+D3EB");
expect(() => {ms932Encoder.encode("\uD3EC")}).to.throw(Error, "EncodingError U+D3EC");
expect(() => {ms932Encoder.encode("\uD3ED")}).to.throw(Error, "EncodingError U+D3ED");
expect(() => {ms932Encoder.encode("\uD3EE")}).to.throw(Error, "EncodingError U+D3EE");
expect(() => {ms932Encoder.encode("\uD3EF")}).to.throw(Error, "EncodingError U+D3EF");
expect(() => {ms932Encoder.encode("\uD3F0")}).to.throw(Error, "EncodingError U+D3F0");
expect(() => {ms932Encoder.encode("\uD3F1")}).to.throw(Error, "EncodingError U+D3F1");
expect(() => {ms932Encoder.encode("\uD3F2")}).to.throw(Error, "EncodingError U+D3F2");
expect(() => {ms932Encoder.encode("\uD3F3")}).to.throw(Error, "EncodingError U+D3F3");
expect(() => {ms932Encoder.encode("\uD3F4")}).to.throw(Error, "EncodingError U+D3F4");
expect(() => {ms932Encoder.encode("\uD3F5")}).to.throw(Error, "EncodingError U+D3F5");
expect(() => {ms932Encoder.encode("\uD3F6")}).to.throw(Error, "EncodingError U+D3F6");
expect(() => {ms932Encoder.encode("\uD3F7")}).to.throw(Error, "EncodingError U+D3F7");
expect(() => {ms932Encoder.encode("\uD3F8")}).to.throw(Error, "EncodingError U+D3F8");
expect(() => {ms932Encoder.encode("\uD3F9")}).to.throw(Error, "EncodingError U+D3F9");
expect(() => {ms932Encoder.encode("\uD3FA")}).to.throw(Error, "EncodingError U+D3FA");
expect(() => {ms932Encoder.encode("\uD3FB")}).to.throw(Error, "EncodingError U+D3FB");
expect(() => {ms932Encoder.encode("\uD3FC")}).to.throw(Error, "EncodingError U+D3FC");
expect(() => {ms932Encoder.encode("\uD3FD")}).to.throw(Error, "EncodingError U+D3FD");
expect(() => {ms932Encoder.encode("\uD3FE")}).to.throw(Error, "EncodingError U+D3FE");
expect(() => {ms932Encoder.encode("\uD3FF")}).to.throw(Error, "EncodingError U+D3FF");
expect(() => {ms932Encoder.encode("\uD400")}).to.throw(Error, "EncodingError U+D400");
expect(() => {ms932Encoder.encode("\uD401")}).to.throw(Error, "EncodingError U+D401");
expect(() => {ms932Encoder.encode("\uD402")}).to.throw(Error, "EncodingError U+D402");
expect(() => {ms932Encoder.encode("\uD403")}).to.throw(Error, "EncodingError U+D403");
expect(() => {ms932Encoder.encode("\uD404")}).to.throw(Error, "EncodingError U+D404");
expect(() => {ms932Encoder.encode("\uD405")}).to.throw(Error, "EncodingError U+D405");
expect(() => {ms932Encoder.encode("\uD406")}).to.throw(Error, "EncodingError U+D406");
expect(() => {ms932Encoder.encode("\uD407")}).to.throw(Error, "EncodingError U+D407");
expect(() => {ms932Encoder.encode("\uD408")}).to.throw(Error, "EncodingError U+D408");
expect(() => {ms932Encoder.encode("\uD409")}).to.throw(Error, "EncodingError U+D409");
expect(() => {ms932Encoder.encode("\uD40A")}).to.throw(Error, "EncodingError U+D40A");
expect(() => {ms932Encoder.encode("\uD40B")}).to.throw(Error, "EncodingError U+D40B");
expect(() => {ms932Encoder.encode("\uD40C")}).to.throw(Error, "EncodingError U+D40C");
expect(() => {ms932Encoder.encode("\uD40D")}).to.throw(Error, "EncodingError U+D40D");
expect(() => {ms932Encoder.encode("\uD40E")}).to.throw(Error, "EncodingError U+D40E");
expect(() => {ms932Encoder.encode("\uD40F")}).to.throw(Error, "EncodingError U+D40F");
expect(() => {ms932Encoder.encode("\uD410")}).to.throw(Error, "EncodingError U+D410");
expect(() => {ms932Encoder.encode("\uD411")}).to.throw(Error, "EncodingError U+D411");
expect(() => {ms932Encoder.encode("\uD412")}).to.throw(Error, "EncodingError U+D412");
expect(() => {ms932Encoder.encode("\uD413")}).to.throw(Error, "EncodingError U+D413");
expect(() => {ms932Encoder.encode("\uD414")}).to.throw(Error, "EncodingError U+D414");
expect(() => {ms932Encoder.encode("\uD415")}).to.throw(Error, "EncodingError U+D415");
expect(() => {ms932Encoder.encode("\uD416")}).to.throw(Error, "EncodingError U+D416");
expect(() => {ms932Encoder.encode("\uD417")}).to.throw(Error, "EncodingError U+D417");
expect(() => {ms932Encoder.encode("\uD418")}).to.throw(Error, "EncodingError U+D418");
expect(() => {ms932Encoder.encode("\uD419")}).to.throw(Error, "EncodingError U+D419");
expect(() => {ms932Encoder.encode("\uD41A")}).to.throw(Error, "EncodingError U+D41A");
expect(() => {ms932Encoder.encode("\uD41B")}).to.throw(Error, "EncodingError U+D41B");
expect(() => {ms932Encoder.encode("\uD41C")}).to.throw(Error, "EncodingError U+D41C");
expect(() => {ms932Encoder.encode("\uD41D")}).to.throw(Error, "EncodingError U+D41D");
expect(() => {ms932Encoder.encode("\uD41E")}).to.throw(Error, "EncodingError U+D41E");
expect(() => {ms932Encoder.encode("\uD41F")}).to.throw(Error, "EncodingError U+D41F");
expect(() => {ms932Encoder.encode("\uD420")}).to.throw(Error, "EncodingError U+D420");
expect(() => {ms932Encoder.encode("\uD421")}).to.throw(Error, "EncodingError U+D421");
expect(() => {ms932Encoder.encode("\uD422")}).to.throw(Error, "EncodingError U+D422");
expect(() => {ms932Encoder.encode("\uD423")}).to.throw(Error, "EncodingError U+D423");
expect(() => {ms932Encoder.encode("\uD424")}).to.throw(Error, "EncodingError U+D424");
expect(() => {ms932Encoder.encode("\uD425")}).to.throw(Error, "EncodingError U+D425");
expect(() => {ms932Encoder.encode("\uD426")}).to.throw(Error, "EncodingError U+D426");
expect(() => {ms932Encoder.encode("\uD427")}).to.throw(Error, "EncodingError U+D427");
expect(() => {ms932Encoder.encode("\uD428")}).to.throw(Error, "EncodingError U+D428");
expect(() => {ms932Encoder.encode("\uD429")}).to.throw(Error, "EncodingError U+D429");
expect(() => {ms932Encoder.encode("\uD42A")}).to.throw(Error, "EncodingError U+D42A");
expect(() => {ms932Encoder.encode("\uD42B")}).to.throw(Error, "EncodingError U+D42B");
expect(() => {ms932Encoder.encode("\uD42C")}).to.throw(Error, "EncodingError U+D42C");
expect(() => {ms932Encoder.encode("\uD42D")}).to.throw(Error, "EncodingError U+D42D");
expect(() => {ms932Encoder.encode("\uD42E")}).to.throw(Error, "EncodingError U+D42E");
expect(() => {ms932Encoder.encode("\uD42F")}).to.throw(Error, "EncodingError U+D42F");
expect(() => {ms932Encoder.encode("\uD430")}).to.throw(Error, "EncodingError U+D430");
expect(() => {ms932Encoder.encode("\uD431")}).to.throw(Error, "EncodingError U+D431");
expect(() => {ms932Encoder.encode("\uD432")}).to.throw(Error, "EncodingError U+D432");
expect(() => {ms932Encoder.encode("\uD433")}).to.throw(Error, "EncodingError U+D433");
expect(() => {ms932Encoder.encode("\uD434")}).to.throw(Error, "EncodingError U+D434");
expect(() => {ms932Encoder.encode("\uD435")}).to.throw(Error, "EncodingError U+D435");
expect(() => {ms932Encoder.encode("\uD436")}).to.throw(Error, "EncodingError U+D436");
expect(() => {ms932Encoder.encode("\uD437")}).to.throw(Error, "EncodingError U+D437");
expect(() => {ms932Encoder.encode("\uD438")}).to.throw(Error, "EncodingError U+D438");
expect(() => {ms932Encoder.encode("\uD439")}).to.throw(Error, "EncodingError U+D439");
expect(() => {ms932Encoder.encode("\uD43A")}).to.throw(Error, "EncodingError U+D43A");
expect(() => {ms932Encoder.encode("\uD43B")}).to.throw(Error, "EncodingError U+D43B");
expect(() => {ms932Encoder.encode("\uD43C")}).to.throw(Error, "EncodingError U+D43C");
expect(() => {ms932Encoder.encode("\uD43D")}).to.throw(Error, "EncodingError U+D43D");
expect(() => {ms932Encoder.encode("\uD43E")}).to.throw(Error, "EncodingError U+D43E");
expect(() => {ms932Encoder.encode("\uD43F")}).to.throw(Error, "EncodingError U+D43F");
expect(() => {ms932Encoder.encode("\uD440")}).to.throw(Error, "EncodingError U+D440");
expect(() => {ms932Encoder.encode("\uD441")}).to.throw(Error, "EncodingError U+D441");
expect(() => {ms932Encoder.encode("\uD442")}).to.throw(Error, "EncodingError U+D442");
expect(() => {ms932Encoder.encode("\uD443")}).to.throw(Error, "EncodingError U+D443");
expect(() => {ms932Encoder.encode("\uD444")}).to.throw(Error, "EncodingError U+D444");
expect(() => {ms932Encoder.encode("\uD445")}).to.throw(Error, "EncodingError U+D445");
expect(() => {ms932Encoder.encode("\uD446")}).to.throw(Error, "EncodingError U+D446");
expect(() => {ms932Encoder.encode("\uD447")}).to.throw(Error, "EncodingError U+D447");
expect(() => {ms932Encoder.encode("\uD448")}).to.throw(Error, "EncodingError U+D448");
expect(() => {ms932Encoder.encode("\uD449")}).to.throw(Error, "EncodingError U+D449");
expect(() => {ms932Encoder.encode("\uD44A")}).to.throw(Error, "EncodingError U+D44A");
expect(() => {ms932Encoder.encode("\uD44B")}).to.throw(Error, "EncodingError U+D44B");
expect(() => {ms932Encoder.encode("\uD44C")}).to.throw(Error, "EncodingError U+D44C");
expect(() => {ms932Encoder.encode("\uD44D")}).to.throw(Error, "EncodingError U+D44D");
expect(() => {ms932Encoder.encode("\uD44E")}).to.throw(Error, "EncodingError U+D44E");
expect(() => {ms932Encoder.encode("\uD44F")}).to.throw(Error, "EncodingError U+D44F");
expect(() => {ms932Encoder.encode("\uD450")}).to.throw(Error, "EncodingError U+D450");
expect(() => {ms932Encoder.encode("\uD451")}).to.throw(Error, "EncodingError U+D451");
expect(() => {ms932Encoder.encode("\uD452")}).to.throw(Error, "EncodingError U+D452");
expect(() => {ms932Encoder.encode("\uD453")}).to.throw(Error, "EncodingError U+D453");
expect(() => {ms932Encoder.encode("\uD454")}).to.throw(Error, "EncodingError U+D454");
expect(() => {ms932Encoder.encode("\uD455")}).to.throw(Error, "EncodingError U+D455");
expect(() => {ms932Encoder.encode("\uD456")}).to.throw(Error, "EncodingError U+D456");
expect(() => {ms932Encoder.encode("\uD457")}).to.throw(Error, "EncodingError U+D457");
expect(() => {ms932Encoder.encode("\uD458")}).to.throw(Error, "EncodingError U+D458");
expect(() => {ms932Encoder.encode("\uD459")}).to.throw(Error, "EncodingError U+D459");
expect(() => {ms932Encoder.encode("\uD45A")}).to.throw(Error, "EncodingError U+D45A");
expect(() => {ms932Encoder.encode("\uD45B")}).to.throw(Error, "EncodingError U+D45B");
expect(() => {ms932Encoder.encode("\uD45C")}).to.throw(Error, "EncodingError U+D45C");
expect(() => {ms932Encoder.encode("\uD45D")}).to.throw(Error, "EncodingError U+D45D");
expect(() => {ms932Encoder.encode("\uD45E")}).to.throw(Error, "EncodingError U+D45E");
expect(() => {ms932Encoder.encode("\uD45F")}).to.throw(Error, "EncodingError U+D45F");
expect(() => {ms932Encoder.encode("\uD460")}).to.throw(Error, "EncodingError U+D460");
expect(() => {ms932Encoder.encode("\uD461")}).to.throw(Error, "EncodingError U+D461");
expect(() => {ms932Encoder.encode("\uD462")}).to.throw(Error, "EncodingError U+D462");
expect(() => {ms932Encoder.encode("\uD463")}).to.throw(Error, "EncodingError U+D463");
expect(() => {ms932Encoder.encode("\uD464")}).to.throw(Error, "EncodingError U+D464");
expect(() => {ms932Encoder.encode("\uD465")}).to.throw(Error, "EncodingError U+D465");
expect(() => {ms932Encoder.encode("\uD466")}).to.throw(Error, "EncodingError U+D466");
expect(() => {ms932Encoder.encode("\uD467")}).to.throw(Error, "EncodingError U+D467");
expect(() => {ms932Encoder.encode("\uD468")}).to.throw(Error, "EncodingError U+D468");
expect(() => {ms932Encoder.encode("\uD469")}).to.throw(Error, "EncodingError U+D469");
expect(() => {ms932Encoder.encode("\uD46A")}).to.throw(Error, "EncodingError U+D46A");
expect(() => {ms932Encoder.encode("\uD46B")}).to.throw(Error, "EncodingError U+D46B");
expect(() => {ms932Encoder.encode("\uD46C")}).to.throw(Error, "EncodingError U+D46C");
expect(() => {ms932Encoder.encode("\uD46D")}).to.throw(Error, "EncodingError U+D46D");
expect(() => {ms932Encoder.encode("\uD46E")}).to.throw(Error, "EncodingError U+D46E");
expect(() => {ms932Encoder.encode("\uD46F")}).to.throw(Error, "EncodingError U+D46F");
expect(() => {ms932Encoder.encode("\uD470")}).to.throw(Error, "EncodingError U+D470");
expect(() => {ms932Encoder.encode("\uD471")}).to.throw(Error, "EncodingError U+D471");
expect(() => {ms932Encoder.encode("\uD472")}).to.throw(Error, "EncodingError U+D472");
expect(() => {ms932Encoder.encode("\uD473")}).to.throw(Error, "EncodingError U+D473");
expect(() => {ms932Encoder.encode("\uD474")}).to.throw(Error, "EncodingError U+D474");
expect(() => {ms932Encoder.encode("\uD475")}).to.throw(Error, "EncodingError U+D475");
expect(() => {ms932Encoder.encode("\uD476")}).to.throw(Error, "EncodingError U+D476");
expect(() => {ms932Encoder.encode("\uD477")}).to.throw(Error, "EncodingError U+D477");
expect(() => {ms932Encoder.encode("\uD478")}).to.throw(Error, "EncodingError U+D478");
expect(() => {ms932Encoder.encode("\uD479")}).to.throw(Error, "EncodingError U+D479");
expect(() => {ms932Encoder.encode("\uD47A")}).to.throw(Error, "EncodingError U+D47A");
expect(() => {ms932Encoder.encode("\uD47B")}).to.throw(Error, "EncodingError U+D47B");
expect(() => {ms932Encoder.encode("\uD47C")}).to.throw(Error, "EncodingError U+D47C");
expect(() => {ms932Encoder.encode("\uD47D")}).to.throw(Error, "EncodingError U+D47D");
expect(() => {ms932Encoder.encode("\uD47E")}).to.throw(Error, "EncodingError U+D47E");
expect(() => {ms932Encoder.encode("\uD47F")}).to.throw(Error, "EncodingError U+D47F");
expect(() => {ms932Encoder.encode("\uD480")}).to.throw(Error, "EncodingError U+D480");
expect(() => {ms932Encoder.encode("\uD481")}).to.throw(Error, "EncodingError U+D481");
expect(() => {ms932Encoder.encode("\uD482")}).to.throw(Error, "EncodingError U+D482");
expect(() => {ms932Encoder.encode("\uD483")}).to.throw(Error, "EncodingError U+D483");
expect(() => {ms932Encoder.encode("\uD484")}).to.throw(Error, "EncodingError U+D484");
expect(() => {ms932Encoder.encode("\uD485")}).to.throw(Error, "EncodingError U+D485");
expect(() => {ms932Encoder.encode("\uD486")}).to.throw(Error, "EncodingError U+D486");
expect(() => {ms932Encoder.encode("\uD487")}).to.throw(Error, "EncodingError U+D487");
expect(() => {ms932Encoder.encode("\uD488")}).to.throw(Error, "EncodingError U+D488");
expect(() => {ms932Encoder.encode("\uD489")}).to.throw(Error, "EncodingError U+D489");
expect(() => {ms932Encoder.encode("\uD48A")}).to.throw(Error, "EncodingError U+D48A");
expect(() => {ms932Encoder.encode("\uD48B")}).to.throw(Error, "EncodingError U+D48B");
expect(() => {ms932Encoder.encode("\uD48C")}).to.throw(Error, "EncodingError U+D48C");
expect(() => {ms932Encoder.encode("\uD48D")}).to.throw(Error, "EncodingError U+D48D");
expect(() => {ms932Encoder.encode("\uD48E")}).to.throw(Error, "EncodingError U+D48E");
expect(() => {ms932Encoder.encode("\uD48F")}).to.throw(Error, "EncodingError U+D48F");
expect(() => {ms932Encoder.encode("\uD490")}).to.throw(Error, "EncodingError U+D490");
expect(() => {ms932Encoder.encode("\uD491")}).to.throw(Error, "EncodingError U+D491");
expect(() => {ms932Encoder.encode("\uD492")}).to.throw(Error, "EncodingError U+D492");
expect(() => {ms932Encoder.encode("\uD493")}).to.throw(Error, "EncodingError U+D493");
expect(() => {ms932Encoder.encode("\uD494")}).to.throw(Error, "EncodingError U+D494");
expect(() => {ms932Encoder.encode("\uD495")}).to.throw(Error, "EncodingError U+D495");
expect(() => {ms932Encoder.encode("\uD496")}).to.throw(Error, "EncodingError U+D496");
expect(() => {ms932Encoder.encode("\uD497")}).to.throw(Error, "EncodingError U+D497");
expect(() => {ms932Encoder.encode("\uD498")}).to.throw(Error, "EncodingError U+D498");
expect(() => {ms932Encoder.encode("\uD499")}).to.throw(Error, "EncodingError U+D499");
expect(() => {ms932Encoder.encode("\uD49A")}).to.throw(Error, "EncodingError U+D49A");
expect(() => {ms932Encoder.encode("\uD49B")}).to.throw(Error, "EncodingError U+D49B");
expect(() => {ms932Encoder.encode("\uD49C")}).to.throw(Error, "EncodingError U+D49C");
expect(() => {ms932Encoder.encode("\uD49D")}).to.throw(Error, "EncodingError U+D49D");
expect(() => {ms932Encoder.encode("\uD49E")}).to.throw(Error, "EncodingError U+D49E");
expect(() => {ms932Encoder.encode("\uD49F")}).to.throw(Error, "EncodingError U+D49F");
expect(() => {ms932Encoder.encode("\uD4A0")}).to.throw(Error, "EncodingError U+D4A0");
expect(() => {ms932Encoder.encode("\uD4A1")}).to.throw(Error, "EncodingError U+D4A1");
expect(() => {ms932Encoder.encode("\uD4A2")}).to.throw(Error, "EncodingError U+D4A2");
expect(() => {ms932Encoder.encode("\uD4A3")}).to.throw(Error, "EncodingError U+D4A3");
expect(() => {ms932Encoder.encode("\uD4A4")}).to.throw(Error, "EncodingError U+D4A4");
expect(() => {ms932Encoder.encode("\uD4A5")}).to.throw(Error, "EncodingError U+D4A5");
expect(() => {ms932Encoder.encode("\uD4A6")}).to.throw(Error, "EncodingError U+D4A6");
expect(() => {ms932Encoder.encode("\uD4A7")}).to.throw(Error, "EncodingError U+D4A7");
expect(() => {ms932Encoder.encode("\uD4A8")}).to.throw(Error, "EncodingError U+D4A8");
expect(() => {ms932Encoder.encode("\uD4A9")}).to.throw(Error, "EncodingError U+D4A9");
expect(() => {ms932Encoder.encode("\uD4AA")}).to.throw(Error, "EncodingError U+D4AA");
expect(() => {ms932Encoder.encode("\uD4AB")}).to.throw(Error, "EncodingError U+D4AB");
expect(() => {ms932Encoder.encode("\uD4AC")}).to.throw(Error, "EncodingError U+D4AC");
expect(() => {ms932Encoder.encode("\uD4AD")}).to.throw(Error, "EncodingError U+D4AD");
expect(() => {ms932Encoder.encode("\uD4AE")}).to.throw(Error, "EncodingError U+D4AE");
expect(() => {ms932Encoder.encode("\uD4AF")}).to.throw(Error, "EncodingError U+D4AF");
expect(() => {ms932Encoder.encode("\uD4B0")}).to.throw(Error, "EncodingError U+D4B0");
expect(() => {ms932Encoder.encode("\uD4B1")}).to.throw(Error, "EncodingError U+D4B1");
expect(() => {ms932Encoder.encode("\uD4B2")}).to.throw(Error, "EncodingError U+D4B2");
expect(() => {ms932Encoder.encode("\uD4B3")}).to.throw(Error, "EncodingError U+D4B3");
expect(() => {ms932Encoder.encode("\uD4B4")}).to.throw(Error, "EncodingError U+D4B4");
expect(() => {ms932Encoder.encode("\uD4B5")}).to.throw(Error, "EncodingError U+D4B5");
expect(() => {ms932Encoder.encode("\uD4B6")}).to.throw(Error, "EncodingError U+D4B6");
expect(() => {ms932Encoder.encode("\uD4B7")}).to.throw(Error, "EncodingError U+D4B7");
expect(() => {ms932Encoder.encode("\uD4B8")}).to.throw(Error, "EncodingError U+D4B8");
expect(() => {ms932Encoder.encode("\uD4B9")}).to.throw(Error, "EncodingError U+D4B9");
expect(() => {ms932Encoder.encode("\uD4BA")}).to.throw(Error, "EncodingError U+D4BA");
expect(() => {ms932Encoder.encode("\uD4BB")}).to.throw(Error, "EncodingError U+D4BB");
expect(() => {ms932Encoder.encode("\uD4BC")}).to.throw(Error, "EncodingError U+D4BC");
expect(() => {ms932Encoder.encode("\uD4BD")}).to.throw(Error, "EncodingError U+D4BD");
expect(() => {ms932Encoder.encode("\uD4BE")}).to.throw(Error, "EncodingError U+D4BE");
expect(() => {ms932Encoder.encode("\uD4BF")}).to.throw(Error, "EncodingError U+D4BF");
expect(() => {ms932Encoder.encode("\uD4C0")}).to.throw(Error, "EncodingError U+D4C0");
expect(() => {ms932Encoder.encode("\uD4C1")}).to.throw(Error, "EncodingError U+D4C1");
expect(() => {ms932Encoder.encode("\uD4C2")}).to.throw(Error, "EncodingError U+D4C2");
expect(() => {ms932Encoder.encode("\uD4C3")}).to.throw(Error, "EncodingError U+D4C3");
expect(() => {ms932Encoder.encode("\uD4C4")}).to.throw(Error, "EncodingError U+D4C4");
expect(() => {ms932Encoder.encode("\uD4C5")}).to.throw(Error, "EncodingError U+D4C5");
expect(() => {ms932Encoder.encode("\uD4C6")}).to.throw(Error, "EncodingError U+D4C6");
expect(() => {ms932Encoder.encode("\uD4C7")}).to.throw(Error, "EncodingError U+D4C7");
expect(() => {ms932Encoder.encode("\uD4C8")}).to.throw(Error, "EncodingError U+D4C8");
expect(() => {ms932Encoder.encode("\uD4C9")}).to.throw(Error, "EncodingError U+D4C9");
expect(() => {ms932Encoder.encode("\uD4CA")}).to.throw(Error, "EncodingError U+D4CA");
expect(() => {ms932Encoder.encode("\uD4CB")}).to.throw(Error, "EncodingError U+D4CB");
expect(() => {ms932Encoder.encode("\uD4CC")}).to.throw(Error, "EncodingError U+D4CC");
expect(() => {ms932Encoder.encode("\uD4CD")}).to.throw(Error, "EncodingError U+D4CD");
expect(() => {ms932Encoder.encode("\uD4CE")}).to.throw(Error, "EncodingError U+D4CE");
expect(() => {ms932Encoder.encode("\uD4CF")}).to.throw(Error, "EncodingError U+D4CF");
expect(() => {ms932Encoder.encode("\uD4D0")}).to.throw(Error, "EncodingError U+D4D0");
expect(() => {ms932Encoder.encode("\uD4D1")}).to.throw(Error, "EncodingError U+D4D1");
expect(() => {ms932Encoder.encode("\uD4D2")}).to.throw(Error, "EncodingError U+D4D2");
expect(() => {ms932Encoder.encode("\uD4D3")}).to.throw(Error, "EncodingError U+D4D3");
expect(() => {ms932Encoder.encode("\uD4D4")}).to.throw(Error, "EncodingError U+D4D4");
expect(() => {ms932Encoder.encode("\uD4D5")}).to.throw(Error, "EncodingError U+D4D5");
expect(() => {ms932Encoder.encode("\uD4D6")}).to.throw(Error, "EncodingError U+D4D6");
expect(() => {ms932Encoder.encode("\uD4D7")}).to.throw(Error, "EncodingError U+D4D7");
expect(() => {ms932Encoder.encode("\uD4D8")}).to.throw(Error, "EncodingError U+D4D8");
expect(() => {ms932Encoder.encode("\uD4D9")}).to.throw(Error, "EncodingError U+D4D9");
expect(() => {ms932Encoder.encode("\uD4DA")}).to.throw(Error, "EncodingError U+D4DA");
expect(() => {ms932Encoder.encode("\uD4DB")}).to.throw(Error, "EncodingError U+D4DB");
expect(() => {ms932Encoder.encode("\uD4DC")}).to.throw(Error, "EncodingError U+D4DC");
expect(() => {ms932Encoder.encode("\uD4DD")}).to.throw(Error, "EncodingError U+D4DD");
expect(() => {ms932Encoder.encode("\uD4DE")}).to.throw(Error, "EncodingError U+D4DE");
expect(() => {ms932Encoder.encode("\uD4DF")}).to.throw(Error, "EncodingError U+D4DF");
expect(() => {ms932Encoder.encode("\uD4E0")}).to.throw(Error, "EncodingError U+D4E0");
expect(() => {ms932Encoder.encode("\uD4E1")}).to.throw(Error, "EncodingError U+D4E1");
expect(() => {ms932Encoder.encode("\uD4E2")}).to.throw(Error, "EncodingError U+D4E2");
expect(() => {ms932Encoder.encode("\uD4E3")}).to.throw(Error, "EncodingError U+D4E3");
expect(() => {ms932Encoder.encode("\uD4E4")}).to.throw(Error, "EncodingError U+D4E4");
expect(() => {ms932Encoder.encode("\uD4E5")}).to.throw(Error, "EncodingError U+D4E5");
expect(() => {ms932Encoder.encode("\uD4E6")}).to.throw(Error, "EncodingError U+D4E6");
expect(() => {ms932Encoder.encode("\uD4E7")}).to.throw(Error, "EncodingError U+D4E7");
expect(() => {ms932Encoder.encode("\uD4E8")}).to.throw(Error, "EncodingError U+D4E8");
expect(() => {ms932Encoder.encode("\uD4E9")}).to.throw(Error, "EncodingError U+D4E9");
expect(() => {ms932Encoder.encode("\uD4EA")}).to.throw(Error, "EncodingError U+D4EA");
expect(() => {ms932Encoder.encode("\uD4EB")}).to.throw(Error, "EncodingError U+D4EB");
expect(() => {ms932Encoder.encode("\uD4EC")}).to.throw(Error, "EncodingError U+D4EC");
expect(() => {ms932Encoder.encode("\uD4ED")}).to.throw(Error, "EncodingError U+D4ED");
expect(() => {ms932Encoder.encode("\uD4EE")}).to.throw(Error, "EncodingError U+D4EE");
expect(() => {ms932Encoder.encode("\uD4EF")}).to.throw(Error, "EncodingError U+D4EF");
expect(() => {ms932Encoder.encode("\uD4F0")}).to.throw(Error, "EncodingError U+D4F0");
expect(() => {ms932Encoder.encode("\uD4F1")}).to.throw(Error, "EncodingError U+D4F1");
expect(() => {ms932Encoder.encode("\uD4F2")}).to.throw(Error, "EncodingError U+D4F2");
expect(() => {ms932Encoder.encode("\uD4F3")}).to.throw(Error, "EncodingError U+D4F3");
expect(() => {ms932Encoder.encode("\uD4F4")}).to.throw(Error, "EncodingError U+D4F4");
expect(() => {ms932Encoder.encode("\uD4F5")}).to.throw(Error, "EncodingError U+D4F5");
expect(() => {ms932Encoder.encode("\uD4F6")}).to.throw(Error, "EncodingError U+D4F6");
expect(() => {ms932Encoder.encode("\uD4F7")}).to.throw(Error, "EncodingError U+D4F7");
expect(() => {ms932Encoder.encode("\uD4F8")}).to.throw(Error, "EncodingError U+D4F8");
expect(() => {ms932Encoder.encode("\uD4F9")}).to.throw(Error, "EncodingError U+D4F9");
expect(() => {ms932Encoder.encode("\uD4FA")}).to.throw(Error, "EncodingError U+D4FA");
expect(() => {ms932Encoder.encode("\uD4FB")}).to.throw(Error, "EncodingError U+D4FB");
expect(() => {ms932Encoder.encode("\uD4FC")}).to.throw(Error, "EncodingError U+D4FC");
expect(() => {ms932Encoder.encode("\uD4FD")}).to.throw(Error, "EncodingError U+D4FD");
expect(() => {ms932Encoder.encode("\uD4FE")}).to.throw(Error, "EncodingError U+D4FE");
expect(() => {ms932Encoder.encode("\uD4FF")}).to.throw(Error, "EncodingError U+D4FF");
expect(() => {ms932Encoder.encode("\uD500")}).to.throw(Error, "EncodingError U+D500");
expect(() => {ms932Encoder.encode("\uD501")}).to.throw(Error, "EncodingError U+D501");
expect(() => {ms932Encoder.encode("\uD502")}).to.throw(Error, "EncodingError U+D502");
expect(() => {ms932Encoder.encode("\uD503")}).to.throw(Error, "EncodingError U+D503");
expect(() => {ms932Encoder.encode("\uD504")}).to.throw(Error, "EncodingError U+D504");
expect(() => {ms932Encoder.encode("\uD505")}).to.throw(Error, "EncodingError U+D505");
expect(() => {ms932Encoder.encode("\uD506")}).to.throw(Error, "EncodingError U+D506");
expect(() => {ms932Encoder.encode("\uD507")}).to.throw(Error, "EncodingError U+D507");
expect(() => {ms932Encoder.encode("\uD508")}).to.throw(Error, "EncodingError U+D508");
expect(() => {ms932Encoder.encode("\uD509")}).to.throw(Error, "EncodingError U+D509");
expect(() => {ms932Encoder.encode("\uD50A")}).to.throw(Error, "EncodingError U+D50A");
expect(() => {ms932Encoder.encode("\uD50B")}).to.throw(Error, "EncodingError U+D50B");
expect(() => {ms932Encoder.encode("\uD50C")}).to.throw(Error, "EncodingError U+D50C");
expect(() => {ms932Encoder.encode("\uD50D")}).to.throw(Error, "EncodingError U+D50D");
expect(() => {ms932Encoder.encode("\uD50E")}).to.throw(Error, "EncodingError U+D50E");
expect(() => {ms932Encoder.encode("\uD50F")}).to.throw(Error, "EncodingError U+D50F");
expect(() => {ms932Encoder.encode("\uD510")}).to.throw(Error, "EncodingError U+D510");
expect(() => {ms932Encoder.encode("\uD511")}).to.throw(Error, "EncodingError U+D511");
expect(() => {ms932Encoder.encode("\uD512")}).to.throw(Error, "EncodingError U+D512");
expect(() => {ms932Encoder.encode("\uD513")}).to.throw(Error, "EncodingError U+D513");
expect(() => {ms932Encoder.encode("\uD514")}).to.throw(Error, "EncodingError U+D514");
expect(() => {ms932Encoder.encode("\uD515")}).to.throw(Error, "EncodingError U+D515");
expect(() => {ms932Encoder.encode("\uD516")}).to.throw(Error, "EncodingError U+D516");
expect(() => {ms932Encoder.encode("\uD517")}).to.throw(Error, "EncodingError U+D517");
expect(() => {ms932Encoder.encode("\uD518")}).to.throw(Error, "EncodingError U+D518");
expect(() => {ms932Encoder.encode("\uD519")}).to.throw(Error, "EncodingError U+D519");
expect(() => {ms932Encoder.encode("\uD51A")}).to.throw(Error, "EncodingError U+D51A");
expect(() => {ms932Encoder.encode("\uD51B")}).to.throw(Error, "EncodingError U+D51B");
expect(() => {ms932Encoder.encode("\uD51C")}).to.throw(Error, "EncodingError U+D51C");
expect(() => {ms932Encoder.encode("\uD51D")}).to.throw(Error, "EncodingError U+D51D");
expect(() => {ms932Encoder.encode("\uD51E")}).to.throw(Error, "EncodingError U+D51E");
expect(() => {ms932Encoder.encode("\uD51F")}).to.throw(Error, "EncodingError U+D51F");
expect(() => {ms932Encoder.encode("\uD520")}).to.throw(Error, "EncodingError U+D520");
expect(() => {ms932Encoder.encode("\uD521")}).to.throw(Error, "EncodingError U+D521");
expect(() => {ms932Encoder.encode("\uD522")}).to.throw(Error, "EncodingError U+D522");
expect(() => {ms932Encoder.encode("\uD523")}).to.throw(Error, "EncodingError U+D523");
expect(() => {ms932Encoder.encode("\uD524")}).to.throw(Error, "EncodingError U+D524");
expect(() => {ms932Encoder.encode("\uD525")}).to.throw(Error, "EncodingError U+D525");
expect(() => {ms932Encoder.encode("\uD526")}).to.throw(Error, "EncodingError U+D526");
expect(() => {ms932Encoder.encode("\uD527")}).to.throw(Error, "EncodingError U+D527");
expect(() => {ms932Encoder.encode("\uD528")}).to.throw(Error, "EncodingError U+D528");
expect(() => {ms932Encoder.encode("\uD529")}).to.throw(Error, "EncodingError U+D529");
expect(() => {ms932Encoder.encode("\uD52A")}).to.throw(Error, "EncodingError U+D52A");
expect(() => {ms932Encoder.encode("\uD52B")}).to.throw(Error, "EncodingError U+D52B");
expect(() => {ms932Encoder.encode("\uD52C")}).to.throw(Error, "EncodingError U+D52C");
expect(() => {ms932Encoder.encode("\uD52D")}).to.throw(Error, "EncodingError U+D52D");
expect(() => {ms932Encoder.encode("\uD52E")}).to.throw(Error, "EncodingError U+D52E");
expect(() => {ms932Encoder.encode("\uD52F")}).to.throw(Error, "EncodingError U+D52F");
expect(() => {ms932Encoder.encode("\uD530")}).to.throw(Error, "EncodingError U+D530");
expect(() => {ms932Encoder.encode("\uD531")}).to.throw(Error, "EncodingError U+D531");
expect(() => {ms932Encoder.encode("\uD532")}).to.throw(Error, "EncodingError U+D532");
expect(() => {ms932Encoder.encode("\uD533")}).to.throw(Error, "EncodingError U+D533");
expect(() => {ms932Encoder.encode("\uD534")}).to.throw(Error, "EncodingError U+D534");
expect(() => {ms932Encoder.encode("\uD535")}).to.throw(Error, "EncodingError U+D535");
expect(() => {ms932Encoder.encode("\uD536")}).to.throw(Error, "EncodingError U+D536");
expect(() => {ms932Encoder.encode("\uD537")}).to.throw(Error, "EncodingError U+D537");
expect(() => {ms932Encoder.encode("\uD538")}).to.throw(Error, "EncodingError U+D538");
expect(() => {ms932Encoder.encode("\uD539")}).to.throw(Error, "EncodingError U+D539");
expect(() => {ms932Encoder.encode("\uD53A")}).to.throw(Error, "EncodingError U+D53A");
expect(() => {ms932Encoder.encode("\uD53B")}).to.throw(Error, "EncodingError U+D53B");
expect(() => {ms932Encoder.encode("\uD53C")}).to.throw(Error, "EncodingError U+D53C");
expect(() => {ms932Encoder.encode("\uD53D")}).to.throw(Error, "EncodingError U+D53D");
expect(() => {ms932Encoder.encode("\uD53E")}).to.throw(Error, "EncodingError U+D53E");
expect(() => {ms932Encoder.encode("\uD53F")}).to.throw(Error, "EncodingError U+D53F");
expect(() => {ms932Encoder.encode("\uD540")}).to.throw(Error, "EncodingError U+D540");
expect(() => {ms932Encoder.encode("\uD541")}).to.throw(Error, "EncodingError U+D541");
expect(() => {ms932Encoder.encode("\uD542")}).to.throw(Error, "EncodingError U+D542");
expect(() => {ms932Encoder.encode("\uD543")}).to.throw(Error, "EncodingError U+D543");
expect(() => {ms932Encoder.encode("\uD544")}).to.throw(Error, "EncodingError U+D544");
expect(() => {ms932Encoder.encode("\uD545")}).to.throw(Error, "EncodingError U+D545");
expect(() => {ms932Encoder.encode("\uD546")}).to.throw(Error, "EncodingError U+D546");
expect(() => {ms932Encoder.encode("\uD547")}).to.throw(Error, "EncodingError U+D547");
expect(() => {ms932Encoder.encode("\uD548")}).to.throw(Error, "EncodingError U+D548");
expect(() => {ms932Encoder.encode("\uD549")}).to.throw(Error, "EncodingError U+D549");
expect(() => {ms932Encoder.encode("\uD54A")}).to.throw(Error, "EncodingError U+D54A");
expect(() => {ms932Encoder.encode("\uD54B")}).to.throw(Error, "EncodingError U+D54B");
expect(() => {ms932Encoder.encode("\uD54C")}).to.throw(Error, "EncodingError U+D54C");
expect(() => {ms932Encoder.encode("\uD54D")}).to.throw(Error, "EncodingError U+D54D");
expect(() => {ms932Encoder.encode("\uD54E")}).to.throw(Error, "EncodingError U+D54E");
expect(() => {ms932Encoder.encode("\uD54F")}).to.throw(Error, "EncodingError U+D54F");
expect(() => {ms932Encoder.encode("\uD550")}).to.throw(Error, "EncodingError U+D550");
expect(() => {ms932Encoder.encode("\uD551")}).to.throw(Error, "EncodingError U+D551");
expect(() => {ms932Encoder.encode("\uD552")}).to.throw(Error, "EncodingError U+D552");
expect(() => {ms932Encoder.encode("\uD553")}).to.throw(Error, "EncodingError U+D553");
expect(() => {ms932Encoder.encode("\uD554")}).to.throw(Error, "EncodingError U+D554");
expect(() => {ms932Encoder.encode("\uD555")}).to.throw(Error, "EncodingError U+D555");
expect(() => {ms932Encoder.encode("\uD556")}).to.throw(Error, "EncodingError U+D556");
expect(() => {ms932Encoder.encode("\uD557")}).to.throw(Error, "EncodingError U+D557");
expect(() => {ms932Encoder.encode("\uD558")}).to.throw(Error, "EncodingError U+D558");
expect(() => {ms932Encoder.encode("\uD559")}).to.throw(Error, "EncodingError U+D559");
expect(() => {ms932Encoder.encode("\uD55A")}).to.throw(Error, "EncodingError U+D55A");
expect(() => {ms932Encoder.encode("\uD55B")}).to.throw(Error, "EncodingError U+D55B");
expect(() => {ms932Encoder.encode("\uD55C")}).to.throw(Error, "EncodingError U+D55C");
expect(() => {ms932Encoder.encode("\uD55D")}).to.throw(Error, "EncodingError U+D55D");
expect(() => {ms932Encoder.encode("\uD55E")}).to.throw(Error, "EncodingError U+D55E");
expect(() => {ms932Encoder.encode("\uD55F")}).to.throw(Error, "EncodingError U+D55F");
expect(() => {ms932Encoder.encode("\uD560")}).to.throw(Error, "EncodingError U+D560");
expect(() => {ms932Encoder.encode("\uD561")}).to.throw(Error, "EncodingError U+D561");
expect(() => {ms932Encoder.encode("\uD562")}).to.throw(Error, "EncodingError U+D562");
expect(() => {ms932Encoder.encode("\uD563")}).to.throw(Error, "EncodingError U+D563");
expect(() => {ms932Encoder.encode("\uD564")}).to.throw(Error, "EncodingError U+D564");
expect(() => {ms932Encoder.encode("\uD565")}).to.throw(Error, "EncodingError U+D565");
expect(() => {ms932Encoder.encode("\uD566")}).to.throw(Error, "EncodingError U+D566");
expect(() => {ms932Encoder.encode("\uD567")}).to.throw(Error, "EncodingError U+D567");
expect(() => {ms932Encoder.encode("\uD568")}).to.throw(Error, "EncodingError U+D568");
expect(() => {ms932Encoder.encode("\uD569")}).to.throw(Error, "EncodingError U+D569");
expect(() => {ms932Encoder.encode("\uD56A")}).to.throw(Error, "EncodingError U+D56A");
expect(() => {ms932Encoder.encode("\uD56B")}).to.throw(Error, "EncodingError U+D56B");
expect(() => {ms932Encoder.encode("\uD56C")}).to.throw(Error, "EncodingError U+D56C");
expect(() => {ms932Encoder.encode("\uD56D")}).to.throw(Error, "EncodingError U+D56D");
expect(() => {ms932Encoder.encode("\uD56E")}).to.throw(Error, "EncodingError U+D56E");
expect(() => {ms932Encoder.encode("\uD56F")}).to.throw(Error, "EncodingError U+D56F");
expect(() => {ms932Encoder.encode("\uD570")}).to.throw(Error, "EncodingError U+D570");
expect(() => {ms932Encoder.encode("\uD571")}).to.throw(Error, "EncodingError U+D571");
expect(() => {ms932Encoder.encode("\uD572")}).to.throw(Error, "EncodingError U+D572");
expect(() => {ms932Encoder.encode("\uD573")}).to.throw(Error, "EncodingError U+D573");
expect(() => {ms932Encoder.encode("\uD574")}).to.throw(Error, "EncodingError U+D574");
expect(() => {ms932Encoder.encode("\uD575")}).to.throw(Error, "EncodingError U+D575");
expect(() => {ms932Encoder.encode("\uD576")}).to.throw(Error, "EncodingError U+D576");
expect(() => {ms932Encoder.encode("\uD577")}).to.throw(Error, "EncodingError U+D577");
expect(() => {ms932Encoder.encode("\uD578")}).to.throw(Error, "EncodingError U+D578");
expect(() => {ms932Encoder.encode("\uD579")}).to.throw(Error, "EncodingError U+D579");
expect(() => {ms932Encoder.encode("\uD57A")}).to.throw(Error, "EncodingError U+D57A");
expect(() => {ms932Encoder.encode("\uD57B")}).to.throw(Error, "EncodingError U+D57B");
expect(() => {ms932Encoder.encode("\uD57C")}).to.throw(Error, "EncodingError U+D57C");
expect(() => {ms932Encoder.encode("\uD57D")}).to.throw(Error, "EncodingError U+D57D");
expect(() => {ms932Encoder.encode("\uD57E")}).to.throw(Error, "EncodingError U+D57E");
expect(() => {ms932Encoder.encode("\uD57F")}).to.throw(Error, "EncodingError U+D57F");
expect(() => {ms932Encoder.encode("\uD580")}).to.throw(Error, "EncodingError U+D580");
expect(() => {ms932Encoder.encode("\uD581")}).to.throw(Error, "EncodingError U+D581");
expect(() => {ms932Encoder.encode("\uD582")}).to.throw(Error, "EncodingError U+D582");
expect(() => {ms932Encoder.encode("\uD583")}).to.throw(Error, "EncodingError U+D583");
expect(() => {ms932Encoder.encode("\uD584")}).to.throw(Error, "EncodingError U+D584");
expect(() => {ms932Encoder.encode("\uD585")}).to.throw(Error, "EncodingError U+D585");
expect(() => {ms932Encoder.encode("\uD586")}).to.throw(Error, "EncodingError U+D586");
expect(() => {ms932Encoder.encode("\uD587")}).to.throw(Error, "EncodingError U+D587");
expect(() => {ms932Encoder.encode("\uD588")}).to.throw(Error, "EncodingError U+D588");
expect(() => {ms932Encoder.encode("\uD589")}).to.throw(Error, "EncodingError U+D589");
expect(() => {ms932Encoder.encode("\uD58A")}).to.throw(Error, "EncodingError U+D58A");
expect(() => {ms932Encoder.encode("\uD58B")}).to.throw(Error, "EncodingError U+D58B");
expect(() => {ms932Encoder.encode("\uD58C")}).to.throw(Error, "EncodingError U+D58C");
expect(() => {ms932Encoder.encode("\uD58D")}).to.throw(Error, "EncodingError U+D58D");
expect(() => {ms932Encoder.encode("\uD58E")}).to.throw(Error, "EncodingError U+D58E");
expect(() => {ms932Encoder.encode("\uD58F")}).to.throw(Error, "EncodingError U+D58F");
expect(() => {ms932Encoder.encode("\uD590")}).to.throw(Error, "EncodingError U+D590");
expect(() => {ms932Encoder.encode("\uD591")}).to.throw(Error, "EncodingError U+D591");
expect(() => {ms932Encoder.encode("\uD592")}).to.throw(Error, "EncodingError U+D592");
expect(() => {ms932Encoder.encode("\uD593")}).to.throw(Error, "EncodingError U+D593");
expect(() => {ms932Encoder.encode("\uD594")}).to.throw(Error, "EncodingError U+D594");
expect(() => {ms932Encoder.encode("\uD595")}).to.throw(Error, "EncodingError U+D595");
expect(() => {ms932Encoder.encode("\uD596")}).to.throw(Error, "EncodingError U+D596");
expect(() => {ms932Encoder.encode("\uD597")}).to.throw(Error, "EncodingError U+D597");
expect(() => {ms932Encoder.encode("\uD598")}).to.throw(Error, "EncodingError U+D598");
expect(() => {ms932Encoder.encode("\uD599")}).to.throw(Error, "EncodingError U+D599");
expect(() => {ms932Encoder.encode("\uD59A")}).to.throw(Error, "EncodingError U+D59A");
expect(() => {ms932Encoder.encode("\uD59B")}).to.throw(Error, "EncodingError U+D59B");
expect(() => {ms932Encoder.encode("\uD59C")}).to.throw(Error, "EncodingError U+D59C");
expect(() => {ms932Encoder.encode("\uD59D")}).to.throw(Error, "EncodingError U+D59D");
expect(() => {ms932Encoder.encode("\uD59E")}).to.throw(Error, "EncodingError U+D59E");
expect(() => {ms932Encoder.encode("\uD59F")}).to.throw(Error, "EncodingError U+D59F");
expect(() => {ms932Encoder.encode("\uD5A0")}).to.throw(Error, "EncodingError U+D5A0");
expect(() => {ms932Encoder.encode("\uD5A1")}).to.throw(Error, "EncodingError U+D5A1");
expect(() => {ms932Encoder.encode("\uD5A2")}).to.throw(Error, "EncodingError U+D5A2");
expect(() => {ms932Encoder.encode("\uD5A3")}).to.throw(Error, "EncodingError U+D5A3");
expect(() => {ms932Encoder.encode("\uD5A4")}).to.throw(Error, "EncodingError U+D5A4");
expect(() => {ms932Encoder.encode("\uD5A5")}).to.throw(Error, "EncodingError U+D5A5");
expect(() => {ms932Encoder.encode("\uD5A6")}).to.throw(Error, "EncodingError U+D5A6");
expect(() => {ms932Encoder.encode("\uD5A7")}).to.throw(Error, "EncodingError U+D5A7");
expect(() => {ms932Encoder.encode("\uD5A8")}).to.throw(Error, "EncodingError U+D5A8");
expect(() => {ms932Encoder.encode("\uD5A9")}).to.throw(Error, "EncodingError U+D5A9");
expect(() => {ms932Encoder.encode("\uD5AA")}).to.throw(Error, "EncodingError U+D5AA");
expect(() => {ms932Encoder.encode("\uD5AB")}).to.throw(Error, "EncodingError U+D5AB");
expect(() => {ms932Encoder.encode("\uD5AC")}).to.throw(Error, "EncodingError U+D5AC");
expect(() => {ms932Encoder.encode("\uD5AD")}).to.throw(Error, "EncodingError U+D5AD");
expect(() => {ms932Encoder.encode("\uD5AE")}).to.throw(Error, "EncodingError U+D5AE");
expect(() => {ms932Encoder.encode("\uD5AF")}).to.throw(Error, "EncodingError U+D5AF");
expect(() => {ms932Encoder.encode("\uD5B0")}).to.throw(Error, "EncodingError U+D5B0");
expect(() => {ms932Encoder.encode("\uD5B1")}).to.throw(Error, "EncodingError U+D5B1");
expect(() => {ms932Encoder.encode("\uD5B2")}).to.throw(Error, "EncodingError U+D5B2");
expect(() => {ms932Encoder.encode("\uD5B3")}).to.throw(Error, "EncodingError U+D5B3");
expect(() => {ms932Encoder.encode("\uD5B4")}).to.throw(Error, "EncodingError U+D5B4");
expect(() => {ms932Encoder.encode("\uD5B5")}).to.throw(Error, "EncodingError U+D5B5");
expect(() => {ms932Encoder.encode("\uD5B6")}).to.throw(Error, "EncodingError U+D5B6");
expect(() => {ms932Encoder.encode("\uD5B7")}).to.throw(Error, "EncodingError U+D5B7");
expect(() => {ms932Encoder.encode("\uD5B8")}).to.throw(Error, "EncodingError U+D5B8");
expect(() => {ms932Encoder.encode("\uD5B9")}).to.throw(Error, "EncodingError U+D5B9");
expect(() => {ms932Encoder.encode("\uD5BA")}).to.throw(Error, "EncodingError U+D5BA");
expect(() => {ms932Encoder.encode("\uD5BB")}).to.throw(Error, "EncodingError U+D5BB");
expect(() => {ms932Encoder.encode("\uD5BC")}).to.throw(Error, "EncodingError U+D5BC");
expect(() => {ms932Encoder.encode("\uD5BD")}).to.throw(Error, "EncodingError U+D5BD");
expect(() => {ms932Encoder.encode("\uD5BE")}).to.throw(Error, "EncodingError U+D5BE");
expect(() => {ms932Encoder.encode("\uD5BF")}).to.throw(Error, "EncodingError U+D5BF");
expect(() => {ms932Encoder.encode("\uD5C0")}).to.throw(Error, "EncodingError U+D5C0");
expect(() => {ms932Encoder.encode("\uD5C1")}).to.throw(Error, "EncodingError U+D5C1");
expect(() => {ms932Encoder.encode("\uD5C2")}).to.throw(Error, "EncodingError U+D5C2");
expect(() => {ms932Encoder.encode("\uD5C3")}).to.throw(Error, "EncodingError U+D5C3");
expect(() => {ms932Encoder.encode("\uD5C4")}).to.throw(Error, "EncodingError U+D5C4");
expect(() => {ms932Encoder.encode("\uD5C5")}).to.throw(Error, "EncodingError U+D5C5");
expect(() => {ms932Encoder.encode("\uD5C6")}).to.throw(Error, "EncodingError U+D5C6");
expect(() => {ms932Encoder.encode("\uD5C7")}).to.throw(Error, "EncodingError U+D5C7");
expect(() => {ms932Encoder.encode("\uD5C8")}).to.throw(Error, "EncodingError U+D5C8");
expect(() => {ms932Encoder.encode("\uD5C9")}).to.throw(Error, "EncodingError U+D5C9");
expect(() => {ms932Encoder.encode("\uD5CA")}).to.throw(Error, "EncodingError U+D5CA");
expect(() => {ms932Encoder.encode("\uD5CB")}).to.throw(Error, "EncodingError U+D5CB");
expect(() => {ms932Encoder.encode("\uD5CC")}).to.throw(Error, "EncodingError U+D5CC");
expect(() => {ms932Encoder.encode("\uD5CD")}).to.throw(Error, "EncodingError U+D5CD");
expect(() => {ms932Encoder.encode("\uD5CE")}).to.throw(Error, "EncodingError U+D5CE");
expect(() => {ms932Encoder.encode("\uD5CF")}).to.throw(Error, "EncodingError U+D5CF");
expect(() => {ms932Encoder.encode("\uD5D0")}).to.throw(Error, "EncodingError U+D5D0");
expect(() => {ms932Encoder.encode("\uD5D1")}).to.throw(Error, "EncodingError U+D5D1");
expect(() => {ms932Encoder.encode("\uD5D2")}).to.throw(Error, "EncodingError U+D5D2");
expect(() => {ms932Encoder.encode("\uD5D3")}).to.throw(Error, "EncodingError U+D5D3");
expect(() => {ms932Encoder.encode("\uD5D4")}).to.throw(Error, "EncodingError U+D5D4");
expect(() => {ms932Encoder.encode("\uD5D5")}).to.throw(Error, "EncodingError U+D5D5");
expect(() => {ms932Encoder.encode("\uD5D6")}).to.throw(Error, "EncodingError U+D5D6");
expect(() => {ms932Encoder.encode("\uD5D7")}).to.throw(Error, "EncodingError U+D5D7");
expect(() => {ms932Encoder.encode("\uD5D8")}).to.throw(Error, "EncodingError U+D5D8");
expect(() => {ms932Encoder.encode("\uD5D9")}).to.throw(Error, "EncodingError U+D5D9");
expect(() => {ms932Encoder.encode("\uD5DA")}).to.throw(Error, "EncodingError U+D5DA");
expect(() => {ms932Encoder.encode("\uD5DB")}).to.throw(Error, "EncodingError U+D5DB");
expect(() => {ms932Encoder.encode("\uD5DC")}).to.throw(Error, "EncodingError U+D5DC");
expect(() => {ms932Encoder.encode("\uD5DD")}).to.throw(Error, "EncodingError U+D5DD");
expect(() => {ms932Encoder.encode("\uD5DE")}).to.throw(Error, "EncodingError U+D5DE");
expect(() => {ms932Encoder.encode("\uD5DF")}).to.throw(Error, "EncodingError U+D5DF");
expect(() => {ms932Encoder.encode("\uD5E0")}).to.throw(Error, "EncodingError U+D5E0");
expect(() => {ms932Encoder.encode("\uD5E1")}).to.throw(Error, "EncodingError U+D5E1");
expect(() => {ms932Encoder.encode("\uD5E2")}).to.throw(Error, "EncodingError U+D5E2");
expect(() => {ms932Encoder.encode("\uD5E3")}).to.throw(Error, "EncodingError U+D5E3");
expect(() => {ms932Encoder.encode("\uD5E4")}).to.throw(Error, "EncodingError U+D5E4");
expect(() => {ms932Encoder.encode("\uD5E5")}).to.throw(Error, "EncodingError U+D5E5");
expect(() => {ms932Encoder.encode("\uD5E6")}).to.throw(Error, "EncodingError U+D5E6");
expect(() => {ms932Encoder.encode("\uD5E7")}).to.throw(Error, "EncodingError U+D5E7");
expect(() => {ms932Encoder.encode("\uD5E8")}).to.throw(Error, "EncodingError U+D5E8");
expect(() => {ms932Encoder.encode("\uD5E9")}).to.throw(Error, "EncodingError U+D5E9");
expect(() => {ms932Encoder.encode("\uD5EA")}).to.throw(Error, "EncodingError U+D5EA");
expect(() => {ms932Encoder.encode("\uD5EB")}).to.throw(Error, "EncodingError U+D5EB");
expect(() => {ms932Encoder.encode("\uD5EC")}).to.throw(Error, "EncodingError U+D5EC");
expect(() => {ms932Encoder.encode("\uD5ED")}).to.throw(Error, "EncodingError U+D5ED");
expect(() => {ms932Encoder.encode("\uD5EE")}).to.throw(Error, "EncodingError U+D5EE");
expect(() => {ms932Encoder.encode("\uD5EF")}).to.throw(Error, "EncodingError U+D5EF");
expect(() => {ms932Encoder.encode("\uD5F0")}).to.throw(Error, "EncodingError U+D5F0");
expect(() => {ms932Encoder.encode("\uD5F1")}).to.throw(Error, "EncodingError U+D5F1");
expect(() => {ms932Encoder.encode("\uD5F2")}).to.throw(Error, "EncodingError U+D5F2");
expect(() => {ms932Encoder.encode("\uD5F3")}).to.throw(Error, "EncodingError U+D5F3");
expect(() => {ms932Encoder.encode("\uD5F4")}).to.throw(Error, "EncodingError U+D5F4");
expect(() => {ms932Encoder.encode("\uD5F5")}).to.throw(Error, "EncodingError U+D5F5");
expect(() => {ms932Encoder.encode("\uD5F6")}).to.throw(Error, "EncodingError U+D5F6");
expect(() => {ms932Encoder.encode("\uD5F7")}).to.throw(Error, "EncodingError U+D5F7");
expect(() => {ms932Encoder.encode("\uD5F8")}).to.throw(Error, "EncodingError U+D5F8");
expect(() => {ms932Encoder.encode("\uD5F9")}).to.throw(Error, "EncodingError U+D5F9");
expect(() => {ms932Encoder.encode("\uD5FA")}).to.throw(Error, "EncodingError U+D5FA");
expect(() => {ms932Encoder.encode("\uD5FB")}).to.throw(Error, "EncodingError U+D5FB");
expect(() => {ms932Encoder.encode("\uD5FC")}).to.throw(Error, "EncodingError U+D5FC");
expect(() => {ms932Encoder.encode("\uD5FD")}).to.throw(Error, "EncodingError U+D5FD");
expect(() => {ms932Encoder.encode("\uD5FE")}).to.throw(Error, "EncodingError U+D5FE");
expect(() => {ms932Encoder.encode("\uD5FF")}).to.throw(Error, "EncodingError U+D5FF");
expect(() => {ms932Encoder.encode("\uD600")}).to.throw(Error, "EncodingError U+D600");
expect(() => {ms932Encoder.encode("\uD601")}).to.throw(Error, "EncodingError U+D601");
expect(() => {ms932Encoder.encode("\uD602")}).to.throw(Error, "EncodingError U+D602");
expect(() => {ms932Encoder.encode("\uD603")}).to.throw(Error, "EncodingError U+D603");
expect(() => {ms932Encoder.encode("\uD604")}).to.throw(Error, "EncodingError U+D604");
expect(() => {ms932Encoder.encode("\uD605")}).to.throw(Error, "EncodingError U+D605");
expect(() => {ms932Encoder.encode("\uD606")}).to.throw(Error, "EncodingError U+D606");
expect(() => {ms932Encoder.encode("\uD607")}).to.throw(Error, "EncodingError U+D607");
expect(() => {ms932Encoder.encode("\uD608")}).to.throw(Error, "EncodingError U+D608");
expect(() => {ms932Encoder.encode("\uD609")}).to.throw(Error, "EncodingError U+D609");
expect(() => {ms932Encoder.encode("\uD60A")}).to.throw(Error, "EncodingError U+D60A");
expect(() => {ms932Encoder.encode("\uD60B")}).to.throw(Error, "EncodingError U+D60B");
expect(() => {ms932Encoder.encode("\uD60C")}).to.throw(Error, "EncodingError U+D60C");
expect(() => {ms932Encoder.encode("\uD60D")}).to.throw(Error, "EncodingError U+D60D");
expect(() => {ms932Encoder.encode("\uD60E")}).to.throw(Error, "EncodingError U+D60E");
expect(() => {ms932Encoder.encode("\uD60F")}).to.throw(Error, "EncodingError U+D60F");
expect(() => {ms932Encoder.encode("\uD610")}).to.throw(Error, "EncodingError U+D610");
expect(() => {ms932Encoder.encode("\uD611")}).to.throw(Error, "EncodingError U+D611");
expect(() => {ms932Encoder.encode("\uD612")}).to.throw(Error, "EncodingError U+D612");
expect(() => {ms932Encoder.encode("\uD613")}).to.throw(Error, "EncodingError U+D613");
expect(() => {ms932Encoder.encode("\uD614")}).to.throw(Error, "EncodingError U+D614");
expect(() => {ms932Encoder.encode("\uD615")}).to.throw(Error, "EncodingError U+D615");
expect(() => {ms932Encoder.encode("\uD616")}).to.throw(Error, "EncodingError U+D616");
expect(() => {ms932Encoder.encode("\uD617")}).to.throw(Error, "EncodingError U+D617");
expect(() => {ms932Encoder.encode("\uD618")}).to.throw(Error, "EncodingError U+D618");
expect(() => {ms932Encoder.encode("\uD619")}).to.throw(Error, "EncodingError U+D619");
expect(() => {ms932Encoder.encode("\uD61A")}).to.throw(Error, "EncodingError U+D61A");
expect(() => {ms932Encoder.encode("\uD61B")}).to.throw(Error, "EncodingError U+D61B");
expect(() => {ms932Encoder.encode("\uD61C")}).to.throw(Error, "EncodingError U+D61C");
expect(() => {ms932Encoder.encode("\uD61D")}).to.throw(Error, "EncodingError U+D61D");
expect(() => {ms932Encoder.encode("\uD61E")}).to.throw(Error, "EncodingError U+D61E");
expect(() => {ms932Encoder.encode("\uD61F")}).to.throw(Error, "EncodingError U+D61F");
expect(() => {ms932Encoder.encode("\uD620")}).to.throw(Error, "EncodingError U+D620");
expect(() => {ms932Encoder.encode("\uD621")}).to.throw(Error, "EncodingError U+D621");
expect(() => {ms932Encoder.encode("\uD622")}).to.throw(Error, "EncodingError U+D622");
expect(() => {ms932Encoder.encode("\uD623")}).to.throw(Error, "EncodingError U+D623");
expect(() => {ms932Encoder.encode("\uD624")}).to.throw(Error, "EncodingError U+D624");
expect(() => {ms932Encoder.encode("\uD625")}).to.throw(Error, "EncodingError U+D625");
expect(() => {ms932Encoder.encode("\uD626")}).to.throw(Error, "EncodingError U+D626");
expect(() => {ms932Encoder.encode("\uD627")}).to.throw(Error, "EncodingError U+D627");
expect(() => {ms932Encoder.encode("\uD628")}).to.throw(Error, "EncodingError U+D628");
expect(() => {ms932Encoder.encode("\uD629")}).to.throw(Error, "EncodingError U+D629");
expect(() => {ms932Encoder.encode("\uD62A")}).to.throw(Error, "EncodingError U+D62A");
expect(() => {ms932Encoder.encode("\uD62B")}).to.throw(Error, "EncodingError U+D62B");
expect(() => {ms932Encoder.encode("\uD62C")}).to.throw(Error, "EncodingError U+D62C");
expect(() => {ms932Encoder.encode("\uD62D")}).to.throw(Error, "EncodingError U+D62D");
expect(() => {ms932Encoder.encode("\uD62E")}).to.throw(Error, "EncodingError U+D62E");
expect(() => {ms932Encoder.encode("\uD62F")}).to.throw(Error, "EncodingError U+D62F");
expect(() => {ms932Encoder.encode("\uD630")}).to.throw(Error, "EncodingError U+D630");
expect(() => {ms932Encoder.encode("\uD631")}).to.throw(Error, "EncodingError U+D631");
expect(() => {ms932Encoder.encode("\uD632")}).to.throw(Error, "EncodingError U+D632");
expect(() => {ms932Encoder.encode("\uD633")}).to.throw(Error, "EncodingError U+D633");
expect(() => {ms932Encoder.encode("\uD634")}).to.throw(Error, "EncodingError U+D634");
expect(() => {ms932Encoder.encode("\uD635")}).to.throw(Error, "EncodingError U+D635");
expect(() => {ms932Encoder.encode("\uD636")}).to.throw(Error, "EncodingError U+D636");
expect(() => {ms932Encoder.encode("\uD637")}).to.throw(Error, "EncodingError U+D637");
expect(() => {ms932Encoder.encode("\uD638")}).to.throw(Error, "EncodingError U+D638");
expect(() => {ms932Encoder.encode("\uD639")}).to.throw(Error, "EncodingError U+D639");
expect(() => {ms932Encoder.encode("\uD63A")}).to.throw(Error, "EncodingError U+D63A");
expect(() => {ms932Encoder.encode("\uD63B")}).to.throw(Error, "EncodingError U+D63B");
expect(() => {ms932Encoder.encode("\uD63C")}).to.throw(Error, "EncodingError U+D63C");
expect(() => {ms932Encoder.encode("\uD63D")}).to.throw(Error, "EncodingError U+D63D");
expect(() => {ms932Encoder.encode("\uD63E")}).to.throw(Error, "EncodingError U+D63E");
expect(() => {ms932Encoder.encode("\uD63F")}).to.throw(Error, "EncodingError U+D63F");
expect(() => {ms932Encoder.encode("\uD640")}).to.throw(Error, "EncodingError U+D640");
expect(() => {ms932Encoder.encode("\uD641")}).to.throw(Error, "EncodingError U+D641");
expect(() => {ms932Encoder.encode("\uD642")}).to.throw(Error, "EncodingError U+D642");
expect(() => {ms932Encoder.encode("\uD643")}).to.throw(Error, "EncodingError U+D643");
expect(() => {ms932Encoder.encode("\uD644")}).to.throw(Error, "EncodingError U+D644");
expect(() => {ms932Encoder.encode("\uD645")}).to.throw(Error, "EncodingError U+D645");
expect(() => {ms932Encoder.encode("\uD646")}).to.throw(Error, "EncodingError U+D646");
expect(() => {ms932Encoder.encode("\uD647")}).to.throw(Error, "EncodingError U+D647");
expect(() => {ms932Encoder.encode("\uD648")}).to.throw(Error, "EncodingError U+D648");
expect(() => {ms932Encoder.encode("\uD649")}).to.throw(Error, "EncodingError U+D649");
expect(() => {ms932Encoder.encode("\uD64A")}).to.throw(Error, "EncodingError U+D64A");
expect(() => {ms932Encoder.encode("\uD64B")}).to.throw(Error, "EncodingError U+D64B");
expect(() => {ms932Encoder.encode("\uD64C")}).to.throw(Error, "EncodingError U+D64C");
expect(() => {ms932Encoder.encode("\uD64D")}).to.throw(Error, "EncodingError U+D64D");
expect(() => {ms932Encoder.encode("\uD64E")}).to.throw(Error, "EncodingError U+D64E");
expect(() => {ms932Encoder.encode("\uD64F")}).to.throw(Error, "EncodingError U+D64F");
expect(() => {ms932Encoder.encode("\uD650")}).to.throw(Error, "EncodingError U+D650");
expect(() => {ms932Encoder.encode("\uD651")}).to.throw(Error, "EncodingError U+D651");
expect(() => {ms932Encoder.encode("\uD652")}).to.throw(Error, "EncodingError U+D652");
expect(() => {ms932Encoder.encode("\uD653")}).to.throw(Error, "EncodingError U+D653");
expect(() => {ms932Encoder.encode("\uD654")}).to.throw(Error, "EncodingError U+D654");
expect(() => {ms932Encoder.encode("\uD655")}).to.throw(Error, "EncodingError U+D655");
expect(() => {ms932Encoder.encode("\uD656")}).to.throw(Error, "EncodingError U+D656");
expect(() => {ms932Encoder.encode("\uD657")}).to.throw(Error, "EncodingError U+D657");
expect(() => {ms932Encoder.encode("\uD658")}).to.throw(Error, "EncodingError U+D658");
expect(() => {ms932Encoder.encode("\uD659")}).to.throw(Error, "EncodingError U+D659");
expect(() => {ms932Encoder.encode("\uD65A")}).to.throw(Error, "EncodingError U+D65A");
expect(() => {ms932Encoder.encode("\uD65B")}).to.throw(Error, "EncodingError U+D65B");
expect(() => {ms932Encoder.encode("\uD65C")}).to.throw(Error, "EncodingError U+D65C");
expect(() => {ms932Encoder.encode("\uD65D")}).to.throw(Error, "EncodingError U+D65D");
expect(() => {ms932Encoder.encode("\uD65E")}).to.throw(Error, "EncodingError U+D65E");
expect(() => {ms932Encoder.encode("\uD65F")}).to.throw(Error, "EncodingError U+D65F");
expect(() => {ms932Encoder.encode("\uD660")}).to.throw(Error, "EncodingError U+D660");
expect(() => {ms932Encoder.encode("\uD661")}).to.throw(Error, "EncodingError U+D661");
expect(() => {ms932Encoder.encode("\uD662")}).to.throw(Error, "EncodingError U+D662");
expect(() => {ms932Encoder.encode("\uD663")}).to.throw(Error, "EncodingError U+D663");
expect(() => {ms932Encoder.encode("\uD664")}).to.throw(Error, "EncodingError U+D664");
expect(() => {ms932Encoder.encode("\uD665")}).to.throw(Error, "EncodingError U+D665");
expect(() => {ms932Encoder.encode("\uD666")}).to.throw(Error, "EncodingError U+D666");
expect(() => {ms932Encoder.encode("\uD667")}).to.throw(Error, "EncodingError U+D667");
expect(() => {ms932Encoder.encode("\uD668")}).to.throw(Error, "EncodingError U+D668");
expect(() => {ms932Encoder.encode("\uD669")}).to.throw(Error, "EncodingError U+D669");
expect(() => {ms932Encoder.encode("\uD66A")}).to.throw(Error, "EncodingError U+D66A");
expect(() => {ms932Encoder.encode("\uD66B")}).to.throw(Error, "EncodingError U+D66B");
expect(() => {ms932Encoder.encode("\uD66C")}).to.throw(Error, "EncodingError U+D66C");
expect(() => {ms932Encoder.encode("\uD66D")}).to.throw(Error, "EncodingError U+D66D");
expect(() => {ms932Encoder.encode("\uD66E")}).to.throw(Error, "EncodingError U+D66E");
expect(() => {ms932Encoder.encode("\uD66F")}).to.throw(Error, "EncodingError U+D66F");
expect(() => {ms932Encoder.encode("\uD670")}).to.throw(Error, "EncodingError U+D670");
expect(() => {ms932Encoder.encode("\uD671")}).to.throw(Error, "EncodingError U+D671");
expect(() => {ms932Encoder.encode("\uD672")}).to.throw(Error, "EncodingError U+D672");
expect(() => {ms932Encoder.encode("\uD673")}).to.throw(Error, "EncodingError U+D673");
expect(() => {ms932Encoder.encode("\uD674")}).to.throw(Error, "EncodingError U+D674");
expect(() => {ms932Encoder.encode("\uD675")}).to.throw(Error, "EncodingError U+D675");
expect(() => {ms932Encoder.encode("\uD676")}).to.throw(Error, "EncodingError U+D676");
expect(() => {ms932Encoder.encode("\uD677")}).to.throw(Error, "EncodingError U+D677");
expect(() => {ms932Encoder.encode("\uD678")}).to.throw(Error, "EncodingError U+D678");
expect(() => {ms932Encoder.encode("\uD679")}).to.throw(Error, "EncodingError U+D679");
expect(() => {ms932Encoder.encode("\uD67A")}).to.throw(Error, "EncodingError U+D67A");
expect(() => {ms932Encoder.encode("\uD67B")}).to.throw(Error, "EncodingError U+D67B");
expect(() => {ms932Encoder.encode("\uD67C")}).to.throw(Error, "EncodingError U+D67C");
expect(() => {ms932Encoder.encode("\uD67D")}).to.throw(Error, "EncodingError U+D67D");
expect(() => {ms932Encoder.encode("\uD67E")}).to.throw(Error, "EncodingError U+D67E");
expect(() => {ms932Encoder.encode("\uD67F")}).to.throw(Error, "EncodingError U+D67F");
expect(() => {ms932Encoder.encode("\uD680")}).to.throw(Error, "EncodingError U+D680");
expect(() => {ms932Encoder.encode("\uD681")}).to.throw(Error, "EncodingError U+D681");
expect(() => {ms932Encoder.encode("\uD682")}).to.throw(Error, "EncodingError U+D682");
expect(() => {ms932Encoder.encode("\uD683")}).to.throw(Error, "EncodingError U+D683");
expect(() => {ms932Encoder.encode("\uD684")}).to.throw(Error, "EncodingError U+D684");
expect(() => {ms932Encoder.encode("\uD685")}).to.throw(Error, "EncodingError U+D685");
expect(() => {ms932Encoder.encode("\uD686")}).to.throw(Error, "EncodingError U+D686");
expect(() => {ms932Encoder.encode("\uD687")}).to.throw(Error, "EncodingError U+D687");
expect(() => {ms932Encoder.encode("\uD688")}).to.throw(Error, "EncodingError U+D688");
expect(() => {ms932Encoder.encode("\uD689")}).to.throw(Error, "EncodingError U+D689");
expect(() => {ms932Encoder.encode("\uD68A")}).to.throw(Error, "EncodingError U+D68A");
expect(() => {ms932Encoder.encode("\uD68B")}).to.throw(Error, "EncodingError U+D68B");
expect(() => {ms932Encoder.encode("\uD68C")}).to.throw(Error, "EncodingError U+D68C");
expect(() => {ms932Encoder.encode("\uD68D")}).to.throw(Error, "EncodingError U+D68D");
expect(() => {ms932Encoder.encode("\uD68E")}).to.throw(Error, "EncodingError U+D68E");
expect(() => {ms932Encoder.encode("\uD68F")}).to.throw(Error, "EncodingError U+D68F");
expect(() => {ms932Encoder.encode("\uD690")}).to.throw(Error, "EncodingError U+D690");
expect(() => {ms932Encoder.encode("\uD691")}).to.throw(Error, "EncodingError U+D691");
expect(() => {ms932Encoder.encode("\uD692")}).to.throw(Error, "EncodingError U+D692");
expect(() => {ms932Encoder.encode("\uD693")}).to.throw(Error, "EncodingError U+D693");
expect(() => {ms932Encoder.encode("\uD694")}).to.throw(Error, "EncodingError U+D694");
expect(() => {ms932Encoder.encode("\uD695")}).to.throw(Error, "EncodingError U+D695");
expect(() => {ms932Encoder.encode("\uD696")}).to.throw(Error, "EncodingError U+D696");
expect(() => {ms932Encoder.encode("\uD697")}).to.throw(Error, "EncodingError U+D697");
expect(() => {ms932Encoder.encode("\uD698")}).to.throw(Error, "EncodingError U+D698");
expect(() => {ms932Encoder.encode("\uD699")}).to.throw(Error, "EncodingError U+D699");
expect(() => {ms932Encoder.encode("\uD69A")}).to.throw(Error, "EncodingError U+D69A");
expect(() => {ms932Encoder.encode("\uD69B")}).to.throw(Error, "EncodingError U+D69B");
expect(() => {ms932Encoder.encode("\uD69C")}).to.throw(Error, "EncodingError U+D69C");
expect(() => {ms932Encoder.encode("\uD69D")}).to.throw(Error, "EncodingError U+D69D");
expect(() => {ms932Encoder.encode("\uD69E")}).to.throw(Error, "EncodingError U+D69E");
expect(() => {ms932Encoder.encode("\uD69F")}).to.throw(Error, "EncodingError U+D69F");
expect(() => {ms932Encoder.encode("\uD6A0")}).to.throw(Error, "EncodingError U+D6A0");
expect(() => {ms932Encoder.encode("\uD6A1")}).to.throw(Error, "EncodingError U+D6A1");
expect(() => {ms932Encoder.encode("\uD6A2")}).to.throw(Error, "EncodingError U+D6A2");
expect(() => {ms932Encoder.encode("\uD6A3")}).to.throw(Error, "EncodingError U+D6A3");
expect(() => {ms932Encoder.encode("\uD6A4")}).to.throw(Error, "EncodingError U+D6A4");
expect(() => {ms932Encoder.encode("\uD6A5")}).to.throw(Error, "EncodingError U+D6A5");
expect(() => {ms932Encoder.encode("\uD6A6")}).to.throw(Error, "EncodingError U+D6A6");
expect(() => {ms932Encoder.encode("\uD6A7")}).to.throw(Error, "EncodingError U+D6A7");
expect(() => {ms932Encoder.encode("\uD6A8")}).to.throw(Error, "EncodingError U+D6A8");
expect(() => {ms932Encoder.encode("\uD6A9")}).to.throw(Error, "EncodingError U+D6A9");
expect(() => {ms932Encoder.encode("\uD6AA")}).to.throw(Error, "EncodingError U+D6AA");
expect(() => {ms932Encoder.encode("\uD6AB")}).to.throw(Error, "EncodingError U+D6AB");
expect(() => {ms932Encoder.encode("\uD6AC")}).to.throw(Error, "EncodingError U+D6AC");
expect(() => {ms932Encoder.encode("\uD6AD")}).to.throw(Error, "EncodingError U+D6AD");
expect(() => {ms932Encoder.encode("\uD6AE")}).to.throw(Error, "EncodingError U+D6AE");
expect(() => {ms932Encoder.encode("\uD6AF")}).to.throw(Error, "EncodingError U+D6AF");
expect(() => {ms932Encoder.encode("\uD6B0")}).to.throw(Error, "EncodingError U+D6B0");
expect(() => {ms932Encoder.encode("\uD6B1")}).to.throw(Error, "EncodingError U+D6B1");
expect(() => {ms932Encoder.encode("\uD6B2")}).to.throw(Error, "EncodingError U+D6B2");
expect(() => {ms932Encoder.encode("\uD6B3")}).to.throw(Error, "EncodingError U+D6B3");
expect(() => {ms932Encoder.encode("\uD6B4")}).to.throw(Error, "EncodingError U+D6B4");
expect(() => {ms932Encoder.encode("\uD6B5")}).to.throw(Error, "EncodingError U+D6B5");
expect(() => {ms932Encoder.encode("\uD6B6")}).to.throw(Error, "EncodingError U+D6B6");
expect(() => {ms932Encoder.encode("\uD6B7")}).to.throw(Error, "EncodingError U+D6B7");
expect(() => {ms932Encoder.encode("\uD6B8")}).to.throw(Error, "EncodingError U+D6B8");
expect(() => {ms932Encoder.encode("\uD6B9")}).to.throw(Error, "EncodingError U+D6B9");
expect(() => {ms932Encoder.encode("\uD6BA")}).to.throw(Error, "EncodingError U+D6BA");
expect(() => {ms932Encoder.encode("\uD6BB")}).to.throw(Error, "EncodingError U+D6BB");
expect(() => {ms932Encoder.encode("\uD6BC")}).to.throw(Error, "EncodingError U+D6BC");
expect(() => {ms932Encoder.encode("\uD6BD")}).to.throw(Error, "EncodingError U+D6BD");
expect(() => {ms932Encoder.encode("\uD6BE")}).to.throw(Error, "EncodingError U+D6BE");
expect(() => {ms932Encoder.encode("\uD6BF")}).to.throw(Error, "EncodingError U+D6BF");
expect(() => {ms932Encoder.encode("\uD6C0")}).to.throw(Error, "EncodingError U+D6C0");
expect(() => {ms932Encoder.encode("\uD6C1")}).to.throw(Error, "EncodingError U+D6C1");
expect(() => {ms932Encoder.encode("\uD6C2")}).to.throw(Error, "EncodingError U+D6C2");
expect(() => {ms932Encoder.encode("\uD6C3")}).to.throw(Error, "EncodingError U+D6C3");
expect(() => {ms932Encoder.encode("\uD6C4")}).to.throw(Error, "EncodingError U+D6C4");
expect(() => {ms932Encoder.encode("\uD6C5")}).to.throw(Error, "EncodingError U+D6C5");
expect(() => {ms932Encoder.encode("\uD6C6")}).to.throw(Error, "EncodingError U+D6C6");
expect(() => {ms932Encoder.encode("\uD6C7")}).to.throw(Error, "EncodingError U+D6C7");
expect(() => {ms932Encoder.encode("\uD6C8")}).to.throw(Error, "EncodingError U+D6C8");
expect(() => {ms932Encoder.encode("\uD6C9")}).to.throw(Error, "EncodingError U+D6C9");
expect(() => {ms932Encoder.encode("\uD6CA")}).to.throw(Error, "EncodingError U+D6CA");
expect(() => {ms932Encoder.encode("\uD6CB")}).to.throw(Error, "EncodingError U+D6CB");
expect(() => {ms932Encoder.encode("\uD6CC")}).to.throw(Error, "EncodingError U+D6CC");
expect(() => {ms932Encoder.encode("\uD6CD")}).to.throw(Error, "EncodingError U+D6CD");
expect(() => {ms932Encoder.encode("\uD6CE")}).to.throw(Error, "EncodingError U+D6CE");
expect(() => {ms932Encoder.encode("\uD6CF")}).to.throw(Error, "EncodingError U+D6CF");
expect(() => {ms932Encoder.encode("\uD6D0")}).to.throw(Error, "EncodingError U+D6D0");
expect(() => {ms932Encoder.encode("\uD6D1")}).to.throw(Error, "EncodingError U+D6D1");
expect(() => {ms932Encoder.encode("\uD6D2")}).to.throw(Error, "EncodingError U+D6D2");
expect(() => {ms932Encoder.encode("\uD6D3")}).to.throw(Error, "EncodingError U+D6D3");
expect(() => {ms932Encoder.encode("\uD6D4")}).to.throw(Error, "EncodingError U+D6D4");
expect(() => {ms932Encoder.encode("\uD6D5")}).to.throw(Error, "EncodingError U+D6D5");
expect(() => {ms932Encoder.encode("\uD6D6")}).to.throw(Error, "EncodingError U+D6D6");
expect(() => {ms932Encoder.encode("\uD6D7")}).to.throw(Error, "EncodingError U+D6D7");
expect(() => {ms932Encoder.encode("\uD6D8")}).to.throw(Error, "EncodingError U+D6D8");
expect(() => {ms932Encoder.encode("\uD6D9")}).to.throw(Error, "EncodingError U+D6D9");
expect(() => {ms932Encoder.encode("\uD6DA")}).to.throw(Error, "EncodingError U+D6DA");
expect(() => {ms932Encoder.encode("\uD6DB")}).to.throw(Error, "EncodingError U+D6DB");
expect(() => {ms932Encoder.encode("\uD6DC")}).to.throw(Error, "EncodingError U+D6DC");
expect(() => {ms932Encoder.encode("\uD6DD")}).to.throw(Error, "EncodingError U+D6DD");
expect(() => {ms932Encoder.encode("\uD6DE")}).to.throw(Error, "EncodingError U+D6DE");
expect(() => {ms932Encoder.encode("\uD6DF")}).to.throw(Error, "EncodingError U+D6DF");
expect(() => {ms932Encoder.encode("\uD6E0")}).to.throw(Error, "EncodingError U+D6E0");
expect(() => {ms932Encoder.encode("\uD6E1")}).to.throw(Error, "EncodingError U+D6E1");
expect(() => {ms932Encoder.encode("\uD6E2")}).to.throw(Error, "EncodingError U+D6E2");
expect(() => {ms932Encoder.encode("\uD6E3")}).to.throw(Error, "EncodingError U+D6E3");
expect(() => {ms932Encoder.encode("\uD6E4")}).to.throw(Error, "EncodingError U+D6E4");
expect(() => {ms932Encoder.encode("\uD6E5")}).to.throw(Error, "EncodingError U+D6E5");
expect(() => {ms932Encoder.encode("\uD6E6")}).to.throw(Error, "EncodingError U+D6E6");
expect(() => {ms932Encoder.encode("\uD6E7")}).to.throw(Error, "EncodingError U+D6E7");
expect(() => {ms932Encoder.encode("\uD6E8")}).to.throw(Error, "EncodingError U+D6E8");
expect(() => {ms932Encoder.encode("\uD6E9")}).to.throw(Error, "EncodingError U+D6E9");
expect(() => {ms932Encoder.encode("\uD6EA")}).to.throw(Error, "EncodingError U+D6EA");
expect(() => {ms932Encoder.encode("\uD6EB")}).to.throw(Error, "EncodingError U+D6EB");
expect(() => {ms932Encoder.encode("\uD6EC")}).to.throw(Error, "EncodingError U+D6EC");
expect(() => {ms932Encoder.encode("\uD6ED")}).to.throw(Error, "EncodingError U+D6ED");
expect(() => {ms932Encoder.encode("\uD6EE")}).to.throw(Error, "EncodingError U+D6EE");
expect(() => {ms932Encoder.encode("\uD6EF")}).to.throw(Error, "EncodingError U+D6EF");
expect(() => {ms932Encoder.encode("\uD6F0")}).to.throw(Error, "EncodingError U+D6F0");
expect(() => {ms932Encoder.encode("\uD6F1")}).to.throw(Error, "EncodingError U+D6F1");
expect(() => {ms932Encoder.encode("\uD6F2")}).to.throw(Error, "EncodingError U+D6F2");
expect(() => {ms932Encoder.encode("\uD6F3")}).to.throw(Error, "EncodingError U+D6F3");
expect(() => {ms932Encoder.encode("\uD6F4")}).to.throw(Error, "EncodingError U+D6F4");
expect(() => {ms932Encoder.encode("\uD6F5")}).to.throw(Error, "EncodingError U+D6F5");
expect(() => {ms932Encoder.encode("\uD6F6")}).to.throw(Error, "EncodingError U+D6F6");
expect(() => {ms932Encoder.encode("\uD6F7")}).to.throw(Error, "EncodingError U+D6F7");
expect(() => {ms932Encoder.encode("\uD6F8")}).to.throw(Error, "EncodingError U+D6F8");
expect(() => {ms932Encoder.encode("\uD6F9")}).to.throw(Error, "EncodingError U+D6F9");
expect(() => {ms932Encoder.encode("\uD6FA")}).to.throw(Error, "EncodingError U+D6FA");
expect(() => {ms932Encoder.encode("\uD6FB")}).to.throw(Error, "EncodingError U+D6FB");
expect(() => {ms932Encoder.encode("\uD6FC")}).to.throw(Error, "EncodingError U+D6FC");
expect(() => {ms932Encoder.encode("\uD6FD")}).to.throw(Error, "EncodingError U+D6FD");
expect(() => {ms932Encoder.encode("\uD6FE")}).to.throw(Error, "EncodingError U+D6FE");
expect(() => {ms932Encoder.encode("\uD6FF")}).to.throw(Error, "EncodingError U+D6FF");
expect(() => {ms932Encoder.encode("\uD700")}).to.throw(Error, "EncodingError U+D700");
expect(() => {ms932Encoder.encode("\uD701")}).to.throw(Error, "EncodingError U+D701");
expect(() => {ms932Encoder.encode("\uD702")}).to.throw(Error, "EncodingError U+D702");
expect(() => {ms932Encoder.encode("\uD703")}).to.throw(Error, "EncodingError U+D703");
expect(() => {ms932Encoder.encode("\uD704")}).to.throw(Error, "EncodingError U+D704");
expect(() => {ms932Encoder.encode("\uD705")}).to.throw(Error, "EncodingError U+D705");
expect(() => {ms932Encoder.encode("\uD706")}).to.throw(Error, "EncodingError U+D706");
expect(() => {ms932Encoder.encode("\uD707")}).to.throw(Error, "EncodingError U+D707");
expect(() => {ms932Encoder.encode("\uD708")}).to.throw(Error, "EncodingError U+D708");
expect(() => {ms932Encoder.encode("\uD709")}).to.throw(Error, "EncodingError U+D709");
expect(() => {ms932Encoder.encode("\uD70A")}).to.throw(Error, "EncodingError U+D70A");
expect(() => {ms932Encoder.encode("\uD70B")}).to.throw(Error, "EncodingError U+D70B");
expect(() => {ms932Encoder.encode("\uD70C")}).to.throw(Error, "EncodingError U+D70C");
expect(() => {ms932Encoder.encode("\uD70D")}).to.throw(Error, "EncodingError U+D70D");
expect(() => {ms932Encoder.encode("\uD70E")}).to.throw(Error, "EncodingError U+D70E");
expect(() => {ms932Encoder.encode("\uD70F")}).to.throw(Error, "EncodingError U+D70F");
expect(() => {ms932Encoder.encode("\uD710")}).to.throw(Error, "EncodingError U+D710");
expect(() => {ms932Encoder.encode("\uD711")}).to.throw(Error, "EncodingError U+D711");
expect(() => {ms932Encoder.encode("\uD712")}).to.throw(Error, "EncodingError U+D712");
expect(() => {ms932Encoder.encode("\uD713")}).to.throw(Error, "EncodingError U+D713");
expect(() => {ms932Encoder.encode("\uD714")}).to.throw(Error, "EncodingError U+D714");
expect(() => {ms932Encoder.encode("\uD715")}).to.throw(Error, "EncodingError U+D715");
expect(() => {ms932Encoder.encode("\uD716")}).to.throw(Error, "EncodingError U+D716");
expect(() => {ms932Encoder.encode("\uD717")}).to.throw(Error, "EncodingError U+D717");
expect(() => {ms932Encoder.encode("\uD718")}).to.throw(Error, "EncodingError U+D718");
expect(() => {ms932Encoder.encode("\uD719")}).to.throw(Error, "EncodingError U+D719");
expect(() => {ms932Encoder.encode("\uD71A")}).to.throw(Error, "EncodingError U+D71A");
expect(() => {ms932Encoder.encode("\uD71B")}).to.throw(Error, "EncodingError U+D71B");
expect(() => {ms932Encoder.encode("\uD71C")}).to.throw(Error, "EncodingError U+D71C");
expect(() => {ms932Encoder.encode("\uD71D")}).to.throw(Error, "EncodingError U+D71D");
expect(() => {ms932Encoder.encode("\uD71E")}).to.throw(Error, "EncodingError U+D71E");
expect(() => {ms932Encoder.encode("\uD71F")}).to.throw(Error, "EncodingError U+D71F");
expect(() => {ms932Encoder.encode("\uD720")}).to.throw(Error, "EncodingError U+D720");
expect(() => {ms932Encoder.encode("\uD721")}).to.throw(Error, "EncodingError U+D721");
expect(() => {ms932Encoder.encode("\uD722")}).to.throw(Error, "EncodingError U+D722");
expect(() => {ms932Encoder.encode("\uD723")}).to.throw(Error, "EncodingError U+D723");
expect(() => {ms932Encoder.encode("\uD724")}).to.throw(Error, "EncodingError U+D724");
expect(() => {ms932Encoder.encode("\uD725")}).to.throw(Error, "EncodingError U+D725");
expect(() => {ms932Encoder.encode("\uD726")}).to.throw(Error, "EncodingError U+D726");
expect(() => {ms932Encoder.encode("\uD727")}).to.throw(Error, "EncodingError U+D727");
expect(() => {ms932Encoder.encode("\uD728")}).to.throw(Error, "EncodingError U+D728");
expect(() => {ms932Encoder.encode("\uD729")}).to.throw(Error, "EncodingError U+D729");
expect(() => {ms932Encoder.encode("\uD72A")}).to.throw(Error, "EncodingError U+D72A");
expect(() => {ms932Encoder.encode("\uD72B")}).to.throw(Error, "EncodingError U+D72B");
expect(() => {ms932Encoder.encode("\uD72C")}).to.throw(Error, "EncodingError U+D72C");
expect(() => {ms932Encoder.encode("\uD72D")}).to.throw(Error, "EncodingError U+D72D");
expect(() => {ms932Encoder.encode("\uD72E")}).to.throw(Error, "EncodingError U+D72E");
expect(() => {ms932Encoder.encode("\uD72F")}).to.throw(Error, "EncodingError U+D72F");
expect(() => {ms932Encoder.encode("\uD730")}).to.throw(Error, "EncodingError U+D730");
expect(() => {ms932Encoder.encode("\uD731")}).to.throw(Error, "EncodingError U+D731");
expect(() => {ms932Encoder.encode("\uD732")}).to.throw(Error, "EncodingError U+D732");
expect(() => {ms932Encoder.encode("\uD733")}).to.throw(Error, "EncodingError U+D733");
expect(() => {ms932Encoder.encode("\uD734")}).to.throw(Error, "EncodingError U+D734");
expect(() => {ms932Encoder.encode("\uD735")}).to.throw(Error, "EncodingError U+D735");
expect(() => {ms932Encoder.encode("\uD736")}).to.throw(Error, "EncodingError U+D736");
expect(() => {ms932Encoder.encode("\uD737")}).to.throw(Error, "EncodingError U+D737");
expect(() => {ms932Encoder.encode("\uD738")}).to.throw(Error, "EncodingError U+D738");
expect(() => {ms932Encoder.encode("\uD739")}).to.throw(Error, "EncodingError U+D739");
expect(() => {ms932Encoder.encode("\uD73A")}).to.throw(Error, "EncodingError U+D73A");
expect(() => {ms932Encoder.encode("\uD73B")}).to.throw(Error, "EncodingError U+D73B");
expect(() => {ms932Encoder.encode("\uD73C")}).to.throw(Error, "EncodingError U+D73C");
expect(() => {ms932Encoder.encode("\uD73D")}).to.throw(Error, "EncodingError U+D73D");
expect(() => {ms932Encoder.encode("\uD73E")}).to.throw(Error, "EncodingError U+D73E");
expect(() => {ms932Encoder.encode("\uD73F")}).to.throw(Error, "EncodingError U+D73F");
expect(() => {ms932Encoder.encode("\uD740")}).to.throw(Error, "EncodingError U+D740");
expect(() => {ms932Encoder.encode("\uD741")}).to.throw(Error, "EncodingError U+D741");
expect(() => {ms932Encoder.encode("\uD742")}).to.throw(Error, "EncodingError U+D742");
expect(() => {ms932Encoder.encode("\uD743")}).to.throw(Error, "EncodingError U+D743");
expect(() => {ms932Encoder.encode("\uD744")}).to.throw(Error, "EncodingError U+D744");
expect(() => {ms932Encoder.encode("\uD745")}).to.throw(Error, "EncodingError U+D745");
expect(() => {ms932Encoder.encode("\uD746")}).to.throw(Error, "EncodingError U+D746");
expect(() => {ms932Encoder.encode("\uD747")}).to.throw(Error, "EncodingError U+D747");
expect(() => {ms932Encoder.encode("\uD748")}).to.throw(Error, "EncodingError U+D748");
expect(() => {ms932Encoder.encode("\uD749")}).to.throw(Error, "EncodingError U+D749");
expect(() => {ms932Encoder.encode("\uD74A")}).to.throw(Error, "EncodingError U+D74A");
expect(() => {ms932Encoder.encode("\uD74B")}).to.throw(Error, "EncodingError U+D74B");
expect(() => {ms932Encoder.encode("\uD74C")}).to.throw(Error, "EncodingError U+D74C");
expect(() => {ms932Encoder.encode("\uD74D")}).to.throw(Error, "EncodingError U+D74D");
expect(() => {ms932Encoder.encode("\uD74E")}).to.throw(Error, "EncodingError U+D74E");
expect(() => {ms932Encoder.encode("\uD74F")}).to.throw(Error, "EncodingError U+D74F");
expect(() => {ms932Encoder.encode("\uD750")}).to.throw(Error, "EncodingError U+D750");
expect(() => {ms932Encoder.encode("\uD751")}).to.throw(Error, "EncodingError U+D751");
expect(() => {ms932Encoder.encode("\uD752")}).to.throw(Error, "EncodingError U+D752");
expect(() => {ms932Encoder.encode("\uD753")}).to.throw(Error, "EncodingError U+D753");
expect(() => {ms932Encoder.encode("\uD754")}).to.throw(Error, "EncodingError U+D754");
expect(() => {ms932Encoder.encode("\uD755")}).to.throw(Error, "EncodingError U+D755");
expect(() => {ms932Encoder.encode("\uD756")}).to.throw(Error, "EncodingError U+D756");
expect(() => {ms932Encoder.encode("\uD757")}).to.throw(Error, "EncodingError U+D757");
expect(() => {ms932Encoder.encode("\uD758")}).to.throw(Error, "EncodingError U+D758");
expect(() => {ms932Encoder.encode("\uD759")}).to.throw(Error, "EncodingError U+D759");
expect(() => {ms932Encoder.encode("\uD75A")}).to.throw(Error, "EncodingError U+D75A");
expect(() => {ms932Encoder.encode("\uD75B")}).to.throw(Error, "EncodingError U+D75B");
expect(() => {ms932Encoder.encode("\uD75C")}).to.throw(Error, "EncodingError U+D75C");
expect(() => {ms932Encoder.encode("\uD75D")}).to.throw(Error, "EncodingError U+D75D");
expect(() => {ms932Encoder.encode("\uD75E")}).to.throw(Error, "EncodingError U+D75E");
expect(() => {ms932Encoder.encode("\uD75F")}).to.throw(Error, "EncodingError U+D75F");
expect(() => {ms932Encoder.encode("\uD760")}).to.throw(Error, "EncodingError U+D760");
expect(() => {ms932Encoder.encode("\uD761")}).to.throw(Error, "EncodingError U+D761");
expect(() => {ms932Encoder.encode("\uD762")}).to.throw(Error, "EncodingError U+D762");
expect(() => {ms932Encoder.encode("\uD763")}).to.throw(Error, "EncodingError U+D763");
expect(() => {ms932Encoder.encode("\uD764")}).to.throw(Error, "EncodingError U+D764");
expect(() => {ms932Encoder.encode("\uD765")}).to.throw(Error, "EncodingError U+D765");
expect(() => {ms932Encoder.encode("\uD766")}).to.throw(Error, "EncodingError U+D766");
expect(() => {ms932Encoder.encode("\uD767")}).to.throw(Error, "EncodingError U+D767");
expect(() => {ms932Encoder.encode("\uD768")}).to.throw(Error, "EncodingError U+D768");
expect(() => {ms932Encoder.encode("\uD769")}).to.throw(Error, "EncodingError U+D769");
expect(() => {ms932Encoder.encode("\uD76A")}).to.throw(Error, "EncodingError U+D76A");
expect(() => {ms932Encoder.encode("\uD76B")}).to.throw(Error, "EncodingError U+D76B");
expect(() => {ms932Encoder.encode("\uD76C")}).to.throw(Error, "EncodingError U+D76C");
expect(() => {ms932Encoder.encode("\uD76D")}).to.throw(Error, "EncodingError U+D76D");
expect(() => {ms932Encoder.encode("\uD76E")}).to.throw(Error, "EncodingError U+D76E");
expect(() => {ms932Encoder.encode("\uD76F")}).to.throw(Error, "EncodingError U+D76F");
expect(() => {ms932Encoder.encode("\uD770")}).to.throw(Error, "EncodingError U+D770");
expect(() => {ms932Encoder.encode("\uD771")}).to.throw(Error, "EncodingError U+D771");
expect(() => {ms932Encoder.encode("\uD772")}).to.throw(Error, "EncodingError U+D772");
expect(() => {ms932Encoder.encode("\uD773")}).to.throw(Error, "EncodingError U+D773");
expect(() => {ms932Encoder.encode("\uD774")}).to.throw(Error, "EncodingError U+D774");
expect(() => {ms932Encoder.encode("\uD775")}).to.throw(Error, "EncodingError U+D775");
expect(() => {ms932Encoder.encode("\uD776")}).to.throw(Error, "EncodingError U+D776");
expect(() => {ms932Encoder.encode("\uD777")}).to.throw(Error, "EncodingError U+D777");
expect(() => {ms932Encoder.encode("\uD778")}).to.throw(Error, "EncodingError U+D778");
expect(() => {ms932Encoder.encode("\uD779")}).to.throw(Error, "EncodingError U+D779");
expect(() => {ms932Encoder.encode("\uD77A")}).to.throw(Error, "EncodingError U+D77A");
expect(() => {ms932Encoder.encode("\uD77B")}).to.throw(Error, "EncodingError U+D77B");
expect(() => {ms932Encoder.encode("\uD77C")}).to.throw(Error, "EncodingError U+D77C");
expect(() => {ms932Encoder.encode("\uD77D")}).to.throw(Error, "EncodingError U+D77D");
expect(() => {ms932Encoder.encode("\uD77E")}).to.throw(Error, "EncodingError U+D77E");
expect(() => {ms932Encoder.encode("\uD77F")}).to.throw(Error, "EncodingError U+D77F");
expect(() => {ms932Encoder.encode("\uD780")}).to.throw(Error, "EncodingError U+D780");
expect(() => {ms932Encoder.encode("\uD781")}).to.throw(Error, "EncodingError U+D781");
expect(() => {ms932Encoder.encode("\uD782")}).to.throw(Error, "EncodingError U+D782");
expect(() => {ms932Encoder.encode("\uD783")}).to.throw(Error, "EncodingError U+D783");
expect(() => {ms932Encoder.encode("\uD784")}).to.throw(Error, "EncodingError U+D784");
expect(() => {ms932Encoder.encode("\uD785")}).to.throw(Error, "EncodingError U+D785");
expect(() => {ms932Encoder.encode("\uD786")}).to.throw(Error, "EncodingError U+D786");
expect(() => {ms932Encoder.encode("\uD787")}).to.throw(Error, "EncodingError U+D787");
expect(() => {ms932Encoder.encode("\uD788")}).to.throw(Error, "EncodingError U+D788");
expect(() => {ms932Encoder.encode("\uD789")}).to.throw(Error, "EncodingError U+D789");
expect(() => {ms932Encoder.encode("\uD78A")}).to.throw(Error, "EncodingError U+D78A");
expect(() => {ms932Encoder.encode("\uD78B")}).to.throw(Error, "EncodingError U+D78B");
expect(() => {ms932Encoder.encode("\uD78C")}).to.throw(Error, "EncodingError U+D78C");
expect(() => {ms932Encoder.encode("\uD78D")}).to.throw(Error, "EncodingError U+D78D");
expect(() => {ms932Encoder.encode("\uD78E")}).to.throw(Error, "EncodingError U+D78E");
expect(() => {ms932Encoder.encode("\uD78F")}).to.throw(Error, "EncodingError U+D78F");
expect(() => {ms932Encoder.encode("\uD790")}).to.throw(Error, "EncodingError U+D790");
expect(() => {ms932Encoder.encode("\uD791")}).to.throw(Error, "EncodingError U+D791");
expect(() => {ms932Encoder.encode("\uD792")}).to.throw(Error, "EncodingError U+D792");
expect(() => {ms932Encoder.encode("\uD793")}).to.throw(Error, "EncodingError U+D793");
expect(() => {ms932Encoder.encode("\uD794")}).to.throw(Error, "EncodingError U+D794");
expect(() => {ms932Encoder.encode("\uD795")}).to.throw(Error, "EncodingError U+D795");
expect(() => {ms932Encoder.encode("\uD796")}).to.throw(Error, "EncodingError U+D796");
expect(() => {ms932Encoder.encode("\uD797")}).to.throw(Error, "EncodingError U+D797");
expect(() => {ms932Encoder.encode("\uD798")}).to.throw(Error, "EncodingError U+D798");
expect(() => {ms932Encoder.encode("\uD799")}).to.throw(Error, "EncodingError U+D799");
expect(() => {ms932Encoder.encode("\uD79A")}).to.throw(Error, "EncodingError U+D79A");
expect(() => {ms932Encoder.encode("\uD79B")}).to.throw(Error, "EncodingError U+D79B");
expect(() => {ms932Encoder.encode("\uD79C")}).to.throw(Error, "EncodingError U+D79C");
expect(() => {ms932Encoder.encode("\uD79D")}).to.throw(Error, "EncodingError U+D79D");
expect(() => {ms932Encoder.encode("\uD79E")}).to.throw(Error, "EncodingError U+D79E");
expect(() => {ms932Encoder.encode("\uD79F")}).to.throw(Error, "EncodingError U+D79F");
expect(() => {ms932Encoder.encode("\uD7A0")}).to.throw(Error, "EncodingError U+D7A0");
expect(() => {ms932Encoder.encode("\uD7A1")}).to.throw(Error, "EncodingError U+D7A1");
expect(() => {ms932Encoder.encode("\uD7A2")}).to.throw(Error, "EncodingError U+D7A2");
expect(() => {ms932Encoder.encode("\uD7A3")}).to.throw(Error, "EncodingError U+D7A3");
expect(() => {ms932Encoder.encode("\uD7A4")}).to.throw(Error, "EncodingError U+D7A4");
expect(() => {ms932Encoder.encode("\uD7A5")}).to.throw(Error, "EncodingError U+D7A5");
expect(() => {ms932Encoder.encode("\uD7A6")}).to.throw(Error, "EncodingError U+D7A6");
expect(() => {ms932Encoder.encode("\uD7A7")}).to.throw(Error, "EncodingError U+D7A7");
expect(() => {ms932Encoder.encode("\uD7A8")}).to.throw(Error, "EncodingError U+D7A8");
expect(() => {ms932Encoder.encode("\uD7A9")}).to.throw(Error, "EncodingError U+D7A9");
expect(() => {ms932Encoder.encode("\uD7AA")}).to.throw(Error, "EncodingError U+D7AA");
expect(() => {ms932Encoder.encode("\uD7AB")}).to.throw(Error, "EncodingError U+D7AB");
expect(() => {ms932Encoder.encode("\uD7AC")}).to.throw(Error, "EncodingError U+D7AC");
expect(() => {ms932Encoder.encode("\uD7AD")}).to.throw(Error, "EncodingError U+D7AD");
expect(() => {ms932Encoder.encode("\uD7AE")}).to.throw(Error, "EncodingError U+D7AE");
expect(() => {ms932Encoder.encode("\uD7AF")}).to.throw(Error, "EncodingError U+D7AF");
expect(() => {ms932Encoder.encode("\uD7B0")}).to.throw(Error, "EncodingError U+D7B0");
expect(() => {ms932Encoder.encode("\uD7B1")}).to.throw(Error, "EncodingError U+D7B1");
expect(() => {ms932Encoder.encode("\uD7B2")}).to.throw(Error, "EncodingError U+D7B2");
expect(() => {ms932Encoder.encode("\uD7B3")}).to.throw(Error, "EncodingError U+D7B3");
expect(() => {ms932Encoder.encode("\uD7B4")}).to.throw(Error, "EncodingError U+D7B4");
expect(() => {ms932Encoder.encode("\uD7B5")}).to.throw(Error, "EncodingError U+D7B5");
expect(() => {ms932Encoder.encode("\uD7B6")}).to.throw(Error, "EncodingError U+D7B6");
expect(() => {ms932Encoder.encode("\uD7B7")}).to.throw(Error, "EncodingError U+D7B7");
expect(() => {ms932Encoder.encode("\uD7B8")}).to.throw(Error, "EncodingError U+D7B8");
expect(() => {ms932Encoder.encode("\uD7B9")}).to.throw(Error, "EncodingError U+D7B9");
expect(() => {ms932Encoder.encode("\uD7BA")}).to.throw(Error, "EncodingError U+D7BA");
expect(() => {ms932Encoder.encode("\uD7BB")}).to.throw(Error, "EncodingError U+D7BB");
expect(() => {ms932Encoder.encode("\uD7BC")}).to.throw(Error, "EncodingError U+D7BC");
expect(() => {ms932Encoder.encode("\uD7BD")}).to.throw(Error, "EncodingError U+D7BD");
expect(() => {ms932Encoder.encode("\uD7BE")}).to.throw(Error, "EncodingError U+D7BE");
expect(() => {ms932Encoder.encode("\uD7BF")}).to.throw(Error, "EncodingError U+D7BF");
expect(() => {ms932Encoder.encode("\uD7C0")}).to.throw(Error, "EncodingError U+D7C0");
expect(() => {ms932Encoder.encode("\uD7C1")}).to.throw(Error, "EncodingError U+D7C1");
expect(() => {ms932Encoder.encode("\uD7C2")}).to.throw(Error, "EncodingError U+D7C2");
expect(() => {ms932Encoder.encode("\uD7C3")}).to.throw(Error, "EncodingError U+D7C3");
expect(() => {ms932Encoder.encode("\uD7C4")}).to.throw(Error, "EncodingError U+D7C4");
expect(() => {ms932Encoder.encode("\uD7C5")}).to.throw(Error, "EncodingError U+D7C5");
expect(() => {ms932Encoder.encode("\uD7C6")}).to.throw(Error, "EncodingError U+D7C6");
expect(() => {ms932Encoder.encode("\uD7C7")}).to.throw(Error, "EncodingError U+D7C7");
expect(() => {ms932Encoder.encode("\uD7C8")}).to.throw(Error, "EncodingError U+D7C8");
expect(() => {ms932Encoder.encode("\uD7C9")}).to.throw(Error, "EncodingError U+D7C9");
expect(() => {ms932Encoder.encode("\uD7CA")}).to.throw(Error, "EncodingError U+D7CA");
expect(() => {ms932Encoder.encode("\uD7CB")}).to.throw(Error, "EncodingError U+D7CB");
expect(() => {ms932Encoder.encode("\uD7CC")}).to.throw(Error, "EncodingError U+D7CC");
expect(() => {ms932Encoder.encode("\uD7CD")}).to.throw(Error, "EncodingError U+D7CD");
expect(() => {ms932Encoder.encode("\uD7CE")}).to.throw(Error, "EncodingError U+D7CE");
expect(() => {ms932Encoder.encode("\uD7CF")}).to.throw(Error, "EncodingError U+D7CF");
expect(() => {ms932Encoder.encode("\uD7D0")}).to.throw(Error, "EncodingError U+D7D0");
expect(() => {ms932Encoder.encode("\uD7D1")}).to.throw(Error, "EncodingError U+D7D1");
expect(() => {ms932Encoder.encode("\uD7D2")}).to.throw(Error, "EncodingError U+D7D2");
expect(() => {ms932Encoder.encode("\uD7D3")}).to.throw(Error, "EncodingError U+D7D3");
expect(() => {ms932Encoder.encode("\uD7D4")}).to.throw(Error, "EncodingError U+D7D4");
expect(() => {ms932Encoder.encode("\uD7D5")}).to.throw(Error, "EncodingError U+D7D5");
expect(() => {ms932Encoder.encode("\uD7D6")}).to.throw(Error, "EncodingError U+D7D6");
expect(() => {ms932Encoder.encode("\uD7D7")}).to.throw(Error, "EncodingError U+D7D7");
expect(() => {ms932Encoder.encode("\uD7D8")}).to.throw(Error, "EncodingError U+D7D8");
expect(() => {ms932Encoder.encode("\uD7D9")}).to.throw(Error, "EncodingError U+D7D9");
expect(() => {ms932Encoder.encode("\uD7DA")}).to.throw(Error, "EncodingError U+D7DA");
expect(() => {ms932Encoder.encode("\uD7DB")}).to.throw(Error, "EncodingError U+D7DB");
expect(() => {ms932Encoder.encode("\uD7DC")}).to.throw(Error, "EncodingError U+D7DC");
expect(() => {ms932Encoder.encode("\uD7DD")}).to.throw(Error, "EncodingError U+D7DD");
expect(() => {ms932Encoder.encode("\uD7DE")}).to.throw(Error, "EncodingError U+D7DE");
expect(() => {ms932Encoder.encode("\uD7DF")}).to.throw(Error, "EncodingError U+D7DF");
expect(() => {ms932Encoder.encode("\uD7E0")}).to.throw(Error, "EncodingError U+D7E0");
expect(() => {ms932Encoder.encode("\uD7E1")}).to.throw(Error, "EncodingError U+D7E1");
expect(() => {ms932Encoder.encode("\uD7E2")}).to.throw(Error, "EncodingError U+D7E2");
expect(() => {ms932Encoder.encode("\uD7E3")}).to.throw(Error, "EncodingError U+D7E3");
expect(() => {ms932Encoder.encode("\uD7E4")}).to.throw(Error, "EncodingError U+D7E4");
expect(() => {ms932Encoder.encode("\uD7E5")}).to.throw(Error, "EncodingError U+D7E5");
expect(() => {ms932Encoder.encode("\uD7E6")}).to.throw(Error, "EncodingError U+D7E6");
expect(() => {ms932Encoder.encode("\uD7E7")}).to.throw(Error, "EncodingError U+D7E7");
expect(() => {ms932Encoder.encode("\uD7E8")}).to.throw(Error, "EncodingError U+D7E8");
expect(() => {ms932Encoder.encode("\uD7E9")}).to.throw(Error, "EncodingError U+D7E9");
expect(() => {ms932Encoder.encode("\uD7EA")}).to.throw(Error, "EncodingError U+D7EA");
expect(() => {ms932Encoder.encode("\uD7EB")}).to.throw(Error, "EncodingError U+D7EB");
expect(() => {ms932Encoder.encode("\uD7EC")}).to.throw(Error, "EncodingError U+D7EC");
expect(() => {ms932Encoder.encode("\uD7ED")}).to.throw(Error, "EncodingError U+D7ED");
expect(() => {ms932Encoder.encode("\uD7EE")}).to.throw(Error, "EncodingError U+D7EE");
expect(() => {ms932Encoder.encode("\uD7EF")}).to.throw(Error, "EncodingError U+D7EF");
expect(() => {ms932Encoder.encode("\uD7F0")}).to.throw(Error, "EncodingError U+D7F0");
expect(() => {ms932Encoder.encode("\uD7F1")}).to.throw(Error, "EncodingError U+D7F1");
expect(() => {ms932Encoder.encode("\uD7F2")}).to.throw(Error, "EncodingError U+D7F2");
expect(() => {ms932Encoder.encode("\uD7F3")}).to.throw(Error, "EncodingError U+D7F3");
expect(() => {ms932Encoder.encode("\uD7F4")}).to.throw(Error, "EncodingError U+D7F4");
expect(() => {ms932Encoder.encode("\uD7F5")}).to.throw(Error, "EncodingError U+D7F5");
expect(() => {ms932Encoder.encode("\uD7F6")}).to.throw(Error, "EncodingError U+D7F6");
expect(() => {ms932Encoder.encode("\uD7F7")}).to.throw(Error, "EncodingError U+D7F7");
expect(() => {ms932Encoder.encode("\uD7F8")}).to.throw(Error, "EncodingError U+D7F8");
expect(() => {ms932Encoder.encode("\uD7F9")}).to.throw(Error, "EncodingError U+D7F9");
expect(() => {ms932Encoder.encode("\uD7FA")}).to.throw(Error, "EncodingError U+D7FA");
expect(() => {ms932Encoder.encode("\uD7FB")}).to.throw(Error, "EncodingError U+D7FB");
expect(() => {ms932Encoder.encode("\uD7FC")}).to.throw(Error, "EncodingError U+D7FC");
expect(() => {ms932Encoder.encode("\uD7FD")}).to.throw(Error, "EncodingError U+D7FD");
expect(() => {ms932Encoder.encode("\uD7FE")}).to.throw(Error, "EncodingError U+D7FE");
expect(() => {ms932Encoder.encode("\uD7FF")}).to.throw(Error, "EncodingError U+D7FF");
expect(() => {ms932Encoder.encode("\uD800")}).to.throw(Error, "EncodingError U+D800");
expect(() => {ms932Encoder.encode("\uD801")}).to.throw(Error, "EncodingError U+D801");
expect(() => {ms932Encoder.encode("\uD802")}).to.throw(Error, "EncodingError U+D802");
expect(() => {ms932Encoder.encode("\uD803")}).to.throw(Error, "EncodingError U+D803");
expect(() => {ms932Encoder.encode("\uD804")}).to.throw(Error, "EncodingError U+D804");
expect(() => {ms932Encoder.encode("\uD805")}).to.throw(Error, "EncodingError U+D805");
expect(() => {ms932Encoder.encode("\uD806")}).to.throw(Error, "EncodingError U+D806");
expect(() => {ms932Encoder.encode("\uD807")}).to.throw(Error, "EncodingError U+D807");
expect(() => {ms932Encoder.encode("\uD808")}).to.throw(Error, "EncodingError U+D808");
expect(() => {ms932Encoder.encode("\uD809")}).to.throw(Error, "EncodingError U+D809");
expect(() => {ms932Encoder.encode("\uD80A")}).to.throw(Error, "EncodingError U+D80A");
expect(() => {ms932Encoder.encode("\uD80B")}).to.throw(Error, "EncodingError U+D80B");
expect(() => {ms932Encoder.encode("\uD80C")}).to.throw(Error, "EncodingError U+D80C");
expect(() => {ms932Encoder.encode("\uD80D")}).to.throw(Error, "EncodingError U+D80D");
expect(() => {ms932Encoder.encode("\uD80E")}).to.throw(Error, "EncodingError U+D80E");
expect(() => {ms932Encoder.encode("\uD80F")}).to.throw(Error, "EncodingError U+D80F");
expect(() => {ms932Encoder.encode("\uD810")}).to.throw(Error, "EncodingError U+D810");
expect(() => {ms932Encoder.encode("\uD811")}).to.throw(Error, "EncodingError U+D811");
expect(() => {ms932Encoder.encode("\uD812")}).to.throw(Error, "EncodingError U+D812");
expect(() => {ms932Encoder.encode("\uD813")}).to.throw(Error, "EncodingError U+D813");
expect(() => {ms932Encoder.encode("\uD814")}).to.throw(Error, "EncodingError U+D814");
expect(() => {ms932Encoder.encode("\uD815")}).to.throw(Error, "EncodingError U+D815");
expect(() => {ms932Encoder.encode("\uD816")}).to.throw(Error, "EncodingError U+D816");
expect(() => {ms932Encoder.encode("\uD817")}).to.throw(Error, "EncodingError U+D817");
expect(() => {ms932Encoder.encode("\uD818")}).to.throw(Error, "EncodingError U+D818");
expect(() => {ms932Encoder.encode("\uD819")}).to.throw(Error, "EncodingError U+D819");
expect(() => {ms932Encoder.encode("\uD81A")}).to.throw(Error, "EncodingError U+D81A");
expect(() => {ms932Encoder.encode("\uD81B")}).to.throw(Error, "EncodingError U+D81B");
expect(() => {ms932Encoder.encode("\uD81C")}).to.throw(Error, "EncodingError U+D81C");
expect(() => {ms932Encoder.encode("\uD81D")}).to.throw(Error, "EncodingError U+D81D");
expect(() => {ms932Encoder.encode("\uD81E")}).to.throw(Error, "EncodingError U+D81E");
expect(() => {ms932Encoder.encode("\uD81F")}).to.throw(Error, "EncodingError U+D81F");
expect(() => {ms932Encoder.encode("\uD820")}).to.throw(Error, "EncodingError U+D820");
expect(() => {ms932Encoder.encode("\uD821")}).to.throw(Error, "EncodingError U+D821");
expect(() => {ms932Encoder.encode("\uD822")}).to.throw(Error, "EncodingError U+D822");
expect(() => {ms932Encoder.encode("\uD823")}).to.throw(Error, "EncodingError U+D823");
expect(() => {ms932Encoder.encode("\uD824")}).to.throw(Error, "EncodingError U+D824");
expect(() => {ms932Encoder.encode("\uD825")}).to.throw(Error, "EncodingError U+D825");
expect(() => {ms932Encoder.encode("\uD826")}).to.throw(Error, "EncodingError U+D826");
expect(() => {ms932Encoder.encode("\uD827")}).to.throw(Error, "EncodingError U+D827");
expect(() => {ms932Encoder.encode("\uD828")}).to.throw(Error, "EncodingError U+D828");
expect(() => {ms932Encoder.encode("\uD829")}).to.throw(Error, "EncodingError U+D829");
expect(() => {ms932Encoder.encode("\uD82A")}).to.throw(Error, "EncodingError U+D82A");
expect(() => {ms932Encoder.encode("\uD82B")}).to.throw(Error, "EncodingError U+D82B");
expect(() => {ms932Encoder.encode("\uD82C")}).to.throw(Error, "EncodingError U+D82C");
expect(() => {ms932Encoder.encode("\uD82D")}).to.throw(Error, "EncodingError U+D82D");
expect(() => {ms932Encoder.encode("\uD82E")}).to.throw(Error, "EncodingError U+D82E");
expect(() => {ms932Encoder.encode("\uD82F")}).to.throw(Error, "EncodingError U+D82F");
expect(() => {ms932Encoder.encode("\uD830")}).to.throw(Error, "EncodingError U+D830");
expect(() => {ms932Encoder.encode("\uD831")}).to.throw(Error, "EncodingError U+D831");
expect(() => {ms932Encoder.encode("\uD832")}).to.throw(Error, "EncodingError U+D832");
expect(() => {ms932Encoder.encode("\uD833")}).to.throw(Error, "EncodingError U+D833");
expect(() => {ms932Encoder.encode("\uD834")}).to.throw(Error, "EncodingError U+D834");
expect(() => {ms932Encoder.encode("\uD835")}).to.throw(Error, "EncodingError U+D835");
expect(() => {ms932Encoder.encode("\uD836")}).to.throw(Error, "EncodingError U+D836");
expect(() => {ms932Encoder.encode("\uD837")}).to.throw(Error, "EncodingError U+D837");
expect(() => {ms932Encoder.encode("\uD838")}).to.throw(Error, "EncodingError U+D838");
expect(() => {ms932Encoder.encode("\uD839")}).to.throw(Error, "EncodingError U+D839");
expect(() => {ms932Encoder.encode("\uD83A")}).to.throw(Error, "EncodingError U+D83A");
expect(() => {ms932Encoder.encode("\uD83B")}).to.throw(Error, "EncodingError U+D83B");
expect(() => {ms932Encoder.encode("\uD83C")}).to.throw(Error, "EncodingError U+D83C");
expect(() => {ms932Encoder.encode("\uD83D")}).to.throw(Error, "EncodingError U+D83D");
expect(() => {ms932Encoder.encode("\uD83E")}).to.throw(Error, "EncodingError U+D83E");
expect(() => {ms932Encoder.encode("\uD83F")}).to.throw(Error, "EncodingError U+D83F");
expect(() => {ms932Encoder.encode("\uD840")}).to.throw(Error, "EncodingError U+D840");
expect(() => {ms932Encoder.encode("\uD841")}).to.throw(Error, "EncodingError U+D841");
expect(() => {ms932Encoder.encode("\uD842")}).to.throw(Error, "EncodingError U+D842");
expect(() => {ms932Encoder.encode("\uD843")}).to.throw(Error, "EncodingError U+D843");
expect(() => {ms932Encoder.encode("\uD844")}).to.throw(Error, "EncodingError U+D844");
expect(() => {ms932Encoder.encode("\uD845")}).to.throw(Error, "EncodingError U+D845");
expect(() => {ms932Encoder.encode("\uD846")}).to.throw(Error, "EncodingError U+D846");
expect(() => {ms932Encoder.encode("\uD847")}).to.throw(Error, "EncodingError U+D847");
expect(() => {ms932Encoder.encode("\uD848")}).to.throw(Error, "EncodingError U+D848");
expect(() => {ms932Encoder.encode("\uD849")}).to.throw(Error, "EncodingError U+D849");
expect(() => {ms932Encoder.encode("\uD84A")}).to.throw(Error, "EncodingError U+D84A");
expect(() => {ms932Encoder.encode("\uD84B")}).to.throw(Error, "EncodingError U+D84B");
expect(() => {ms932Encoder.encode("\uD84C")}).to.throw(Error, "EncodingError U+D84C");
expect(() => {ms932Encoder.encode("\uD84D")}).to.throw(Error, "EncodingError U+D84D");
expect(() => {ms932Encoder.encode("\uD84E")}).to.throw(Error, "EncodingError U+D84E");
expect(() => {ms932Encoder.encode("\uD84F")}).to.throw(Error, "EncodingError U+D84F");
expect(() => {ms932Encoder.encode("\uD850")}).to.throw(Error, "EncodingError U+D850");
expect(() => {ms932Encoder.encode("\uD851")}).to.throw(Error, "EncodingError U+D851");
expect(() => {ms932Encoder.encode("\uD852")}).to.throw(Error, "EncodingError U+D852");
expect(() => {ms932Encoder.encode("\uD853")}).to.throw(Error, "EncodingError U+D853");
expect(() => {ms932Encoder.encode("\uD854")}).to.throw(Error, "EncodingError U+D854");
expect(() => {ms932Encoder.encode("\uD855")}).to.throw(Error, "EncodingError U+D855");
expect(() => {ms932Encoder.encode("\uD856")}).to.throw(Error, "EncodingError U+D856");
expect(() => {ms932Encoder.encode("\uD857")}).to.throw(Error, "EncodingError U+D857");
expect(() => {ms932Encoder.encode("\uD858")}).to.throw(Error, "EncodingError U+D858");
expect(() => {ms932Encoder.encode("\uD859")}).to.throw(Error, "EncodingError U+D859");
expect(() => {ms932Encoder.encode("\uD85A")}).to.throw(Error, "EncodingError U+D85A");
expect(() => {ms932Encoder.encode("\uD85B")}).to.throw(Error, "EncodingError U+D85B");
expect(() => {ms932Encoder.encode("\uD85C")}).to.throw(Error, "EncodingError U+D85C");
expect(() => {ms932Encoder.encode("\uD85D")}).to.throw(Error, "EncodingError U+D85D");
expect(() => {ms932Encoder.encode("\uD85E")}).to.throw(Error, "EncodingError U+D85E");
expect(() => {ms932Encoder.encode("\uD85F")}).to.throw(Error, "EncodingError U+D85F");
expect(() => {ms932Encoder.encode("\uD860")}).to.throw(Error, "EncodingError U+D860");
expect(() => {ms932Encoder.encode("\uD861")}).to.throw(Error, "EncodingError U+D861");
expect(() => {ms932Encoder.encode("\uD862")}).to.throw(Error, "EncodingError U+D862");
expect(() => {ms932Encoder.encode("\uD863")}).to.throw(Error, "EncodingError U+D863");
expect(() => {ms932Encoder.encode("\uD864")}).to.throw(Error, "EncodingError U+D864");
expect(() => {ms932Encoder.encode("\uD865")}).to.throw(Error, "EncodingError U+D865");
expect(() => {ms932Encoder.encode("\uD866")}).to.throw(Error, "EncodingError U+D866");
expect(() => {ms932Encoder.encode("\uD867")}).to.throw(Error, "EncodingError U+D867");
expect(() => {ms932Encoder.encode("\uD868")}).to.throw(Error, "EncodingError U+D868");
expect(() => {ms932Encoder.encode("\uD869")}).to.throw(Error, "EncodingError U+D869");
expect(() => {ms932Encoder.encode("\uD86A")}).to.throw(Error, "EncodingError U+D86A");
expect(() => {ms932Encoder.encode("\uD86B")}).to.throw(Error, "EncodingError U+D86B");
expect(() => {ms932Encoder.encode("\uD86C")}).to.throw(Error, "EncodingError U+D86C");
expect(() => {ms932Encoder.encode("\uD86D")}).to.throw(Error, "EncodingError U+D86D");
expect(() => {ms932Encoder.encode("\uD86E")}).to.throw(Error, "EncodingError U+D86E");
expect(() => {ms932Encoder.encode("\uD86F")}).to.throw(Error, "EncodingError U+D86F");
expect(() => {ms932Encoder.encode("\uD870")}).to.throw(Error, "EncodingError U+D870");
expect(() => {ms932Encoder.encode("\uD871")}).to.throw(Error, "EncodingError U+D871");
expect(() => {ms932Encoder.encode("\uD872")}).to.throw(Error, "EncodingError U+D872");
expect(() => {ms932Encoder.encode("\uD873")}).to.throw(Error, "EncodingError U+D873");
expect(() => {ms932Encoder.encode("\uD874")}).to.throw(Error, "EncodingError U+D874");
expect(() => {ms932Encoder.encode("\uD875")}).to.throw(Error, "EncodingError U+D875");
expect(() => {ms932Encoder.encode("\uD876")}).to.throw(Error, "EncodingError U+D876");
expect(() => {ms932Encoder.encode("\uD877")}).to.throw(Error, "EncodingError U+D877");
expect(() => {ms932Encoder.encode("\uD878")}).to.throw(Error, "EncodingError U+D878");
expect(() => {ms932Encoder.encode("\uD879")}).to.throw(Error, "EncodingError U+D879");
expect(() => {ms932Encoder.encode("\uD87A")}).to.throw(Error, "EncodingError U+D87A");
expect(() => {ms932Encoder.encode("\uD87B")}).to.throw(Error, "EncodingError U+D87B");
expect(() => {ms932Encoder.encode("\uD87C")}).to.throw(Error, "EncodingError U+D87C");
expect(() => {ms932Encoder.encode("\uD87D")}).to.throw(Error, "EncodingError U+D87D");
expect(() => {ms932Encoder.encode("\uD87E")}).to.throw(Error, "EncodingError U+D87E");
expect(() => {ms932Encoder.encode("\uD87F")}).to.throw(Error, "EncodingError U+D87F");
expect(() => {ms932Encoder.encode("\uD880")}).to.throw(Error, "EncodingError U+D880");
expect(() => {ms932Encoder.encode("\uD881")}).to.throw(Error, "EncodingError U+D881");
expect(() => {ms932Encoder.encode("\uD882")}).to.throw(Error, "EncodingError U+D882");
expect(() => {ms932Encoder.encode("\uD883")}).to.throw(Error, "EncodingError U+D883");
expect(() => {ms932Encoder.encode("\uD884")}).to.throw(Error, "EncodingError U+D884");
expect(() => {ms932Encoder.encode("\uD885")}).to.throw(Error, "EncodingError U+D885");
expect(() => {ms932Encoder.encode("\uD886")}).to.throw(Error, "EncodingError U+D886");
expect(() => {ms932Encoder.encode("\uD887")}).to.throw(Error, "EncodingError U+D887");
expect(() => {ms932Encoder.encode("\uD888")}).to.throw(Error, "EncodingError U+D888");
expect(() => {ms932Encoder.encode("\uD889")}).to.throw(Error, "EncodingError U+D889");
expect(() => {ms932Encoder.encode("\uD88A")}).to.throw(Error, "EncodingError U+D88A");
expect(() => {ms932Encoder.encode("\uD88B")}).to.throw(Error, "EncodingError U+D88B");
expect(() => {ms932Encoder.encode("\uD88C")}).to.throw(Error, "EncodingError U+D88C");
expect(() => {ms932Encoder.encode("\uD88D")}).to.throw(Error, "EncodingError U+D88D");
expect(() => {ms932Encoder.encode("\uD88E")}).to.throw(Error, "EncodingError U+D88E");
expect(() => {ms932Encoder.encode("\uD88F")}).to.throw(Error, "EncodingError U+D88F");
expect(() => {ms932Encoder.encode("\uD890")}).to.throw(Error, "EncodingError U+D890");
expect(() => {ms932Encoder.encode("\uD891")}).to.throw(Error, "EncodingError U+D891");
expect(() => {ms932Encoder.encode("\uD892")}).to.throw(Error, "EncodingError U+D892");
expect(() => {ms932Encoder.encode("\uD893")}).to.throw(Error, "EncodingError U+D893");
expect(() => {ms932Encoder.encode("\uD894")}).to.throw(Error, "EncodingError U+D894");
expect(() => {ms932Encoder.encode("\uD895")}).to.throw(Error, "EncodingError U+D895");
expect(() => {ms932Encoder.encode("\uD896")}).to.throw(Error, "EncodingError U+D896");
expect(() => {ms932Encoder.encode("\uD897")}).to.throw(Error, "EncodingError U+D897");
expect(() => {ms932Encoder.encode("\uD898")}).to.throw(Error, "EncodingError U+D898");
expect(() => {ms932Encoder.encode("\uD899")}).to.throw(Error, "EncodingError U+D899");
expect(() => {ms932Encoder.encode("\uD89A")}).to.throw(Error, "EncodingError U+D89A");
expect(() => {ms932Encoder.encode("\uD89B")}).to.throw(Error, "EncodingError U+D89B");
expect(() => {ms932Encoder.encode("\uD89C")}).to.throw(Error, "EncodingError U+D89C");
expect(() => {ms932Encoder.encode("\uD89D")}).to.throw(Error, "EncodingError U+D89D");
expect(() => {ms932Encoder.encode("\uD89E")}).to.throw(Error, "EncodingError U+D89E");
expect(() => {ms932Encoder.encode("\uD89F")}).to.throw(Error, "EncodingError U+D89F");
expect(() => {ms932Encoder.encode("\uD8A0")}).to.throw(Error, "EncodingError U+D8A0");
expect(() => {ms932Encoder.encode("\uD8A1")}).to.throw(Error, "EncodingError U+D8A1");
expect(() => {ms932Encoder.encode("\uD8A2")}).to.throw(Error, "EncodingError U+D8A2");
expect(() => {ms932Encoder.encode("\uD8A3")}).to.throw(Error, "EncodingError U+D8A3");
expect(() => {ms932Encoder.encode("\uD8A4")}).to.throw(Error, "EncodingError U+D8A4");
expect(() => {ms932Encoder.encode("\uD8A5")}).to.throw(Error, "EncodingError U+D8A5");
expect(() => {ms932Encoder.encode("\uD8A6")}).to.throw(Error, "EncodingError U+D8A6");
expect(() => {ms932Encoder.encode("\uD8A7")}).to.throw(Error, "EncodingError U+D8A7");
expect(() => {ms932Encoder.encode("\uD8A8")}).to.throw(Error, "EncodingError U+D8A8");
expect(() => {ms932Encoder.encode("\uD8A9")}).to.throw(Error, "EncodingError U+D8A9");
expect(() => {ms932Encoder.encode("\uD8AA")}).to.throw(Error, "EncodingError U+D8AA");
expect(() => {ms932Encoder.encode("\uD8AB")}).to.throw(Error, "EncodingError U+D8AB");
expect(() => {ms932Encoder.encode("\uD8AC")}).to.throw(Error, "EncodingError U+D8AC");
expect(() => {ms932Encoder.encode("\uD8AD")}).to.throw(Error, "EncodingError U+D8AD");
expect(() => {ms932Encoder.encode("\uD8AE")}).to.throw(Error, "EncodingError U+D8AE");
expect(() => {ms932Encoder.encode("\uD8AF")}).to.throw(Error, "EncodingError U+D8AF");
expect(() => {ms932Encoder.encode("\uD8B0")}).to.throw(Error, "EncodingError U+D8B0");
expect(() => {ms932Encoder.encode("\uD8B1")}).to.throw(Error, "EncodingError U+D8B1");
expect(() => {ms932Encoder.encode("\uD8B2")}).to.throw(Error, "EncodingError U+D8B2");
expect(() => {ms932Encoder.encode("\uD8B3")}).to.throw(Error, "EncodingError U+D8B3");
expect(() => {ms932Encoder.encode("\uD8B4")}).to.throw(Error, "EncodingError U+D8B4");
expect(() => {ms932Encoder.encode("\uD8B5")}).to.throw(Error, "EncodingError U+D8B5");
expect(() => {ms932Encoder.encode("\uD8B6")}).to.throw(Error, "EncodingError U+D8B6");
expect(() => {ms932Encoder.encode("\uD8B7")}).to.throw(Error, "EncodingError U+D8B7");
expect(() => {ms932Encoder.encode("\uD8B8")}).to.throw(Error, "EncodingError U+D8B8");
expect(() => {ms932Encoder.encode("\uD8B9")}).to.throw(Error, "EncodingError U+D8B9");
expect(() => {ms932Encoder.encode("\uD8BA")}).to.throw(Error, "EncodingError U+D8BA");
expect(() => {ms932Encoder.encode("\uD8BB")}).to.throw(Error, "EncodingError U+D8BB");
expect(() => {ms932Encoder.encode("\uD8BC")}).to.throw(Error, "EncodingError U+D8BC");
expect(() => {ms932Encoder.encode("\uD8BD")}).to.throw(Error, "EncodingError U+D8BD");
expect(() => {ms932Encoder.encode("\uD8BE")}).to.throw(Error, "EncodingError U+D8BE");
expect(() => {ms932Encoder.encode("\uD8BF")}).to.throw(Error, "EncodingError U+D8BF");
expect(() => {ms932Encoder.encode("\uD8C0")}).to.throw(Error, "EncodingError U+D8C0");
expect(() => {ms932Encoder.encode("\uD8C1")}).to.throw(Error, "EncodingError U+D8C1");
expect(() => {ms932Encoder.encode("\uD8C2")}).to.throw(Error, "EncodingError U+D8C2");
expect(() => {ms932Encoder.encode("\uD8C3")}).to.throw(Error, "EncodingError U+D8C3");
expect(() => {ms932Encoder.encode("\uD8C4")}).to.throw(Error, "EncodingError U+D8C4");
expect(() => {ms932Encoder.encode("\uD8C5")}).to.throw(Error, "EncodingError U+D8C5");
expect(() => {ms932Encoder.encode("\uD8C6")}).to.throw(Error, "EncodingError U+D8C6");
expect(() => {ms932Encoder.encode("\uD8C7")}).to.throw(Error, "EncodingError U+D8C7");
expect(() => {ms932Encoder.encode("\uD8C8")}).to.throw(Error, "EncodingError U+D8C8");
expect(() => {ms932Encoder.encode("\uD8C9")}).to.throw(Error, "EncodingError U+D8C9");
expect(() => {ms932Encoder.encode("\uD8CA")}).to.throw(Error, "EncodingError U+D8CA");
expect(() => {ms932Encoder.encode("\uD8CB")}).to.throw(Error, "EncodingError U+D8CB");
expect(() => {ms932Encoder.encode("\uD8CC")}).to.throw(Error, "EncodingError U+D8CC");
expect(() => {ms932Encoder.encode("\uD8CD")}).to.throw(Error, "EncodingError U+D8CD");
expect(() => {ms932Encoder.encode("\uD8CE")}).to.throw(Error, "EncodingError U+D8CE");
expect(() => {ms932Encoder.encode("\uD8CF")}).to.throw(Error, "EncodingError U+D8CF");
expect(() => {ms932Encoder.encode("\uD8D0")}).to.throw(Error, "EncodingError U+D8D0");
expect(() => {ms932Encoder.encode("\uD8D1")}).to.throw(Error, "EncodingError U+D8D1");
expect(() => {ms932Encoder.encode("\uD8D2")}).to.throw(Error, "EncodingError U+D8D2");
expect(() => {ms932Encoder.encode("\uD8D3")}).to.throw(Error, "EncodingError U+D8D3");
expect(() => {ms932Encoder.encode("\uD8D4")}).to.throw(Error, "EncodingError U+D8D4");
expect(() => {ms932Encoder.encode("\uD8D5")}).to.throw(Error, "EncodingError U+D8D5");
expect(() => {ms932Encoder.encode("\uD8D6")}).to.throw(Error, "EncodingError U+D8D6");
expect(() => {ms932Encoder.encode("\uD8D7")}).to.throw(Error, "EncodingError U+D8D7");
expect(() => {ms932Encoder.encode("\uD8D8")}).to.throw(Error, "EncodingError U+D8D8");
expect(() => {ms932Encoder.encode("\uD8D9")}).to.throw(Error, "EncodingError U+D8D9");
expect(() => {ms932Encoder.encode("\uD8DA")}).to.throw(Error, "EncodingError U+D8DA");
expect(() => {ms932Encoder.encode("\uD8DB")}).to.throw(Error, "EncodingError U+D8DB");
expect(() => {ms932Encoder.encode("\uD8DC")}).to.throw(Error, "EncodingError U+D8DC");
expect(() => {ms932Encoder.encode("\uD8DD")}).to.throw(Error, "EncodingError U+D8DD");
expect(() => {ms932Encoder.encode("\uD8DE")}).to.throw(Error, "EncodingError U+D8DE");
expect(() => {ms932Encoder.encode("\uD8DF")}).to.throw(Error, "EncodingError U+D8DF");
expect(() => {ms932Encoder.encode("\uD8E0")}).to.throw(Error, "EncodingError U+D8E0");
expect(() => {ms932Encoder.encode("\uD8E1")}).to.throw(Error, "EncodingError U+D8E1");
expect(() => {ms932Encoder.encode("\uD8E2")}).to.throw(Error, "EncodingError U+D8E2");
expect(() => {ms932Encoder.encode("\uD8E3")}).to.throw(Error, "EncodingError U+D8E3");
expect(() => {ms932Encoder.encode("\uD8E4")}).to.throw(Error, "EncodingError U+D8E4");
expect(() => {ms932Encoder.encode("\uD8E5")}).to.throw(Error, "EncodingError U+D8E5");
expect(() => {ms932Encoder.encode("\uD8E6")}).to.throw(Error, "EncodingError U+D8E6");
expect(() => {ms932Encoder.encode("\uD8E7")}).to.throw(Error, "EncodingError U+D8E7");
expect(() => {ms932Encoder.encode("\uD8E8")}).to.throw(Error, "EncodingError U+D8E8");
expect(() => {ms932Encoder.encode("\uD8E9")}).to.throw(Error, "EncodingError U+D8E9");
expect(() => {ms932Encoder.encode("\uD8EA")}).to.throw(Error, "EncodingError U+D8EA");
expect(() => {ms932Encoder.encode("\uD8EB")}).to.throw(Error, "EncodingError U+D8EB");
expect(() => {ms932Encoder.encode("\uD8EC")}).to.throw(Error, "EncodingError U+D8EC");
expect(() => {ms932Encoder.encode("\uD8ED")}).to.throw(Error, "EncodingError U+D8ED");
expect(() => {ms932Encoder.encode("\uD8EE")}).to.throw(Error, "EncodingError U+D8EE");
expect(() => {ms932Encoder.encode("\uD8EF")}).to.throw(Error, "EncodingError U+D8EF");
expect(() => {ms932Encoder.encode("\uD8F0")}).to.throw(Error, "EncodingError U+D8F0");
expect(() => {ms932Encoder.encode("\uD8F1")}).to.throw(Error, "EncodingError U+D8F1");
expect(() => {ms932Encoder.encode("\uD8F2")}).to.throw(Error, "EncodingError U+D8F2");
expect(() => {ms932Encoder.encode("\uD8F3")}).to.throw(Error, "EncodingError U+D8F3");
expect(() => {ms932Encoder.encode("\uD8F4")}).to.throw(Error, "EncodingError U+D8F4");
expect(() => {ms932Encoder.encode("\uD8F5")}).to.throw(Error, "EncodingError U+D8F5");
expect(() => {ms932Encoder.encode("\uD8F6")}).to.throw(Error, "EncodingError U+D8F6");
expect(() => {ms932Encoder.encode("\uD8F7")}).to.throw(Error, "EncodingError U+D8F7");
expect(() => {ms932Encoder.encode("\uD8F8")}).to.throw(Error, "EncodingError U+D8F8");
expect(() => {ms932Encoder.encode("\uD8F9")}).to.throw(Error, "EncodingError U+D8F9");
expect(() => {ms932Encoder.encode("\uD8FA")}).to.throw(Error, "EncodingError U+D8FA");
expect(() => {ms932Encoder.encode("\uD8FB")}).to.throw(Error, "EncodingError U+D8FB");
expect(() => {ms932Encoder.encode("\uD8FC")}).to.throw(Error, "EncodingError U+D8FC");
expect(() => {ms932Encoder.encode("\uD8FD")}).to.throw(Error, "EncodingError U+D8FD");
expect(() => {ms932Encoder.encode("\uD8FE")}).to.throw(Error, "EncodingError U+D8FE");
expect(() => {ms932Encoder.encode("\uD8FF")}).to.throw(Error, "EncodingError U+D8FF");
expect(() => {ms932Encoder.encode("\uD900")}).to.throw(Error, "EncodingError U+D900");
expect(() => {ms932Encoder.encode("\uD901")}).to.throw(Error, "EncodingError U+D901");
expect(() => {ms932Encoder.encode("\uD902")}).to.throw(Error, "EncodingError U+D902");
expect(() => {ms932Encoder.encode("\uD903")}).to.throw(Error, "EncodingError U+D903");
expect(() => {ms932Encoder.encode("\uD904")}).to.throw(Error, "EncodingError U+D904");
expect(() => {ms932Encoder.encode("\uD905")}).to.throw(Error, "EncodingError U+D905");
expect(() => {ms932Encoder.encode("\uD906")}).to.throw(Error, "EncodingError U+D906");
expect(() => {ms932Encoder.encode("\uD907")}).to.throw(Error, "EncodingError U+D907");
expect(() => {ms932Encoder.encode("\uD908")}).to.throw(Error, "EncodingError U+D908");
expect(() => {ms932Encoder.encode("\uD909")}).to.throw(Error, "EncodingError U+D909");
expect(() => {ms932Encoder.encode("\uD90A")}).to.throw(Error, "EncodingError U+D90A");
expect(() => {ms932Encoder.encode("\uD90B")}).to.throw(Error, "EncodingError U+D90B");
expect(() => {ms932Encoder.encode("\uD90C")}).to.throw(Error, "EncodingError U+D90C");
expect(() => {ms932Encoder.encode("\uD90D")}).to.throw(Error, "EncodingError U+D90D");
expect(() => {ms932Encoder.encode("\uD90E")}).to.throw(Error, "EncodingError U+D90E");
expect(() => {ms932Encoder.encode("\uD90F")}).to.throw(Error, "EncodingError U+D90F");
expect(() => {ms932Encoder.encode("\uD910")}).to.throw(Error, "EncodingError U+D910");
expect(() => {ms932Encoder.encode("\uD911")}).to.throw(Error, "EncodingError U+D911");
expect(() => {ms932Encoder.encode("\uD912")}).to.throw(Error, "EncodingError U+D912");
expect(() => {ms932Encoder.encode("\uD913")}).to.throw(Error, "EncodingError U+D913");
expect(() => {ms932Encoder.encode("\uD914")}).to.throw(Error, "EncodingError U+D914");
expect(() => {ms932Encoder.encode("\uD915")}).to.throw(Error, "EncodingError U+D915");
expect(() => {ms932Encoder.encode("\uD916")}).to.throw(Error, "EncodingError U+D916");
expect(() => {ms932Encoder.encode("\uD917")}).to.throw(Error, "EncodingError U+D917");
expect(() => {ms932Encoder.encode("\uD918")}).to.throw(Error, "EncodingError U+D918");
expect(() => {ms932Encoder.encode("\uD919")}).to.throw(Error, "EncodingError U+D919");
expect(() => {ms932Encoder.encode("\uD91A")}).to.throw(Error, "EncodingError U+D91A");
expect(() => {ms932Encoder.encode("\uD91B")}).to.throw(Error, "EncodingError U+D91B");
expect(() => {ms932Encoder.encode("\uD91C")}).to.throw(Error, "EncodingError U+D91C");
expect(() => {ms932Encoder.encode("\uD91D")}).to.throw(Error, "EncodingError U+D91D");
expect(() => {ms932Encoder.encode("\uD91E")}).to.throw(Error, "EncodingError U+D91E");
expect(() => {ms932Encoder.encode("\uD91F")}).to.throw(Error, "EncodingError U+D91F");
expect(() => {ms932Encoder.encode("\uD920")}).to.throw(Error, "EncodingError U+D920");
expect(() => {ms932Encoder.encode("\uD921")}).to.throw(Error, "EncodingError U+D921");
expect(() => {ms932Encoder.encode("\uD922")}).to.throw(Error, "EncodingError U+D922");
expect(() => {ms932Encoder.encode("\uD923")}).to.throw(Error, "EncodingError U+D923");
expect(() => {ms932Encoder.encode("\uD924")}).to.throw(Error, "EncodingError U+D924");
expect(() => {ms932Encoder.encode("\uD925")}).to.throw(Error, "EncodingError U+D925");
expect(() => {ms932Encoder.encode("\uD926")}).to.throw(Error, "EncodingError U+D926");
expect(() => {ms932Encoder.encode("\uD927")}).to.throw(Error, "EncodingError U+D927");
expect(() => {ms932Encoder.encode("\uD928")}).to.throw(Error, "EncodingError U+D928");
expect(() => {ms932Encoder.encode("\uD929")}).to.throw(Error, "EncodingError U+D929");
expect(() => {ms932Encoder.encode("\uD92A")}).to.throw(Error, "EncodingError U+D92A");
expect(() => {ms932Encoder.encode("\uD92B")}).to.throw(Error, "EncodingError U+D92B");
expect(() => {ms932Encoder.encode("\uD92C")}).to.throw(Error, "EncodingError U+D92C");
expect(() => {ms932Encoder.encode("\uD92D")}).to.throw(Error, "EncodingError U+D92D");
expect(() => {ms932Encoder.encode("\uD92E")}).to.throw(Error, "EncodingError U+D92E");
expect(() => {ms932Encoder.encode("\uD92F")}).to.throw(Error, "EncodingError U+D92F");
expect(() => {ms932Encoder.encode("\uD930")}).to.throw(Error, "EncodingError U+D930");
expect(() => {ms932Encoder.encode("\uD931")}).to.throw(Error, "EncodingError U+D931");
expect(() => {ms932Encoder.encode("\uD932")}).to.throw(Error, "EncodingError U+D932");
expect(() => {ms932Encoder.encode("\uD933")}).to.throw(Error, "EncodingError U+D933");
expect(() => {ms932Encoder.encode("\uD934")}).to.throw(Error, "EncodingError U+D934");
expect(() => {ms932Encoder.encode("\uD935")}).to.throw(Error, "EncodingError U+D935");
expect(() => {ms932Encoder.encode("\uD936")}).to.throw(Error, "EncodingError U+D936");
expect(() => {ms932Encoder.encode("\uD937")}).to.throw(Error, "EncodingError U+D937");
expect(() => {ms932Encoder.encode("\uD938")}).to.throw(Error, "EncodingError U+D938");
expect(() => {ms932Encoder.encode("\uD939")}).to.throw(Error, "EncodingError U+D939");
expect(() => {ms932Encoder.encode("\uD93A")}).to.throw(Error, "EncodingError U+D93A");
expect(() => {ms932Encoder.encode("\uD93B")}).to.throw(Error, "EncodingError U+D93B");
expect(() => {ms932Encoder.encode("\uD93C")}).to.throw(Error, "EncodingError U+D93C");
expect(() => {ms932Encoder.encode("\uD93D")}).to.throw(Error, "EncodingError U+D93D");
expect(() => {ms932Encoder.encode("\uD93E")}).to.throw(Error, "EncodingError U+D93E");
expect(() => {ms932Encoder.encode("\uD93F")}).to.throw(Error, "EncodingError U+D93F");
expect(() => {ms932Encoder.encode("\uD940")}).to.throw(Error, "EncodingError U+D940");
expect(() => {ms932Encoder.encode("\uD941")}).to.throw(Error, "EncodingError U+D941");
expect(() => {ms932Encoder.encode("\uD942")}).to.throw(Error, "EncodingError U+D942");
expect(() => {ms932Encoder.encode("\uD943")}).to.throw(Error, "EncodingError U+D943");
expect(() => {ms932Encoder.encode("\uD944")}).to.throw(Error, "EncodingError U+D944");
expect(() => {ms932Encoder.encode("\uD945")}).to.throw(Error, "EncodingError U+D945");
expect(() => {ms932Encoder.encode("\uD946")}).to.throw(Error, "EncodingError U+D946");
expect(() => {ms932Encoder.encode("\uD947")}).to.throw(Error, "EncodingError U+D947");
expect(() => {ms932Encoder.encode("\uD948")}).to.throw(Error, "EncodingError U+D948");
expect(() => {ms932Encoder.encode("\uD949")}).to.throw(Error, "EncodingError U+D949");
expect(() => {ms932Encoder.encode("\uD94A")}).to.throw(Error, "EncodingError U+D94A");
expect(() => {ms932Encoder.encode("\uD94B")}).to.throw(Error, "EncodingError U+D94B");
expect(() => {ms932Encoder.encode("\uD94C")}).to.throw(Error, "EncodingError U+D94C");
expect(() => {ms932Encoder.encode("\uD94D")}).to.throw(Error, "EncodingError U+D94D");
expect(() => {ms932Encoder.encode("\uD94E")}).to.throw(Error, "EncodingError U+D94E");
expect(() => {ms932Encoder.encode("\uD94F")}).to.throw(Error, "EncodingError U+D94F");
expect(() => {ms932Encoder.encode("\uD950")}).to.throw(Error, "EncodingError U+D950");
expect(() => {ms932Encoder.encode("\uD951")}).to.throw(Error, "EncodingError U+D951");
expect(() => {ms932Encoder.encode("\uD952")}).to.throw(Error, "EncodingError U+D952");
expect(() => {ms932Encoder.encode("\uD953")}).to.throw(Error, "EncodingError U+D953");
expect(() => {ms932Encoder.encode("\uD954")}).to.throw(Error, "EncodingError U+D954");
expect(() => {ms932Encoder.encode("\uD955")}).to.throw(Error, "EncodingError U+D955");
expect(() => {ms932Encoder.encode("\uD956")}).to.throw(Error, "EncodingError U+D956");
expect(() => {ms932Encoder.encode("\uD957")}).to.throw(Error, "EncodingError U+D957");
expect(() => {ms932Encoder.encode("\uD958")}).to.throw(Error, "EncodingError U+D958");
expect(() => {ms932Encoder.encode("\uD959")}).to.throw(Error, "EncodingError U+D959");
expect(() => {ms932Encoder.encode("\uD95A")}).to.throw(Error, "EncodingError U+D95A");
expect(() => {ms932Encoder.encode("\uD95B")}).to.throw(Error, "EncodingError U+D95B");
expect(() => {ms932Encoder.encode("\uD95C")}).to.throw(Error, "EncodingError U+D95C");
expect(() => {ms932Encoder.encode("\uD95D")}).to.throw(Error, "EncodingError U+D95D");
expect(() => {ms932Encoder.encode("\uD95E")}).to.throw(Error, "EncodingError U+D95E");
expect(() => {ms932Encoder.encode("\uD95F")}).to.throw(Error, "EncodingError U+D95F");
expect(() => {ms932Encoder.encode("\uD960")}).to.throw(Error, "EncodingError U+D960");
expect(() => {ms932Encoder.encode("\uD961")}).to.throw(Error, "EncodingError U+D961");
expect(() => {ms932Encoder.encode("\uD962")}).to.throw(Error, "EncodingError U+D962");
expect(() => {ms932Encoder.encode("\uD963")}).to.throw(Error, "EncodingError U+D963");
expect(() => {ms932Encoder.encode("\uD964")}).to.throw(Error, "EncodingError U+D964");
expect(() => {ms932Encoder.encode("\uD965")}).to.throw(Error, "EncodingError U+D965");
expect(() => {ms932Encoder.encode("\uD966")}).to.throw(Error, "EncodingError U+D966");
expect(() => {ms932Encoder.encode("\uD967")}).to.throw(Error, "EncodingError U+D967");
expect(() => {ms932Encoder.encode("\uD968")}).to.throw(Error, "EncodingError U+D968");
expect(() => {ms932Encoder.encode("\uD969")}).to.throw(Error, "EncodingError U+D969");
expect(() => {ms932Encoder.encode("\uD96A")}).to.throw(Error, "EncodingError U+D96A");
expect(() => {ms932Encoder.encode("\uD96B")}).to.throw(Error, "EncodingError U+D96B");
expect(() => {ms932Encoder.encode("\uD96C")}).to.throw(Error, "EncodingError U+D96C");
expect(() => {ms932Encoder.encode("\uD96D")}).to.throw(Error, "EncodingError U+D96D");
expect(() => {ms932Encoder.encode("\uD96E")}).to.throw(Error, "EncodingError U+D96E");
expect(() => {ms932Encoder.encode("\uD96F")}).to.throw(Error, "EncodingError U+D96F");
expect(() => {ms932Encoder.encode("\uD970")}).to.throw(Error, "EncodingError U+D970");
expect(() => {ms932Encoder.encode("\uD971")}).to.throw(Error, "EncodingError U+D971");
expect(() => {ms932Encoder.encode("\uD972")}).to.throw(Error, "EncodingError U+D972");
expect(() => {ms932Encoder.encode("\uD973")}).to.throw(Error, "EncodingError U+D973");
expect(() => {ms932Encoder.encode("\uD974")}).to.throw(Error, "EncodingError U+D974");
expect(() => {ms932Encoder.encode("\uD975")}).to.throw(Error, "EncodingError U+D975");
expect(() => {ms932Encoder.encode("\uD976")}).to.throw(Error, "EncodingError U+D976");
expect(() => {ms932Encoder.encode("\uD977")}).to.throw(Error, "EncodingError U+D977");
expect(() => {ms932Encoder.encode("\uD978")}).to.throw(Error, "EncodingError U+D978");
expect(() => {ms932Encoder.encode("\uD979")}).to.throw(Error, "EncodingError U+D979");
expect(() => {ms932Encoder.encode("\uD97A")}).to.throw(Error, "EncodingError U+D97A");
expect(() => {ms932Encoder.encode("\uD97B")}).to.throw(Error, "EncodingError U+D97B");
expect(() => {ms932Encoder.encode("\uD97C")}).to.throw(Error, "EncodingError U+D97C");
expect(() => {ms932Encoder.encode("\uD97D")}).to.throw(Error, "EncodingError U+D97D");
expect(() => {ms932Encoder.encode("\uD97E")}).to.throw(Error, "EncodingError U+D97E");
expect(() => {ms932Encoder.encode("\uD97F")}).to.throw(Error, "EncodingError U+D97F");
expect(() => {ms932Encoder.encode("\uD980")}).to.throw(Error, "EncodingError U+D980");
expect(() => {ms932Encoder.encode("\uD981")}).to.throw(Error, "EncodingError U+D981");
expect(() => {ms932Encoder.encode("\uD982")}).to.throw(Error, "EncodingError U+D982");
expect(() => {ms932Encoder.encode("\uD983")}).to.throw(Error, "EncodingError U+D983");
expect(() => {ms932Encoder.encode("\uD984")}).to.throw(Error, "EncodingError U+D984");
expect(() => {ms932Encoder.encode("\uD985")}).to.throw(Error, "EncodingError U+D985");
expect(() => {ms932Encoder.encode("\uD986")}).to.throw(Error, "EncodingError U+D986");
expect(() => {ms932Encoder.encode("\uD987")}).to.throw(Error, "EncodingError U+D987");
expect(() => {ms932Encoder.encode("\uD988")}).to.throw(Error, "EncodingError U+D988");
expect(() => {ms932Encoder.encode("\uD989")}).to.throw(Error, "EncodingError U+D989");
expect(() => {ms932Encoder.encode("\uD98A")}).to.throw(Error, "EncodingError U+D98A");
expect(() => {ms932Encoder.encode("\uD98B")}).to.throw(Error, "EncodingError U+D98B");
expect(() => {ms932Encoder.encode("\uD98C")}).to.throw(Error, "EncodingError U+D98C");
expect(() => {ms932Encoder.encode("\uD98D")}).to.throw(Error, "EncodingError U+D98D");
expect(() => {ms932Encoder.encode("\uD98E")}).to.throw(Error, "EncodingError U+D98E");
expect(() => {ms932Encoder.encode("\uD98F")}).to.throw(Error, "EncodingError U+D98F");
expect(() => {ms932Encoder.encode("\uD990")}).to.throw(Error, "EncodingError U+D990");
expect(() => {ms932Encoder.encode("\uD991")}).to.throw(Error, "EncodingError U+D991");
expect(() => {ms932Encoder.encode("\uD992")}).to.throw(Error, "EncodingError U+D992");
expect(() => {ms932Encoder.encode("\uD993")}).to.throw(Error, "EncodingError U+D993");
expect(() => {ms932Encoder.encode("\uD994")}).to.throw(Error, "EncodingError U+D994");
expect(() => {ms932Encoder.encode("\uD995")}).to.throw(Error, "EncodingError U+D995");
expect(() => {ms932Encoder.encode("\uD996")}).to.throw(Error, "EncodingError U+D996");
expect(() => {ms932Encoder.encode("\uD997")}).to.throw(Error, "EncodingError U+D997");
expect(() => {ms932Encoder.encode("\uD998")}).to.throw(Error, "EncodingError U+D998");
expect(() => {ms932Encoder.encode("\uD999")}).to.throw(Error, "EncodingError U+D999");
expect(() => {ms932Encoder.encode("\uD99A")}).to.throw(Error, "EncodingError U+D99A");
expect(() => {ms932Encoder.encode("\uD99B")}).to.throw(Error, "EncodingError U+D99B");
expect(() => {ms932Encoder.encode("\uD99C")}).to.throw(Error, "EncodingError U+D99C");
expect(() => {ms932Encoder.encode("\uD99D")}).to.throw(Error, "EncodingError U+D99D");
expect(() => {ms932Encoder.encode("\uD99E")}).to.throw(Error, "EncodingError U+D99E");
expect(() => {ms932Encoder.encode("\uD99F")}).to.throw(Error, "EncodingError U+D99F");
expect(() => {ms932Encoder.encode("\uD9A0")}).to.throw(Error, "EncodingError U+D9A0");
expect(() => {ms932Encoder.encode("\uD9A1")}).to.throw(Error, "EncodingError U+D9A1");
expect(() => {ms932Encoder.encode("\uD9A2")}).to.throw(Error, "EncodingError U+D9A2");
expect(() => {ms932Encoder.encode("\uD9A3")}).to.throw(Error, "EncodingError U+D9A3");
expect(() => {ms932Encoder.encode("\uD9A4")}).to.throw(Error, "EncodingError U+D9A4");
expect(() => {ms932Encoder.encode("\uD9A5")}).to.throw(Error, "EncodingError U+D9A5");
expect(() => {ms932Encoder.encode("\uD9A6")}).to.throw(Error, "EncodingError U+D9A6");
expect(() => {ms932Encoder.encode("\uD9A7")}).to.throw(Error, "EncodingError U+D9A7");
expect(() => {ms932Encoder.encode("\uD9A8")}).to.throw(Error, "EncodingError U+D9A8");
expect(() => {ms932Encoder.encode("\uD9A9")}).to.throw(Error, "EncodingError U+D9A9");
expect(() => {ms932Encoder.encode("\uD9AA")}).to.throw(Error, "EncodingError U+D9AA");
expect(() => {ms932Encoder.encode("\uD9AB")}).to.throw(Error, "EncodingError U+D9AB");
expect(() => {ms932Encoder.encode("\uD9AC")}).to.throw(Error, "EncodingError U+D9AC");
expect(() => {ms932Encoder.encode("\uD9AD")}).to.throw(Error, "EncodingError U+D9AD");
expect(() => {ms932Encoder.encode("\uD9AE")}).to.throw(Error, "EncodingError U+D9AE");
expect(() => {ms932Encoder.encode("\uD9AF")}).to.throw(Error, "EncodingError U+D9AF");
expect(() => {ms932Encoder.encode("\uD9B0")}).to.throw(Error, "EncodingError U+D9B0");
expect(() => {ms932Encoder.encode("\uD9B1")}).to.throw(Error, "EncodingError U+D9B1");
expect(() => {ms932Encoder.encode("\uD9B2")}).to.throw(Error, "EncodingError U+D9B2");
expect(() => {ms932Encoder.encode("\uD9B3")}).to.throw(Error, "EncodingError U+D9B3");
expect(() => {ms932Encoder.encode("\uD9B4")}).to.throw(Error, "EncodingError U+D9B4");
expect(() => {ms932Encoder.encode("\uD9B5")}).to.throw(Error, "EncodingError U+D9B5");
expect(() => {ms932Encoder.encode("\uD9B6")}).to.throw(Error, "EncodingError U+D9B6");
expect(() => {ms932Encoder.encode("\uD9B7")}).to.throw(Error, "EncodingError U+D9B7");
expect(() => {ms932Encoder.encode("\uD9B8")}).to.throw(Error, "EncodingError U+D9B8");
expect(() => {ms932Encoder.encode("\uD9B9")}).to.throw(Error, "EncodingError U+D9B9");
expect(() => {ms932Encoder.encode("\uD9BA")}).to.throw(Error, "EncodingError U+D9BA");
expect(() => {ms932Encoder.encode("\uD9BB")}).to.throw(Error, "EncodingError U+D9BB");
expect(() => {ms932Encoder.encode("\uD9BC")}).to.throw(Error, "EncodingError U+D9BC");
expect(() => {ms932Encoder.encode("\uD9BD")}).to.throw(Error, "EncodingError U+D9BD");
expect(() => {ms932Encoder.encode("\uD9BE")}).to.throw(Error, "EncodingError U+D9BE");
expect(() => {ms932Encoder.encode("\uD9BF")}).to.throw(Error, "EncodingError U+D9BF");
expect(() => {ms932Encoder.encode("\uD9C0")}).to.throw(Error, "EncodingError U+D9C0");
expect(() => {ms932Encoder.encode("\uD9C1")}).to.throw(Error, "EncodingError U+D9C1");
expect(() => {ms932Encoder.encode("\uD9C2")}).to.throw(Error, "EncodingError U+D9C2");
expect(() => {ms932Encoder.encode("\uD9C3")}).to.throw(Error, "EncodingError U+D9C3");
expect(() => {ms932Encoder.encode("\uD9C4")}).to.throw(Error, "EncodingError U+D9C4");
expect(() => {ms932Encoder.encode("\uD9C5")}).to.throw(Error, "EncodingError U+D9C5");
expect(() => {ms932Encoder.encode("\uD9C6")}).to.throw(Error, "EncodingError U+D9C6");
expect(() => {ms932Encoder.encode("\uD9C7")}).to.throw(Error, "EncodingError U+D9C7");
expect(() => {ms932Encoder.encode("\uD9C8")}).to.throw(Error, "EncodingError U+D9C8");
expect(() => {ms932Encoder.encode("\uD9C9")}).to.throw(Error, "EncodingError U+D9C9");
expect(() => {ms932Encoder.encode("\uD9CA")}).to.throw(Error, "EncodingError U+D9CA");
expect(() => {ms932Encoder.encode("\uD9CB")}).to.throw(Error, "EncodingError U+D9CB");
expect(() => {ms932Encoder.encode("\uD9CC")}).to.throw(Error, "EncodingError U+D9CC");
expect(() => {ms932Encoder.encode("\uD9CD")}).to.throw(Error, "EncodingError U+D9CD");
expect(() => {ms932Encoder.encode("\uD9CE")}).to.throw(Error, "EncodingError U+D9CE");
expect(() => {ms932Encoder.encode("\uD9CF")}).to.throw(Error, "EncodingError U+D9CF");
expect(() => {ms932Encoder.encode("\uD9D0")}).to.throw(Error, "EncodingError U+D9D0");
expect(() => {ms932Encoder.encode("\uD9D1")}).to.throw(Error, "EncodingError U+D9D1");
expect(() => {ms932Encoder.encode("\uD9D2")}).to.throw(Error, "EncodingError U+D9D2");
expect(() => {ms932Encoder.encode("\uD9D3")}).to.throw(Error, "EncodingError U+D9D3");
expect(() => {ms932Encoder.encode("\uD9D4")}).to.throw(Error, "EncodingError U+D9D4");
expect(() => {ms932Encoder.encode("\uD9D5")}).to.throw(Error, "EncodingError U+D9D5");
expect(() => {ms932Encoder.encode("\uD9D6")}).to.throw(Error, "EncodingError U+D9D6");
expect(() => {ms932Encoder.encode("\uD9D7")}).to.throw(Error, "EncodingError U+D9D7");
expect(() => {ms932Encoder.encode("\uD9D8")}).to.throw(Error, "EncodingError U+D9D8");
expect(() => {ms932Encoder.encode("\uD9D9")}).to.throw(Error, "EncodingError U+D9D9");
expect(() => {ms932Encoder.encode("\uD9DA")}).to.throw(Error, "EncodingError U+D9DA");
expect(() => {ms932Encoder.encode("\uD9DB")}).to.throw(Error, "EncodingError U+D9DB");
expect(() => {ms932Encoder.encode("\uD9DC")}).to.throw(Error, "EncodingError U+D9DC");
expect(() => {ms932Encoder.encode("\uD9DD")}).to.throw(Error, "EncodingError U+D9DD");
expect(() => {ms932Encoder.encode("\uD9DE")}).to.throw(Error, "EncodingError U+D9DE");
expect(() => {ms932Encoder.encode("\uD9DF")}).to.throw(Error, "EncodingError U+D9DF");
expect(() => {ms932Encoder.encode("\uD9E0")}).to.throw(Error, "EncodingError U+D9E0");
expect(() => {ms932Encoder.encode("\uD9E1")}).to.throw(Error, "EncodingError U+D9E1");
expect(() => {ms932Encoder.encode("\uD9E2")}).to.throw(Error, "EncodingError U+D9E2");
expect(() => {ms932Encoder.encode("\uD9E3")}).to.throw(Error, "EncodingError U+D9E3");
expect(() => {ms932Encoder.encode("\uD9E4")}).to.throw(Error, "EncodingError U+D9E4");
expect(() => {ms932Encoder.encode("\uD9E5")}).to.throw(Error, "EncodingError U+D9E5");
expect(() => {ms932Encoder.encode("\uD9E6")}).to.throw(Error, "EncodingError U+D9E6");
expect(() => {ms932Encoder.encode("\uD9E7")}).to.throw(Error, "EncodingError U+D9E7");
expect(() => {ms932Encoder.encode("\uD9E8")}).to.throw(Error, "EncodingError U+D9E8");
expect(() => {ms932Encoder.encode("\uD9E9")}).to.throw(Error, "EncodingError U+D9E9");
expect(() => {ms932Encoder.encode("\uD9EA")}).to.throw(Error, "EncodingError U+D9EA");
expect(() => {ms932Encoder.encode("\uD9EB")}).to.throw(Error, "EncodingError U+D9EB");
expect(() => {ms932Encoder.encode("\uD9EC")}).to.throw(Error, "EncodingError U+D9EC");
expect(() => {ms932Encoder.encode("\uD9ED")}).to.throw(Error, "EncodingError U+D9ED");
expect(() => {ms932Encoder.encode("\uD9EE")}).to.throw(Error, "EncodingError U+D9EE");
expect(() => {ms932Encoder.encode("\uD9EF")}).to.throw(Error, "EncodingError U+D9EF");
expect(() => {ms932Encoder.encode("\uD9F0")}).to.throw(Error, "EncodingError U+D9F0");
expect(() => {ms932Encoder.encode("\uD9F1")}).to.throw(Error, "EncodingError U+D9F1");
expect(() => {ms932Encoder.encode("\uD9F2")}).to.throw(Error, "EncodingError U+D9F2");
expect(() => {ms932Encoder.encode("\uD9F3")}).to.throw(Error, "EncodingError U+D9F3");
expect(() => {ms932Encoder.encode("\uD9F4")}).to.throw(Error, "EncodingError U+D9F4");
expect(() => {ms932Encoder.encode("\uD9F5")}).to.throw(Error, "EncodingError U+D9F5");
expect(() => {ms932Encoder.encode("\uD9F6")}).to.throw(Error, "EncodingError U+D9F6");
expect(() => {ms932Encoder.encode("\uD9F7")}).to.throw(Error, "EncodingError U+D9F7");
expect(() => {ms932Encoder.encode("\uD9F8")}).to.throw(Error, "EncodingError U+D9F8");
expect(() => {ms932Encoder.encode("\uD9F9")}).to.throw(Error, "EncodingError U+D9F9");
expect(() => {ms932Encoder.encode("\uD9FA")}).to.throw(Error, "EncodingError U+D9FA");
expect(() => {ms932Encoder.encode("\uD9FB")}).to.throw(Error, "EncodingError U+D9FB");
expect(() => {ms932Encoder.encode("\uD9FC")}).to.throw(Error, "EncodingError U+D9FC");
expect(() => {ms932Encoder.encode("\uD9FD")}).to.throw(Error, "EncodingError U+D9FD");
expect(() => {ms932Encoder.encode("\uD9FE")}).to.throw(Error, "EncodingError U+D9FE");
expect(() => {ms932Encoder.encode("\uD9FF")}).to.throw(Error, "EncodingError U+D9FF");
expect(() => {ms932Encoder.encode("\uDA00")}).to.throw(Error, "EncodingError U+DA00");
expect(() => {ms932Encoder.encode("\uDA01")}).to.throw(Error, "EncodingError U+DA01");
expect(() => {ms932Encoder.encode("\uDA02")}).to.throw(Error, "EncodingError U+DA02");
expect(() => {ms932Encoder.encode("\uDA03")}).to.throw(Error, "EncodingError U+DA03");
expect(() => {ms932Encoder.encode("\uDA04")}).to.throw(Error, "EncodingError U+DA04");
expect(() => {ms932Encoder.encode("\uDA05")}).to.throw(Error, "EncodingError U+DA05");
expect(() => {ms932Encoder.encode("\uDA06")}).to.throw(Error, "EncodingError U+DA06");
expect(() => {ms932Encoder.encode("\uDA07")}).to.throw(Error, "EncodingError U+DA07");
expect(() => {ms932Encoder.encode("\uDA08")}).to.throw(Error, "EncodingError U+DA08");
expect(() => {ms932Encoder.encode("\uDA09")}).to.throw(Error, "EncodingError U+DA09");
expect(() => {ms932Encoder.encode("\uDA0A")}).to.throw(Error, "EncodingError U+DA0A");
expect(() => {ms932Encoder.encode("\uDA0B")}).to.throw(Error, "EncodingError U+DA0B");
expect(() => {ms932Encoder.encode("\uDA0C")}).to.throw(Error, "EncodingError U+DA0C");
expect(() => {ms932Encoder.encode("\uDA0D")}).to.throw(Error, "EncodingError U+DA0D");
expect(() => {ms932Encoder.encode("\uDA0E")}).to.throw(Error, "EncodingError U+DA0E");
expect(() => {ms932Encoder.encode("\uDA0F")}).to.throw(Error, "EncodingError U+DA0F");
expect(() => {ms932Encoder.encode("\uDA10")}).to.throw(Error, "EncodingError U+DA10");
expect(() => {ms932Encoder.encode("\uDA11")}).to.throw(Error, "EncodingError U+DA11");
expect(() => {ms932Encoder.encode("\uDA12")}).to.throw(Error, "EncodingError U+DA12");
expect(() => {ms932Encoder.encode("\uDA13")}).to.throw(Error, "EncodingError U+DA13");
expect(() => {ms932Encoder.encode("\uDA14")}).to.throw(Error, "EncodingError U+DA14");
expect(() => {ms932Encoder.encode("\uDA15")}).to.throw(Error, "EncodingError U+DA15");
expect(() => {ms932Encoder.encode("\uDA16")}).to.throw(Error, "EncodingError U+DA16");
expect(() => {ms932Encoder.encode("\uDA17")}).to.throw(Error, "EncodingError U+DA17");
expect(() => {ms932Encoder.encode("\uDA18")}).to.throw(Error, "EncodingError U+DA18");
expect(() => {ms932Encoder.encode("\uDA19")}).to.throw(Error, "EncodingError U+DA19");
expect(() => {ms932Encoder.encode("\uDA1A")}).to.throw(Error, "EncodingError U+DA1A");
expect(() => {ms932Encoder.encode("\uDA1B")}).to.throw(Error, "EncodingError U+DA1B");
expect(() => {ms932Encoder.encode("\uDA1C")}).to.throw(Error, "EncodingError U+DA1C");
expect(() => {ms932Encoder.encode("\uDA1D")}).to.throw(Error, "EncodingError U+DA1D");
expect(() => {ms932Encoder.encode("\uDA1E")}).to.throw(Error, "EncodingError U+DA1E");
expect(() => {ms932Encoder.encode("\uDA1F")}).to.throw(Error, "EncodingError U+DA1F");
expect(() => {ms932Encoder.encode("\uDA20")}).to.throw(Error, "EncodingError U+DA20");
expect(() => {ms932Encoder.encode("\uDA21")}).to.throw(Error, "EncodingError U+DA21");
expect(() => {ms932Encoder.encode("\uDA22")}).to.throw(Error, "EncodingError U+DA22");
expect(() => {ms932Encoder.encode("\uDA23")}).to.throw(Error, "EncodingError U+DA23");
expect(() => {ms932Encoder.encode("\uDA24")}).to.throw(Error, "EncodingError U+DA24");
expect(() => {ms932Encoder.encode("\uDA25")}).to.throw(Error, "EncodingError U+DA25");
expect(() => {ms932Encoder.encode("\uDA26")}).to.throw(Error, "EncodingError U+DA26");
expect(() => {ms932Encoder.encode("\uDA27")}).to.throw(Error, "EncodingError U+DA27");
expect(() => {ms932Encoder.encode("\uDA28")}).to.throw(Error, "EncodingError U+DA28");
expect(() => {ms932Encoder.encode("\uDA29")}).to.throw(Error, "EncodingError U+DA29");
expect(() => {ms932Encoder.encode("\uDA2A")}).to.throw(Error, "EncodingError U+DA2A");
expect(() => {ms932Encoder.encode("\uDA2B")}).to.throw(Error, "EncodingError U+DA2B");
expect(() => {ms932Encoder.encode("\uDA2C")}).to.throw(Error, "EncodingError U+DA2C");
expect(() => {ms932Encoder.encode("\uDA2D")}).to.throw(Error, "EncodingError U+DA2D");
expect(() => {ms932Encoder.encode("\uDA2E")}).to.throw(Error, "EncodingError U+DA2E");
expect(() => {ms932Encoder.encode("\uDA2F")}).to.throw(Error, "EncodingError U+DA2F");
expect(() => {ms932Encoder.encode("\uDA30")}).to.throw(Error, "EncodingError U+DA30");
expect(() => {ms932Encoder.encode("\uDA31")}).to.throw(Error, "EncodingError U+DA31");
expect(() => {ms932Encoder.encode("\uDA32")}).to.throw(Error, "EncodingError U+DA32");
expect(() => {ms932Encoder.encode("\uDA33")}).to.throw(Error, "EncodingError U+DA33");
expect(() => {ms932Encoder.encode("\uDA34")}).to.throw(Error, "EncodingError U+DA34");
expect(() => {ms932Encoder.encode("\uDA35")}).to.throw(Error, "EncodingError U+DA35");
expect(() => {ms932Encoder.encode("\uDA36")}).to.throw(Error, "EncodingError U+DA36");
expect(() => {ms932Encoder.encode("\uDA37")}).to.throw(Error, "EncodingError U+DA37");
expect(() => {ms932Encoder.encode("\uDA38")}).to.throw(Error, "EncodingError U+DA38");
expect(() => {ms932Encoder.encode("\uDA39")}).to.throw(Error, "EncodingError U+DA39");
expect(() => {ms932Encoder.encode("\uDA3A")}).to.throw(Error, "EncodingError U+DA3A");
expect(() => {ms932Encoder.encode("\uDA3B")}).to.throw(Error, "EncodingError U+DA3B");
expect(() => {ms932Encoder.encode("\uDA3C")}).to.throw(Error, "EncodingError U+DA3C");
expect(() => {ms932Encoder.encode("\uDA3D")}).to.throw(Error, "EncodingError U+DA3D");
expect(() => {ms932Encoder.encode("\uDA3E")}).to.throw(Error, "EncodingError U+DA3E");
expect(() => {ms932Encoder.encode("\uDA3F")}).to.throw(Error, "EncodingError U+DA3F");
expect(() => {ms932Encoder.encode("\uDA40")}).to.throw(Error, "EncodingError U+DA40");
expect(() => {ms932Encoder.encode("\uDA41")}).to.throw(Error, "EncodingError U+DA41");
expect(() => {ms932Encoder.encode("\uDA42")}).to.throw(Error, "EncodingError U+DA42");
expect(() => {ms932Encoder.encode("\uDA43")}).to.throw(Error, "EncodingError U+DA43");
expect(() => {ms932Encoder.encode("\uDA44")}).to.throw(Error, "EncodingError U+DA44");
expect(() => {ms932Encoder.encode("\uDA45")}).to.throw(Error, "EncodingError U+DA45");
expect(() => {ms932Encoder.encode("\uDA46")}).to.throw(Error, "EncodingError U+DA46");
expect(() => {ms932Encoder.encode("\uDA47")}).to.throw(Error, "EncodingError U+DA47");
expect(() => {ms932Encoder.encode("\uDA48")}).to.throw(Error, "EncodingError U+DA48");
expect(() => {ms932Encoder.encode("\uDA49")}).to.throw(Error, "EncodingError U+DA49");
expect(() => {ms932Encoder.encode("\uDA4A")}).to.throw(Error, "EncodingError U+DA4A");
expect(() => {ms932Encoder.encode("\uDA4B")}).to.throw(Error, "EncodingError U+DA4B");
expect(() => {ms932Encoder.encode("\uDA4C")}).to.throw(Error, "EncodingError U+DA4C");
expect(() => {ms932Encoder.encode("\uDA4D")}).to.throw(Error, "EncodingError U+DA4D");
expect(() => {ms932Encoder.encode("\uDA4E")}).to.throw(Error, "EncodingError U+DA4E");
expect(() => {ms932Encoder.encode("\uDA4F")}).to.throw(Error, "EncodingError U+DA4F");
expect(() => {ms932Encoder.encode("\uDA50")}).to.throw(Error, "EncodingError U+DA50");
expect(() => {ms932Encoder.encode("\uDA51")}).to.throw(Error, "EncodingError U+DA51");
expect(() => {ms932Encoder.encode("\uDA52")}).to.throw(Error, "EncodingError U+DA52");
expect(() => {ms932Encoder.encode("\uDA53")}).to.throw(Error, "EncodingError U+DA53");
expect(() => {ms932Encoder.encode("\uDA54")}).to.throw(Error, "EncodingError U+DA54");
expect(() => {ms932Encoder.encode("\uDA55")}).to.throw(Error, "EncodingError U+DA55");
expect(() => {ms932Encoder.encode("\uDA56")}).to.throw(Error, "EncodingError U+DA56");
expect(() => {ms932Encoder.encode("\uDA57")}).to.throw(Error, "EncodingError U+DA57");
expect(() => {ms932Encoder.encode("\uDA58")}).to.throw(Error, "EncodingError U+DA58");
expect(() => {ms932Encoder.encode("\uDA59")}).to.throw(Error, "EncodingError U+DA59");
expect(() => {ms932Encoder.encode("\uDA5A")}).to.throw(Error, "EncodingError U+DA5A");
expect(() => {ms932Encoder.encode("\uDA5B")}).to.throw(Error, "EncodingError U+DA5B");
expect(() => {ms932Encoder.encode("\uDA5C")}).to.throw(Error, "EncodingError U+DA5C");
expect(() => {ms932Encoder.encode("\uDA5D")}).to.throw(Error, "EncodingError U+DA5D");
expect(() => {ms932Encoder.encode("\uDA5E")}).to.throw(Error, "EncodingError U+DA5E");
expect(() => {ms932Encoder.encode("\uDA5F")}).to.throw(Error, "EncodingError U+DA5F");
expect(() => {ms932Encoder.encode("\uDA60")}).to.throw(Error, "EncodingError U+DA60");
expect(() => {ms932Encoder.encode("\uDA61")}).to.throw(Error, "EncodingError U+DA61");
expect(() => {ms932Encoder.encode("\uDA62")}).to.throw(Error, "EncodingError U+DA62");
expect(() => {ms932Encoder.encode("\uDA63")}).to.throw(Error, "EncodingError U+DA63");
expect(() => {ms932Encoder.encode("\uDA64")}).to.throw(Error, "EncodingError U+DA64");
expect(() => {ms932Encoder.encode("\uDA65")}).to.throw(Error, "EncodingError U+DA65");
expect(() => {ms932Encoder.encode("\uDA66")}).to.throw(Error, "EncodingError U+DA66");
expect(() => {ms932Encoder.encode("\uDA67")}).to.throw(Error, "EncodingError U+DA67");
expect(() => {ms932Encoder.encode("\uDA68")}).to.throw(Error, "EncodingError U+DA68");
expect(() => {ms932Encoder.encode("\uDA69")}).to.throw(Error, "EncodingError U+DA69");
expect(() => {ms932Encoder.encode("\uDA6A")}).to.throw(Error, "EncodingError U+DA6A");
expect(() => {ms932Encoder.encode("\uDA6B")}).to.throw(Error, "EncodingError U+DA6B");
expect(() => {ms932Encoder.encode("\uDA6C")}).to.throw(Error, "EncodingError U+DA6C");
expect(() => {ms932Encoder.encode("\uDA6D")}).to.throw(Error, "EncodingError U+DA6D");
expect(() => {ms932Encoder.encode("\uDA6E")}).to.throw(Error, "EncodingError U+DA6E");
expect(() => {ms932Encoder.encode("\uDA6F")}).to.throw(Error, "EncodingError U+DA6F");
expect(() => {ms932Encoder.encode("\uDA70")}).to.throw(Error, "EncodingError U+DA70");
expect(() => {ms932Encoder.encode("\uDA71")}).to.throw(Error, "EncodingError U+DA71");
expect(() => {ms932Encoder.encode("\uDA72")}).to.throw(Error, "EncodingError U+DA72");
expect(() => {ms932Encoder.encode("\uDA73")}).to.throw(Error, "EncodingError U+DA73");
expect(() => {ms932Encoder.encode("\uDA74")}).to.throw(Error, "EncodingError U+DA74");
expect(() => {ms932Encoder.encode("\uDA75")}).to.throw(Error, "EncodingError U+DA75");
expect(() => {ms932Encoder.encode("\uDA76")}).to.throw(Error, "EncodingError U+DA76");
expect(() => {ms932Encoder.encode("\uDA77")}).to.throw(Error, "EncodingError U+DA77");
expect(() => {ms932Encoder.encode("\uDA78")}).to.throw(Error, "EncodingError U+DA78");
expect(() => {ms932Encoder.encode("\uDA79")}).to.throw(Error, "EncodingError U+DA79");
expect(() => {ms932Encoder.encode("\uDA7A")}).to.throw(Error, "EncodingError U+DA7A");
expect(() => {ms932Encoder.encode("\uDA7B")}).to.throw(Error, "EncodingError U+DA7B");
expect(() => {ms932Encoder.encode("\uDA7C")}).to.throw(Error, "EncodingError U+DA7C");
expect(() => {ms932Encoder.encode("\uDA7D")}).to.throw(Error, "EncodingError U+DA7D");
expect(() => {ms932Encoder.encode("\uDA7E")}).to.throw(Error, "EncodingError U+DA7E");
expect(() => {ms932Encoder.encode("\uDA7F")}).to.throw(Error, "EncodingError U+DA7F");
expect(() => {ms932Encoder.encode("\uDA80")}).to.throw(Error, "EncodingError U+DA80");
expect(() => {ms932Encoder.encode("\uDA81")}).to.throw(Error, "EncodingError U+DA81");
expect(() => {ms932Encoder.encode("\uDA82")}).to.throw(Error, "EncodingError U+DA82");
expect(() => {ms932Encoder.encode("\uDA83")}).to.throw(Error, "EncodingError U+DA83");
expect(() => {ms932Encoder.encode("\uDA84")}).to.throw(Error, "EncodingError U+DA84");
expect(() => {ms932Encoder.encode("\uDA85")}).to.throw(Error, "EncodingError U+DA85");
expect(() => {ms932Encoder.encode("\uDA86")}).to.throw(Error, "EncodingError U+DA86");
expect(() => {ms932Encoder.encode("\uDA87")}).to.throw(Error, "EncodingError U+DA87");
expect(() => {ms932Encoder.encode("\uDA88")}).to.throw(Error, "EncodingError U+DA88");
expect(() => {ms932Encoder.encode("\uDA89")}).to.throw(Error, "EncodingError U+DA89");
expect(() => {ms932Encoder.encode("\uDA8A")}).to.throw(Error, "EncodingError U+DA8A");
expect(() => {ms932Encoder.encode("\uDA8B")}).to.throw(Error, "EncodingError U+DA8B");
expect(() => {ms932Encoder.encode("\uDA8C")}).to.throw(Error, "EncodingError U+DA8C");
expect(() => {ms932Encoder.encode("\uDA8D")}).to.throw(Error, "EncodingError U+DA8D");
expect(() => {ms932Encoder.encode("\uDA8E")}).to.throw(Error, "EncodingError U+DA8E");
expect(() => {ms932Encoder.encode("\uDA8F")}).to.throw(Error, "EncodingError U+DA8F");
expect(() => {ms932Encoder.encode("\uDA90")}).to.throw(Error, "EncodingError U+DA90");
expect(() => {ms932Encoder.encode("\uDA91")}).to.throw(Error, "EncodingError U+DA91");
expect(() => {ms932Encoder.encode("\uDA92")}).to.throw(Error, "EncodingError U+DA92");
expect(() => {ms932Encoder.encode("\uDA93")}).to.throw(Error, "EncodingError U+DA93");
expect(() => {ms932Encoder.encode("\uDA94")}).to.throw(Error, "EncodingError U+DA94");
expect(() => {ms932Encoder.encode("\uDA95")}).to.throw(Error, "EncodingError U+DA95");
expect(() => {ms932Encoder.encode("\uDA96")}).to.throw(Error, "EncodingError U+DA96");
expect(() => {ms932Encoder.encode("\uDA97")}).to.throw(Error, "EncodingError U+DA97");
expect(() => {ms932Encoder.encode("\uDA98")}).to.throw(Error, "EncodingError U+DA98");
expect(() => {ms932Encoder.encode("\uDA99")}).to.throw(Error, "EncodingError U+DA99");
expect(() => {ms932Encoder.encode("\uDA9A")}).to.throw(Error, "EncodingError U+DA9A");
expect(() => {ms932Encoder.encode("\uDA9B")}).to.throw(Error, "EncodingError U+DA9B");
expect(() => {ms932Encoder.encode("\uDA9C")}).to.throw(Error, "EncodingError U+DA9C");
expect(() => {ms932Encoder.encode("\uDA9D")}).to.throw(Error, "EncodingError U+DA9D");
expect(() => {ms932Encoder.encode("\uDA9E")}).to.throw(Error, "EncodingError U+DA9E");
expect(() => {ms932Encoder.encode("\uDA9F")}).to.throw(Error, "EncodingError U+DA9F");
expect(() => {ms932Encoder.encode("\uDAA0")}).to.throw(Error, "EncodingError U+DAA0");
expect(() => {ms932Encoder.encode("\uDAA1")}).to.throw(Error, "EncodingError U+DAA1");
expect(() => {ms932Encoder.encode("\uDAA2")}).to.throw(Error, "EncodingError U+DAA2");
expect(() => {ms932Encoder.encode("\uDAA3")}).to.throw(Error, "EncodingError U+DAA3");
expect(() => {ms932Encoder.encode("\uDAA4")}).to.throw(Error, "EncodingError U+DAA4");
expect(() => {ms932Encoder.encode("\uDAA5")}).to.throw(Error, "EncodingError U+DAA5");
expect(() => {ms932Encoder.encode("\uDAA6")}).to.throw(Error, "EncodingError U+DAA6");
expect(() => {ms932Encoder.encode("\uDAA7")}).to.throw(Error, "EncodingError U+DAA7");
expect(() => {ms932Encoder.encode("\uDAA8")}).to.throw(Error, "EncodingError U+DAA8");
expect(() => {ms932Encoder.encode("\uDAA9")}).to.throw(Error, "EncodingError U+DAA9");
expect(() => {ms932Encoder.encode("\uDAAA")}).to.throw(Error, "EncodingError U+DAAA");
expect(() => {ms932Encoder.encode("\uDAAB")}).to.throw(Error, "EncodingError U+DAAB");
expect(() => {ms932Encoder.encode("\uDAAC")}).to.throw(Error, "EncodingError U+DAAC");
expect(() => {ms932Encoder.encode("\uDAAD")}).to.throw(Error, "EncodingError U+DAAD");
expect(() => {ms932Encoder.encode("\uDAAE")}).to.throw(Error, "EncodingError U+DAAE");
expect(() => {ms932Encoder.encode("\uDAAF")}).to.throw(Error, "EncodingError U+DAAF");
expect(() => {ms932Encoder.encode("\uDAB0")}).to.throw(Error, "EncodingError U+DAB0");
expect(() => {ms932Encoder.encode("\uDAB1")}).to.throw(Error, "EncodingError U+DAB1");
expect(() => {ms932Encoder.encode("\uDAB2")}).to.throw(Error, "EncodingError U+DAB2");
expect(() => {ms932Encoder.encode("\uDAB3")}).to.throw(Error, "EncodingError U+DAB3");
expect(() => {ms932Encoder.encode("\uDAB4")}).to.throw(Error, "EncodingError U+DAB4");
expect(() => {ms932Encoder.encode("\uDAB5")}).to.throw(Error, "EncodingError U+DAB5");
expect(() => {ms932Encoder.encode("\uDAB6")}).to.throw(Error, "EncodingError U+DAB6");
expect(() => {ms932Encoder.encode("\uDAB7")}).to.throw(Error, "EncodingError U+DAB7");
expect(() => {ms932Encoder.encode("\uDAB8")}).to.throw(Error, "EncodingError U+DAB8");
expect(() => {ms932Encoder.encode("\uDAB9")}).to.throw(Error, "EncodingError U+DAB9");
expect(() => {ms932Encoder.encode("\uDABA")}).to.throw(Error, "EncodingError U+DABA");
expect(() => {ms932Encoder.encode("\uDABB")}).to.throw(Error, "EncodingError U+DABB");
expect(() => {ms932Encoder.encode("\uDABC")}).to.throw(Error, "EncodingError U+DABC");
expect(() => {ms932Encoder.encode("\uDABD")}).to.throw(Error, "EncodingError U+DABD");
expect(() => {ms932Encoder.encode("\uDABE")}).to.throw(Error, "EncodingError U+DABE");
expect(() => {ms932Encoder.encode("\uDABF")}).to.throw(Error, "EncodingError U+DABF");
expect(() => {ms932Encoder.encode("\uDAC0")}).to.throw(Error, "EncodingError U+DAC0");
expect(() => {ms932Encoder.encode("\uDAC1")}).to.throw(Error, "EncodingError U+DAC1");
expect(() => {ms932Encoder.encode("\uDAC2")}).to.throw(Error, "EncodingError U+DAC2");
expect(() => {ms932Encoder.encode("\uDAC3")}).to.throw(Error, "EncodingError U+DAC3");
expect(() => {ms932Encoder.encode("\uDAC4")}).to.throw(Error, "EncodingError U+DAC4");
expect(() => {ms932Encoder.encode("\uDAC5")}).to.throw(Error, "EncodingError U+DAC5");
expect(() => {ms932Encoder.encode("\uDAC6")}).to.throw(Error, "EncodingError U+DAC6");
expect(() => {ms932Encoder.encode("\uDAC7")}).to.throw(Error, "EncodingError U+DAC7");
expect(() => {ms932Encoder.encode("\uDAC8")}).to.throw(Error, "EncodingError U+DAC8");
expect(() => {ms932Encoder.encode("\uDAC9")}).to.throw(Error, "EncodingError U+DAC9");
expect(() => {ms932Encoder.encode("\uDACA")}).to.throw(Error, "EncodingError U+DACA");
expect(() => {ms932Encoder.encode("\uDACB")}).to.throw(Error, "EncodingError U+DACB");
expect(() => {ms932Encoder.encode("\uDACC")}).to.throw(Error, "EncodingError U+DACC");
expect(() => {ms932Encoder.encode("\uDACD")}).to.throw(Error, "EncodingError U+DACD");
expect(() => {ms932Encoder.encode("\uDACE")}).to.throw(Error, "EncodingError U+DACE");
expect(() => {ms932Encoder.encode("\uDACF")}).to.throw(Error, "EncodingError U+DACF");
expect(() => {ms932Encoder.encode("\uDAD0")}).to.throw(Error, "EncodingError U+DAD0");
expect(() => {ms932Encoder.encode("\uDAD1")}).to.throw(Error, "EncodingError U+DAD1");
expect(() => {ms932Encoder.encode("\uDAD2")}).to.throw(Error, "EncodingError U+DAD2");
expect(() => {ms932Encoder.encode("\uDAD3")}).to.throw(Error, "EncodingError U+DAD3");
expect(() => {ms932Encoder.encode("\uDAD4")}).to.throw(Error, "EncodingError U+DAD4");
expect(() => {ms932Encoder.encode("\uDAD5")}).to.throw(Error, "EncodingError U+DAD5");
expect(() => {ms932Encoder.encode("\uDAD6")}).to.throw(Error, "EncodingError U+DAD6");
expect(() => {ms932Encoder.encode("\uDAD7")}).to.throw(Error, "EncodingError U+DAD7");
expect(() => {ms932Encoder.encode("\uDAD8")}).to.throw(Error, "EncodingError U+DAD8");
expect(() => {ms932Encoder.encode("\uDAD9")}).to.throw(Error, "EncodingError U+DAD9");
expect(() => {ms932Encoder.encode("\uDADA")}).to.throw(Error, "EncodingError U+DADA");
expect(() => {ms932Encoder.encode("\uDADB")}).to.throw(Error, "EncodingError U+DADB");
expect(() => {ms932Encoder.encode("\uDADC")}).to.throw(Error, "EncodingError U+DADC");
expect(() => {ms932Encoder.encode("\uDADD")}).to.throw(Error, "EncodingError U+DADD");
expect(() => {ms932Encoder.encode("\uDADE")}).to.throw(Error, "EncodingError U+DADE");
expect(() => {ms932Encoder.encode("\uDADF")}).to.throw(Error, "EncodingError U+DADF");
expect(() => {ms932Encoder.encode("\uDAE0")}).to.throw(Error, "EncodingError U+DAE0");
expect(() => {ms932Encoder.encode("\uDAE1")}).to.throw(Error, "EncodingError U+DAE1");
expect(() => {ms932Encoder.encode("\uDAE2")}).to.throw(Error, "EncodingError U+DAE2");
expect(() => {ms932Encoder.encode("\uDAE3")}).to.throw(Error, "EncodingError U+DAE3");
expect(() => {ms932Encoder.encode("\uDAE4")}).to.throw(Error, "EncodingError U+DAE4");
expect(() => {ms932Encoder.encode("\uDAE5")}).to.throw(Error, "EncodingError U+DAE5");
expect(() => {ms932Encoder.encode("\uDAE6")}).to.throw(Error, "EncodingError U+DAE6");
expect(() => {ms932Encoder.encode("\uDAE7")}).to.throw(Error, "EncodingError U+DAE7");
expect(() => {ms932Encoder.encode("\uDAE8")}).to.throw(Error, "EncodingError U+DAE8");
expect(() => {ms932Encoder.encode("\uDAE9")}).to.throw(Error, "EncodingError U+DAE9");
expect(() => {ms932Encoder.encode("\uDAEA")}).to.throw(Error, "EncodingError U+DAEA");
expect(() => {ms932Encoder.encode("\uDAEB")}).to.throw(Error, "EncodingError U+DAEB");
expect(() => {ms932Encoder.encode("\uDAEC")}).to.throw(Error, "EncodingError U+DAEC");
expect(() => {ms932Encoder.encode("\uDAED")}).to.throw(Error, "EncodingError U+DAED");
expect(() => {ms932Encoder.encode("\uDAEE")}).to.throw(Error, "EncodingError U+DAEE");
expect(() => {ms932Encoder.encode("\uDAEF")}).to.throw(Error, "EncodingError U+DAEF");
expect(() => {ms932Encoder.encode("\uDAF0")}).to.throw(Error, "EncodingError U+DAF0");
expect(() => {ms932Encoder.encode("\uDAF1")}).to.throw(Error, "EncodingError U+DAF1");
expect(() => {ms932Encoder.encode("\uDAF2")}).to.throw(Error, "EncodingError U+DAF2");
expect(() => {ms932Encoder.encode("\uDAF3")}).to.throw(Error, "EncodingError U+DAF3");
expect(() => {ms932Encoder.encode("\uDAF4")}).to.throw(Error, "EncodingError U+DAF4");
expect(() => {ms932Encoder.encode("\uDAF5")}).to.throw(Error, "EncodingError U+DAF5");
expect(() => {ms932Encoder.encode("\uDAF6")}).to.throw(Error, "EncodingError U+DAF6");
expect(() => {ms932Encoder.encode("\uDAF7")}).to.throw(Error, "EncodingError U+DAF7");
expect(() => {ms932Encoder.encode("\uDAF8")}).to.throw(Error, "EncodingError U+DAF8");
expect(() => {ms932Encoder.encode("\uDAF9")}).to.throw(Error, "EncodingError U+DAF9");
expect(() => {ms932Encoder.encode("\uDAFA")}).to.throw(Error, "EncodingError U+DAFA");
expect(() => {ms932Encoder.encode("\uDAFB")}).to.throw(Error, "EncodingError U+DAFB");
expect(() => {ms932Encoder.encode("\uDAFC")}).to.throw(Error, "EncodingError U+DAFC");
expect(() => {ms932Encoder.encode("\uDAFD")}).to.throw(Error, "EncodingError U+DAFD");
expect(() => {ms932Encoder.encode("\uDAFE")}).to.throw(Error, "EncodingError U+DAFE");
expect(() => {ms932Encoder.encode("\uDAFF")}).to.throw(Error, "EncodingError U+DAFF");
expect(() => {ms932Encoder.encode("\uDB00")}).to.throw(Error, "EncodingError U+DB00");
expect(() => {ms932Encoder.encode("\uDB01")}).to.throw(Error, "EncodingError U+DB01");
expect(() => {ms932Encoder.encode("\uDB02")}).to.throw(Error, "EncodingError U+DB02");
expect(() => {ms932Encoder.encode("\uDB03")}).to.throw(Error, "EncodingError U+DB03");
expect(() => {ms932Encoder.encode("\uDB04")}).to.throw(Error, "EncodingError U+DB04");
expect(() => {ms932Encoder.encode("\uDB05")}).to.throw(Error, "EncodingError U+DB05");
expect(() => {ms932Encoder.encode("\uDB06")}).to.throw(Error, "EncodingError U+DB06");
expect(() => {ms932Encoder.encode("\uDB07")}).to.throw(Error, "EncodingError U+DB07");
expect(() => {ms932Encoder.encode("\uDB08")}).to.throw(Error, "EncodingError U+DB08");
expect(() => {ms932Encoder.encode("\uDB09")}).to.throw(Error, "EncodingError U+DB09");
expect(() => {ms932Encoder.encode("\uDB0A")}).to.throw(Error, "EncodingError U+DB0A");
expect(() => {ms932Encoder.encode("\uDB0B")}).to.throw(Error, "EncodingError U+DB0B");
expect(() => {ms932Encoder.encode("\uDB0C")}).to.throw(Error, "EncodingError U+DB0C");
expect(() => {ms932Encoder.encode("\uDB0D")}).to.throw(Error, "EncodingError U+DB0D");
expect(() => {ms932Encoder.encode("\uDB0E")}).to.throw(Error, "EncodingError U+DB0E");
expect(() => {ms932Encoder.encode("\uDB0F")}).to.throw(Error, "EncodingError U+DB0F");
expect(() => {ms932Encoder.encode("\uDB10")}).to.throw(Error, "EncodingError U+DB10");
expect(() => {ms932Encoder.encode("\uDB11")}).to.throw(Error, "EncodingError U+DB11");
expect(() => {ms932Encoder.encode("\uDB12")}).to.throw(Error, "EncodingError U+DB12");
expect(() => {ms932Encoder.encode("\uDB13")}).to.throw(Error, "EncodingError U+DB13");
expect(() => {ms932Encoder.encode("\uDB14")}).to.throw(Error, "EncodingError U+DB14");
expect(() => {ms932Encoder.encode("\uDB15")}).to.throw(Error, "EncodingError U+DB15");
expect(() => {ms932Encoder.encode("\uDB16")}).to.throw(Error, "EncodingError U+DB16");
expect(() => {ms932Encoder.encode("\uDB17")}).to.throw(Error, "EncodingError U+DB17");
expect(() => {ms932Encoder.encode("\uDB18")}).to.throw(Error, "EncodingError U+DB18");
expect(() => {ms932Encoder.encode("\uDB19")}).to.throw(Error, "EncodingError U+DB19");
expect(() => {ms932Encoder.encode("\uDB1A")}).to.throw(Error, "EncodingError U+DB1A");
expect(() => {ms932Encoder.encode("\uDB1B")}).to.throw(Error, "EncodingError U+DB1B");
expect(() => {ms932Encoder.encode("\uDB1C")}).to.throw(Error, "EncodingError U+DB1C");
expect(() => {ms932Encoder.encode("\uDB1D")}).to.throw(Error, "EncodingError U+DB1D");
expect(() => {ms932Encoder.encode("\uDB1E")}).to.throw(Error, "EncodingError U+DB1E");
expect(() => {ms932Encoder.encode("\uDB1F")}).to.throw(Error, "EncodingError U+DB1F");
expect(() => {ms932Encoder.encode("\uDB20")}).to.throw(Error, "EncodingError U+DB20");
expect(() => {ms932Encoder.encode("\uDB21")}).to.throw(Error, "EncodingError U+DB21");
expect(() => {ms932Encoder.encode("\uDB22")}).to.throw(Error, "EncodingError U+DB22");
expect(() => {ms932Encoder.encode("\uDB23")}).to.throw(Error, "EncodingError U+DB23");
expect(() => {ms932Encoder.encode("\uDB24")}).to.throw(Error, "EncodingError U+DB24");
expect(() => {ms932Encoder.encode("\uDB25")}).to.throw(Error, "EncodingError U+DB25");
expect(() => {ms932Encoder.encode("\uDB26")}).to.throw(Error, "EncodingError U+DB26");
expect(() => {ms932Encoder.encode("\uDB27")}).to.throw(Error, "EncodingError U+DB27");
expect(() => {ms932Encoder.encode("\uDB28")}).to.throw(Error, "EncodingError U+DB28");
expect(() => {ms932Encoder.encode("\uDB29")}).to.throw(Error, "EncodingError U+DB29");
expect(() => {ms932Encoder.encode("\uDB2A")}).to.throw(Error, "EncodingError U+DB2A");
expect(() => {ms932Encoder.encode("\uDB2B")}).to.throw(Error, "EncodingError U+DB2B");
expect(() => {ms932Encoder.encode("\uDB2C")}).to.throw(Error, "EncodingError U+DB2C");
expect(() => {ms932Encoder.encode("\uDB2D")}).to.throw(Error, "EncodingError U+DB2D");
expect(() => {ms932Encoder.encode("\uDB2E")}).to.throw(Error, "EncodingError U+DB2E");
expect(() => {ms932Encoder.encode("\uDB2F")}).to.throw(Error, "EncodingError U+DB2F");
expect(() => {ms932Encoder.encode("\uDB30")}).to.throw(Error, "EncodingError U+DB30");
expect(() => {ms932Encoder.encode("\uDB31")}).to.throw(Error, "EncodingError U+DB31");
expect(() => {ms932Encoder.encode("\uDB32")}).to.throw(Error, "EncodingError U+DB32");
expect(() => {ms932Encoder.encode("\uDB33")}).to.throw(Error, "EncodingError U+DB33");
expect(() => {ms932Encoder.encode("\uDB34")}).to.throw(Error, "EncodingError U+DB34");
expect(() => {ms932Encoder.encode("\uDB35")}).to.throw(Error, "EncodingError U+DB35");
expect(() => {ms932Encoder.encode("\uDB36")}).to.throw(Error, "EncodingError U+DB36");
expect(() => {ms932Encoder.encode("\uDB37")}).to.throw(Error, "EncodingError U+DB37");
expect(() => {ms932Encoder.encode("\uDB38")}).to.throw(Error, "EncodingError U+DB38");
expect(() => {ms932Encoder.encode("\uDB39")}).to.throw(Error, "EncodingError U+DB39");
expect(() => {ms932Encoder.encode("\uDB3A")}).to.throw(Error, "EncodingError U+DB3A");
expect(() => {ms932Encoder.encode("\uDB3B")}).to.throw(Error, "EncodingError U+DB3B");
expect(() => {ms932Encoder.encode("\uDB3C")}).to.throw(Error, "EncodingError U+DB3C");
expect(() => {ms932Encoder.encode("\uDB3D")}).to.throw(Error, "EncodingError U+DB3D");
expect(() => {ms932Encoder.encode("\uDB3E")}).to.throw(Error, "EncodingError U+DB3E");
expect(() => {ms932Encoder.encode("\uDB3F")}).to.throw(Error, "EncodingError U+DB3F");
expect(() => {ms932Encoder.encode("\uDB40")}).to.throw(Error, "EncodingError U+DB40");
expect(() => {ms932Encoder.encode("\uDB41")}).to.throw(Error, "EncodingError U+DB41");
expect(() => {ms932Encoder.encode("\uDB42")}).to.throw(Error, "EncodingError U+DB42");
expect(() => {ms932Encoder.encode("\uDB43")}).to.throw(Error, "EncodingError U+DB43");
expect(() => {ms932Encoder.encode("\uDB44")}).to.throw(Error, "EncodingError U+DB44");
expect(() => {ms932Encoder.encode("\uDB45")}).to.throw(Error, "EncodingError U+DB45");
expect(() => {ms932Encoder.encode("\uDB46")}).to.throw(Error, "EncodingError U+DB46");
expect(() => {ms932Encoder.encode("\uDB47")}).to.throw(Error, "EncodingError U+DB47");
expect(() => {ms932Encoder.encode("\uDB48")}).to.throw(Error, "EncodingError U+DB48");
expect(() => {ms932Encoder.encode("\uDB49")}).to.throw(Error, "EncodingError U+DB49");
expect(() => {ms932Encoder.encode("\uDB4A")}).to.throw(Error, "EncodingError U+DB4A");
expect(() => {ms932Encoder.encode("\uDB4B")}).to.throw(Error, "EncodingError U+DB4B");
expect(() => {ms932Encoder.encode("\uDB4C")}).to.throw(Error, "EncodingError U+DB4C");
expect(() => {ms932Encoder.encode("\uDB4D")}).to.throw(Error, "EncodingError U+DB4D");
expect(() => {ms932Encoder.encode("\uDB4E")}).to.throw(Error, "EncodingError U+DB4E");
expect(() => {ms932Encoder.encode("\uDB4F")}).to.throw(Error, "EncodingError U+DB4F");
expect(() => {ms932Encoder.encode("\uDB50")}).to.throw(Error, "EncodingError U+DB50");
expect(() => {ms932Encoder.encode("\uDB51")}).to.throw(Error, "EncodingError U+DB51");
expect(() => {ms932Encoder.encode("\uDB52")}).to.throw(Error, "EncodingError U+DB52");
expect(() => {ms932Encoder.encode("\uDB53")}).to.throw(Error, "EncodingError U+DB53");
expect(() => {ms932Encoder.encode("\uDB54")}).to.throw(Error, "EncodingError U+DB54");
expect(() => {ms932Encoder.encode("\uDB55")}).to.throw(Error, "EncodingError U+DB55");
expect(() => {ms932Encoder.encode("\uDB56")}).to.throw(Error, "EncodingError U+DB56");
expect(() => {ms932Encoder.encode("\uDB57")}).to.throw(Error, "EncodingError U+DB57");
expect(() => {ms932Encoder.encode("\uDB58")}).to.throw(Error, "EncodingError U+DB58");
expect(() => {ms932Encoder.encode("\uDB59")}).to.throw(Error, "EncodingError U+DB59");
expect(() => {ms932Encoder.encode("\uDB5A")}).to.throw(Error, "EncodingError U+DB5A");
expect(() => {ms932Encoder.encode("\uDB5B")}).to.throw(Error, "EncodingError U+DB5B");
expect(() => {ms932Encoder.encode("\uDB5C")}).to.throw(Error, "EncodingError U+DB5C");
expect(() => {ms932Encoder.encode("\uDB5D")}).to.throw(Error, "EncodingError U+DB5D");
expect(() => {ms932Encoder.encode("\uDB5E")}).to.throw(Error, "EncodingError U+DB5E");
expect(() => {ms932Encoder.encode("\uDB5F")}).to.throw(Error, "EncodingError U+DB5F");
expect(() => {ms932Encoder.encode("\uDB60")}).to.throw(Error, "EncodingError U+DB60");
expect(() => {ms932Encoder.encode("\uDB61")}).to.throw(Error, "EncodingError U+DB61");
expect(() => {ms932Encoder.encode("\uDB62")}).to.throw(Error, "EncodingError U+DB62");
expect(() => {ms932Encoder.encode("\uDB63")}).to.throw(Error, "EncodingError U+DB63");
expect(() => {ms932Encoder.encode("\uDB64")}).to.throw(Error, "EncodingError U+DB64");
expect(() => {ms932Encoder.encode("\uDB65")}).to.throw(Error, "EncodingError U+DB65");
expect(() => {ms932Encoder.encode("\uDB66")}).to.throw(Error, "EncodingError U+DB66");
expect(() => {ms932Encoder.encode("\uDB67")}).to.throw(Error, "EncodingError U+DB67");
expect(() => {ms932Encoder.encode("\uDB68")}).to.throw(Error, "EncodingError U+DB68");
expect(() => {ms932Encoder.encode("\uDB69")}).to.throw(Error, "EncodingError U+DB69");
expect(() => {ms932Encoder.encode("\uDB6A")}).to.throw(Error, "EncodingError U+DB6A");
expect(() => {ms932Encoder.encode("\uDB6B")}).to.throw(Error, "EncodingError U+DB6B");
expect(() => {ms932Encoder.encode("\uDB6C")}).to.throw(Error, "EncodingError U+DB6C");
expect(() => {ms932Encoder.encode("\uDB6D")}).to.throw(Error, "EncodingError U+DB6D");
expect(() => {ms932Encoder.encode("\uDB6E")}).to.throw(Error, "EncodingError U+DB6E");
expect(() => {ms932Encoder.encode("\uDB6F")}).to.throw(Error, "EncodingError U+DB6F");
expect(() => {ms932Encoder.encode("\uDB70")}).to.throw(Error, "EncodingError U+DB70");
expect(() => {ms932Encoder.encode("\uDB71")}).to.throw(Error, "EncodingError U+DB71");
expect(() => {ms932Encoder.encode("\uDB72")}).to.throw(Error, "EncodingError U+DB72");
expect(() => {ms932Encoder.encode("\uDB73")}).to.throw(Error, "EncodingError U+DB73");
expect(() => {ms932Encoder.encode("\uDB74")}).to.throw(Error, "EncodingError U+DB74");
expect(() => {ms932Encoder.encode("\uDB75")}).to.throw(Error, "EncodingError U+DB75");
expect(() => {ms932Encoder.encode("\uDB76")}).to.throw(Error, "EncodingError U+DB76");
expect(() => {ms932Encoder.encode("\uDB77")}).to.throw(Error, "EncodingError U+DB77");
expect(() => {ms932Encoder.encode("\uDB78")}).to.throw(Error, "EncodingError U+DB78");
expect(() => {ms932Encoder.encode("\uDB79")}).to.throw(Error, "EncodingError U+DB79");
expect(() => {ms932Encoder.encode("\uDB7A")}).to.throw(Error, "EncodingError U+DB7A");
expect(() => {ms932Encoder.encode("\uDB7B")}).to.throw(Error, "EncodingError U+DB7B");
expect(() => {ms932Encoder.encode("\uDB7C")}).to.throw(Error, "EncodingError U+DB7C");
expect(() => {ms932Encoder.encode("\uDB7D")}).to.throw(Error, "EncodingError U+DB7D");
expect(() => {ms932Encoder.encode("\uDB7E")}).to.throw(Error, "EncodingError U+DB7E");
expect(() => {ms932Encoder.encode("\uDB7F")}).to.throw(Error, "EncodingError U+DB7F");
expect(() => {ms932Encoder.encode("\uDB80")}).to.throw(Error, "EncodingError U+DB80");
expect(() => {ms932Encoder.encode("\uDB81")}).to.throw(Error, "EncodingError U+DB81");
expect(() => {ms932Encoder.encode("\uDB82")}).to.throw(Error, "EncodingError U+DB82");
expect(() => {ms932Encoder.encode("\uDB83")}).to.throw(Error, "EncodingError U+DB83");
expect(() => {ms932Encoder.encode("\uDB84")}).to.throw(Error, "EncodingError U+DB84");
expect(() => {ms932Encoder.encode("\uDB85")}).to.throw(Error, "EncodingError U+DB85");
expect(() => {ms932Encoder.encode("\uDB86")}).to.throw(Error, "EncodingError U+DB86");
expect(() => {ms932Encoder.encode("\uDB87")}).to.throw(Error, "EncodingError U+DB87");
expect(() => {ms932Encoder.encode("\uDB88")}).to.throw(Error, "EncodingError U+DB88");
expect(() => {ms932Encoder.encode("\uDB89")}).to.throw(Error, "EncodingError U+DB89");
expect(() => {ms932Encoder.encode("\uDB8A")}).to.throw(Error, "EncodingError U+DB8A");
expect(() => {ms932Encoder.encode("\uDB8B")}).to.throw(Error, "EncodingError U+DB8B");
expect(() => {ms932Encoder.encode("\uDB8C")}).to.throw(Error, "EncodingError U+DB8C");
expect(() => {ms932Encoder.encode("\uDB8D")}).to.throw(Error, "EncodingError U+DB8D");
expect(() => {ms932Encoder.encode("\uDB8E")}).to.throw(Error, "EncodingError U+DB8E");
expect(() => {ms932Encoder.encode("\uDB8F")}).to.throw(Error, "EncodingError U+DB8F");
expect(() => {ms932Encoder.encode("\uDB90")}).to.throw(Error, "EncodingError U+DB90");
expect(() => {ms932Encoder.encode("\uDB91")}).to.throw(Error, "EncodingError U+DB91");
expect(() => {ms932Encoder.encode("\uDB92")}).to.throw(Error, "EncodingError U+DB92");
expect(() => {ms932Encoder.encode("\uDB93")}).to.throw(Error, "EncodingError U+DB93");
expect(() => {ms932Encoder.encode("\uDB94")}).to.throw(Error, "EncodingError U+DB94");
expect(() => {ms932Encoder.encode("\uDB95")}).to.throw(Error, "EncodingError U+DB95");
expect(() => {ms932Encoder.encode("\uDB96")}).to.throw(Error, "EncodingError U+DB96");
expect(() => {ms932Encoder.encode("\uDB97")}).to.throw(Error, "EncodingError U+DB97");
expect(() => {ms932Encoder.encode("\uDB98")}).to.throw(Error, "EncodingError U+DB98");
expect(() => {ms932Encoder.encode("\uDB99")}).to.throw(Error, "EncodingError U+DB99");
expect(() => {ms932Encoder.encode("\uDB9A")}).to.throw(Error, "EncodingError U+DB9A");
expect(() => {ms932Encoder.encode("\uDB9B")}).to.throw(Error, "EncodingError U+DB9B");
expect(() => {ms932Encoder.encode("\uDB9C")}).to.throw(Error, "EncodingError U+DB9C");
expect(() => {ms932Encoder.encode("\uDB9D")}).to.throw(Error, "EncodingError U+DB9D");
expect(() => {ms932Encoder.encode("\uDB9E")}).to.throw(Error, "EncodingError U+DB9E");
expect(() => {ms932Encoder.encode("\uDB9F")}).to.throw(Error, "EncodingError U+DB9F");
expect(() => {ms932Encoder.encode("\uDBA0")}).to.throw(Error, "EncodingError U+DBA0");
expect(() => {ms932Encoder.encode("\uDBA1")}).to.throw(Error, "EncodingError U+DBA1");
expect(() => {ms932Encoder.encode("\uDBA2")}).to.throw(Error, "EncodingError U+DBA2");
expect(() => {ms932Encoder.encode("\uDBA3")}).to.throw(Error, "EncodingError U+DBA3");
expect(() => {ms932Encoder.encode("\uDBA4")}).to.throw(Error, "EncodingError U+DBA4");
expect(() => {ms932Encoder.encode("\uDBA5")}).to.throw(Error, "EncodingError U+DBA5");
expect(() => {ms932Encoder.encode("\uDBA6")}).to.throw(Error, "EncodingError U+DBA6");
expect(() => {ms932Encoder.encode("\uDBA7")}).to.throw(Error, "EncodingError U+DBA7");
expect(() => {ms932Encoder.encode("\uDBA8")}).to.throw(Error, "EncodingError U+DBA8");
expect(() => {ms932Encoder.encode("\uDBA9")}).to.throw(Error, "EncodingError U+DBA9");
expect(() => {ms932Encoder.encode("\uDBAA")}).to.throw(Error, "EncodingError U+DBAA");
expect(() => {ms932Encoder.encode("\uDBAB")}).to.throw(Error, "EncodingError U+DBAB");
expect(() => {ms932Encoder.encode("\uDBAC")}).to.throw(Error, "EncodingError U+DBAC");
expect(() => {ms932Encoder.encode("\uDBAD")}).to.throw(Error, "EncodingError U+DBAD");
expect(() => {ms932Encoder.encode("\uDBAE")}).to.throw(Error, "EncodingError U+DBAE");
expect(() => {ms932Encoder.encode("\uDBAF")}).to.throw(Error, "EncodingError U+DBAF");
expect(() => {ms932Encoder.encode("\uDBB0")}).to.throw(Error, "EncodingError U+DBB0");
expect(() => {ms932Encoder.encode("\uDBB1")}).to.throw(Error, "EncodingError U+DBB1");
expect(() => {ms932Encoder.encode("\uDBB2")}).to.throw(Error, "EncodingError U+DBB2");
expect(() => {ms932Encoder.encode("\uDBB3")}).to.throw(Error, "EncodingError U+DBB3");
expect(() => {ms932Encoder.encode("\uDBB4")}).to.throw(Error, "EncodingError U+DBB4");
expect(() => {ms932Encoder.encode("\uDBB5")}).to.throw(Error, "EncodingError U+DBB5");
expect(() => {ms932Encoder.encode("\uDBB6")}).to.throw(Error, "EncodingError U+DBB6");
expect(() => {ms932Encoder.encode("\uDBB7")}).to.throw(Error, "EncodingError U+DBB7");
expect(() => {ms932Encoder.encode("\uDBB8")}).to.throw(Error, "EncodingError U+DBB8");
expect(() => {ms932Encoder.encode("\uDBB9")}).to.throw(Error, "EncodingError U+DBB9");
expect(() => {ms932Encoder.encode("\uDBBA")}).to.throw(Error, "EncodingError U+DBBA");
expect(() => {ms932Encoder.encode("\uDBBB")}).to.throw(Error, "EncodingError U+DBBB");
expect(() => {ms932Encoder.encode("\uDBBC")}).to.throw(Error, "EncodingError U+DBBC");
expect(() => {ms932Encoder.encode("\uDBBD")}).to.throw(Error, "EncodingError U+DBBD");
expect(() => {ms932Encoder.encode("\uDBBE")}).to.throw(Error, "EncodingError U+DBBE");
expect(() => {ms932Encoder.encode("\uDBBF")}).to.throw(Error, "EncodingError U+DBBF");
expect(() => {ms932Encoder.encode("\uDBC0")}).to.throw(Error, "EncodingError U+DBC0");
expect(() => {ms932Encoder.encode("\uDBC1")}).to.throw(Error, "EncodingError U+DBC1");
expect(() => {ms932Encoder.encode("\uDBC2")}).to.throw(Error, "EncodingError U+DBC2");
expect(() => {ms932Encoder.encode("\uDBC3")}).to.throw(Error, "EncodingError U+DBC3");
expect(() => {ms932Encoder.encode("\uDBC4")}).to.throw(Error, "EncodingError U+DBC4");
expect(() => {ms932Encoder.encode("\uDBC5")}).to.throw(Error, "EncodingError U+DBC5");
expect(() => {ms932Encoder.encode("\uDBC6")}).to.throw(Error, "EncodingError U+DBC6");
expect(() => {ms932Encoder.encode("\uDBC7")}).to.throw(Error, "EncodingError U+DBC7");
expect(() => {ms932Encoder.encode("\uDBC8")}).to.throw(Error, "EncodingError U+DBC8");
expect(() => {ms932Encoder.encode("\uDBC9")}).to.throw(Error, "EncodingError U+DBC9");
expect(() => {ms932Encoder.encode("\uDBCA")}).to.throw(Error, "EncodingError U+DBCA");
expect(() => {ms932Encoder.encode("\uDBCB")}).to.throw(Error, "EncodingError U+DBCB");
expect(() => {ms932Encoder.encode("\uDBCC")}).to.throw(Error, "EncodingError U+DBCC");
expect(() => {ms932Encoder.encode("\uDBCD")}).to.throw(Error, "EncodingError U+DBCD");
expect(() => {ms932Encoder.encode("\uDBCE")}).to.throw(Error, "EncodingError U+DBCE");
expect(() => {ms932Encoder.encode("\uDBCF")}).to.throw(Error, "EncodingError U+DBCF");
expect(() => {ms932Encoder.encode("\uDBD0")}).to.throw(Error, "EncodingError U+DBD0");
expect(() => {ms932Encoder.encode("\uDBD1")}).to.throw(Error, "EncodingError U+DBD1");
expect(() => {ms932Encoder.encode("\uDBD2")}).to.throw(Error, "EncodingError U+DBD2");
expect(() => {ms932Encoder.encode("\uDBD3")}).to.throw(Error, "EncodingError U+DBD3");
expect(() => {ms932Encoder.encode("\uDBD4")}).to.throw(Error, "EncodingError U+DBD4");
expect(() => {ms932Encoder.encode("\uDBD5")}).to.throw(Error, "EncodingError U+DBD5");
expect(() => {ms932Encoder.encode("\uDBD6")}).to.throw(Error, "EncodingError U+DBD6");
expect(() => {ms932Encoder.encode("\uDBD7")}).to.throw(Error, "EncodingError U+DBD7");
expect(() => {ms932Encoder.encode("\uDBD8")}).to.throw(Error, "EncodingError U+DBD8");
expect(() => {ms932Encoder.encode("\uDBD9")}).to.throw(Error, "EncodingError U+DBD9");
expect(() => {ms932Encoder.encode("\uDBDA")}).to.throw(Error, "EncodingError U+DBDA");
expect(() => {ms932Encoder.encode("\uDBDB")}).to.throw(Error, "EncodingError U+DBDB");
expect(() => {ms932Encoder.encode("\uDBDC")}).to.throw(Error, "EncodingError U+DBDC");
expect(() => {ms932Encoder.encode("\uDBDD")}).to.throw(Error, "EncodingError U+DBDD");
expect(() => {ms932Encoder.encode("\uDBDE")}).to.throw(Error, "EncodingError U+DBDE");
expect(() => {ms932Encoder.encode("\uDBDF")}).to.throw(Error, "EncodingError U+DBDF");
expect(() => {ms932Encoder.encode("\uDBE0")}).to.throw(Error, "EncodingError U+DBE0");
expect(() => {ms932Encoder.encode("\uDBE1")}).to.throw(Error, "EncodingError U+DBE1");
expect(() => {ms932Encoder.encode("\uDBE2")}).to.throw(Error, "EncodingError U+DBE2");
expect(() => {ms932Encoder.encode("\uDBE3")}).to.throw(Error, "EncodingError U+DBE3");
expect(() => {ms932Encoder.encode("\uDBE4")}).to.throw(Error, "EncodingError U+DBE4");
expect(() => {ms932Encoder.encode("\uDBE5")}).to.throw(Error, "EncodingError U+DBE5");
expect(() => {ms932Encoder.encode("\uDBE6")}).to.throw(Error, "EncodingError U+DBE6");
expect(() => {ms932Encoder.encode("\uDBE7")}).to.throw(Error, "EncodingError U+DBE7");
expect(() => {ms932Encoder.encode("\uDBE8")}).to.throw(Error, "EncodingError U+DBE8");
expect(() => {ms932Encoder.encode("\uDBE9")}).to.throw(Error, "EncodingError U+DBE9");
expect(() => {ms932Encoder.encode("\uDBEA")}).to.throw(Error, "EncodingError U+DBEA");
expect(() => {ms932Encoder.encode("\uDBEB")}).to.throw(Error, "EncodingError U+DBEB");
expect(() => {ms932Encoder.encode("\uDBEC")}).to.throw(Error, "EncodingError U+DBEC");
expect(() => {ms932Encoder.encode("\uDBED")}).to.throw(Error, "EncodingError U+DBED");
expect(() => {ms932Encoder.encode("\uDBEE")}).to.throw(Error, "EncodingError U+DBEE");
expect(() => {ms932Encoder.encode("\uDBEF")}).to.throw(Error, "EncodingError U+DBEF");
expect(() => {ms932Encoder.encode("\uDBF0")}).to.throw(Error, "EncodingError U+DBF0");
expect(() => {ms932Encoder.encode("\uDBF1")}).to.throw(Error, "EncodingError U+DBF1");
expect(() => {ms932Encoder.encode("\uDBF2")}).to.throw(Error, "EncodingError U+DBF2");
expect(() => {ms932Encoder.encode("\uDBF3")}).to.throw(Error, "EncodingError U+DBF3");
expect(() => {ms932Encoder.encode("\uDBF4")}).to.throw(Error, "EncodingError U+DBF4");
expect(() => {ms932Encoder.encode("\uDBF5")}).to.throw(Error, "EncodingError U+DBF5");
expect(() => {ms932Encoder.encode("\uDBF6")}).to.throw(Error, "EncodingError U+DBF6");
expect(() => {ms932Encoder.encode("\uDBF7")}).to.throw(Error, "EncodingError U+DBF7");
expect(() => {ms932Encoder.encode("\uDBF8")}).to.throw(Error, "EncodingError U+DBF8");
expect(() => {ms932Encoder.encode("\uDBF9")}).to.throw(Error, "EncodingError U+DBF9");
expect(() => {ms932Encoder.encode("\uDBFA")}).to.throw(Error, "EncodingError U+DBFA");
expect(() => {ms932Encoder.encode("\uDBFB")}).to.throw(Error, "EncodingError U+DBFB");
expect(() => {ms932Encoder.encode("\uDBFC")}).to.throw(Error, "EncodingError U+DBFC");
expect(() => {ms932Encoder.encode("\uDBFD")}).to.throw(Error, "EncodingError U+DBFD");
expect(() => {ms932Encoder.encode("\uDBFE")}).to.throw(Error, "EncodingError U+DBFE");
expect(() => {ms932Encoder.encode("\uDBFF")}).to.throw(Error, "EncodingError U+DBFF");
expect(() => {ms932Encoder.encode("\uDC00")}).to.throw(Error, "EncodingError U+DC00");
expect(() => {ms932Encoder.encode("\uDC01")}).to.throw(Error, "EncodingError U+DC01");
expect(() => {ms932Encoder.encode("\uDC02")}).to.throw(Error, "EncodingError U+DC02");
expect(() => {ms932Encoder.encode("\uDC03")}).to.throw(Error, "EncodingError U+DC03");
expect(() => {ms932Encoder.encode("\uDC04")}).to.throw(Error, "EncodingError U+DC04");
expect(() => {ms932Encoder.encode("\uDC05")}).to.throw(Error, "EncodingError U+DC05");
expect(() => {ms932Encoder.encode("\uDC06")}).to.throw(Error, "EncodingError U+DC06");
expect(() => {ms932Encoder.encode("\uDC07")}).to.throw(Error, "EncodingError U+DC07");
expect(() => {ms932Encoder.encode("\uDC08")}).to.throw(Error, "EncodingError U+DC08");
expect(() => {ms932Encoder.encode("\uDC09")}).to.throw(Error, "EncodingError U+DC09");
expect(() => {ms932Encoder.encode("\uDC0A")}).to.throw(Error, "EncodingError U+DC0A");
expect(() => {ms932Encoder.encode("\uDC0B")}).to.throw(Error, "EncodingError U+DC0B");
expect(() => {ms932Encoder.encode("\uDC0C")}).to.throw(Error, "EncodingError U+DC0C");
expect(() => {ms932Encoder.encode("\uDC0D")}).to.throw(Error, "EncodingError U+DC0D");
expect(() => {ms932Encoder.encode("\uDC0E")}).to.throw(Error, "EncodingError U+DC0E");
expect(() => {ms932Encoder.encode("\uDC0F")}).to.throw(Error, "EncodingError U+DC0F");
expect(() => {ms932Encoder.encode("\uDC10")}).to.throw(Error, "EncodingError U+DC10");
expect(() => {ms932Encoder.encode("\uDC11")}).to.throw(Error, "EncodingError U+DC11");
expect(() => {ms932Encoder.encode("\uDC12")}).to.throw(Error, "EncodingError U+DC12");
expect(() => {ms932Encoder.encode("\uDC13")}).to.throw(Error, "EncodingError U+DC13");
expect(() => {ms932Encoder.encode("\uDC14")}).to.throw(Error, "EncodingError U+DC14");
expect(() => {ms932Encoder.encode("\uDC15")}).to.throw(Error, "EncodingError U+DC15");
expect(() => {ms932Encoder.encode("\uDC16")}).to.throw(Error, "EncodingError U+DC16");
expect(() => {ms932Encoder.encode("\uDC17")}).to.throw(Error, "EncodingError U+DC17");
expect(() => {ms932Encoder.encode("\uDC18")}).to.throw(Error, "EncodingError U+DC18");
expect(() => {ms932Encoder.encode("\uDC19")}).to.throw(Error, "EncodingError U+DC19");
expect(() => {ms932Encoder.encode("\uDC1A")}).to.throw(Error, "EncodingError U+DC1A");
expect(() => {ms932Encoder.encode("\uDC1B")}).to.throw(Error, "EncodingError U+DC1B");
expect(() => {ms932Encoder.encode("\uDC1C")}).to.throw(Error, "EncodingError U+DC1C");
expect(() => {ms932Encoder.encode("\uDC1D")}).to.throw(Error, "EncodingError U+DC1D");
expect(() => {ms932Encoder.encode("\uDC1E")}).to.throw(Error, "EncodingError U+DC1E");
expect(() => {ms932Encoder.encode("\uDC1F")}).to.throw(Error, "EncodingError U+DC1F");
expect(() => {ms932Encoder.encode("\uDC20")}).to.throw(Error, "EncodingError U+DC20");
expect(() => {ms932Encoder.encode("\uDC21")}).to.throw(Error, "EncodingError U+DC21");
expect(() => {ms932Encoder.encode("\uDC22")}).to.throw(Error, "EncodingError U+DC22");
expect(() => {ms932Encoder.encode("\uDC23")}).to.throw(Error, "EncodingError U+DC23");
expect(() => {ms932Encoder.encode("\uDC24")}).to.throw(Error, "EncodingError U+DC24");
expect(() => {ms932Encoder.encode("\uDC25")}).to.throw(Error, "EncodingError U+DC25");
expect(() => {ms932Encoder.encode("\uDC26")}).to.throw(Error, "EncodingError U+DC26");
expect(() => {ms932Encoder.encode("\uDC27")}).to.throw(Error, "EncodingError U+DC27");
expect(() => {ms932Encoder.encode("\uDC28")}).to.throw(Error, "EncodingError U+DC28");
expect(() => {ms932Encoder.encode("\uDC29")}).to.throw(Error, "EncodingError U+DC29");
expect(() => {ms932Encoder.encode("\uDC2A")}).to.throw(Error, "EncodingError U+DC2A");
expect(() => {ms932Encoder.encode("\uDC2B")}).to.throw(Error, "EncodingError U+DC2B");
expect(() => {ms932Encoder.encode("\uDC2C")}).to.throw(Error, "EncodingError U+DC2C");
expect(() => {ms932Encoder.encode("\uDC2D")}).to.throw(Error, "EncodingError U+DC2D");
expect(() => {ms932Encoder.encode("\uDC2E")}).to.throw(Error, "EncodingError U+DC2E");
expect(() => {ms932Encoder.encode("\uDC2F")}).to.throw(Error, "EncodingError U+DC2F");
expect(() => {ms932Encoder.encode("\uDC30")}).to.throw(Error, "EncodingError U+DC30");
expect(() => {ms932Encoder.encode("\uDC31")}).to.throw(Error, "EncodingError U+DC31");
expect(() => {ms932Encoder.encode("\uDC32")}).to.throw(Error, "EncodingError U+DC32");
expect(() => {ms932Encoder.encode("\uDC33")}).to.throw(Error, "EncodingError U+DC33");
expect(() => {ms932Encoder.encode("\uDC34")}).to.throw(Error, "EncodingError U+DC34");
expect(() => {ms932Encoder.encode("\uDC35")}).to.throw(Error, "EncodingError U+DC35");
expect(() => {ms932Encoder.encode("\uDC36")}).to.throw(Error, "EncodingError U+DC36");
expect(() => {ms932Encoder.encode("\uDC37")}).to.throw(Error, "EncodingError U+DC37");
expect(() => {ms932Encoder.encode("\uDC38")}).to.throw(Error, "EncodingError U+DC38");
expect(() => {ms932Encoder.encode("\uDC39")}).to.throw(Error, "EncodingError U+DC39");
expect(() => {ms932Encoder.encode("\uDC3A")}).to.throw(Error, "EncodingError U+DC3A");
expect(() => {ms932Encoder.encode("\uDC3B")}).to.throw(Error, "EncodingError U+DC3B");
expect(() => {ms932Encoder.encode("\uDC3C")}).to.throw(Error, "EncodingError U+DC3C");
expect(() => {ms932Encoder.encode("\uDC3D")}).to.throw(Error, "EncodingError U+DC3D");
expect(() => {ms932Encoder.encode("\uDC3E")}).to.throw(Error, "EncodingError U+DC3E");
expect(() => {ms932Encoder.encode("\uDC3F")}).to.throw(Error, "EncodingError U+DC3F");
expect(() => {ms932Encoder.encode("\uDC40")}).to.throw(Error, "EncodingError U+DC40");
expect(() => {ms932Encoder.encode("\uDC41")}).to.throw(Error, "EncodingError U+DC41");
expect(() => {ms932Encoder.encode("\uDC42")}).to.throw(Error, "EncodingError U+DC42");
expect(() => {ms932Encoder.encode("\uDC43")}).to.throw(Error, "EncodingError U+DC43");
expect(() => {ms932Encoder.encode("\uDC44")}).to.throw(Error, "EncodingError U+DC44");
expect(() => {ms932Encoder.encode("\uDC45")}).to.throw(Error, "EncodingError U+DC45");
expect(() => {ms932Encoder.encode("\uDC46")}).to.throw(Error, "EncodingError U+DC46");
expect(() => {ms932Encoder.encode("\uDC47")}).to.throw(Error, "EncodingError U+DC47");
expect(() => {ms932Encoder.encode("\uDC48")}).to.throw(Error, "EncodingError U+DC48");
expect(() => {ms932Encoder.encode("\uDC49")}).to.throw(Error, "EncodingError U+DC49");
expect(() => {ms932Encoder.encode("\uDC4A")}).to.throw(Error, "EncodingError U+DC4A");
expect(() => {ms932Encoder.encode("\uDC4B")}).to.throw(Error, "EncodingError U+DC4B");
expect(() => {ms932Encoder.encode("\uDC4C")}).to.throw(Error, "EncodingError U+DC4C");
expect(() => {ms932Encoder.encode("\uDC4D")}).to.throw(Error, "EncodingError U+DC4D");
expect(() => {ms932Encoder.encode("\uDC4E")}).to.throw(Error, "EncodingError U+DC4E");
expect(() => {ms932Encoder.encode("\uDC4F")}).to.throw(Error, "EncodingError U+DC4F");
expect(() => {ms932Encoder.encode("\uDC50")}).to.throw(Error, "EncodingError U+DC50");
expect(() => {ms932Encoder.encode("\uDC51")}).to.throw(Error, "EncodingError U+DC51");
expect(() => {ms932Encoder.encode("\uDC52")}).to.throw(Error, "EncodingError U+DC52");
expect(() => {ms932Encoder.encode("\uDC53")}).to.throw(Error, "EncodingError U+DC53");
expect(() => {ms932Encoder.encode("\uDC54")}).to.throw(Error, "EncodingError U+DC54");
expect(() => {ms932Encoder.encode("\uDC55")}).to.throw(Error, "EncodingError U+DC55");
expect(() => {ms932Encoder.encode("\uDC56")}).to.throw(Error, "EncodingError U+DC56");
expect(() => {ms932Encoder.encode("\uDC57")}).to.throw(Error, "EncodingError U+DC57");
expect(() => {ms932Encoder.encode("\uDC58")}).to.throw(Error, "EncodingError U+DC58");
expect(() => {ms932Encoder.encode("\uDC59")}).to.throw(Error, "EncodingError U+DC59");
expect(() => {ms932Encoder.encode("\uDC5A")}).to.throw(Error, "EncodingError U+DC5A");
expect(() => {ms932Encoder.encode("\uDC5B")}).to.throw(Error, "EncodingError U+DC5B");
expect(() => {ms932Encoder.encode("\uDC5C")}).to.throw(Error, "EncodingError U+DC5C");
expect(() => {ms932Encoder.encode("\uDC5D")}).to.throw(Error, "EncodingError U+DC5D");
expect(() => {ms932Encoder.encode("\uDC5E")}).to.throw(Error, "EncodingError U+DC5E");
expect(() => {ms932Encoder.encode("\uDC5F")}).to.throw(Error, "EncodingError U+DC5F");
expect(() => {ms932Encoder.encode("\uDC60")}).to.throw(Error, "EncodingError U+DC60");
expect(() => {ms932Encoder.encode("\uDC61")}).to.throw(Error, "EncodingError U+DC61");
expect(() => {ms932Encoder.encode("\uDC62")}).to.throw(Error, "EncodingError U+DC62");
expect(() => {ms932Encoder.encode("\uDC63")}).to.throw(Error, "EncodingError U+DC63");
expect(() => {ms932Encoder.encode("\uDC64")}).to.throw(Error, "EncodingError U+DC64");
expect(() => {ms932Encoder.encode("\uDC65")}).to.throw(Error, "EncodingError U+DC65");
expect(() => {ms932Encoder.encode("\uDC66")}).to.throw(Error, "EncodingError U+DC66");
expect(() => {ms932Encoder.encode("\uDC67")}).to.throw(Error, "EncodingError U+DC67");
expect(() => {ms932Encoder.encode("\uDC68")}).to.throw(Error, "EncodingError U+DC68");
expect(() => {ms932Encoder.encode("\uDC69")}).to.throw(Error, "EncodingError U+DC69");
expect(() => {ms932Encoder.encode("\uDC6A")}).to.throw(Error, "EncodingError U+DC6A");
expect(() => {ms932Encoder.encode("\uDC6B")}).to.throw(Error, "EncodingError U+DC6B");
expect(() => {ms932Encoder.encode("\uDC6C")}).to.throw(Error, "EncodingError U+DC6C");
expect(() => {ms932Encoder.encode("\uDC6D")}).to.throw(Error, "EncodingError U+DC6D");
expect(() => {ms932Encoder.encode("\uDC6E")}).to.throw(Error, "EncodingError U+DC6E");
expect(() => {ms932Encoder.encode("\uDC6F")}).to.throw(Error, "EncodingError U+DC6F");
expect(() => {ms932Encoder.encode("\uDC70")}).to.throw(Error, "EncodingError U+DC70");
expect(() => {ms932Encoder.encode("\uDC71")}).to.throw(Error, "EncodingError U+DC71");
expect(() => {ms932Encoder.encode("\uDC72")}).to.throw(Error, "EncodingError U+DC72");
expect(() => {ms932Encoder.encode("\uDC73")}).to.throw(Error, "EncodingError U+DC73");
expect(() => {ms932Encoder.encode("\uDC74")}).to.throw(Error, "EncodingError U+DC74");
expect(() => {ms932Encoder.encode("\uDC75")}).to.throw(Error, "EncodingError U+DC75");
expect(() => {ms932Encoder.encode("\uDC76")}).to.throw(Error, "EncodingError U+DC76");
expect(() => {ms932Encoder.encode("\uDC77")}).to.throw(Error, "EncodingError U+DC77");
expect(() => {ms932Encoder.encode("\uDC78")}).to.throw(Error, "EncodingError U+DC78");
expect(() => {ms932Encoder.encode("\uDC79")}).to.throw(Error, "EncodingError U+DC79");
expect(() => {ms932Encoder.encode("\uDC7A")}).to.throw(Error, "EncodingError U+DC7A");
expect(() => {ms932Encoder.encode("\uDC7B")}).to.throw(Error, "EncodingError U+DC7B");
expect(() => {ms932Encoder.encode("\uDC7C")}).to.throw(Error, "EncodingError U+DC7C");
expect(() => {ms932Encoder.encode("\uDC7D")}).to.throw(Error, "EncodingError U+DC7D");
expect(() => {ms932Encoder.encode("\uDC7E")}).to.throw(Error, "EncodingError U+DC7E");
expect(() => {ms932Encoder.encode("\uDC7F")}).to.throw(Error, "EncodingError U+DC7F");
expect(() => {ms932Encoder.encode("\uDC80")}).to.throw(Error, "EncodingError U+DC80");
expect(() => {ms932Encoder.encode("\uDC81")}).to.throw(Error, "EncodingError U+DC81");
expect(() => {ms932Encoder.encode("\uDC82")}).to.throw(Error, "EncodingError U+DC82");
expect(() => {ms932Encoder.encode("\uDC83")}).to.throw(Error, "EncodingError U+DC83");
expect(() => {ms932Encoder.encode("\uDC84")}).to.throw(Error, "EncodingError U+DC84");
expect(() => {ms932Encoder.encode("\uDC85")}).to.throw(Error, "EncodingError U+DC85");
expect(() => {ms932Encoder.encode("\uDC86")}).to.throw(Error, "EncodingError U+DC86");
expect(() => {ms932Encoder.encode("\uDC87")}).to.throw(Error, "EncodingError U+DC87");
expect(() => {ms932Encoder.encode("\uDC88")}).to.throw(Error, "EncodingError U+DC88");
expect(() => {ms932Encoder.encode("\uDC89")}).to.throw(Error, "EncodingError U+DC89");
expect(() => {ms932Encoder.encode("\uDC8A")}).to.throw(Error, "EncodingError U+DC8A");
expect(() => {ms932Encoder.encode("\uDC8B")}).to.throw(Error, "EncodingError U+DC8B");
expect(() => {ms932Encoder.encode("\uDC8C")}).to.throw(Error, "EncodingError U+DC8C");
expect(() => {ms932Encoder.encode("\uDC8D")}).to.throw(Error, "EncodingError U+DC8D");
expect(() => {ms932Encoder.encode("\uDC8E")}).to.throw(Error, "EncodingError U+DC8E");
expect(() => {ms932Encoder.encode("\uDC8F")}).to.throw(Error, "EncodingError U+DC8F");
expect(() => {ms932Encoder.encode("\uDC90")}).to.throw(Error, "EncodingError U+DC90");
expect(() => {ms932Encoder.encode("\uDC91")}).to.throw(Error, "EncodingError U+DC91");
expect(() => {ms932Encoder.encode("\uDC92")}).to.throw(Error, "EncodingError U+DC92");
expect(() => {ms932Encoder.encode("\uDC93")}).to.throw(Error, "EncodingError U+DC93");
expect(() => {ms932Encoder.encode("\uDC94")}).to.throw(Error, "EncodingError U+DC94");
expect(() => {ms932Encoder.encode("\uDC95")}).to.throw(Error, "EncodingError U+DC95");
expect(() => {ms932Encoder.encode("\uDC96")}).to.throw(Error, "EncodingError U+DC96");
expect(() => {ms932Encoder.encode("\uDC97")}).to.throw(Error, "EncodingError U+DC97");
expect(() => {ms932Encoder.encode("\uDC98")}).to.throw(Error, "EncodingError U+DC98");
expect(() => {ms932Encoder.encode("\uDC99")}).to.throw(Error, "EncodingError U+DC99");
expect(() => {ms932Encoder.encode("\uDC9A")}).to.throw(Error, "EncodingError U+DC9A");
expect(() => {ms932Encoder.encode("\uDC9B")}).to.throw(Error, "EncodingError U+DC9B");
expect(() => {ms932Encoder.encode("\uDC9C")}).to.throw(Error, "EncodingError U+DC9C");
expect(() => {ms932Encoder.encode("\uDC9D")}).to.throw(Error, "EncodingError U+DC9D");
expect(() => {ms932Encoder.encode("\uDC9E")}).to.throw(Error, "EncodingError U+DC9E");
expect(() => {ms932Encoder.encode("\uDC9F")}).to.throw(Error, "EncodingError U+DC9F");
expect(() => {ms932Encoder.encode("\uDCA0")}).to.throw(Error, "EncodingError U+DCA0");
expect(() => {ms932Encoder.encode("\uDCA1")}).to.throw(Error, "EncodingError U+DCA1");
expect(() => {ms932Encoder.encode("\uDCA2")}).to.throw(Error, "EncodingError U+DCA2");
expect(() => {ms932Encoder.encode("\uDCA3")}).to.throw(Error, "EncodingError U+DCA3");
expect(() => {ms932Encoder.encode("\uDCA4")}).to.throw(Error, "EncodingError U+DCA4");
expect(() => {ms932Encoder.encode("\uDCA5")}).to.throw(Error, "EncodingError U+DCA5");
expect(() => {ms932Encoder.encode("\uDCA6")}).to.throw(Error, "EncodingError U+DCA6");
expect(() => {ms932Encoder.encode("\uDCA7")}).to.throw(Error, "EncodingError U+DCA7");
expect(() => {ms932Encoder.encode("\uDCA8")}).to.throw(Error, "EncodingError U+DCA8");
expect(() => {ms932Encoder.encode("\uDCA9")}).to.throw(Error, "EncodingError U+DCA9");
expect(() => {ms932Encoder.encode("\uDCAA")}).to.throw(Error, "EncodingError U+DCAA");
expect(() => {ms932Encoder.encode("\uDCAB")}).to.throw(Error, "EncodingError U+DCAB");
expect(() => {ms932Encoder.encode("\uDCAC")}).to.throw(Error, "EncodingError U+DCAC");
expect(() => {ms932Encoder.encode("\uDCAD")}).to.throw(Error, "EncodingError U+DCAD");
expect(() => {ms932Encoder.encode("\uDCAE")}).to.throw(Error, "EncodingError U+DCAE");
expect(() => {ms932Encoder.encode("\uDCAF")}).to.throw(Error, "EncodingError U+DCAF");
expect(() => {ms932Encoder.encode("\uDCB0")}).to.throw(Error, "EncodingError U+DCB0");
expect(() => {ms932Encoder.encode("\uDCB1")}).to.throw(Error, "EncodingError U+DCB1");
expect(() => {ms932Encoder.encode("\uDCB2")}).to.throw(Error, "EncodingError U+DCB2");
expect(() => {ms932Encoder.encode("\uDCB3")}).to.throw(Error, "EncodingError U+DCB3");
expect(() => {ms932Encoder.encode("\uDCB4")}).to.throw(Error, "EncodingError U+DCB4");
expect(() => {ms932Encoder.encode("\uDCB5")}).to.throw(Error, "EncodingError U+DCB5");
expect(() => {ms932Encoder.encode("\uDCB6")}).to.throw(Error, "EncodingError U+DCB6");
expect(() => {ms932Encoder.encode("\uDCB7")}).to.throw(Error, "EncodingError U+DCB7");
expect(() => {ms932Encoder.encode("\uDCB8")}).to.throw(Error, "EncodingError U+DCB8");
expect(() => {ms932Encoder.encode("\uDCB9")}).to.throw(Error, "EncodingError U+DCB9");
expect(() => {ms932Encoder.encode("\uDCBA")}).to.throw(Error, "EncodingError U+DCBA");
expect(() => {ms932Encoder.encode("\uDCBB")}).to.throw(Error, "EncodingError U+DCBB");
expect(() => {ms932Encoder.encode("\uDCBC")}).to.throw(Error, "EncodingError U+DCBC");
expect(() => {ms932Encoder.encode("\uDCBD")}).to.throw(Error, "EncodingError U+DCBD");
expect(() => {ms932Encoder.encode("\uDCBE")}).to.throw(Error, "EncodingError U+DCBE");
expect(() => {ms932Encoder.encode("\uDCBF")}).to.throw(Error, "EncodingError U+DCBF");
expect(() => {ms932Encoder.encode("\uDCC0")}).to.throw(Error, "EncodingError U+DCC0");
expect(() => {ms932Encoder.encode("\uDCC1")}).to.throw(Error, "EncodingError U+DCC1");
expect(() => {ms932Encoder.encode("\uDCC2")}).to.throw(Error, "EncodingError U+DCC2");
expect(() => {ms932Encoder.encode("\uDCC3")}).to.throw(Error, "EncodingError U+DCC3");
expect(() => {ms932Encoder.encode("\uDCC4")}).to.throw(Error, "EncodingError U+DCC4");
expect(() => {ms932Encoder.encode("\uDCC5")}).to.throw(Error, "EncodingError U+DCC5");
expect(() => {ms932Encoder.encode("\uDCC6")}).to.throw(Error, "EncodingError U+DCC6");
expect(() => {ms932Encoder.encode("\uDCC7")}).to.throw(Error, "EncodingError U+DCC7");
expect(() => {ms932Encoder.encode("\uDCC8")}).to.throw(Error, "EncodingError U+DCC8");
expect(() => {ms932Encoder.encode("\uDCC9")}).to.throw(Error, "EncodingError U+DCC9");
expect(() => {ms932Encoder.encode("\uDCCA")}).to.throw(Error, "EncodingError U+DCCA");
expect(() => {ms932Encoder.encode("\uDCCB")}).to.throw(Error, "EncodingError U+DCCB");
expect(() => {ms932Encoder.encode("\uDCCC")}).to.throw(Error, "EncodingError U+DCCC");
expect(() => {ms932Encoder.encode("\uDCCD")}).to.throw(Error, "EncodingError U+DCCD");
expect(() => {ms932Encoder.encode("\uDCCE")}).to.throw(Error, "EncodingError U+DCCE");
expect(() => {ms932Encoder.encode("\uDCCF")}).to.throw(Error, "EncodingError U+DCCF");
expect(() => {ms932Encoder.encode("\uDCD0")}).to.throw(Error, "EncodingError U+DCD0");
expect(() => {ms932Encoder.encode("\uDCD1")}).to.throw(Error, "EncodingError U+DCD1");
expect(() => {ms932Encoder.encode("\uDCD2")}).to.throw(Error, "EncodingError U+DCD2");
expect(() => {ms932Encoder.encode("\uDCD3")}).to.throw(Error, "EncodingError U+DCD3");
expect(() => {ms932Encoder.encode("\uDCD4")}).to.throw(Error, "EncodingError U+DCD4");
expect(() => {ms932Encoder.encode("\uDCD5")}).to.throw(Error, "EncodingError U+DCD5");
expect(() => {ms932Encoder.encode("\uDCD6")}).to.throw(Error, "EncodingError U+DCD6");
expect(() => {ms932Encoder.encode("\uDCD7")}).to.throw(Error, "EncodingError U+DCD7");
expect(() => {ms932Encoder.encode("\uDCD8")}).to.throw(Error, "EncodingError U+DCD8");
expect(() => {ms932Encoder.encode("\uDCD9")}).to.throw(Error, "EncodingError U+DCD9");
expect(() => {ms932Encoder.encode("\uDCDA")}).to.throw(Error, "EncodingError U+DCDA");
expect(() => {ms932Encoder.encode("\uDCDB")}).to.throw(Error, "EncodingError U+DCDB");
expect(() => {ms932Encoder.encode("\uDCDC")}).to.throw(Error, "EncodingError U+DCDC");
expect(() => {ms932Encoder.encode("\uDCDD")}).to.throw(Error, "EncodingError U+DCDD");
expect(() => {ms932Encoder.encode("\uDCDE")}).to.throw(Error, "EncodingError U+DCDE");
expect(() => {ms932Encoder.encode("\uDCDF")}).to.throw(Error, "EncodingError U+DCDF");
expect(() => {ms932Encoder.encode("\uDCE0")}).to.throw(Error, "EncodingError U+DCE0");
expect(() => {ms932Encoder.encode("\uDCE1")}).to.throw(Error, "EncodingError U+DCE1");
expect(() => {ms932Encoder.encode("\uDCE2")}).to.throw(Error, "EncodingError U+DCE2");
expect(() => {ms932Encoder.encode("\uDCE3")}).to.throw(Error, "EncodingError U+DCE3");
expect(() => {ms932Encoder.encode("\uDCE4")}).to.throw(Error, "EncodingError U+DCE4");
expect(() => {ms932Encoder.encode("\uDCE5")}).to.throw(Error, "EncodingError U+DCE5");
expect(() => {ms932Encoder.encode("\uDCE6")}).to.throw(Error, "EncodingError U+DCE6");
expect(() => {ms932Encoder.encode("\uDCE7")}).to.throw(Error, "EncodingError U+DCE7");
expect(() => {ms932Encoder.encode("\uDCE8")}).to.throw(Error, "EncodingError U+DCE8");
expect(() => {ms932Encoder.encode("\uDCE9")}).to.throw(Error, "EncodingError U+DCE9");
expect(() => {ms932Encoder.encode("\uDCEA")}).to.throw(Error, "EncodingError U+DCEA");
expect(() => {ms932Encoder.encode("\uDCEB")}).to.throw(Error, "EncodingError U+DCEB");
expect(() => {ms932Encoder.encode("\uDCEC")}).to.throw(Error, "EncodingError U+DCEC");
expect(() => {ms932Encoder.encode("\uDCED")}).to.throw(Error, "EncodingError U+DCED");
expect(() => {ms932Encoder.encode("\uDCEE")}).to.throw(Error, "EncodingError U+DCEE");
expect(() => {ms932Encoder.encode("\uDCEF")}).to.throw(Error, "EncodingError U+DCEF");
expect(() => {ms932Encoder.encode("\uDCF0")}).to.throw(Error, "EncodingError U+DCF0");
expect(() => {ms932Encoder.encode("\uDCF1")}).to.throw(Error, "EncodingError U+DCF1");
expect(() => {ms932Encoder.encode("\uDCF2")}).to.throw(Error, "EncodingError U+DCF2");
expect(() => {ms932Encoder.encode("\uDCF3")}).to.throw(Error, "EncodingError U+DCF3");
expect(() => {ms932Encoder.encode("\uDCF4")}).to.throw(Error, "EncodingError U+DCF4");
expect(() => {ms932Encoder.encode("\uDCF5")}).to.throw(Error, "EncodingError U+DCF5");
expect(() => {ms932Encoder.encode("\uDCF6")}).to.throw(Error, "EncodingError U+DCF6");
expect(() => {ms932Encoder.encode("\uDCF7")}).to.throw(Error, "EncodingError U+DCF7");
expect(() => {ms932Encoder.encode("\uDCF8")}).to.throw(Error, "EncodingError U+DCF8");
expect(() => {ms932Encoder.encode("\uDCF9")}).to.throw(Error, "EncodingError U+DCF9");
expect(() => {ms932Encoder.encode("\uDCFA")}).to.throw(Error, "EncodingError U+DCFA");
expect(() => {ms932Encoder.encode("\uDCFB")}).to.throw(Error, "EncodingError U+DCFB");
expect(() => {ms932Encoder.encode("\uDCFC")}).to.throw(Error, "EncodingError U+DCFC");
expect(() => {ms932Encoder.encode("\uDCFD")}).to.throw(Error, "EncodingError U+DCFD");
expect(() => {ms932Encoder.encode("\uDCFE")}).to.throw(Error, "EncodingError U+DCFE");
expect(() => {ms932Encoder.encode("\uDCFF")}).to.throw(Error, "EncodingError U+DCFF");
expect(() => {ms932Encoder.encode("\uDD00")}).to.throw(Error, "EncodingError U+DD00");
expect(() => {ms932Encoder.encode("\uDD01")}).to.throw(Error, "EncodingError U+DD01");
expect(() => {ms932Encoder.encode("\uDD02")}).to.throw(Error, "EncodingError U+DD02");
expect(() => {ms932Encoder.encode("\uDD03")}).to.throw(Error, "EncodingError U+DD03");
expect(() => {ms932Encoder.encode("\uDD04")}).to.throw(Error, "EncodingError U+DD04");
expect(() => {ms932Encoder.encode("\uDD05")}).to.throw(Error, "EncodingError U+DD05");
expect(() => {ms932Encoder.encode("\uDD06")}).to.throw(Error, "EncodingError U+DD06");
expect(() => {ms932Encoder.encode("\uDD07")}).to.throw(Error, "EncodingError U+DD07");
expect(() => {ms932Encoder.encode("\uDD08")}).to.throw(Error, "EncodingError U+DD08");
expect(() => {ms932Encoder.encode("\uDD09")}).to.throw(Error, "EncodingError U+DD09");
expect(() => {ms932Encoder.encode("\uDD0A")}).to.throw(Error, "EncodingError U+DD0A");
expect(() => {ms932Encoder.encode("\uDD0B")}).to.throw(Error, "EncodingError U+DD0B");
expect(() => {ms932Encoder.encode("\uDD0C")}).to.throw(Error, "EncodingError U+DD0C");
expect(() => {ms932Encoder.encode("\uDD0D")}).to.throw(Error, "EncodingError U+DD0D");
expect(() => {ms932Encoder.encode("\uDD0E")}).to.throw(Error, "EncodingError U+DD0E");
expect(() => {ms932Encoder.encode("\uDD0F")}).to.throw(Error, "EncodingError U+DD0F");
expect(() => {ms932Encoder.encode("\uDD10")}).to.throw(Error, "EncodingError U+DD10");
expect(() => {ms932Encoder.encode("\uDD11")}).to.throw(Error, "EncodingError U+DD11");
expect(() => {ms932Encoder.encode("\uDD12")}).to.throw(Error, "EncodingError U+DD12");
expect(() => {ms932Encoder.encode("\uDD13")}).to.throw(Error, "EncodingError U+DD13");
expect(() => {ms932Encoder.encode("\uDD14")}).to.throw(Error, "EncodingError U+DD14");
expect(() => {ms932Encoder.encode("\uDD15")}).to.throw(Error, "EncodingError U+DD15");
expect(() => {ms932Encoder.encode("\uDD16")}).to.throw(Error, "EncodingError U+DD16");
expect(() => {ms932Encoder.encode("\uDD17")}).to.throw(Error, "EncodingError U+DD17");
expect(() => {ms932Encoder.encode("\uDD18")}).to.throw(Error, "EncodingError U+DD18");
expect(() => {ms932Encoder.encode("\uDD19")}).to.throw(Error, "EncodingError U+DD19");
expect(() => {ms932Encoder.encode("\uDD1A")}).to.throw(Error, "EncodingError U+DD1A");
expect(() => {ms932Encoder.encode("\uDD1B")}).to.throw(Error, "EncodingError U+DD1B");
expect(() => {ms932Encoder.encode("\uDD1C")}).to.throw(Error, "EncodingError U+DD1C");
expect(() => {ms932Encoder.encode("\uDD1D")}).to.throw(Error, "EncodingError U+DD1D");
expect(() => {ms932Encoder.encode("\uDD1E")}).to.throw(Error, "EncodingError U+DD1E");
expect(() => {ms932Encoder.encode("\uDD1F")}).to.throw(Error, "EncodingError U+DD1F");
expect(() => {ms932Encoder.encode("\uDD20")}).to.throw(Error, "EncodingError U+DD20");
expect(() => {ms932Encoder.encode("\uDD21")}).to.throw(Error, "EncodingError U+DD21");
expect(() => {ms932Encoder.encode("\uDD22")}).to.throw(Error, "EncodingError U+DD22");
expect(() => {ms932Encoder.encode("\uDD23")}).to.throw(Error, "EncodingError U+DD23");
expect(() => {ms932Encoder.encode("\uDD24")}).to.throw(Error, "EncodingError U+DD24");
expect(() => {ms932Encoder.encode("\uDD25")}).to.throw(Error, "EncodingError U+DD25");
expect(() => {ms932Encoder.encode("\uDD26")}).to.throw(Error, "EncodingError U+DD26");
expect(() => {ms932Encoder.encode("\uDD27")}).to.throw(Error, "EncodingError U+DD27");
expect(() => {ms932Encoder.encode("\uDD28")}).to.throw(Error, "EncodingError U+DD28");
expect(() => {ms932Encoder.encode("\uDD29")}).to.throw(Error, "EncodingError U+DD29");
expect(() => {ms932Encoder.encode("\uDD2A")}).to.throw(Error, "EncodingError U+DD2A");
expect(() => {ms932Encoder.encode("\uDD2B")}).to.throw(Error, "EncodingError U+DD2B");
expect(() => {ms932Encoder.encode("\uDD2C")}).to.throw(Error, "EncodingError U+DD2C");
expect(() => {ms932Encoder.encode("\uDD2D")}).to.throw(Error, "EncodingError U+DD2D");
expect(() => {ms932Encoder.encode("\uDD2E")}).to.throw(Error, "EncodingError U+DD2E");
expect(() => {ms932Encoder.encode("\uDD2F")}).to.throw(Error, "EncodingError U+DD2F");
expect(() => {ms932Encoder.encode("\uDD30")}).to.throw(Error, "EncodingError U+DD30");
expect(() => {ms932Encoder.encode("\uDD31")}).to.throw(Error, "EncodingError U+DD31");
expect(() => {ms932Encoder.encode("\uDD32")}).to.throw(Error, "EncodingError U+DD32");
expect(() => {ms932Encoder.encode("\uDD33")}).to.throw(Error, "EncodingError U+DD33");
expect(() => {ms932Encoder.encode("\uDD34")}).to.throw(Error, "EncodingError U+DD34");
expect(() => {ms932Encoder.encode("\uDD35")}).to.throw(Error, "EncodingError U+DD35");
expect(() => {ms932Encoder.encode("\uDD36")}).to.throw(Error, "EncodingError U+DD36");
expect(() => {ms932Encoder.encode("\uDD37")}).to.throw(Error, "EncodingError U+DD37");
expect(() => {ms932Encoder.encode("\uDD38")}).to.throw(Error, "EncodingError U+DD38");
expect(() => {ms932Encoder.encode("\uDD39")}).to.throw(Error, "EncodingError U+DD39");
expect(() => {ms932Encoder.encode("\uDD3A")}).to.throw(Error, "EncodingError U+DD3A");
expect(() => {ms932Encoder.encode("\uDD3B")}).to.throw(Error, "EncodingError U+DD3B");
expect(() => {ms932Encoder.encode("\uDD3C")}).to.throw(Error, "EncodingError U+DD3C");
expect(() => {ms932Encoder.encode("\uDD3D")}).to.throw(Error, "EncodingError U+DD3D");
expect(() => {ms932Encoder.encode("\uDD3E")}).to.throw(Error, "EncodingError U+DD3E");
expect(() => {ms932Encoder.encode("\uDD3F")}).to.throw(Error, "EncodingError U+DD3F");
expect(() => {ms932Encoder.encode("\uDD40")}).to.throw(Error, "EncodingError U+DD40");
expect(() => {ms932Encoder.encode("\uDD41")}).to.throw(Error, "EncodingError U+DD41");
expect(() => {ms932Encoder.encode("\uDD42")}).to.throw(Error, "EncodingError U+DD42");
expect(() => {ms932Encoder.encode("\uDD43")}).to.throw(Error, "EncodingError U+DD43");
expect(() => {ms932Encoder.encode("\uDD44")}).to.throw(Error, "EncodingError U+DD44");
expect(() => {ms932Encoder.encode("\uDD45")}).to.throw(Error, "EncodingError U+DD45");
expect(() => {ms932Encoder.encode("\uDD46")}).to.throw(Error, "EncodingError U+DD46");
expect(() => {ms932Encoder.encode("\uDD47")}).to.throw(Error, "EncodingError U+DD47");
expect(() => {ms932Encoder.encode("\uDD48")}).to.throw(Error, "EncodingError U+DD48");
expect(() => {ms932Encoder.encode("\uDD49")}).to.throw(Error, "EncodingError U+DD49");
expect(() => {ms932Encoder.encode("\uDD4A")}).to.throw(Error, "EncodingError U+DD4A");
expect(() => {ms932Encoder.encode("\uDD4B")}).to.throw(Error, "EncodingError U+DD4B");
expect(() => {ms932Encoder.encode("\uDD4C")}).to.throw(Error, "EncodingError U+DD4C");
expect(() => {ms932Encoder.encode("\uDD4D")}).to.throw(Error, "EncodingError U+DD4D");
expect(() => {ms932Encoder.encode("\uDD4E")}).to.throw(Error, "EncodingError U+DD4E");
expect(() => {ms932Encoder.encode("\uDD4F")}).to.throw(Error, "EncodingError U+DD4F");
expect(() => {ms932Encoder.encode("\uDD50")}).to.throw(Error, "EncodingError U+DD50");
expect(() => {ms932Encoder.encode("\uDD51")}).to.throw(Error, "EncodingError U+DD51");
expect(() => {ms932Encoder.encode("\uDD52")}).to.throw(Error, "EncodingError U+DD52");
expect(() => {ms932Encoder.encode("\uDD53")}).to.throw(Error, "EncodingError U+DD53");
expect(() => {ms932Encoder.encode("\uDD54")}).to.throw(Error, "EncodingError U+DD54");
expect(() => {ms932Encoder.encode("\uDD55")}).to.throw(Error, "EncodingError U+DD55");
expect(() => {ms932Encoder.encode("\uDD56")}).to.throw(Error, "EncodingError U+DD56");
expect(() => {ms932Encoder.encode("\uDD57")}).to.throw(Error, "EncodingError U+DD57");
expect(() => {ms932Encoder.encode("\uDD58")}).to.throw(Error, "EncodingError U+DD58");
expect(() => {ms932Encoder.encode("\uDD59")}).to.throw(Error, "EncodingError U+DD59");
expect(() => {ms932Encoder.encode("\uDD5A")}).to.throw(Error, "EncodingError U+DD5A");
expect(() => {ms932Encoder.encode("\uDD5B")}).to.throw(Error, "EncodingError U+DD5B");
expect(() => {ms932Encoder.encode("\uDD5C")}).to.throw(Error, "EncodingError U+DD5C");
expect(() => {ms932Encoder.encode("\uDD5D")}).to.throw(Error, "EncodingError U+DD5D");
expect(() => {ms932Encoder.encode("\uDD5E")}).to.throw(Error, "EncodingError U+DD5E");
expect(() => {ms932Encoder.encode("\uDD5F")}).to.throw(Error, "EncodingError U+DD5F");
expect(() => {ms932Encoder.encode("\uDD60")}).to.throw(Error, "EncodingError U+DD60");
expect(() => {ms932Encoder.encode("\uDD61")}).to.throw(Error, "EncodingError U+DD61");
expect(() => {ms932Encoder.encode("\uDD62")}).to.throw(Error, "EncodingError U+DD62");
expect(() => {ms932Encoder.encode("\uDD63")}).to.throw(Error, "EncodingError U+DD63");
expect(() => {ms932Encoder.encode("\uDD64")}).to.throw(Error, "EncodingError U+DD64");
expect(() => {ms932Encoder.encode("\uDD65")}).to.throw(Error, "EncodingError U+DD65");
expect(() => {ms932Encoder.encode("\uDD66")}).to.throw(Error, "EncodingError U+DD66");
expect(() => {ms932Encoder.encode("\uDD67")}).to.throw(Error, "EncodingError U+DD67");
expect(() => {ms932Encoder.encode("\uDD68")}).to.throw(Error, "EncodingError U+DD68");
expect(() => {ms932Encoder.encode("\uDD69")}).to.throw(Error, "EncodingError U+DD69");
expect(() => {ms932Encoder.encode("\uDD6A")}).to.throw(Error, "EncodingError U+DD6A");
expect(() => {ms932Encoder.encode("\uDD6B")}).to.throw(Error, "EncodingError U+DD6B");
expect(() => {ms932Encoder.encode("\uDD6C")}).to.throw(Error, "EncodingError U+DD6C");
expect(() => {ms932Encoder.encode("\uDD6D")}).to.throw(Error, "EncodingError U+DD6D");
expect(() => {ms932Encoder.encode("\uDD6E")}).to.throw(Error, "EncodingError U+DD6E");
expect(() => {ms932Encoder.encode("\uDD6F")}).to.throw(Error, "EncodingError U+DD6F");
expect(() => {ms932Encoder.encode("\uDD70")}).to.throw(Error, "EncodingError U+DD70");
expect(() => {ms932Encoder.encode("\uDD71")}).to.throw(Error, "EncodingError U+DD71");
expect(() => {ms932Encoder.encode("\uDD72")}).to.throw(Error, "EncodingError U+DD72");
expect(() => {ms932Encoder.encode("\uDD73")}).to.throw(Error, "EncodingError U+DD73");
expect(() => {ms932Encoder.encode("\uDD74")}).to.throw(Error, "EncodingError U+DD74");
expect(() => {ms932Encoder.encode("\uDD75")}).to.throw(Error, "EncodingError U+DD75");
expect(() => {ms932Encoder.encode("\uDD76")}).to.throw(Error, "EncodingError U+DD76");
expect(() => {ms932Encoder.encode("\uDD77")}).to.throw(Error, "EncodingError U+DD77");
expect(() => {ms932Encoder.encode("\uDD78")}).to.throw(Error, "EncodingError U+DD78");
expect(() => {ms932Encoder.encode("\uDD79")}).to.throw(Error, "EncodingError U+DD79");
expect(() => {ms932Encoder.encode("\uDD7A")}).to.throw(Error, "EncodingError U+DD7A");
expect(() => {ms932Encoder.encode("\uDD7B")}).to.throw(Error, "EncodingError U+DD7B");
expect(() => {ms932Encoder.encode("\uDD7C")}).to.throw(Error, "EncodingError U+DD7C");
expect(() => {ms932Encoder.encode("\uDD7D")}).to.throw(Error, "EncodingError U+DD7D");
expect(() => {ms932Encoder.encode("\uDD7E")}).to.throw(Error, "EncodingError U+DD7E");
expect(() => {ms932Encoder.encode("\uDD7F")}).to.throw(Error, "EncodingError U+DD7F");
expect(() => {ms932Encoder.encode("\uDD80")}).to.throw(Error, "EncodingError U+DD80");
expect(() => {ms932Encoder.encode("\uDD81")}).to.throw(Error, "EncodingError U+DD81");
expect(() => {ms932Encoder.encode("\uDD82")}).to.throw(Error, "EncodingError U+DD82");
expect(() => {ms932Encoder.encode("\uDD83")}).to.throw(Error, "EncodingError U+DD83");
expect(() => {ms932Encoder.encode("\uDD84")}).to.throw(Error, "EncodingError U+DD84");
expect(() => {ms932Encoder.encode("\uDD85")}).to.throw(Error, "EncodingError U+DD85");
expect(() => {ms932Encoder.encode("\uDD86")}).to.throw(Error, "EncodingError U+DD86");
expect(() => {ms932Encoder.encode("\uDD87")}).to.throw(Error, "EncodingError U+DD87");
expect(() => {ms932Encoder.encode("\uDD88")}).to.throw(Error, "EncodingError U+DD88");
expect(() => {ms932Encoder.encode("\uDD89")}).to.throw(Error, "EncodingError U+DD89");
expect(() => {ms932Encoder.encode("\uDD8A")}).to.throw(Error, "EncodingError U+DD8A");
expect(() => {ms932Encoder.encode("\uDD8B")}).to.throw(Error, "EncodingError U+DD8B");
expect(() => {ms932Encoder.encode("\uDD8C")}).to.throw(Error, "EncodingError U+DD8C");
expect(() => {ms932Encoder.encode("\uDD8D")}).to.throw(Error, "EncodingError U+DD8D");
expect(() => {ms932Encoder.encode("\uDD8E")}).to.throw(Error, "EncodingError U+DD8E");
expect(() => {ms932Encoder.encode("\uDD8F")}).to.throw(Error, "EncodingError U+DD8F");
expect(() => {ms932Encoder.encode("\uDD90")}).to.throw(Error, "EncodingError U+DD90");
expect(() => {ms932Encoder.encode("\uDD91")}).to.throw(Error, "EncodingError U+DD91");
expect(() => {ms932Encoder.encode("\uDD92")}).to.throw(Error, "EncodingError U+DD92");
expect(() => {ms932Encoder.encode("\uDD93")}).to.throw(Error, "EncodingError U+DD93");
expect(() => {ms932Encoder.encode("\uDD94")}).to.throw(Error, "EncodingError U+DD94");
expect(() => {ms932Encoder.encode("\uDD95")}).to.throw(Error, "EncodingError U+DD95");
expect(() => {ms932Encoder.encode("\uDD96")}).to.throw(Error, "EncodingError U+DD96");
expect(() => {ms932Encoder.encode("\uDD97")}).to.throw(Error, "EncodingError U+DD97");
expect(() => {ms932Encoder.encode("\uDD98")}).to.throw(Error, "EncodingError U+DD98");
expect(() => {ms932Encoder.encode("\uDD99")}).to.throw(Error, "EncodingError U+DD99");
expect(() => {ms932Encoder.encode("\uDD9A")}).to.throw(Error, "EncodingError U+DD9A");
expect(() => {ms932Encoder.encode("\uDD9B")}).to.throw(Error, "EncodingError U+DD9B");
expect(() => {ms932Encoder.encode("\uDD9C")}).to.throw(Error, "EncodingError U+DD9C");
expect(() => {ms932Encoder.encode("\uDD9D")}).to.throw(Error, "EncodingError U+DD9D");
expect(() => {ms932Encoder.encode("\uDD9E")}).to.throw(Error, "EncodingError U+DD9E");
expect(() => {ms932Encoder.encode("\uDD9F")}).to.throw(Error, "EncodingError U+DD9F");
expect(() => {ms932Encoder.encode("\uDDA0")}).to.throw(Error, "EncodingError U+DDA0");
expect(() => {ms932Encoder.encode("\uDDA1")}).to.throw(Error, "EncodingError U+DDA1");
expect(() => {ms932Encoder.encode("\uDDA2")}).to.throw(Error, "EncodingError U+DDA2");
expect(() => {ms932Encoder.encode("\uDDA3")}).to.throw(Error, "EncodingError U+DDA3");
expect(() => {ms932Encoder.encode("\uDDA4")}).to.throw(Error, "EncodingError U+DDA4");
expect(() => {ms932Encoder.encode("\uDDA5")}).to.throw(Error, "EncodingError U+DDA5");
expect(() => {ms932Encoder.encode("\uDDA6")}).to.throw(Error, "EncodingError U+DDA6");
expect(() => {ms932Encoder.encode("\uDDA7")}).to.throw(Error, "EncodingError U+DDA7");
expect(() => {ms932Encoder.encode("\uDDA8")}).to.throw(Error, "EncodingError U+DDA8");
expect(() => {ms932Encoder.encode("\uDDA9")}).to.throw(Error, "EncodingError U+DDA9");
expect(() => {ms932Encoder.encode("\uDDAA")}).to.throw(Error, "EncodingError U+DDAA");
expect(() => {ms932Encoder.encode("\uDDAB")}).to.throw(Error, "EncodingError U+DDAB");
expect(() => {ms932Encoder.encode("\uDDAC")}).to.throw(Error, "EncodingError U+DDAC");
expect(() => {ms932Encoder.encode("\uDDAD")}).to.throw(Error, "EncodingError U+DDAD");
expect(() => {ms932Encoder.encode("\uDDAE")}).to.throw(Error, "EncodingError U+DDAE");
expect(() => {ms932Encoder.encode("\uDDAF")}).to.throw(Error, "EncodingError U+DDAF");
expect(() => {ms932Encoder.encode("\uDDB0")}).to.throw(Error, "EncodingError U+DDB0");
expect(() => {ms932Encoder.encode("\uDDB1")}).to.throw(Error, "EncodingError U+DDB1");
expect(() => {ms932Encoder.encode("\uDDB2")}).to.throw(Error, "EncodingError U+DDB2");
expect(() => {ms932Encoder.encode("\uDDB3")}).to.throw(Error, "EncodingError U+DDB3");
expect(() => {ms932Encoder.encode("\uDDB4")}).to.throw(Error, "EncodingError U+DDB4");
expect(() => {ms932Encoder.encode("\uDDB5")}).to.throw(Error, "EncodingError U+DDB5");
expect(() => {ms932Encoder.encode("\uDDB6")}).to.throw(Error, "EncodingError U+DDB6");
expect(() => {ms932Encoder.encode("\uDDB7")}).to.throw(Error, "EncodingError U+DDB7");
expect(() => {ms932Encoder.encode("\uDDB8")}).to.throw(Error, "EncodingError U+DDB8");
expect(() => {ms932Encoder.encode("\uDDB9")}).to.throw(Error, "EncodingError U+DDB9");
expect(() => {ms932Encoder.encode("\uDDBA")}).to.throw(Error, "EncodingError U+DDBA");
expect(() => {ms932Encoder.encode("\uDDBB")}).to.throw(Error, "EncodingError U+DDBB");
expect(() => {ms932Encoder.encode("\uDDBC")}).to.throw(Error, "EncodingError U+DDBC");
expect(() => {ms932Encoder.encode("\uDDBD")}).to.throw(Error, "EncodingError U+DDBD");
expect(() => {ms932Encoder.encode("\uDDBE")}).to.throw(Error, "EncodingError U+DDBE");
expect(() => {ms932Encoder.encode("\uDDBF")}).to.throw(Error, "EncodingError U+DDBF");
expect(() => {ms932Encoder.encode("\uDDC0")}).to.throw(Error, "EncodingError U+DDC0");
expect(() => {ms932Encoder.encode("\uDDC1")}).to.throw(Error, "EncodingError U+DDC1");
expect(() => {ms932Encoder.encode("\uDDC2")}).to.throw(Error, "EncodingError U+DDC2");
expect(() => {ms932Encoder.encode("\uDDC3")}).to.throw(Error, "EncodingError U+DDC3");
expect(() => {ms932Encoder.encode("\uDDC4")}).to.throw(Error, "EncodingError U+DDC4");
expect(() => {ms932Encoder.encode("\uDDC5")}).to.throw(Error, "EncodingError U+DDC5");
expect(() => {ms932Encoder.encode("\uDDC6")}).to.throw(Error, "EncodingError U+DDC6");
expect(() => {ms932Encoder.encode("\uDDC7")}).to.throw(Error, "EncodingError U+DDC7");
expect(() => {ms932Encoder.encode("\uDDC8")}).to.throw(Error, "EncodingError U+DDC8");
expect(() => {ms932Encoder.encode("\uDDC9")}).to.throw(Error, "EncodingError U+DDC9");
expect(() => {ms932Encoder.encode("\uDDCA")}).to.throw(Error, "EncodingError U+DDCA");
expect(() => {ms932Encoder.encode("\uDDCB")}).to.throw(Error, "EncodingError U+DDCB");
expect(() => {ms932Encoder.encode("\uDDCC")}).to.throw(Error, "EncodingError U+DDCC");
expect(() => {ms932Encoder.encode("\uDDCD")}).to.throw(Error, "EncodingError U+DDCD");
expect(() => {ms932Encoder.encode("\uDDCE")}).to.throw(Error, "EncodingError U+DDCE");
expect(() => {ms932Encoder.encode("\uDDCF")}).to.throw(Error, "EncodingError U+DDCF");
expect(() => {ms932Encoder.encode("\uDDD0")}).to.throw(Error, "EncodingError U+DDD0");
expect(() => {ms932Encoder.encode("\uDDD1")}).to.throw(Error, "EncodingError U+DDD1");
expect(() => {ms932Encoder.encode("\uDDD2")}).to.throw(Error, "EncodingError U+DDD2");
expect(() => {ms932Encoder.encode("\uDDD3")}).to.throw(Error, "EncodingError U+DDD3");
expect(() => {ms932Encoder.encode("\uDDD4")}).to.throw(Error, "EncodingError U+DDD4");
expect(() => {ms932Encoder.encode("\uDDD5")}).to.throw(Error, "EncodingError U+DDD5");
expect(() => {ms932Encoder.encode("\uDDD6")}).to.throw(Error, "EncodingError U+DDD6");
expect(() => {ms932Encoder.encode("\uDDD7")}).to.throw(Error, "EncodingError U+DDD7");
expect(() => {ms932Encoder.encode("\uDDD8")}).to.throw(Error, "EncodingError U+DDD8");
expect(() => {ms932Encoder.encode("\uDDD9")}).to.throw(Error, "EncodingError U+DDD9");
expect(() => {ms932Encoder.encode("\uDDDA")}).to.throw(Error, "EncodingError U+DDDA");
expect(() => {ms932Encoder.encode("\uDDDB")}).to.throw(Error, "EncodingError U+DDDB");
expect(() => {ms932Encoder.encode("\uDDDC")}).to.throw(Error, "EncodingError U+DDDC");
expect(() => {ms932Encoder.encode("\uDDDD")}).to.throw(Error, "EncodingError U+DDDD");
expect(() => {ms932Encoder.encode("\uDDDE")}).to.throw(Error, "EncodingError U+DDDE");
expect(() => {ms932Encoder.encode("\uDDDF")}).to.throw(Error, "EncodingError U+DDDF");
expect(() => {ms932Encoder.encode("\uDDE0")}).to.throw(Error, "EncodingError U+DDE0");
expect(() => {ms932Encoder.encode("\uDDE1")}).to.throw(Error, "EncodingError U+DDE1");
expect(() => {ms932Encoder.encode("\uDDE2")}).to.throw(Error, "EncodingError U+DDE2");
expect(() => {ms932Encoder.encode("\uDDE3")}).to.throw(Error, "EncodingError U+DDE3");
expect(() => {ms932Encoder.encode("\uDDE4")}).to.throw(Error, "EncodingError U+DDE4");
expect(() => {ms932Encoder.encode("\uDDE5")}).to.throw(Error, "EncodingError U+DDE5");
expect(() => {ms932Encoder.encode("\uDDE6")}).to.throw(Error, "EncodingError U+DDE6");
expect(() => {ms932Encoder.encode("\uDDE7")}).to.throw(Error, "EncodingError U+DDE7");
expect(() => {ms932Encoder.encode("\uDDE8")}).to.throw(Error, "EncodingError U+DDE8");
expect(() => {ms932Encoder.encode("\uDDE9")}).to.throw(Error, "EncodingError U+DDE9");
expect(() => {ms932Encoder.encode("\uDDEA")}).to.throw(Error, "EncodingError U+DDEA");
expect(() => {ms932Encoder.encode("\uDDEB")}).to.throw(Error, "EncodingError U+DDEB");
expect(() => {ms932Encoder.encode("\uDDEC")}).to.throw(Error, "EncodingError U+DDEC");
expect(() => {ms932Encoder.encode("\uDDED")}).to.throw(Error, "EncodingError U+DDED");
expect(() => {ms932Encoder.encode("\uDDEE")}).to.throw(Error, "EncodingError U+DDEE");
expect(() => {ms932Encoder.encode("\uDDEF")}).to.throw(Error, "EncodingError U+DDEF");
expect(() => {ms932Encoder.encode("\uDDF0")}).to.throw(Error, "EncodingError U+DDF0");
expect(() => {ms932Encoder.encode("\uDDF1")}).to.throw(Error, "EncodingError U+DDF1");
expect(() => {ms932Encoder.encode("\uDDF2")}).to.throw(Error, "EncodingError U+DDF2");
expect(() => {ms932Encoder.encode("\uDDF3")}).to.throw(Error, "EncodingError U+DDF3");
expect(() => {ms932Encoder.encode("\uDDF4")}).to.throw(Error, "EncodingError U+DDF4");
expect(() => {ms932Encoder.encode("\uDDF5")}).to.throw(Error, "EncodingError U+DDF5");
expect(() => {ms932Encoder.encode("\uDDF6")}).to.throw(Error, "EncodingError U+DDF6");
expect(() => {ms932Encoder.encode("\uDDF7")}).to.throw(Error, "EncodingError U+DDF7");
expect(() => {ms932Encoder.encode("\uDDF8")}).to.throw(Error, "EncodingError U+DDF8");
expect(() => {ms932Encoder.encode("\uDDF9")}).to.throw(Error, "EncodingError U+DDF9");
expect(() => {ms932Encoder.encode("\uDDFA")}).to.throw(Error, "EncodingError U+DDFA");
expect(() => {ms932Encoder.encode("\uDDFB")}).to.throw(Error, "EncodingError U+DDFB");
expect(() => {ms932Encoder.encode("\uDDFC")}).to.throw(Error, "EncodingError U+DDFC");
expect(() => {ms932Encoder.encode("\uDDFD")}).to.throw(Error, "EncodingError U+DDFD");
expect(() => {ms932Encoder.encode("\uDDFE")}).to.throw(Error, "EncodingError U+DDFE");
expect(() => {ms932Encoder.encode("\uDDFF")}).to.throw(Error, "EncodingError U+DDFF");
expect(() => {ms932Encoder.encode("\uDE00")}).to.throw(Error, "EncodingError U+DE00");
expect(() => {ms932Encoder.encode("\uDE01")}).to.throw(Error, "EncodingError U+DE01");
expect(() => {ms932Encoder.encode("\uDE02")}).to.throw(Error, "EncodingError U+DE02");
expect(() => {ms932Encoder.encode("\uDE03")}).to.throw(Error, "EncodingError U+DE03");
expect(() => {ms932Encoder.encode("\uDE04")}).to.throw(Error, "EncodingError U+DE04");
expect(() => {ms932Encoder.encode("\uDE05")}).to.throw(Error, "EncodingError U+DE05");
expect(() => {ms932Encoder.encode("\uDE06")}).to.throw(Error, "EncodingError U+DE06");
expect(() => {ms932Encoder.encode("\uDE07")}).to.throw(Error, "EncodingError U+DE07");
expect(() => {ms932Encoder.encode("\uDE08")}).to.throw(Error, "EncodingError U+DE08");
expect(() => {ms932Encoder.encode("\uDE09")}).to.throw(Error, "EncodingError U+DE09");
expect(() => {ms932Encoder.encode("\uDE0A")}).to.throw(Error, "EncodingError U+DE0A");
expect(() => {ms932Encoder.encode("\uDE0B")}).to.throw(Error, "EncodingError U+DE0B");
expect(() => {ms932Encoder.encode("\uDE0C")}).to.throw(Error, "EncodingError U+DE0C");
expect(() => {ms932Encoder.encode("\uDE0D")}).to.throw(Error, "EncodingError U+DE0D");
expect(() => {ms932Encoder.encode("\uDE0E")}).to.throw(Error, "EncodingError U+DE0E");
expect(() => {ms932Encoder.encode("\uDE0F")}).to.throw(Error, "EncodingError U+DE0F");
expect(() => {ms932Encoder.encode("\uDE10")}).to.throw(Error, "EncodingError U+DE10");
expect(() => {ms932Encoder.encode("\uDE11")}).to.throw(Error, "EncodingError U+DE11");
expect(() => {ms932Encoder.encode("\uDE12")}).to.throw(Error, "EncodingError U+DE12");
expect(() => {ms932Encoder.encode("\uDE13")}).to.throw(Error, "EncodingError U+DE13");
expect(() => {ms932Encoder.encode("\uDE14")}).to.throw(Error, "EncodingError U+DE14");
expect(() => {ms932Encoder.encode("\uDE15")}).to.throw(Error, "EncodingError U+DE15");
expect(() => {ms932Encoder.encode("\uDE16")}).to.throw(Error, "EncodingError U+DE16");
expect(() => {ms932Encoder.encode("\uDE17")}).to.throw(Error, "EncodingError U+DE17");
expect(() => {ms932Encoder.encode("\uDE18")}).to.throw(Error, "EncodingError U+DE18");
expect(() => {ms932Encoder.encode("\uDE19")}).to.throw(Error, "EncodingError U+DE19");
expect(() => {ms932Encoder.encode("\uDE1A")}).to.throw(Error, "EncodingError U+DE1A");
expect(() => {ms932Encoder.encode("\uDE1B")}).to.throw(Error, "EncodingError U+DE1B");
expect(() => {ms932Encoder.encode("\uDE1C")}).to.throw(Error, "EncodingError U+DE1C");
expect(() => {ms932Encoder.encode("\uDE1D")}).to.throw(Error, "EncodingError U+DE1D");
expect(() => {ms932Encoder.encode("\uDE1E")}).to.throw(Error, "EncodingError U+DE1E");
expect(() => {ms932Encoder.encode("\uDE1F")}).to.throw(Error, "EncodingError U+DE1F");
expect(() => {ms932Encoder.encode("\uDE20")}).to.throw(Error, "EncodingError U+DE20");
expect(() => {ms932Encoder.encode("\uDE21")}).to.throw(Error, "EncodingError U+DE21");
expect(() => {ms932Encoder.encode("\uDE22")}).to.throw(Error, "EncodingError U+DE22");
expect(() => {ms932Encoder.encode("\uDE23")}).to.throw(Error, "EncodingError U+DE23");
expect(() => {ms932Encoder.encode("\uDE24")}).to.throw(Error, "EncodingError U+DE24");
expect(() => {ms932Encoder.encode("\uDE25")}).to.throw(Error, "EncodingError U+DE25");
expect(() => {ms932Encoder.encode("\uDE26")}).to.throw(Error, "EncodingError U+DE26");
expect(() => {ms932Encoder.encode("\uDE27")}).to.throw(Error, "EncodingError U+DE27");
expect(() => {ms932Encoder.encode("\uDE28")}).to.throw(Error, "EncodingError U+DE28");
expect(() => {ms932Encoder.encode("\uDE29")}).to.throw(Error, "EncodingError U+DE29");
expect(() => {ms932Encoder.encode("\uDE2A")}).to.throw(Error, "EncodingError U+DE2A");
expect(() => {ms932Encoder.encode("\uDE2B")}).to.throw(Error, "EncodingError U+DE2B");
expect(() => {ms932Encoder.encode("\uDE2C")}).to.throw(Error, "EncodingError U+DE2C");
expect(() => {ms932Encoder.encode("\uDE2D")}).to.throw(Error, "EncodingError U+DE2D");
expect(() => {ms932Encoder.encode("\uDE2E")}).to.throw(Error, "EncodingError U+DE2E");
expect(() => {ms932Encoder.encode("\uDE2F")}).to.throw(Error, "EncodingError U+DE2F");
expect(() => {ms932Encoder.encode("\uDE30")}).to.throw(Error, "EncodingError U+DE30");
expect(() => {ms932Encoder.encode("\uDE31")}).to.throw(Error, "EncodingError U+DE31");
expect(() => {ms932Encoder.encode("\uDE32")}).to.throw(Error, "EncodingError U+DE32");
expect(() => {ms932Encoder.encode("\uDE33")}).to.throw(Error, "EncodingError U+DE33");
expect(() => {ms932Encoder.encode("\uDE34")}).to.throw(Error, "EncodingError U+DE34");
expect(() => {ms932Encoder.encode("\uDE35")}).to.throw(Error, "EncodingError U+DE35");
expect(() => {ms932Encoder.encode("\uDE36")}).to.throw(Error, "EncodingError U+DE36");
expect(() => {ms932Encoder.encode("\uDE37")}).to.throw(Error, "EncodingError U+DE37");
expect(() => {ms932Encoder.encode("\uDE38")}).to.throw(Error, "EncodingError U+DE38");
expect(() => {ms932Encoder.encode("\uDE39")}).to.throw(Error, "EncodingError U+DE39");
expect(() => {ms932Encoder.encode("\uDE3A")}).to.throw(Error, "EncodingError U+DE3A");
expect(() => {ms932Encoder.encode("\uDE3B")}).to.throw(Error, "EncodingError U+DE3B");
expect(() => {ms932Encoder.encode("\uDE3C")}).to.throw(Error, "EncodingError U+DE3C");
expect(() => {ms932Encoder.encode("\uDE3D")}).to.throw(Error, "EncodingError U+DE3D");
expect(() => {ms932Encoder.encode("\uDE3E")}).to.throw(Error, "EncodingError U+DE3E");
expect(() => {ms932Encoder.encode("\uDE3F")}).to.throw(Error, "EncodingError U+DE3F");
expect(() => {ms932Encoder.encode("\uDE40")}).to.throw(Error, "EncodingError U+DE40");
expect(() => {ms932Encoder.encode("\uDE41")}).to.throw(Error, "EncodingError U+DE41");
expect(() => {ms932Encoder.encode("\uDE42")}).to.throw(Error, "EncodingError U+DE42");
expect(() => {ms932Encoder.encode("\uDE43")}).to.throw(Error, "EncodingError U+DE43");
expect(() => {ms932Encoder.encode("\uDE44")}).to.throw(Error, "EncodingError U+DE44");
expect(() => {ms932Encoder.encode("\uDE45")}).to.throw(Error, "EncodingError U+DE45");
expect(() => {ms932Encoder.encode("\uDE46")}).to.throw(Error, "EncodingError U+DE46");
expect(() => {ms932Encoder.encode("\uDE47")}).to.throw(Error, "EncodingError U+DE47");
expect(() => {ms932Encoder.encode("\uDE48")}).to.throw(Error, "EncodingError U+DE48");
expect(() => {ms932Encoder.encode("\uDE49")}).to.throw(Error, "EncodingError U+DE49");
expect(() => {ms932Encoder.encode("\uDE4A")}).to.throw(Error, "EncodingError U+DE4A");
expect(() => {ms932Encoder.encode("\uDE4B")}).to.throw(Error, "EncodingError U+DE4B");
expect(() => {ms932Encoder.encode("\uDE4C")}).to.throw(Error, "EncodingError U+DE4C");
expect(() => {ms932Encoder.encode("\uDE4D")}).to.throw(Error, "EncodingError U+DE4D");
expect(() => {ms932Encoder.encode("\uDE4E")}).to.throw(Error, "EncodingError U+DE4E");
expect(() => {ms932Encoder.encode("\uDE4F")}).to.throw(Error, "EncodingError U+DE4F");
expect(() => {ms932Encoder.encode("\uDE50")}).to.throw(Error, "EncodingError U+DE50");
expect(() => {ms932Encoder.encode("\uDE51")}).to.throw(Error, "EncodingError U+DE51");
expect(() => {ms932Encoder.encode("\uDE52")}).to.throw(Error, "EncodingError U+DE52");
expect(() => {ms932Encoder.encode("\uDE53")}).to.throw(Error, "EncodingError U+DE53");
expect(() => {ms932Encoder.encode("\uDE54")}).to.throw(Error, "EncodingError U+DE54");
expect(() => {ms932Encoder.encode("\uDE55")}).to.throw(Error, "EncodingError U+DE55");
expect(() => {ms932Encoder.encode("\uDE56")}).to.throw(Error, "EncodingError U+DE56");
expect(() => {ms932Encoder.encode("\uDE57")}).to.throw(Error, "EncodingError U+DE57");
expect(() => {ms932Encoder.encode("\uDE58")}).to.throw(Error, "EncodingError U+DE58");
expect(() => {ms932Encoder.encode("\uDE59")}).to.throw(Error, "EncodingError U+DE59");
expect(() => {ms932Encoder.encode("\uDE5A")}).to.throw(Error, "EncodingError U+DE5A");
expect(() => {ms932Encoder.encode("\uDE5B")}).to.throw(Error, "EncodingError U+DE5B");
expect(() => {ms932Encoder.encode("\uDE5C")}).to.throw(Error, "EncodingError U+DE5C");
expect(() => {ms932Encoder.encode("\uDE5D")}).to.throw(Error, "EncodingError U+DE5D");
expect(() => {ms932Encoder.encode("\uDE5E")}).to.throw(Error, "EncodingError U+DE5E");
expect(() => {ms932Encoder.encode("\uDE5F")}).to.throw(Error, "EncodingError U+DE5F");
expect(() => {ms932Encoder.encode("\uDE60")}).to.throw(Error, "EncodingError U+DE60");
expect(() => {ms932Encoder.encode("\uDE61")}).to.throw(Error, "EncodingError U+DE61");
expect(() => {ms932Encoder.encode("\uDE62")}).to.throw(Error, "EncodingError U+DE62");
expect(() => {ms932Encoder.encode("\uDE63")}).to.throw(Error, "EncodingError U+DE63");
expect(() => {ms932Encoder.encode("\uDE64")}).to.throw(Error, "EncodingError U+DE64");
expect(() => {ms932Encoder.encode("\uDE65")}).to.throw(Error, "EncodingError U+DE65");
expect(() => {ms932Encoder.encode("\uDE66")}).to.throw(Error, "EncodingError U+DE66");
expect(() => {ms932Encoder.encode("\uDE67")}).to.throw(Error, "EncodingError U+DE67");
expect(() => {ms932Encoder.encode("\uDE68")}).to.throw(Error, "EncodingError U+DE68");
expect(() => {ms932Encoder.encode("\uDE69")}).to.throw(Error, "EncodingError U+DE69");
expect(() => {ms932Encoder.encode("\uDE6A")}).to.throw(Error, "EncodingError U+DE6A");
expect(() => {ms932Encoder.encode("\uDE6B")}).to.throw(Error, "EncodingError U+DE6B");
expect(() => {ms932Encoder.encode("\uDE6C")}).to.throw(Error, "EncodingError U+DE6C");
expect(() => {ms932Encoder.encode("\uDE6D")}).to.throw(Error, "EncodingError U+DE6D");
expect(() => {ms932Encoder.encode("\uDE6E")}).to.throw(Error, "EncodingError U+DE6E");
expect(() => {ms932Encoder.encode("\uDE6F")}).to.throw(Error, "EncodingError U+DE6F");
expect(() => {ms932Encoder.encode("\uDE70")}).to.throw(Error, "EncodingError U+DE70");
expect(() => {ms932Encoder.encode("\uDE71")}).to.throw(Error, "EncodingError U+DE71");
expect(() => {ms932Encoder.encode("\uDE72")}).to.throw(Error, "EncodingError U+DE72");
expect(() => {ms932Encoder.encode("\uDE73")}).to.throw(Error, "EncodingError U+DE73");
expect(() => {ms932Encoder.encode("\uDE74")}).to.throw(Error, "EncodingError U+DE74");
expect(() => {ms932Encoder.encode("\uDE75")}).to.throw(Error, "EncodingError U+DE75");
expect(() => {ms932Encoder.encode("\uDE76")}).to.throw(Error, "EncodingError U+DE76");
expect(() => {ms932Encoder.encode("\uDE77")}).to.throw(Error, "EncodingError U+DE77");
expect(() => {ms932Encoder.encode("\uDE78")}).to.throw(Error, "EncodingError U+DE78");
expect(() => {ms932Encoder.encode("\uDE79")}).to.throw(Error, "EncodingError U+DE79");
expect(() => {ms932Encoder.encode("\uDE7A")}).to.throw(Error, "EncodingError U+DE7A");
expect(() => {ms932Encoder.encode("\uDE7B")}).to.throw(Error, "EncodingError U+DE7B");
expect(() => {ms932Encoder.encode("\uDE7C")}).to.throw(Error, "EncodingError U+DE7C");
expect(() => {ms932Encoder.encode("\uDE7D")}).to.throw(Error, "EncodingError U+DE7D");
expect(() => {ms932Encoder.encode("\uDE7E")}).to.throw(Error, "EncodingError U+DE7E");
expect(() => {ms932Encoder.encode("\uDE7F")}).to.throw(Error, "EncodingError U+DE7F");
expect(() => {ms932Encoder.encode("\uDE80")}).to.throw(Error, "EncodingError U+DE80");
expect(() => {ms932Encoder.encode("\uDE81")}).to.throw(Error, "EncodingError U+DE81");
expect(() => {ms932Encoder.encode("\uDE82")}).to.throw(Error, "EncodingError U+DE82");
expect(() => {ms932Encoder.encode("\uDE83")}).to.throw(Error, "EncodingError U+DE83");
expect(() => {ms932Encoder.encode("\uDE84")}).to.throw(Error, "EncodingError U+DE84");
expect(() => {ms932Encoder.encode("\uDE85")}).to.throw(Error, "EncodingError U+DE85");
expect(() => {ms932Encoder.encode("\uDE86")}).to.throw(Error, "EncodingError U+DE86");
expect(() => {ms932Encoder.encode("\uDE87")}).to.throw(Error, "EncodingError U+DE87");
expect(() => {ms932Encoder.encode("\uDE88")}).to.throw(Error, "EncodingError U+DE88");
expect(() => {ms932Encoder.encode("\uDE89")}).to.throw(Error, "EncodingError U+DE89");
expect(() => {ms932Encoder.encode("\uDE8A")}).to.throw(Error, "EncodingError U+DE8A");
expect(() => {ms932Encoder.encode("\uDE8B")}).to.throw(Error, "EncodingError U+DE8B");
expect(() => {ms932Encoder.encode("\uDE8C")}).to.throw(Error, "EncodingError U+DE8C");
expect(() => {ms932Encoder.encode("\uDE8D")}).to.throw(Error, "EncodingError U+DE8D");
expect(() => {ms932Encoder.encode("\uDE8E")}).to.throw(Error, "EncodingError U+DE8E");
expect(() => {ms932Encoder.encode("\uDE8F")}).to.throw(Error, "EncodingError U+DE8F");
expect(() => {ms932Encoder.encode("\uDE90")}).to.throw(Error, "EncodingError U+DE90");
expect(() => {ms932Encoder.encode("\uDE91")}).to.throw(Error, "EncodingError U+DE91");
expect(() => {ms932Encoder.encode("\uDE92")}).to.throw(Error, "EncodingError U+DE92");
expect(() => {ms932Encoder.encode("\uDE93")}).to.throw(Error, "EncodingError U+DE93");
expect(() => {ms932Encoder.encode("\uDE94")}).to.throw(Error, "EncodingError U+DE94");
expect(() => {ms932Encoder.encode("\uDE95")}).to.throw(Error, "EncodingError U+DE95");
expect(() => {ms932Encoder.encode("\uDE96")}).to.throw(Error, "EncodingError U+DE96");
expect(() => {ms932Encoder.encode("\uDE97")}).to.throw(Error, "EncodingError U+DE97");
expect(() => {ms932Encoder.encode("\uDE98")}).to.throw(Error, "EncodingError U+DE98");
expect(() => {ms932Encoder.encode("\uDE99")}).to.throw(Error, "EncodingError U+DE99");
expect(() => {ms932Encoder.encode("\uDE9A")}).to.throw(Error, "EncodingError U+DE9A");
expect(() => {ms932Encoder.encode("\uDE9B")}).to.throw(Error, "EncodingError U+DE9B");
expect(() => {ms932Encoder.encode("\uDE9C")}).to.throw(Error, "EncodingError U+DE9C");
expect(() => {ms932Encoder.encode("\uDE9D")}).to.throw(Error, "EncodingError U+DE9D");
expect(() => {ms932Encoder.encode("\uDE9E")}).to.throw(Error, "EncodingError U+DE9E");
expect(() => {ms932Encoder.encode("\uDE9F")}).to.throw(Error, "EncodingError U+DE9F");
expect(() => {ms932Encoder.encode("\uDEA0")}).to.throw(Error, "EncodingError U+DEA0");
expect(() => {ms932Encoder.encode("\uDEA1")}).to.throw(Error, "EncodingError U+DEA1");
expect(() => {ms932Encoder.encode("\uDEA2")}).to.throw(Error, "EncodingError U+DEA2");
expect(() => {ms932Encoder.encode("\uDEA3")}).to.throw(Error, "EncodingError U+DEA3");
expect(() => {ms932Encoder.encode("\uDEA4")}).to.throw(Error, "EncodingError U+DEA4");
expect(() => {ms932Encoder.encode("\uDEA5")}).to.throw(Error, "EncodingError U+DEA5");
expect(() => {ms932Encoder.encode("\uDEA6")}).to.throw(Error, "EncodingError U+DEA6");
expect(() => {ms932Encoder.encode("\uDEA7")}).to.throw(Error, "EncodingError U+DEA7");
expect(() => {ms932Encoder.encode("\uDEA8")}).to.throw(Error, "EncodingError U+DEA8");
expect(() => {ms932Encoder.encode("\uDEA9")}).to.throw(Error, "EncodingError U+DEA9");
expect(() => {ms932Encoder.encode("\uDEAA")}).to.throw(Error, "EncodingError U+DEAA");
expect(() => {ms932Encoder.encode("\uDEAB")}).to.throw(Error, "EncodingError U+DEAB");
expect(() => {ms932Encoder.encode("\uDEAC")}).to.throw(Error, "EncodingError U+DEAC");
expect(() => {ms932Encoder.encode("\uDEAD")}).to.throw(Error, "EncodingError U+DEAD");
expect(() => {ms932Encoder.encode("\uDEAE")}).to.throw(Error, "EncodingError U+DEAE");
expect(() => {ms932Encoder.encode("\uDEAF")}).to.throw(Error, "EncodingError U+DEAF");
expect(() => {ms932Encoder.encode("\uDEB0")}).to.throw(Error, "EncodingError U+DEB0");
expect(() => {ms932Encoder.encode("\uDEB1")}).to.throw(Error, "EncodingError U+DEB1");
expect(() => {ms932Encoder.encode("\uDEB2")}).to.throw(Error, "EncodingError U+DEB2");
expect(() => {ms932Encoder.encode("\uDEB3")}).to.throw(Error, "EncodingError U+DEB3");
expect(() => {ms932Encoder.encode("\uDEB4")}).to.throw(Error, "EncodingError U+DEB4");
expect(() => {ms932Encoder.encode("\uDEB5")}).to.throw(Error, "EncodingError U+DEB5");
expect(() => {ms932Encoder.encode("\uDEB6")}).to.throw(Error, "EncodingError U+DEB6");
expect(() => {ms932Encoder.encode("\uDEB7")}).to.throw(Error, "EncodingError U+DEB7");
expect(() => {ms932Encoder.encode("\uDEB8")}).to.throw(Error, "EncodingError U+DEB8");
expect(() => {ms932Encoder.encode("\uDEB9")}).to.throw(Error, "EncodingError U+DEB9");
expect(() => {ms932Encoder.encode("\uDEBA")}).to.throw(Error, "EncodingError U+DEBA");
expect(() => {ms932Encoder.encode("\uDEBB")}).to.throw(Error, "EncodingError U+DEBB");
expect(() => {ms932Encoder.encode("\uDEBC")}).to.throw(Error, "EncodingError U+DEBC");
expect(() => {ms932Encoder.encode("\uDEBD")}).to.throw(Error, "EncodingError U+DEBD");
expect(() => {ms932Encoder.encode("\uDEBE")}).to.throw(Error, "EncodingError U+DEBE");
expect(() => {ms932Encoder.encode("\uDEBF")}).to.throw(Error, "EncodingError U+DEBF");
expect(() => {ms932Encoder.encode("\uDEC0")}).to.throw(Error, "EncodingError U+DEC0");
expect(() => {ms932Encoder.encode("\uDEC1")}).to.throw(Error, "EncodingError U+DEC1");
expect(() => {ms932Encoder.encode("\uDEC2")}).to.throw(Error, "EncodingError U+DEC2");
expect(() => {ms932Encoder.encode("\uDEC3")}).to.throw(Error, "EncodingError U+DEC3");
expect(() => {ms932Encoder.encode("\uDEC4")}).to.throw(Error, "EncodingError U+DEC4");
expect(() => {ms932Encoder.encode("\uDEC5")}).to.throw(Error, "EncodingError U+DEC5");
expect(() => {ms932Encoder.encode("\uDEC6")}).to.throw(Error, "EncodingError U+DEC6");
expect(() => {ms932Encoder.encode("\uDEC7")}).to.throw(Error, "EncodingError U+DEC7");
expect(() => {ms932Encoder.encode("\uDEC8")}).to.throw(Error, "EncodingError U+DEC8");
expect(() => {ms932Encoder.encode("\uDEC9")}).to.throw(Error, "EncodingError U+DEC9");
expect(() => {ms932Encoder.encode("\uDECA")}).to.throw(Error, "EncodingError U+DECA");
expect(() => {ms932Encoder.encode("\uDECB")}).to.throw(Error, "EncodingError U+DECB");
expect(() => {ms932Encoder.encode("\uDECC")}).to.throw(Error, "EncodingError U+DECC");
expect(() => {ms932Encoder.encode("\uDECD")}).to.throw(Error, "EncodingError U+DECD");
expect(() => {ms932Encoder.encode("\uDECE")}).to.throw(Error, "EncodingError U+DECE");
expect(() => {ms932Encoder.encode("\uDECF")}).to.throw(Error, "EncodingError U+DECF");
expect(() => {ms932Encoder.encode("\uDED0")}).to.throw(Error, "EncodingError U+DED0");
expect(() => {ms932Encoder.encode("\uDED1")}).to.throw(Error, "EncodingError U+DED1");
expect(() => {ms932Encoder.encode("\uDED2")}).to.throw(Error, "EncodingError U+DED2");
expect(() => {ms932Encoder.encode("\uDED3")}).to.throw(Error, "EncodingError U+DED3");
expect(() => {ms932Encoder.encode("\uDED4")}).to.throw(Error, "EncodingError U+DED4");
expect(() => {ms932Encoder.encode("\uDED5")}).to.throw(Error, "EncodingError U+DED5");
expect(() => {ms932Encoder.encode("\uDED6")}).to.throw(Error, "EncodingError U+DED6");
expect(() => {ms932Encoder.encode("\uDED7")}).to.throw(Error, "EncodingError U+DED7");
expect(() => {ms932Encoder.encode("\uDED8")}).to.throw(Error, "EncodingError U+DED8");
expect(() => {ms932Encoder.encode("\uDED9")}).to.throw(Error, "EncodingError U+DED9");
expect(() => {ms932Encoder.encode("\uDEDA")}).to.throw(Error, "EncodingError U+DEDA");
expect(() => {ms932Encoder.encode("\uDEDB")}).to.throw(Error, "EncodingError U+DEDB");
expect(() => {ms932Encoder.encode("\uDEDC")}).to.throw(Error, "EncodingError U+DEDC");
expect(() => {ms932Encoder.encode("\uDEDD")}).to.throw(Error, "EncodingError U+DEDD");
expect(() => {ms932Encoder.encode("\uDEDE")}).to.throw(Error, "EncodingError U+DEDE");
expect(() => {ms932Encoder.encode("\uDEDF")}).to.throw(Error, "EncodingError U+DEDF");
expect(() => {ms932Encoder.encode("\uDEE0")}).to.throw(Error, "EncodingError U+DEE0");
expect(() => {ms932Encoder.encode("\uDEE1")}).to.throw(Error, "EncodingError U+DEE1");
expect(() => {ms932Encoder.encode("\uDEE2")}).to.throw(Error, "EncodingError U+DEE2");
expect(() => {ms932Encoder.encode("\uDEE3")}).to.throw(Error, "EncodingError U+DEE3");
expect(() => {ms932Encoder.encode("\uDEE4")}).to.throw(Error, "EncodingError U+DEE4");
expect(() => {ms932Encoder.encode("\uDEE5")}).to.throw(Error, "EncodingError U+DEE5");
expect(() => {ms932Encoder.encode("\uDEE6")}).to.throw(Error, "EncodingError U+DEE6");
expect(() => {ms932Encoder.encode("\uDEE7")}).to.throw(Error, "EncodingError U+DEE7");
expect(() => {ms932Encoder.encode("\uDEE8")}).to.throw(Error, "EncodingError U+DEE8");
expect(() => {ms932Encoder.encode("\uDEE9")}).to.throw(Error, "EncodingError U+DEE9");
expect(() => {ms932Encoder.encode("\uDEEA")}).to.throw(Error, "EncodingError U+DEEA");
expect(() => {ms932Encoder.encode("\uDEEB")}).to.throw(Error, "EncodingError U+DEEB");
expect(() => {ms932Encoder.encode("\uDEEC")}).to.throw(Error, "EncodingError U+DEEC");
expect(() => {ms932Encoder.encode("\uDEED")}).to.throw(Error, "EncodingError U+DEED");
expect(() => {ms932Encoder.encode("\uDEEE")}).to.throw(Error, "EncodingError U+DEEE");
expect(() => {ms932Encoder.encode("\uDEEF")}).to.throw(Error, "EncodingError U+DEEF");
expect(() => {ms932Encoder.encode("\uDEF0")}).to.throw(Error, "EncodingError U+DEF0");
expect(() => {ms932Encoder.encode("\uDEF1")}).to.throw(Error, "EncodingError U+DEF1");
expect(() => {ms932Encoder.encode("\uDEF2")}).to.throw(Error, "EncodingError U+DEF2");
expect(() => {ms932Encoder.encode("\uDEF3")}).to.throw(Error, "EncodingError U+DEF3");
expect(() => {ms932Encoder.encode("\uDEF4")}).to.throw(Error, "EncodingError U+DEF4");
expect(() => {ms932Encoder.encode("\uDEF5")}).to.throw(Error, "EncodingError U+DEF5");
expect(() => {ms932Encoder.encode("\uDEF6")}).to.throw(Error, "EncodingError U+DEF6");
expect(() => {ms932Encoder.encode("\uDEF7")}).to.throw(Error, "EncodingError U+DEF7");
expect(() => {ms932Encoder.encode("\uDEF8")}).to.throw(Error, "EncodingError U+DEF8");
expect(() => {ms932Encoder.encode("\uDEF9")}).to.throw(Error, "EncodingError U+DEF9");
expect(() => {ms932Encoder.encode("\uDEFA")}).to.throw(Error, "EncodingError U+DEFA");
expect(() => {ms932Encoder.encode("\uDEFB")}).to.throw(Error, "EncodingError U+DEFB");
expect(() => {ms932Encoder.encode("\uDEFC")}).to.throw(Error, "EncodingError U+DEFC");
expect(() => {ms932Encoder.encode("\uDEFD")}).to.throw(Error, "EncodingError U+DEFD");
expect(() => {ms932Encoder.encode("\uDEFE")}).to.throw(Error, "EncodingError U+DEFE");
expect(() => {ms932Encoder.encode("\uDEFF")}).to.throw(Error, "EncodingError U+DEFF");
expect(() => {ms932Encoder.encode("\uDF00")}).to.throw(Error, "EncodingError U+DF00");
expect(() => {ms932Encoder.encode("\uDF01")}).to.throw(Error, "EncodingError U+DF01");
expect(() => {ms932Encoder.encode("\uDF02")}).to.throw(Error, "EncodingError U+DF02");
expect(() => {ms932Encoder.encode("\uDF03")}).to.throw(Error, "EncodingError U+DF03");
expect(() => {ms932Encoder.encode("\uDF04")}).to.throw(Error, "EncodingError U+DF04");
expect(() => {ms932Encoder.encode("\uDF05")}).to.throw(Error, "EncodingError U+DF05");
expect(() => {ms932Encoder.encode("\uDF06")}).to.throw(Error, "EncodingError U+DF06");
expect(() => {ms932Encoder.encode("\uDF07")}).to.throw(Error, "EncodingError U+DF07");
expect(() => {ms932Encoder.encode("\uDF08")}).to.throw(Error, "EncodingError U+DF08");
expect(() => {ms932Encoder.encode("\uDF09")}).to.throw(Error, "EncodingError U+DF09");
expect(() => {ms932Encoder.encode("\uDF0A")}).to.throw(Error, "EncodingError U+DF0A");
expect(() => {ms932Encoder.encode("\uDF0B")}).to.throw(Error, "EncodingError U+DF0B");
expect(() => {ms932Encoder.encode("\uDF0C")}).to.throw(Error, "EncodingError U+DF0C");
expect(() => {ms932Encoder.encode("\uDF0D")}).to.throw(Error, "EncodingError U+DF0D");
expect(() => {ms932Encoder.encode("\uDF0E")}).to.throw(Error, "EncodingError U+DF0E");
expect(() => {ms932Encoder.encode("\uDF0F")}).to.throw(Error, "EncodingError U+DF0F");
expect(() => {ms932Encoder.encode("\uDF10")}).to.throw(Error, "EncodingError U+DF10");
expect(() => {ms932Encoder.encode("\uDF11")}).to.throw(Error, "EncodingError U+DF11");
expect(() => {ms932Encoder.encode("\uDF12")}).to.throw(Error, "EncodingError U+DF12");
expect(() => {ms932Encoder.encode("\uDF13")}).to.throw(Error, "EncodingError U+DF13");
expect(() => {ms932Encoder.encode("\uDF14")}).to.throw(Error, "EncodingError U+DF14");
expect(() => {ms932Encoder.encode("\uDF15")}).to.throw(Error, "EncodingError U+DF15");
expect(() => {ms932Encoder.encode("\uDF16")}).to.throw(Error, "EncodingError U+DF16");
expect(() => {ms932Encoder.encode("\uDF17")}).to.throw(Error, "EncodingError U+DF17");
expect(() => {ms932Encoder.encode("\uDF18")}).to.throw(Error, "EncodingError U+DF18");
expect(() => {ms932Encoder.encode("\uDF19")}).to.throw(Error, "EncodingError U+DF19");
expect(() => {ms932Encoder.encode("\uDF1A")}).to.throw(Error, "EncodingError U+DF1A");
expect(() => {ms932Encoder.encode("\uDF1B")}).to.throw(Error, "EncodingError U+DF1B");
expect(() => {ms932Encoder.encode("\uDF1C")}).to.throw(Error, "EncodingError U+DF1C");
expect(() => {ms932Encoder.encode("\uDF1D")}).to.throw(Error, "EncodingError U+DF1D");
expect(() => {ms932Encoder.encode("\uDF1E")}).to.throw(Error, "EncodingError U+DF1E");
expect(() => {ms932Encoder.encode("\uDF1F")}).to.throw(Error, "EncodingError U+DF1F");
expect(() => {ms932Encoder.encode("\uDF20")}).to.throw(Error, "EncodingError U+DF20");
expect(() => {ms932Encoder.encode("\uDF21")}).to.throw(Error, "EncodingError U+DF21");
expect(() => {ms932Encoder.encode("\uDF22")}).to.throw(Error, "EncodingError U+DF22");
expect(() => {ms932Encoder.encode("\uDF23")}).to.throw(Error, "EncodingError U+DF23");
expect(() => {ms932Encoder.encode("\uDF24")}).to.throw(Error, "EncodingError U+DF24");
expect(() => {ms932Encoder.encode("\uDF25")}).to.throw(Error, "EncodingError U+DF25");
expect(() => {ms932Encoder.encode("\uDF26")}).to.throw(Error, "EncodingError U+DF26");
expect(() => {ms932Encoder.encode("\uDF27")}).to.throw(Error, "EncodingError U+DF27");
expect(() => {ms932Encoder.encode("\uDF28")}).to.throw(Error, "EncodingError U+DF28");
expect(() => {ms932Encoder.encode("\uDF29")}).to.throw(Error, "EncodingError U+DF29");
expect(() => {ms932Encoder.encode("\uDF2A")}).to.throw(Error, "EncodingError U+DF2A");
expect(() => {ms932Encoder.encode("\uDF2B")}).to.throw(Error, "EncodingError U+DF2B");
expect(() => {ms932Encoder.encode("\uDF2C")}).to.throw(Error, "EncodingError U+DF2C");
expect(() => {ms932Encoder.encode("\uDF2D")}).to.throw(Error, "EncodingError U+DF2D");
expect(() => {ms932Encoder.encode("\uDF2E")}).to.throw(Error, "EncodingError U+DF2E");
expect(() => {ms932Encoder.encode("\uDF2F")}).to.throw(Error, "EncodingError U+DF2F");
expect(() => {ms932Encoder.encode("\uDF30")}).to.throw(Error, "EncodingError U+DF30");
expect(() => {ms932Encoder.encode("\uDF31")}).to.throw(Error, "EncodingError U+DF31");
expect(() => {ms932Encoder.encode("\uDF32")}).to.throw(Error, "EncodingError U+DF32");
expect(() => {ms932Encoder.encode("\uDF33")}).to.throw(Error, "EncodingError U+DF33");
expect(() => {ms932Encoder.encode("\uDF34")}).to.throw(Error, "EncodingError U+DF34");
expect(() => {ms932Encoder.encode("\uDF35")}).to.throw(Error, "EncodingError U+DF35");
expect(() => {ms932Encoder.encode("\uDF36")}).to.throw(Error, "EncodingError U+DF36");
expect(() => {ms932Encoder.encode("\uDF37")}).to.throw(Error, "EncodingError U+DF37");
expect(() => {ms932Encoder.encode("\uDF38")}).to.throw(Error, "EncodingError U+DF38");
expect(() => {ms932Encoder.encode("\uDF39")}).to.throw(Error, "EncodingError U+DF39");
expect(() => {ms932Encoder.encode("\uDF3A")}).to.throw(Error, "EncodingError U+DF3A");
expect(() => {ms932Encoder.encode("\uDF3B")}).to.throw(Error, "EncodingError U+DF3B");
expect(() => {ms932Encoder.encode("\uDF3C")}).to.throw(Error, "EncodingError U+DF3C");
expect(() => {ms932Encoder.encode("\uDF3D")}).to.throw(Error, "EncodingError U+DF3D");
expect(() => {ms932Encoder.encode("\uDF3E")}).to.throw(Error, "EncodingError U+DF3E");
expect(() => {ms932Encoder.encode("\uDF3F")}).to.throw(Error, "EncodingError U+DF3F");
expect(() => {ms932Encoder.encode("\uDF40")}).to.throw(Error, "EncodingError U+DF40");
expect(() => {ms932Encoder.encode("\uDF41")}).to.throw(Error, "EncodingError U+DF41");
expect(() => {ms932Encoder.encode("\uDF42")}).to.throw(Error, "EncodingError U+DF42");
expect(() => {ms932Encoder.encode("\uDF43")}).to.throw(Error, "EncodingError U+DF43");
expect(() => {ms932Encoder.encode("\uDF44")}).to.throw(Error, "EncodingError U+DF44");
expect(() => {ms932Encoder.encode("\uDF45")}).to.throw(Error, "EncodingError U+DF45");
expect(() => {ms932Encoder.encode("\uDF46")}).to.throw(Error, "EncodingError U+DF46");
expect(() => {ms932Encoder.encode("\uDF47")}).to.throw(Error, "EncodingError U+DF47");
expect(() => {ms932Encoder.encode("\uDF48")}).to.throw(Error, "EncodingError U+DF48");
expect(() => {ms932Encoder.encode("\uDF49")}).to.throw(Error, "EncodingError U+DF49");
expect(() => {ms932Encoder.encode("\uDF4A")}).to.throw(Error, "EncodingError U+DF4A");
expect(() => {ms932Encoder.encode("\uDF4B")}).to.throw(Error, "EncodingError U+DF4B");
expect(() => {ms932Encoder.encode("\uDF4C")}).to.throw(Error, "EncodingError U+DF4C");
expect(() => {ms932Encoder.encode("\uDF4D")}).to.throw(Error, "EncodingError U+DF4D");
expect(() => {ms932Encoder.encode("\uDF4E")}).to.throw(Error, "EncodingError U+DF4E");
expect(() => {ms932Encoder.encode("\uDF4F")}).to.throw(Error, "EncodingError U+DF4F");
expect(() => {ms932Encoder.encode("\uDF50")}).to.throw(Error, "EncodingError U+DF50");
expect(() => {ms932Encoder.encode("\uDF51")}).to.throw(Error, "EncodingError U+DF51");
expect(() => {ms932Encoder.encode("\uDF52")}).to.throw(Error, "EncodingError U+DF52");
expect(() => {ms932Encoder.encode("\uDF53")}).to.throw(Error, "EncodingError U+DF53");
expect(() => {ms932Encoder.encode("\uDF54")}).to.throw(Error, "EncodingError U+DF54");
expect(() => {ms932Encoder.encode("\uDF55")}).to.throw(Error, "EncodingError U+DF55");
expect(() => {ms932Encoder.encode("\uDF56")}).to.throw(Error, "EncodingError U+DF56");
expect(() => {ms932Encoder.encode("\uDF57")}).to.throw(Error, "EncodingError U+DF57");
expect(() => {ms932Encoder.encode("\uDF58")}).to.throw(Error, "EncodingError U+DF58");
expect(() => {ms932Encoder.encode("\uDF59")}).to.throw(Error, "EncodingError U+DF59");
expect(() => {ms932Encoder.encode("\uDF5A")}).to.throw(Error, "EncodingError U+DF5A");
expect(() => {ms932Encoder.encode("\uDF5B")}).to.throw(Error, "EncodingError U+DF5B");
expect(() => {ms932Encoder.encode("\uDF5C")}).to.throw(Error, "EncodingError U+DF5C");
expect(() => {ms932Encoder.encode("\uDF5D")}).to.throw(Error, "EncodingError U+DF5D");
expect(() => {ms932Encoder.encode("\uDF5E")}).to.throw(Error, "EncodingError U+DF5E");
expect(() => {ms932Encoder.encode("\uDF5F")}).to.throw(Error, "EncodingError U+DF5F");
expect(() => {ms932Encoder.encode("\uDF60")}).to.throw(Error, "EncodingError U+DF60");
expect(() => {ms932Encoder.encode("\uDF61")}).to.throw(Error, "EncodingError U+DF61");
expect(() => {ms932Encoder.encode("\uDF62")}).to.throw(Error, "EncodingError U+DF62");
expect(() => {ms932Encoder.encode("\uDF63")}).to.throw(Error, "EncodingError U+DF63");
expect(() => {ms932Encoder.encode("\uDF64")}).to.throw(Error, "EncodingError U+DF64");
expect(() => {ms932Encoder.encode("\uDF65")}).to.throw(Error, "EncodingError U+DF65");
expect(() => {ms932Encoder.encode("\uDF66")}).to.throw(Error, "EncodingError U+DF66");
expect(() => {ms932Encoder.encode("\uDF67")}).to.throw(Error, "EncodingError U+DF67");
expect(() => {ms932Encoder.encode("\uDF68")}).to.throw(Error, "EncodingError U+DF68");
expect(() => {ms932Encoder.encode("\uDF69")}).to.throw(Error, "EncodingError U+DF69");
expect(() => {ms932Encoder.encode("\uDF6A")}).to.throw(Error, "EncodingError U+DF6A");
expect(() => {ms932Encoder.encode("\uDF6B")}).to.throw(Error, "EncodingError U+DF6B");
expect(() => {ms932Encoder.encode("\uDF6C")}).to.throw(Error, "EncodingError U+DF6C");
expect(() => {ms932Encoder.encode("\uDF6D")}).to.throw(Error, "EncodingError U+DF6D");
expect(() => {ms932Encoder.encode("\uDF6E")}).to.throw(Error, "EncodingError U+DF6E");
expect(() => {ms932Encoder.encode("\uDF6F")}).to.throw(Error, "EncodingError U+DF6F");
expect(() => {ms932Encoder.encode("\uDF70")}).to.throw(Error, "EncodingError U+DF70");
expect(() => {ms932Encoder.encode("\uDF71")}).to.throw(Error, "EncodingError U+DF71");
expect(() => {ms932Encoder.encode("\uDF72")}).to.throw(Error, "EncodingError U+DF72");
expect(() => {ms932Encoder.encode("\uDF73")}).to.throw(Error, "EncodingError U+DF73");
expect(() => {ms932Encoder.encode("\uDF74")}).to.throw(Error, "EncodingError U+DF74");
expect(() => {ms932Encoder.encode("\uDF75")}).to.throw(Error, "EncodingError U+DF75");
expect(() => {ms932Encoder.encode("\uDF76")}).to.throw(Error, "EncodingError U+DF76");
expect(() => {ms932Encoder.encode("\uDF77")}).to.throw(Error, "EncodingError U+DF77");
expect(() => {ms932Encoder.encode("\uDF78")}).to.throw(Error, "EncodingError U+DF78");
expect(() => {ms932Encoder.encode("\uDF79")}).to.throw(Error, "EncodingError U+DF79");
expect(() => {ms932Encoder.encode("\uDF7A")}).to.throw(Error, "EncodingError U+DF7A");
expect(() => {ms932Encoder.encode("\uDF7B")}).to.throw(Error, "EncodingError U+DF7B");
expect(() => {ms932Encoder.encode("\uDF7C")}).to.throw(Error, "EncodingError U+DF7C");
expect(() => {ms932Encoder.encode("\uDF7D")}).to.throw(Error, "EncodingError U+DF7D");
expect(() => {ms932Encoder.encode("\uDF7E")}).to.throw(Error, "EncodingError U+DF7E");
expect(() => {ms932Encoder.encode("\uDF7F")}).to.throw(Error, "EncodingError U+DF7F");
expect(() => {ms932Encoder.encode("\uDF80")}).to.throw(Error, "EncodingError U+DF80");
expect(() => {ms932Encoder.encode("\uDF81")}).to.throw(Error, "EncodingError U+DF81");
expect(() => {ms932Encoder.encode("\uDF82")}).to.throw(Error, "EncodingError U+DF82");
expect(() => {ms932Encoder.encode("\uDF83")}).to.throw(Error, "EncodingError U+DF83");
expect(() => {ms932Encoder.encode("\uDF84")}).to.throw(Error, "EncodingError U+DF84");
expect(() => {ms932Encoder.encode("\uDF85")}).to.throw(Error, "EncodingError U+DF85");
expect(() => {ms932Encoder.encode("\uDF86")}).to.throw(Error, "EncodingError U+DF86");
expect(() => {ms932Encoder.encode("\uDF87")}).to.throw(Error, "EncodingError U+DF87");
expect(() => {ms932Encoder.encode("\uDF88")}).to.throw(Error, "EncodingError U+DF88");
expect(() => {ms932Encoder.encode("\uDF89")}).to.throw(Error, "EncodingError U+DF89");
expect(() => {ms932Encoder.encode("\uDF8A")}).to.throw(Error, "EncodingError U+DF8A");
expect(() => {ms932Encoder.encode("\uDF8B")}).to.throw(Error, "EncodingError U+DF8B");
expect(() => {ms932Encoder.encode("\uDF8C")}).to.throw(Error, "EncodingError U+DF8C");
expect(() => {ms932Encoder.encode("\uDF8D")}).to.throw(Error, "EncodingError U+DF8D");
expect(() => {ms932Encoder.encode("\uDF8E")}).to.throw(Error, "EncodingError U+DF8E");
expect(() => {ms932Encoder.encode("\uDF8F")}).to.throw(Error, "EncodingError U+DF8F");
expect(() => {ms932Encoder.encode("\uDF90")}).to.throw(Error, "EncodingError U+DF90");
expect(() => {ms932Encoder.encode("\uDF91")}).to.throw(Error, "EncodingError U+DF91");
expect(() => {ms932Encoder.encode("\uDF92")}).to.throw(Error, "EncodingError U+DF92");
expect(() => {ms932Encoder.encode("\uDF93")}).to.throw(Error, "EncodingError U+DF93");
expect(() => {ms932Encoder.encode("\uDF94")}).to.throw(Error, "EncodingError U+DF94");
expect(() => {ms932Encoder.encode("\uDF95")}).to.throw(Error, "EncodingError U+DF95");
expect(() => {ms932Encoder.encode("\uDF96")}).to.throw(Error, "EncodingError U+DF96");
expect(() => {ms932Encoder.encode("\uDF97")}).to.throw(Error, "EncodingError U+DF97");
expect(() => {ms932Encoder.encode("\uDF98")}).to.throw(Error, "EncodingError U+DF98");
expect(() => {ms932Encoder.encode("\uDF99")}).to.throw(Error, "EncodingError U+DF99");
expect(() => {ms932Encoder.encode("\uDF9A")}).to.throw(Error, "EncodingError U+DF9A");
expect(() => {ms932Encoder.encode("\uDF9B")}).to.throw(Error, "EncodingError U+DF9B");
expect(() => {ms932Encoder.encode("\uDF9C")}).to.throw(Error, "EncodingError U+DF9C");
expect(() => {ms932Encoder.encode("\uDF9D")}).to.throw(Error, "EncodingError U+DF9D");
expect(() => {ms932Encoder.encode("\uDF9E")}).to.throw(Error, "EncodingError U+DF9E");
expect(() => {ms932Encoder.encode("\uDF9F")}).to.throw(Error, "EncodingError U+DF9F");
expect(() => {ms932Encoder.encode("\uDFA0")}).to.throw(Error, "EncodingError U+DFA0");
expect(() => {ms932Encoder.encode("\uDFA1")}).to.throw(Error, "EncodingError U+DFA1");
expect(() => {ms932Encoder.encode("\uDFA2")}).to.throw(Error, "EncodingError U+DFA2");
expect(() => {ms932Encoder.encode("\uDFA3")}).to.throw(Error, "EncodingError U+DFA3");
expect(() => {ms932Encoder.encode("\uDFA4")}).to.throw(Error, "EncodingError U+DFA4");
expect(() => {ms932Encoder.encode("\uDFA5")}).to.throw(Error, "EncodingError U+DFA5");
expect(() => {ms932Encoder.encode("\uDFA6")}).to.throw(Error, "EncodingError U+DFA6");
expect(() => {ms932Encoder.encode("\uDFA7")}).to.throw(Error, "EncodingError U+DFA7");
expect(() => {ms932Encoder.encode("\uDFA8")}).to.throw(Error, "EncodingError U+DFA8");
expect(() => {ms932Encoder.encode("\uDFA9")}).to.throw(Error, "EncodingError U+DFA9");
expect(() => {ms932Encoder.encode("\uDFAA")}).to.throw(Error, "EncodingError U+DFAA");
expect(() => {ms932Encoder.encode("\uDFAB")}).to.throw(Error, "EncodingError U+DFAB");
expect(() => {ms932Encoder.encode("\uDFAC")}).to.throw(Error, "EncodingError U+DFAC");
expect(() => {ms932Encoder.encode("\uDFAD")}).to.throw(Error, "EncodingError U+DFAD");
expect(() => {ms932Encoder.encode("\uDFAE")}).to.throw(Error, "EncodingError U+DFAE");
expect(() => {ms932Encoder.encode("\uDFAF")}).to.throw(Error, "EncodingError U+DFAF");
expect(() => {ms932Encoder.encode("\uDFB0")}).to.throw(Error, "EncodingError U+DFB0");
expect(() => {ms932Encoder.encode("\uDFB1")}).to.throw(Error, "EncodingError U+DFB1");
expect(() => {ms932Encoder.encode("\uDFB2")}).to.throw(Error, "EncodingError U+DFB2");
expect(() => {ms932Encoder.encode("\uDFB3")}).to.throw(Error, "EncodingError U+DFB3");
expect(() => {ms932Encoder.encode("\uDFB4")}).to.throw(Error, "EncodingError U+DFB4");
expect(() => {ms932Encoder.encode("\uDFB5")}).to.throw(Error, "EncodingError U+DFB5");
expect(() => {ms932Encoder.encode("\uDFB6")}).to.throw(Error, "EncodingError U+DFB6");
expect(() => {ms932Encoder.encode("\uDFB7")}).to.throw(Error, "EncodingError U+DFB7");
expect(() => {ms932Encoder.encode("\uDFB8")}).to.throw(Error, "EncodingError U+DFB8");
expect(() => {ms932Encoder.encode("\uDFB9")}).to.throw(Error, "EncodingError U+DFB9");
expect(() => {ms932Encoder.encode("\uDFBA")}).to.throw(Error, "EncodingError U+DFBA");
expect(() => {ms932Encoder.encode("\uDFBB")}).to.throw(Error, "EncodingError U+DFBB");
expect(() => {ms932Encoder.encode("\uDFBC")}).to.throw(Error, "EncodingError U+DFBC");
expect(() => {ms932Encoder.encode("\uDFBD")}).to.throw(Error, "EncodingError U+DFBD");
expect(() => {ms932Encoder.encode("\uDFBE")}).to.throw(Error, "EncodingError U+DFBE");
expect(() => {ms932Encoder.encode("\uDFBF")}).to.throw(Error, "EncodingError U+DFBF");
expect(() => {ms932Encoder.encode("\uDFC0")}).to.throw(Error, "EncodingError U+DFC0");
expect(() => {ms932Encoder.encode("\uDFC1")}).to.throw(Error, "EncodingError U+DFC1");
expect(() => {ms932Encoder.encode("\uDFC2")}).to.throw(Error, "EncodingError U+DFC2");
expect(() => {ms932Encoder.encode("\uDFC3")}).to.throw(Error, "EncodingError U+DFC3");
expect(() => {ms932Encoder.encode("\uDFC4")}).to.throw(Error, "EncodingError U+DFC4");
expect(() => {ms932Encoder.encode("\uDFC5")}).to.throw(Error, "EncodingError U+DFC5");
expect(() => {ms932Encoder.encode("\uDFC6")}).to.throw(Error, "EncodingError U+DFC6");
expect(() => {ms932Encoder.encode("\uDFC7")}).to.throw(Error, "EncodingError U+DFC7");
expect(() => {ms932Encoder.encode("\uDFC8")}).to.throw(Error, "EncodingError U+DFC8");
expect(() => {ms932Encoder.encode("\uDFC9")}).to.throw(Error, "EncodingError U+DFC9");
expect(() => {ms932Encoder.encode("\uDFCA")}).to.throw(Error, "EncodingError U+DFCA");
expect(() => {ms932Encoder.encode("\uDFCB")}).to.throw(Error, "EncodingError U+DFCB");
expect(() => {ms932Encoder.encode("\uDFCC")}).to.throw(Error, "EncodingError U+DFCC");
expect(() => {ms932Encoder.encode("\uDFCD")}).to.throw(Error, "EncodingError U+DFCD");
expect(() => {ms932Encoder.encode("\uDFCE")}).to.throw(Error, "EncodingError U+DFCE");
expect(() => {ms932Encoder.encode("\uDFCF")}).to.throw(Error, "EncodingError U+DFCF");
expect(() => {ms932Encoder.encode("\uDFD0")}).to.throw(Error, "EncodingError U+DFD0");
expect(() => {ms932Encoder.encode("\uDFD1")}).to.throw(Error, "EncodingError U+DFD1");
expect(() => {ms932Encoder.encode("\uDFD2")}).to.throw(Error, "EncodingError U+DFD2");
expect(() => {ms932Encoder.encode("\uDFD3")}).to.throw(Error, "EncodingError U+DFD3");
expect(() => {ms932Encoder.encode("\uDFD4")}).to.throw(Error, "EncodingError U+DFD4");
expect(() => {ms932Encoder.encode("\uDFD5")}).to.throw(Error, "EncodingError U+DFD5");
expect(() => {ms932Encoder.encode("\uDFD6")}).to.throw(Error, "EncodingError U+DFD6");
expect(() => {ms932Encoder.encode("\uDFD7")}).to.throw(Error, "EncodingError U+DFD7");
expect(() => {ms932Encoder.encode("\uDFD8")}).to.throw(Error, "EncodingError U+DFD8");
expect(() => {ms932Encoder.encode("\uDFD9")}).to.throw(Error, "EncodingError U+DFD9");
expect(() => {ms932Encoder.encode("\uDFDA")}).to.throw(Error, "EncodingError U+DFDA");
expect(() => {ms932Encoder.encode("\uDFDB")}).to.throw(Error, "EncodingError U+DFDB");
expect(() => {ms932Encoder.encode("\uDFDC")}).to.throw(Error, "EncodingError U+DFDC");
expect(() => {ms932Encoder.encode("\uDFDD")}).to.throw(Error, "EncodingError U+DFDD");
expect(() => {ms932Encoder.encode("\uDFDE")}).to.throw(Error, "EncodingError U+DFDE");
expect(() => {ms932Encoder.encode("\uDFDF")}).to.throw(Error, "EncodingError U+DFDF");
expect(() => {ms932Encoder.encode("\uDFE0")}).to.throw(Error, "EncodingError U+DFE0");
expect(() => {ms932Encoder.encode("\uDFE1")}).to.throw(Error, "EncodingError U+DFE1");
expect(() => {ms932Encoder.encode("\uDFE2")}).to.throw(Error, "EncodingError U+DFE2");
expect(() => {ms932Encoder.encode("\uDFE3")}).to.throw(Error, "EncodingError U+DFE3");
expect(() => {ms932Encoder.encode("\uDFE4")}).to.throw(Error, "EncodingError U+DFE4");
expect(() => {ms932Encoder.encode("\uDFE5")}).to.throw(Error, "EncodingError U+DFE5");
expect(() => {ms932Encoder.encode("\uDFE6")}).to.throw(Error, "EncodingError U+DFE6");
expect(() => {ms932Encoder.encode("\uDFE7")}).to.throw(Error, "EncodingError U+DFE7");
expect(() => {ms932Encoder.encode("\uDFE8")}).to.throw(Error, "EncodingError U+DFE8");
expect(() => {ms932Encoder.encode("\uDFE9")}).to.throw(Error, "EncodingError U+DFE9");
expect(() => {ms932Encoder.encode("\uDFEA")}).to.throw(Error, "EncodingError U+DFEA");
expect(() => {ms932Encoder.encode("\uDFEB")}).to.throw(Error, "EncodingError U+DFEB");
expect(() => {ms932Encoder.encode("\uDFEC")}).to.throw(Error, "EncodingError U+DFEC");
expect(() => {ms932Encoder.encode("\uDFED")}).to.throw(Error, "EncodingError U+DFED");
expect(() => {ms932Encoder.encode("\uDFEE")}).to.throw(Error, "EncodingError U+DFEE");
expect(() => {ms932Encoder.encode("\uDFEF")}).to.throw(Error, "EncodingError U+DFEF");
expect(() => {ms932Encoder.encode("\uDFF0")}).to.throw(Error, "EncodingError U+DFF0");
expect(() => {ms932Encoder.encode("\uDFF1")}).to.throw(Error, "EncodingError U+DFF1");
expect(() => {ms932Encoder.encode("\uDFF2")}).to.throw(Error, "EncodingError U+DFF2");
expect(() => {ms932Encoder.encode("\uDFF3")}).to.throw(Error, "EncodingError U+DFF3");
expect(() => {ms932Encoder.encode("\uDFF4")}).to.throw(Error, "EncodingError U+DFF4");
expect(() => {ms932Encoder.encode("\uDFF5")}).to.throw(Error, "EncodingError U+DFF5");
expect(() => {ms932Encoder.encode("\uDFF6")}).to.throw(Error, "EncodingError U+DFF6");
expect(() => {ms932Encoder.encode("\uDFF7")}).to.throw(Error, "EncodingError U+DFF7");
expect(() => {ms932Encoder.encode("\uDFF8")}).to.throw(Error, "EncodingError U+DFF8");
expect(() => {ms932Encoder.encode("\uDFF9")}).to.throw(Error, "EncodingError U+DFF9");
expect(() => {ms932Encoder.encode("\uDFFA")}).to.throw(Error, "EncodingError U+DFFA");
expect(() => {ms932Encoder.encode("\uDFFB")}).to.throw(Error, "EncodingError U+DFFB");
expect(() => {ms932Encoder.encode("\uDFFC")}).to.throw(Error, "EncodingError U+DFFC");
expect(() => {ms932Encoder.encode("\uDFFD")}).to.throw(Error, "EncodingError U+DFFD");
expect(() => {ms932Encoder.encode("\uDFFE")}).to.throw(Error, "EncodingError U+DFFE");
expect(() => {ms932Encoder.encode("\uDFFF")}).to.throw(Error, "EncodingError U+DFFF");

  });

});
