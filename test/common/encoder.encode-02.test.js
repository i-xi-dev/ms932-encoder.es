import { expect } from '@esm-bundle/chai';
import { Ms932Encoder } from "../../dist/index.js";

describe("Ms932Encoder.prototype.encode 2", () => {

  it("encode(string) - U+1000-U+1FFF", () => {
    const ms932Encoder = new Ms932Encoder({fatal:true});

expect(() => {ms932Encoder.encode("\u1000")}).to.throw(Error, "EncodingError U+1000");
expect(() => {ms932Encoder.encode("\u1001")}).to.throw(Error, "EncodingError U+1001");
expect(() => {ms932Encoder.encode("\u1002")}).to.throw(Error, "EncodingError U+1002");
expect(() => {ms932Encoder.encode("\u1003")}).to.throw(Error, "EncodingError U+1003");
expect(() => {ms932Encoder.encode("\u1004")}).to.throw(Error, "EncodingError U+1004");
expect(() => {ms932Encoder.encode("\u1005")}).to.throw(Error, "EncodingError U+1005");
expect(() => {ms932Encoder.encode("\u1006")}).to.throw(Error, "EncodingError U+1006");
expect(() => {ms932Encoder.encode("\u1007")}).to.throw(Error, "EncodingError U+1007");
expect(() => {ms932Encoder.encode("\u1008")}).to.throw(Error, "EncodingError U+1008");
expect(() => {ms932Encoder.encode("\u1009")}).to.throw(Error, "EncodingError U+1009");
expect(() => {ms932Encoder.encode("\u100A")}).to.throw(Error, "EncodingError U+100A");
expect(() => {ms932Encoder.encode("\u100B")}).to.throw(Error, "EncodingError U+100B");
expect(() => {ms932Encoder.encode("\u100C")}).to.throw(Error, "EncodingError U+100C");
expect(() => {ms932Encoder.encode("\u100D")}).to.throw(Error, "EncodingError U+100D");
expect(() => {ms932Encoder.encode("\u100E")}).to.throw(Error, "EncodingError U+100E");
expect(() => {ms932Encoder.encode("\u100F")}).to.throw(Error, "EncodingError U+100F");
expect(() => {ms932Encoder.encode("\u1010")}).to.throw(Error, "EncodingError U+1010");
expect(() => {ms932Encoder.encode("\u1011")}).to.throw(Error, "EncodingError U+1011");
expect(() => {ms932Encoder.encode("\u1012")}).to.throw(Error, "EncodingError U+1012");
expect(() => {ms932Encoder.encode("\u1013")}).to.throw(Error, "EncodingError U+1013");
expect(() => {ms932Encoder.encode("\u1014")}).to.throw(Error, "EncodingError U+1014");
expect(() => {ms932Encoder.encode("\u1015")}).to.throw(Error, "EncodingError U+1015");
expect(() => {ms932Encoder.encode("\u1016")}).to.throw(Error, "EncodingError U+1016");
expect(() => {ms932Encoder.encode("\u1017")}).to.throw(Error, "EncodingError U+1017");
expect(() => {ms932Encoder.encode("\u1018")}).to.throw(Error, "EncodingError U+1018");
expect(() => {ms932Encoder.encode("\u1019")}).to.throw(Error, "EncodingError U+1019");
expect(() => {ms932Encoder.encode("\u101A")}).to.throw(Error, "EncodingError U+101A");
expect(() => {ms932Encoder.encode("\u101B")}).to.throw(Error, "EncodingError U+101B");
expect(() => {ms932Encoder.encode("\u101C")}).to.throw(Error, "EncodingError U+101C");
expect(() => {ms932Encoder.encode("\u101D")}).to.throw(Error, "EncodingError U+101D");
expect(() => {ms932Encoder.encode("\u101E")}).to.throw(Error, "EncodingError U+101E");
expect(() => {ms932Encoder.encode("\u101F")}).to.throw(Error, "EncodingError U+101F");
expect(() => {ms932Encoder.encode("\u1020")}).to.throw(Error, "EncodingError U+1020");
expect(() => {ms932Encoder.encode("\u1021")}).to.throw(Error, "EncodingError U+1021");
expect(() => {ms932Encoder.encode("\u1022")}).to.throw(Error, "EncodingError U+1022");
expect(() => {ms932Encoder.encode("\u1023")}).to.throw(Error, "EncodingError U+1023");
expect(() => {ms932Encoder.encode("\u1024")}).to.throw(Error, "EncodingError U+1024");
expect(() => {ms932Encoder.encode("\u1025")}).to.throw(Error, "EncodingError U+1025");
expect(() => {ms932Encoder.encode("\u1026")}).to.throw(Error, "EncodingError U+1026");
expect(() => {ms932Encoder.encode("\u1027")}).to.throw(Error, "EncodingError U+1027");
expect(() => {ms932Encoder.encode("\u1028")}).to.throw(Error, "EncodingError U+1028");
expect(() => {ms932Encoder.encode("\u1029")}).to.throw(Error, "EncodingError U+1029");
expect(() => {ms932Encoder.encode("\u102A")}).to.throw(Error, "EncodingError U+102A");
expect(() => {ms932Encoder.encode("\u102B")}).to.throw(Error, "EncodingError U+102B");
expect(() => {ms932Encoder.encode("\u102C")}).to.throw(Error, "EncodingError U+102C");
expect(() => {ms932Encoder.encode("\u102D")}).to.throw(Error, "EncodingError U+102D");
expect(() => {ms932Encoder.encode("\u102E")}).to.throw(Error, "EncodingError U+102E");
expect(() => {ms932Encoder.encode("\u102F")}).to.throw(Error, "EncodingError U+102F");
expect(() => {ms932Encoder.encode("\u1030")}).to.throw(Error, "EncodingError U+1030");
expect(() => {ms932Encoder.encode("\u1031")}).to.throw(Error, "EncodingError U+1031");
expect(() => {ms932Encoder.encode("\u1032")}).to.throw(Error, "EncodingError U+1032");
expect(() => {ms932Encoder.encode("\u1033")}).to.throw(Error, "EncodingError U+1033");
expect(() => {ms932Encoder.encode("\u1034")}).to.throw(Error, "EncodingError U+1034");
expect(() => {ms932Encoder.encode("\u1035")}).to.throw(Error, "EncodingError U+1035");
expect(() => {ms932Encoder.encode("\u1036")}).to.throw(Error, "EncodingError U+1036");
expect(() => {ms932Encoder.encode("\u1037")}).to.throw(Error, "EncodingError U+1037");
expect(() => {ms932Encoder.encode("\u1038")}).to.throw(Error, "EncodingError U+1038");
expect(() => {ms932Encoder.encode("\u1039")}).to.throw(Error, "EncodingError U+1039");
expect(() => {ms932Encoder.encode("\u103A")}).to.throw(Error, "EncodingError U+103A");
expect(() => {ms932Encoder.encode("\u103B")}).to.throw(Error, "EncodingError U+103B");
expect(() => {ms932Encoder.encode("\u103C")}).to.throw(Error, "EncodingError U+103C");
expect(() => {ms932Encoder.encode("\u103D")}).to.throw(Error, "EncodingError U+103D");
expect(() => {ms932Encoder.encode("\u103E")}).to.throw(Error, "EncodingError U+103E");
expect(() => {ms932Encoder.encode("\u103F")}).to.throw(Error, "EncodingError U+103F");
expect(() => {ms932Encoder.encode("\u1040")}).to.throw(Error, "EncodingError U+1040");
expect(() => {ms932Encoder.encode("\u1041")}).to.throw(Error, "EncodingError U+1041");
expect(() => {ms932Encoder.encode("\u1042")}).to.throw(Error, "EncodingError U+1042");
expect(() => {ms932Encoder.encode("\u1043")}).to.throw(Error, "EncodingError U+1043");
expect(() => {ms932Encoder.encode("\u1044")}).to.throw(Error, "EncodingError U+1044");
expect(() => {ms932Encoder.encode("\u1045")}).to.throw(Error, "EncodingError U+1045");
expect(() => {ms932Encoder.encode("\u1046")}).to.throw(Error, "EncodingError U+1046");
expect(() => {ms932Encoder.encode("\u1047")}).to.throw(Error, "EncodingError U+1047");
expect(() => {ms932Encoder.encode("\u1048")}).to.throw(Error, "EncodingError U+1048");
expect(() => {ms932Encoder.encode("\u1049")}).to.throw(Error, "EncodingError U+1049");
expect(() => {ms932Encoder.encode("\u104A")}).to.throw(Error, "EncodingError U+104A");
expect(() => {ms932Encoder.encode("\u104B")}).to.throw(Error, "EncodingError U+104B");
expect(() => {ms932Encoder.encode("\u104C")}).to.throw(Error, "EncodingError U+104C");
expect(() => {ms932Encoder.encode("\u104D")}).to.throw(Error, "EncodingError U+104D");
expect(() => {ms932Encoder.encode("\u104E")}).to.throw(Error, "EncodingError U+104E");
expect(() => {ms932Encoder.encode("\u104F")}).to.throw(Error, "EncodingError U+104F");
expect(() => {ms932Encoder.encode("\u1050")}).to.throw(Error, "EncodingError U+1050");
expect(() => {ms932Encoder.encode("\u1051")}).to.throw(Error, "EncodingError U+1051");
expect(() => {ms932Encoder.encode("\u1052")}).to.throw(Error, "EncodingError U+1052");
expect(() => {ms932Encoder.encode("\u1053")}).to.throw(Error, "EncodingError U+1053");
expect(() => {ms932Encoder.encode("\u1054")}).to.throw(Error, "EncodingError U+1054");
expect(() => {ms932Encoder.encode("\u1055")}).to.throw(Error, "EncodingError U+1055");
expect(() => {ms932Encoder.encode("\u1056")}).to.throw(Error, "EncodingError U+1056");
expect(() => {ms932Encoder.encode("\u1057")}).to.throw(Error, "EncodingError U+1057");
expect(() => {ms932Encoder.encode("\u1058")}).to.throw(Error, "EncodingError U+1058");
expect(() => {ms932Encoder.encode("\u1059")}).to.throw(Error, "EncodingError U+1059");
expect(() => {ms932Encoder.encode("\u105A")}).to.throw(Error, "EncodingError U+105A");
expect(() => {ms932Encoder.encode("\u105B")}).to.throw(Error, "EncodingError U+105B");
expect(() => {ms932Encoder.encode("\u105C")}).to.throw(Error, "EncodingError U+105C");
expect(() => {ms932Encoder.encode("\u105D")}).to.throw(Error, "EncodingError U+105D");
expect(() => {ms932Encoder.encode("\u105E")}).to.throw(Error, "EncodingError U+105E");
expect(() => {ms932Encoder.encode("\u105F")}).to.throw(Error, "EncodingError U+105F");
expect(() => {ms932Encoder.encode("\u1060")}).to.throw(Error, "EncodingError U+1060");
expect(() => {ms932Encoder.encode("\u1061")}).to.throw(Error, "EncodingError U+1061");
expect(() => {ms932Encoder.encode("\u1062")}).to.throw(Error, "EncodingError U+1062");
expect(() => {ms932Encoder.encode("\u1063")}).to.throw(Error, "EncodingError U+1063");
expect(() => {ms932Encoder.encode("\u1064")}).to.throw(Error, "EncodingError U+1064");
expect(() => {ms932Encoder.encode("\u1065")}).to.throw(Error, "EncodingError U+1065");
expect(() => {ms932Encoder.encode("\u1066")}).to.throw(Error, "EncodingError U+1066");
expect(() => {ms932Encoder.encode("\u1067")}).to.throw(Error, "EncodingError U+1067");
expect(() => {ms932Encoder.encode("\u1068")}).to.throw(Error, "EncodingError U+1068");
expect(() => {ms932Encoder.encode("\u1069")}).to.throw(Error, "EncodingError U+1069");
expect(() => {ms932Encoder.encode("\u106A")}).to.throw(Error, "EncodingError U+106A");
expect(() => {ms932Encoder.encode("\u106B")}).to.throw(Error, "EncodingError U+106B");
expect(() => {ms932Encoder.encode("\u106C")}).to.throw(Error, "EncodingError U+106C");
expect(() => {ms932Encoder.encode("\u106D")}).to.throw(Error, "EncodingError U+106D");
expect(() => {ms932Encoder.encode("\u106E")}).to.throw(Error, "EncodingError U+106E");
expect(() => {ms932Encoder.encode("\u106F")}).to.throw(Error, "EncodingError U+106F");
expect(() => {ms932Encoder.encode("\u1070")}).to.throw(Error, "EncodingError U+1070");
expect(() => {ms932Encoder.encode("\u1071")}).to.throw(Error, "EncodingError U+1071");
expect(() => {ms932Encoder.encode("\u1072")}).to.throw(Error, "EncodingError U+1072");
expect(() => {ms932Encoder.encode("\u1073")}).to.throw(Error, "EncodingError U+1073");
expect(() => {ms932Encoder.encode("\u1074")}).to.throw(Error, "EncodingError U+1074");
expect(() => {ms932Encoder.encode("\u1075")}).to.throw(Error, "EncodingError U+1075");
expect(() => {ms932Encoder.encode("\u1076")}).to.throw(Error, "EncodingError U+1076");
expect(() => {ms932Encoder.encode("\u1077")}).to.throw(Error, "EncodingError U+1077");
expect(() => {ms932Encoder.encode("\u1078")}).to.throw(Error, "EncodingError U+1078");
expect(() => {ms932Encoder.encode("\u1079")}).to.throw(Error, "EncodingError U+1079");
expect(() => {ms932Encoder.encode("\u107A")}).to.throw(Error, "EncodingError U+107A");
expect(() => {ms932Encoder.encode("\u107B")}).to.throw(Error, "EncodingError U+107B");
expect(() => {ms932Encoder.encode("\u107C")}).to.throw(Error, "EncodingError U+107C");
expect(() => {ms932Encoder.encode("\u107D")}).to.throw(Error, "EncodingError U+107D");
expect(() => {ms932Encoder.encode("\u107E")}).to.throw(Error, "EncodingError U+107E");
expect(() => {ms932Encoder.encode("\u107F")}).to.throw(Error, "EncodingError U+107F");
expect(() => {ms932Encoder.encode("\u1080")}).to.throw(Error, "EncodingError U+1080");
expect(() => {ms932Encoder.encode("\u1081")}).to.throw(Error, "EncodingError U+1081");
expect(() => {ms932Encoder.encode("\u1082")}).to.throw(Error, "EncodingError U+1082");
expect(() => {ms932Encoder.encode("\u1083")}).to.throw(Error, "EncodingError U+1083");
expect(() => {ms932Encoder.encode("\u1084")}).to.throw(Error, "EncodingError U+1084");
expect(() => {ms932Encoder.encode("\u1085")}).to.throw(Error, "EncodingError U+1085");
expect(() => {ms932Encoder.encode("\u1086")}).to.throw(Error, "EncodingError U+1086");
expect(() => {ms932Encoder.encode("\u1087")}).to.throw(Error, "EncodingError U+1087");
expect(() => {ms932Encoder.encode("\u1088")}).to.throw(Error, "EncodingError U+1088");
expect(() => {ms932Encoder.encode("\u1089")}).to.throw(Error, "EncodingError U+1089");
expect(() => {ms932Encoder.encode("\u108A")}).to.throw(Error, "EncodingError U+108A");
expect(() => {ms932Encoder.encode("\u108B")}).to.throw(Error, "EncodingError U+108B");
expect(() => {ms932Encoder.encode("\u108C")}).to.throw(Error, "EncodingError U+108C");
expect(() => {ms932Encoder.encode("\u108D")}).to.throw(Error, "EncodingError U+108D");
expect(() => {ms932Encoder.encode("\u108E")}).to.throw(Error, "EncodingError U+108E");
expect(() => {ms932Encoder.encode("\u108F")}).to.throw(Error, "EncodingError U+108F");
expect(() => {ms932Encoder.encode("\u1090")}).to.throw(Error, "EncodingError U+1090");
expect(() => {ms932Encoder.encode("\u1091")}).to.throw(Error, "EncodingError U+1091");
expect(() => {ms932Encoder.encode("\u1092")}).to.throw(Error, "EncodingError U+1092");
expect(() => {ms932Encoder.encode("\u1093")}).to.throw(Error, "EncodingError U+1093");
expect(() => {ms932Encoder.encode("\u1094")}).to.throw(Error, "EncodingError U+1094");
expect(() => {ms932Encoder.encode("\u1095")}).to.throw(Error, "EncodingError U+1095");
expect(() => {ms932Encoder.encode("\u1096")}).to.throw(Error, "EncodingError U+1096");
expect(() => {ms932Encoder.encode("\u1097")}).to.throw(Error, "EncodingError U+1097");
expect(() => {ms932Encoder.encode("\u1098")}).to.throw(Error, "EncodingError U+1098");
expect(() => {ms932Encoder.encode("\u1099")}).to.throw(Error, "EncodingError U+1099");
expect(() => {ms932Encoder.encode("\u109A")}).to.throw(Error, "EncodingError U+109A");
expect(() => {ms932Encoder.encode("\u109B")}).to.throw(Error, "EncodingError U+109B");
expect(() => {ms932Encoder.encode("\u109C")}).to.throw(Error, "EncodingError U+109C");
expect(() => {ms932Encoder.encode("\u109D")}).to.throw(Error, "EncodingError U+109D");
expect(() => {ms932Encoder.encode("\u109E")}).to.throw(Error, "EncodingError U+109E");
expect(() => {ms932Encoder.encode("\u109F")}).to.throw(Error, "EncodingError U+109F");
expect(() => {ms932Encoder.encode("\u10A0")}).to.throw(Error, "EncodingError U+10A0");
expect(() => {ms932Encoder.encode("\u10A1")}).to.throw(Error, "EncodingError U+10A1");
expect(() => {ms932Encoder.encode("\u10A2")}).to.throw(Error, "EncodingError U+10A2");
expect(() => {ms932Encoder.encode("\u10A3")}).to.throw(Error, "EncodingError U+10A3");
expect(() => {ms932Encoder.encode("\u10A4")}).to.throw(Error, "EncodingError U+10A4");
expect(() => {ms932Encoder.encode("\u10A5")}).to.throw(Error, "EncodingError U+10A5");
expect(() => {ms932Encoder.encode("\u10A6")}).to.throw(Error, "EncodingError U+10A6");
expect(() => {ms932Encoder.encode("\u10A7")}).to.throw(Error, "EncodingError U+10A7");
expect(() => {ms932Encoder.encode("\u10A8")}).to.throw(Error, "EncodingError U+10A8");
expect(() => {ms932Encoder.encode("\u10A9")}).to.throw(Error, "EncodingError U+10A9");
expect(() => {ms932Encoder.encode("\u10AA")}).to.throw(Error, "EncodingError U+10AA");
expect(() => {ms932Encoder.encode("\u10AB")}).to.throw(Error, "EncodingError U+10AB");
expect(() => {ms932Encoder.encode("\u10AC")}).to.throw(Error, "EncodingError U+10AC");
expect(() => {ms932Encoder.encode("\u10AD")}).to.throw(Error, "EncodingError U+10AD");
expect(() => {ms932Encoder.encode("\u10AE")}).to.throw(Error, "EncodingError U+10AE");
expect(() => {ms932Encoder.encode("\u10AF")}).to.throw(Error, "EncodingError U+10AF");
expect(() => {ms932Encoder.encode("\u10B0")}).to.throw(Error, "EncodingError U+10B0");
expect(() => {ms932Encoder.encode("\u10B1")}).to.throw(Error, "EncodingError U+10B1");
expect(() => {ms932Encoder.encode("\u10B2")}).to.throw(Error, "EncodingError U+10B2");
expect(() => {ms932Encoder.encode("\u10B3")}).to.throw(Error, "EncodingError U+10B3");
expect(() => {ms932Encoder.encode("\u10B4")}).to.throw(Error, "EncodingError U+10B4");
expect(() => {ms932Encoder.encode("\u10B5")}).to.throw(Error, "EncodingError U+10B5");
expect(() => {ms932Encoder.encode("\u10B6")}).to.throw(Error, "EncodingError U+10B6");
expect(() => {ms932Encoder.encode("\u10B7")}).to.throw(Error, "EncodingError U+10B7");
expect(() => {ms932Encoder.encode("\u10B8")}).to.throw(Error, "EncodingError U+10B8");
expect(() => {ms932Encoder.encode("\u10B9")}).to.throw(Error, "EncodingError U+10B9");
expect(() => {ms932Encoder.encode("\u10BA")}).to.throw(Error, "EncodingError U+10BA");
expect(() => {ms932Encoder.encode("\u10BB")}).to.throw(Error, "EncodingError U+10BB");
expect(() => {ms932Encoder.encode("\u10BC")}).to.throw(Error, "EncodingError U+10BC");
expect(() => {ms932Encoder.encode("\u10BD")}).to.throw(Error, "EncodingError U+10BD");
expect(() => {ms932Encoder.encode("\u10BE")}).to.throw(Error, "EncodingError U+10BE");
expect(() => {ms932Encoder.encode("\u10BF")}).to.throw(Error, "EncodingError U+10BF");
expect(() => {ms932Encoder.encode("\u10C0")}).to.throw(Error, "EncodingError U+10C0");
expect(() => {ms932Encoder.encode("\u10C1")}).to.throw(Error, "EncodingError U+10C1");
expect(() => {ms932Encoder.encode("\u10C2")}).to.throw(Error, "EncodingError U+10C2");
expect(() => {ms932Encoder.encode("\u10C3")}).to.throw(Error, "EncodingError U+10C3");
expect(() => {ms932Encoder.encode("\u10C4")}).to.throw(Error, "EncodingError U+10C4");
expect(() => {ms932Encoder.encode("\u10C5")}).to.throw(Error, "EncodingError U+10C5");
expect(() => {ms932Encoder.encode("\u10C6")}).to.throw(Error, "EncodingError U+10C6");
expect(() => {ms932Encoder.encode("\u10C7")}).to.throw(Error, "EncodingError U+10C7");
expect(() => {ms932Encoder.encode("\u10C8")}).to.throw(Error, "EncodingError U+10C8");
expect(() => {ms932Encoder.encode("\u10C9")}).to.throw(Error, "EncodingError U+10C9");
expect(() => {ms932Encoder.encode("\u10CA")}).to.throw(Error, "EncodingError U+10CA");
expect(() => {ms932Encoder.encode("\u10CB")}).to.throw(Error, "EncodingError U+10CB");
expect(() => {ms932Encoder.encode("\u10CC")}).to.throw(Error, "EncodingError U+10CC");
expect(() => {ms932Encoder.encode("\u10CD")}).to.throw(Error, "EncodingError U+10CD");
expect(() => {ms932Encoder.encode("\u10CE")}).to.throw(Error, "EncodingError U+10CE");
expect(() => {ms932Encoder.encode("\u10CF")}).to.throw(Error, "EncodingError U+10CF");
expect(() => {ms932Encoder.encode("\u10D0")}).to.throw(Error, "EncodingError U+10D0");
expect(() => {ms932Encoder.encode("\u10D1")}).to.throw(Error, "EncodingError U+10D1");
expect(() => {ms932Encoder.encode("\u10D2")}).to.throw(Error, "EncodingError U+10D2");
expect(() => {ms932Encoder.encode("\u10D3")}).to.throw(Error, "EncodingError U+10D3");
expect(() => {ms932Encoder.encode("\u10D4")}).to.throw(Error, "EncodingError U+10D4");
expect(() => {ms932Encoder.encode("\u10D5")}).to.throw(Error, "EncodingError U+10D5");
expect(() => {ms932Encoder.encode("\u10D6")}).to.throw(Error, "EncodingError U+10D6");
expect(() => {ms932Encoder.encode("\u10D7")}).to.throw(Error, "EncodingError U+10D7");
expect(() => {ms932Encoder.encode("\u10D8")}).to.throw(Error, "EncodingError U+10D8");
expect(() => {ms932Encoder.encode("\u10D9")}).to.throw(Error, "EncodingError U+10D9");
expect(() => {ms932Encoder.encode("\u10DA")}).to.throw(Error, "EncodingError U+10DA");
expect(() => {ms932Encoder.encode("\u10DB")}).to.throw(Error, "EncodingError U+10DB");
expect(() => {ms932Encoder.encode("\u10DC")}).to.throw(Error, "EncodingError U+10DC");
expect(() => {ms932Encoder.encode("\u10DD")}).to.throw(Error, "EncodingError U+10DD");
expect(() => {ms932Encoder.encode("\u10DE")}).to.throw(Error, "EncodingError U+10DE");
expect(() => {ms932Encoder.encode("\u10DF")}).to.throw(Error, "EncodingError U+10DF");
expect(() => {ms932Encoder.encode("\u10E0")}).to.throw(Error, "EncodingError U+10E0");
expect(() => {ms932Encoder.encode("\u10E1")}).to.throw(Error, "EncodingError U+10E1");
expect(() => {ms932Encoder.encode("\u10E2")}).to.throw(Error, "EncodingError U+10E2");
expect(() => {ms932Encoder.encode("\u10E3")}).to.throw(Error, "EncodingError U+10E3");
expect(() => {ms932Encoder.encode("\u10E4")}).to.throw(Error, "EncodingError U+10E4");
expect(() => {ms932Encoder.encode("\u10E5")}).to.throw(Error, "EncodingError U+10E5");
expect(() => {ms932Encoder.encode("\u10E6")}).to.throw(Error, "EncodingError U+10E6");
expect(() => {ms932Encoder.encode("\u10E7")}).to.throw(Error, "EncodingError U+10E7");
expect(() => {ms932Encoder.encode("\u10E8")}).to.throw(Error, "EncodingError U+10E8");
expect(() => {ms932Encoder.encode("\u10E9")}).to.throw(Error, "EncodingError U+10E9");
expect(() => {ms932Encoder.encode("\u10EA")}).to.throw(Error, "EncodingError U+10EA");
expect(() => {ms932Encoder.encode("\u10EB")}).to.throw(Error, "EncodingError U+10EB");
expect(() => {ms932Encoder.encode("\u10EC")}).to.throw(Error, "EncodingError U+10EC");
expect(() => {ms932Encoder.encode("\u10ED")}).to.throw(Error, "EncodingError U+10ED");
expect(() => {ms932Encoder.encode("\u10EE")}).to.throw(Error, "EncodingError U+10EE");
expect(() => {ms932Encoder.encode("\u10EF")}).to.throw(Error, "EncodingError U+10EF");
expect(() => {ms932Encoder.encode("\u10F0")}).to.throw(Error, "EncodingError U+10F0");
expect(() => {ms932Encoder.encode("\u10F1")}).to.throw(Error, "EncodingError U+10F1");
expect(() => {ms932Encoder.encode("\u10F2")}).to.throw(Error, "EncodingError U+10F2");
expect(() => {ms932Encoder.encode("\u10F3")}).to.throw(Error, "EncodingError U+10F3");
expect(() => {ms932Encoder.encode("\u10F4")}).to.throw(Error, "EncodingError U+10F4");
expect(() => {ms932Encoder.encode("\u10F5")}).to.throw(Error, "EncodingError U+10F5");
expect(() => {ms932Encoder.encode("\u10F6")}).to.throw(Error, "EncodingError U+10F6");
expect(() => {ms932Encoder.encode("\u10F7")}).to.throw(Error, "EncodingError U+10F7");
expect(() => {ms932Encoder.encode("\u10F8")}).to.throw(Error, "EncodingError U+10F8");
expect(() => {ms932Encoder.encode("\u10F9")}).to.throw(Error, "EncodingError U+10F9");
expect(() => {ms932Encoder.encode("\u10FA")}).to.throw(Error, "EncodingError U+10FA");
expect(() => {ms932Encoder.encode("\u10FB")}).to.throw(Error, "EncodingError U+10FB");
expect(() => {ms932Encoder.encode("\u10FC")}).to.throw(Error, "EncodingError U+10FC");
expect(() => {ms932Encoder.encode("\u10FD")}).to.throw(Error, "EncodingError U+10FD");
expect(() => {ms932Encoder.encode("\u10FE")}).to.throw(Error, "EncodingError U+10FE");
expect(() => {ms932Encoder.encode("\u10FF")}).to.throw(Error, "EncodingError U+10FF");
expect(() => {ms932Encoder.encode("\u1100")}).to.throw(Error, "EncodingError U+1100");
expect(() => {ms932Encoder.encode("\u1101")}).to.throw(Error, "EncodingError U+1101");
expect(() => {ms932Encoder.encode("\u1102")}).to.throw(Error, "EncodingError U+1102");
expect(() => {ms932Encoder.encode("\u1103")}).to.throw(Error, "EncodingError U+1103");
expect(() => {ms932Encoder.encode("\u1104")}).to.throw(Error, "EncodingError U+1104");
expect(() => {ms932Encoder.encode("\u1105")}).to.throw(Error, "EncodingError U+1105");
expect(() => {ms932Encoder.encode("\u1106")}).to.throw(Error, "EncodingError U+1106");
expect(() => {ms932Encoder.encode("\u1107")}).to.throw(Error, "EncodingError U+1107");
expect(() => {ms932Encoder.encode("\u1108")}).to.throw(Error, "EncodingError U+1108");
expect(() => {ms932Encoder.encode("\u1109")}).to.throw(Error, "EncodingError U+1109");
expect(() => {ms932Encoder.encode("\u110A")}).to.throw(Error, "EncodingError U+110A");
expect(() => {ms932Encoder.encode("\u110B")}).to.throw(Error, "EncodingError U+110B");
expect(() => {ms932Encoder.encode("\u110C")}).to.throw(Error, "EncodingError U+110C");
expect(() => {ms932Encoder.encode("\u110D")}).to.throw(Error, "EncodingError U+110D");
expect(() => {ms932Encoder.encode("\u110E")}).to.throw(Error, "EncodingError U+110E");
expect(() => {ms932Encoder.encode("\u110F")}).to.throw(Error, "EncodingError U+110F");
expect(() => {ms932Encoder.encode("\u1110")}).to.throw(Error, "EncodingError U+1110");
expect(() => {ms932Encoder.encode("\u1111")}).to.throw(Error, "EncodingError U+1111");
expect(() => {ms932Encoder.encode("\u1112")}).to.throw(Error, "EncodingError U+1112");
expect(() => {ms932Encoder.encode("\u1113")}).to.throw(Error, "EncodingError U+1113");
expect(() => {ms932Encoder.encode("\u1114")}).to.throw(Error, "EncodingError U+1114");
expect(() => {ms932Encoder.encode("\u1115")}).to.throw(Error, "EncodingError U+1115");
expect(() => {ms932Encoder.encode("\u1116")}).to.throw(Error, "EncodingError U+1116");
expect(() => {ms932Encoder.encode("\u1117")}).to.throw(Error, "EncodingError U+1117");
expect(() => {ms932Encoder.encode("\u1118")}).to.throw(Error, "EncodingError U+1118");
expect(() => {ms932Encoder.encode("\u1119")}).to.throw(Error, "EncodingError U+1119");
expect(() => {ms932Encoder.encode("\u111A")}).to.throw(Error, "EncodingError U+111A");
expect(() => {ms932Encoder.encode("\u111B")}).to.throw(Error, "EncodingError U+111B");
expect(() => {ms932Encoder.encode("\u111C")}).to.throw(Error, "EncodingError U+111C");
expect(() => {ms932Encoder.encode("\u111D")}).to.throw(Error, "EncodingError U+111D");
expect(() => {ms932Encoder.encode("\u111E")}).to.throw(Error, "EncodingError U+111E");
expect(() => {ms932Encoder.encode("\u111F")}).to.throw(Error, "EncodingError U+111F");
expect(() => {ms932Encoder.encode("\u1120")}).to.throw(Error, "EncodingError U+1120");
expect(() => {ms932Encoder.encode("\u1121")}).to.throw(Error, "EncodingError U+1121");
expect(() => {ms932Encoder.encode("\u1122")}).to.throw(Error, "EncodingError U+1122");
expect(() => {ms932Encoder.encode("\u1123")}).to.throw(Error, "EncodingError U+1123");
expect(() => {ms932Encoder.encode("\u1124")}).to.throw(Error, "EncodingError U+1124");
expect(() => {ms932Encoder.encode("\u1125")}).to.throw(Error, "EncodingError U+1125");
expect(() => {ms932Encoder.encode("\u1126")}).to.throw(Error, "EncodingError U+1126");
expect(() => {ms932Encoder.encode("\u1127")}).to.throw(Error, "EncodingError U+1127");
expect(() => {ms932Encoder.encode("\u1128")}).to.throw(Error, "EncodingError U+1128");
expect(() => {ms932Encoder.encode("\u1129")}).to.throw(Error, "EncodingError U+1129");
expect(() => {ms932Encoder.encode("\u112A")}).to.throw(Error, "EncodingError U+112A");
expect(() => {ms932Encoder.encode("\u112B")}).to.throw(Error, "EncodingError U+112B");
expect(() => {ms932Encoder.encode("\u112C")}).to.throw(Error, "EncodingError U+112C");
expect(() => {ms932Encoder.encode("\u112D")}).to.throw(Error, "EncodingError U+112D");
expect(() => {ms932Encoder.encode("\u112E")}).to.throw(Error, "EncodingError U+112E");
expect(() => {ms932Encoder.encode("\u112F")}).to.throw(Error, "EncodingError U+112F");
expect(() => {ms932Encoder.encode("\u1130")}).to.throw(Error, "EncodingError U+1130");
expect(() => {ms932Encoder.encode("\u1131")}).to.throw(Error, "EncodingError U+1131");
expect(() => {ms932Encoder.encode("\u1132")}).to.throw(Error, "EncodingError U+1132");
expect(() => {ms932Encoder.encode("\u1133")}).to.throw(Error, "EncodingError U+1133");
expect(() => {ms932Encoder.encode("\u1134")}).to.throw(Error, "EncodingError U+1134");
expect(() => {ms932Encoder.encode("\u1135")}).to.throw(Error, "EncodingError U+1135");
expect(() => {ms932Encoder.encode("\u1136")}).to.throw(Error, "EncodingError U+1136");
expect(() => {ms932Encoder.encode("\u1137")}).to.throw(Error, "EncodingError U+1137");
expect(() => {ms932Encoder.encode("\u1138")}).to.throw(Error, "EncodingError U+1138");
expect(() => {ms932Encoder.encode("\u1139")}).to.throw(Error, "EncodingError U+1139");
expect(() => {ms932Encoder.encode("\u113A")}).to.throw(Error, "EncodingError U+113A");
expect(() => {ms932Encoder.encode("\u113B")}).to.throw(Error, "EncodingError U+113B");
expect(() => {ms932Encoder.encode("\u113C")}).to.throw(Error, "EncodingError U+113C");
expect(() => {ms932Encoder.encode("\u113D")}).to.throw(Error, "EncodingError U+113D");
expect(() => {ms932Encoder.encode("\u113E")}).to.throw(Error, "EncodingError U+113E");
expect(() => {ms932Encoder.encode("\u113F")}).to.throw(Error, "EncodingError U+113F");
expect(() => {ms932Encoder.encode("\u1140")}).to.throw(Error, "EncodingError U+1140");
expect(() => {ms932Encoder.encode("\u1141")}).to.throw(Error, "EncodingError U+1141");
expect(() => {ms932Encoder.encode("\u1142")}).to.throw(Error, "EncodingError U+1142");
expect(() => {ms932Encoder.encode("\u1143")}).to.throw(Error, "EncodingError U+1143");
expect(() => {ms932Encoder.encode("\u1144")}).to.throw(Error, "EncodingError U+1144");
expect(() => {ms932Encoder.encode("\u1145")}).to.throw(Error, "EncodingError U+1145");
expect(() => {ms932Encoder.encode("\u1146")}).to.throw(Error, "EncodingError U+1146");
expect(() => {ms932Encoder.encode("\u1147")}).to.throw(Error, "EncodingError U+1147");
expect(() => {ms932Encoder.encode("\u1148")}).to.throw(Error, "EncodingError U+1148");
expect(() => {ms932Encoder.encode("\u1149")}).to.throw(Error, "EncodingError U+1149");
expect(() => {ms932Encoder.encode("\u114A")}).to.throw(Error, "EncodingError U+114A");
expect(() => {ms932Encoder.encode("\u114B")}).to.throw(Error, "EncodingError U+114B");
expect(() => {ms932Encoder.encode("\u114C")}).to.throw(Error, "EncodingError U+114C");
expect(() => {ms932Encoder.encode("\u114D")}).to.throw(Error, "EncodingError U+114D");
expect(() => {ms932Encoder.encode("\u114E")}).to.throw(Error, "EncodingError U+114E");
expect(() => {ms932Encoder.encode("\u114F")}).to.throw(Error, "EncodingError U+114F");
expect(() => {ms932Encoder.encode("\u1150")}).to.throw(Error, "EncodingError U+1150");
expect(() => {ms932Encoder.encode("\u1151")}).to.throw(Error, "EncodingError U+1151");
expect(() => {ms932Encoder.encode("\u1152")}).to.throw(Error, "EncodingError U+1152");
expect(() => {ms932Encoder.encode("\u1153")}).to.throw(Error, "EncodingError U+1153");
expect(() => {ms932Encoder.encode("\u1154")}).to.throw(Error, "EncodingError U+1154");
expect(() => {ms932Encoder.encode("\u1155")}).to.throw(Error, "EncodingError U+1155");
expect(() => {ms932Encoder.encode("\u1156")}).to.throw(Error, "EncodingError U+1156");
expect(() => {ms932Encoder.encode("\u1157")}).to.throw(Error, "EncodingError U+1157");
expect(() => {ms932Encoder.encode("\u1158")}).to.throw(Error, "EncodingError U+1158");
expect(() => {ms932Encoder.encode("\u1159")}).to.throw(Error, "EncodingError U+1159");
expect(() => {ms932Encoder.encode("\u115A")}).to.throw(Error, "EncodingError U+115A");
expect(() => {ms932Encoder.encode("\u115B")}).to.throw(Error, "EncodingError U+115B");
expect(() => {ms932Encoder.encode("\u115C")}).to.throw(Error, "EncodingError U+115C");
expect(() => {ms932Encoder.encode("\u115D")}).to.throw(Error, "EncodingError U+115D");
expect(() => {ms932Encoder.encode("\u115E")}).to.throw(Error, "EncodingError U+115E");
expect(() => {ms932Encoder.encode("\u115F")}).to.throw(Error, "EncodingError U+115F");
expect(() => {ms932Encoder.encode("\u1160")}).to.throw(Error, "EncodingError U+1160");
expect(() => {ms932Encoder.encode("\u1161")}).to.throw(Error, "EncodingError U+1161");
expect(() => {ms932Encoder.encode("\u1162")}).to.throw(Error, "EncodingError U+1162");
expect(() => {ms932Encoder.encode("\u1163")}).to.throw(Error, "EncodingError U+1163");
expect(() => {ms932Encoder.encode("\u1164")}).to.throw(Error, "EncodingError U+1164");
expect(() => {ms932Encoder.encode("\u1165")}).to.throw(Error, "EncodingError U+1165");
expect(() => {ms932Encoder.encode("\u1166")}).to.throw(Error, "EncodingError U+1166");
expect(() => {ms932Encoder.encode("\u1167")}).to.throw(Error, "EncodingError U+1167");
expect(() => {ms932Encoder.encode("\u1168")}).to.throw(Error, "EncodingError U+1168");
expect(() => {ms932Encoder.encode("\u1169")}).to.throw(Error, "EncodingError U+1169");
expect(() => {ms932Encoder.encode("\u116A")}).to.throw(Error, "EncodingError U+116A");
expect(() => {ms932Encoder.encode("\u116B")}).to.throw(Error, "EncodingError U+116B");
expect(() => {ms932Encoder.encode("\u116C")}).to.throw(Error, "EncodingError U+116C");
expect(() => {ms932Encoder.encode("\u116D")}).to.throw(Error, "EncodingError U+116D");
expect(() => {ms932Encoder.encode("\u116E")}).to.throw(Error, "EncodingError U+116E");
expect(() => {ms932Encoder.encode("\u116F")}).to.throw(Error, "EncodingError U+116F");
expect(() => {ms932Encoder.encode("\u1170")}).to.throw(Error, "EncodingError U+1170");
expect(() => {ms932Encoder.encode("\u1171")}).to.throw(Error, "EncodingError U+1171");
expect(() => {ms932Encoder.encode("\u1172")}).to.throw(Error, "EncodingError U+1172");
expect(() => {ms932Encoder.encode("\u1173")}).to.throw(Error, "EncodingError U+1173");
expect(() => {ms932Encoder.encode("\u1174")}).to.throw(Error, "EncodingError U+1174");
expect(() => {ms932Encoder.encode("\u1175")}).to.throw(Error, "EncodingError U+1175");
expect(() => {ms932Encoder.encode("\u1176")}).to.throw(Error, "EncodingError U+1176");
expect(() => {ms932Encoder.encode("\u1177")}).to.throw(Error, "EncodingError U+1177");
expect(() => {ms932Encoder.encode("\u1178")}).to.throw(Error, "EncodingError U+1178");
expect(() => {ms932Encoder.encode("\u1179")}).to.throw(Error, "EncodingError U+1179");
expect(() => {ms932Encoder.encode("\u117A")}).to.throw(Error, "EncodingError U+117A");
expect(() => {ms932Encoder.encode("\u117B")}).to.throw(Error, "EncodingError U+117B");
expect(() => {ms932Encoder.encode("\u117C")}).to.throw(Error, "EncodingError U+117C");
expect(() => {ms932Encoder.encode("\u117D")}).to.throw(Error, "EncodingError U+117D");
expect(() => {ms932Encoder.encode("\u117E")}).to.throw(Error, "EncodingError U+117E");
expect(() => {ms932Encoder.encode("\u117F")}).to.throw(Error, "EncodingError U+117F");
expect(() => {ms932Encoder.encode("\u1180")}).to.throw(Error, "EncodingError U+1180");
expect(() => {ms932Encoder.encode("\u1181")}).to.throw(Error, "EncodingError U+1181");
expect(() => {ms932Encoder.encode("\u1182")}).to.throw(Error, "EncodingError U+1182");
expect(() => {ms932Encoder.encode("\u1183")}).to.throw(Error, "EncodingError U+1183");
expect(() => {ms932Encoder.encode("\u1184")}).to.throw(Error, "EncodingError U+1184");
expect(() => {ms932Encoder.encode("\u1185")}).to.throw(Error, "EncodingError U+1185");
expect(() => {ms932Encoder.encode("\u1186")}).to.throw(Error, "EncodingError U+1186");
expect(() => {ms932Encoder.encode("\u1187")}).to.throw(Error, "EncodingError U+1187");
expect(() => {ms932Encoder.encode("\u1188")}).to.throw(Error, "EncodingError U+1188");
expect(() => {ms932Encoder.encode("\u1189")}).to.throw(Error, "EncodingError U+1189");
expect(() => {ms932Encoder.encode("\u118A")}).to.throw(Error, "EncodingError U+118A");
expect(() => {ms932Encoder.encode("\u118B")}).to.throw(Error, "EncodingError U+118B");
expect(() => {ms932Encoder.encode("\u118C")}).to.throw(Error, "EncodingError U+118C");
expect(() => {ms932Encoder.encode("\u118D")}).to.throw(Error, "EncodingError U+118D");
expect(() => {ms932Encoder.encode("\u118E")}).to.throw(Error, "EncodingError U+118E");
expect(() => {ms932Encoder.encode("\u118F")}).to.throw(Error, "EncodingError U+118F");
expect(() => {ms932Encoder.encode("\u1190")}).to.throw(Error, "EncodingError U+1190");
expect(() => {ms932Encoder.encode("\u1191")}).to.throw(Error, "EncodingError U+1191");
expect(() => {ms932Encoder.encode("\u1192")}).to.throw(Error, "EncodingError U+1192");
expect(() => {ms932Encoder.encode("\u1193")}).to.throw(Error, "EncodingError U+1193");
expect(() => {ms932Encoder.encode("\u1194")}).to.throw(Error, "EncodingError U+1194");
expect(() => {ms932Encoder.encode("\u1195")}).to.throw(Error, "EncodingError U+1195");
expect(() => {ms932Encoder.encode("\u1196")}).to.throw(Error, "EncodingError U+1196");
expect(() => {ms932Encoder.encode("\u1197")}).to.throw(Error, "EncodingError U+1197");
expect(() => {ms932Encoder.encode("\u1198")}).to.throw(Error, "EncodingError U+1198");
expect(() => {ms932Encoder.encode("\u1199")}).to.throw(Error, "EncodingError U+1199");
expect(() => {ms932Encoder.encode("\u119A")}).to.throw(Error, "EncodingError U+119A");
expect(() => {ms932Encoder.encode("\u119B")}).to.throw(Error, "EncodingError U+119B");
expect(() => {ms932Encoder.encode("\u119C")}).to.throw(Error, "EncodingError U+119C");
expect(() => {ms932Encoder.encode("\u119D")}).to.throw(Error, "EncodingError U+119D");
expect(() => {ms932Encoder.encode("\u119E")}).to.throw(Error, "EncodingError U+119E");
expect(() => {ms932Encoder.encode("\u119F")}).to.throw(Error, "EncodingError U+119F");
expect(() => {ms932Encoder.encode("\u11A0")}).to.throw(Error, "EncodingError U+11A0");
expect(() => {ms932Encoder.encode("\u11A1")}).to.throw(Error, "EncodingError U+11A1");
expect(() => {ms932Encoder.encode("\u11A2")}).to.throw(Error, "EncodingError U+11A2");
expect(() => {ms932Encoder.encode("\u11A3")}).to.throw(Error, "EncodingError U+11A3");
expect(() => {ms932Encoder.encode("\u11A4")}).to.throw(Error, "EncodingError U+11A4");
expect(() => {ms932Encoder.encode("\u11A5")}).to.throw(Error, "EncodingError U+11A5");
expect(() => {ms932Encoder.encode("\u11A6")}).to.throw(Error, "EncodingError U+11A6");
expect(() => {ms932Encoder.encode("\u11A7")}).to.throw(Error, "EncodingError U+11A7");
expect(() => {ms932Encoder.encode("\u11A8")}).to.throw(Error, "EncodingError U+11A8");
expect(() => {ms932Encoder.encode("\u11A9")}).to.throw(Error, "EncodingError U+11A9");
expect(() => {ms932Encoder.encode("\u11AA")}).to.throw(Error, "EncodingError U+11AA");
expect(() => {ms932Encoder.encode("\u11AB")}).to.throw(Error, "EncodingError U+11AB");
expect(() => {ms932Encoder.encode("\u11AC")}).to.throw(Error, "EncodingError U+11AC");
expect(() => {ms932Encoder.encode("\u11AD")}).to.throw(Error, "EncodingError U+11AD");
expect(() => {ms932Encoder.encode("\u11AE")}).to.throw(Error, "EncodingError U+11AE");
expect(() => {ms932Encoder.encode("\u11AF")}).to.throw(Error, "EncodingError U+11AF");
expect(() => {ms932Encoder.encode("\u11B0")}).to.throw(Error, "EncodingError U+11B0");
expect(() => {ms932Encoder.encode("\u11B1")}).to.throw(Error, "EncodingError U+11B1");
expect(() => {ms932Encoder.encode("\u11B2")}).to.throw(Error, "EncodingError U+11B2");
expect(() => {ms932Encoder.encode("\u11B3")}).to.throw(Error, "EncodingError U+11B3");
expect(() => {ms932Encoder.encode("\u11B4")}).to.throw(Error, "EncodingError U+11B4");
expect(() => {ms932Encoder.encode("\u11B5")}).to.throw(Error, "EncodingError U+11B5");
expect(() => {ms932Encoder.encode("\u11B6")}).to.throw(Error, "EncodingError U+11B6");
expect(() => {ms932Encoder.encode("\u11B7")}).to.throw(Error, "EncodingError U+11B7");
expect(() => {ms932Encoder.encode("\u11B8")}).to.throw(Error, "EncodingError U+11B8");
expect(() => {ms932Encoder.encode("\u11B9")}).to.throw(Error, "EncodingError U+11B9");
expect(() => {ms932Encoder.encode("\u11BA")}).to.throw(Error, "EncodingError U+11BA");
expect(() => {ms932Encoder.encode("\u11BB")}).to.throw(Error, "EncodingError U+11BB");
expect(() => {ms932Encoder.encode("\u11BC")}).to.throw(Error, "EncodingError U+11BC");
expect(() => {ms932Encoder.encode("\u11BD")}).to.throw(Error, "EncodingError U+11BD");
expect(() => {ms932Encoder.encode("\u11BE")}).to.throw(Error, "EncodingError U+11BE");
expect(() => {ms932Encoder.encode("\u11BF")}).to.throw(Error, "EncodingError U+11BF");
expect(() => {ms932Encoder.encode("\u11C0")}).to.throw(Error, "EncodingError U+11C0");
expect(() => {ms932Encoder.encode("\u11C1")}).to.throw(Error, "EncodingError U+11C1");
expect(() => {ms932Encoder.encode("\u11C2")}).to.throw(Error, "EncodingError U+11C2");
expect(() => {ms932Encoder.encode("\u11C3")}).to.throw(Error, "EncodingError U+11C3");
expect(() => {ms932Encoder.encode("\u11C4")}).to.throw(Error, "EncodingError U+11C4");
expect(() => {ms932Encoder.encode("\u11C5")}).to.throw(Error, "EncodingError U+11C5");
expect(() => {ms932Encoder.encode("\u11C6")}).to.throw(Error, "EncodingError U+11C6");
expect(() => {ms932Encoder.encode("\u11C7")}).to.throw(Error, "EncodingError U+11C7");
expect(() => {ms932Encoder.encode("\u11C8")}).to.throw(Error, "EncodingError U+11C8");
expect(() => {ms932Encoder.encode("\u11C9")}).to.throw(Error, "EncodingError U+11C9");
expect(() => {ms932Encoder.encode("\u11CA")}).to.throw(Error, "EncodingError U+11CA");
expect(() => {ms932Encoder.encode("\u11CB")}).to.throw(Error, "EncodingError U+11CB");
expect(() => {ms932Encoder.encode("\u11CC")}).to.throw(Error, "EncodingError U+11CC");
expect(() => {ms932Encoder.encode("\u11CD")}).to.throw(Error, "EncodingError U+11CD");
expect(() => {ms932Encoder.encode("\u11CE")}).to.throw(Error, "EncodingError U+11CE");
expect(() => {ms932Encoder.encode("\u11CF")}).to.throw(Error, "EncodingError U+11CF");
expect(() => {ms932Encoder.encode("\u11D0")}).to.throw(Error, "EncodingError U+11D0");
expect(() => {ms932Encoder.encode("\u11D1")}).to.throw(Error, "EncodingError U+11D1");
expect(() => {ms932Encoder.encode("\u11D2")}).to.throw(Error, "EncodingError U+11D2");
expect(() => {ms932Encoder.encode("\u11D3")}).to.throw(Error, "EncodingError U+11D3");
expect(() => {ms932Encoder.encode("\u11D4")}).to.throw(Error, "EncodingError U+11D4");
expect(() => {ms932Encoder.encode("\u11D5")}).to.throw(Error, "EncodingError U+11D5");
expect(() => {ms932Encoder.encode("\u11D6")}).to.throw(Error, "EncodingError U+11D6");
expect(() => {ms932Encoder.encode("\u11D7")}).to.throw(Error, "EncodingError U+11D7");
expect(() => {ms932Encoder.encode("\u11D8")}).to.throw(Error, "EncodingError U+11D8");
expect(() => {ms932Encoder.encode("\u11D9")}).to.throw(Error, "EncodingError U+11D9");
expect(() => {ms932Encoder.encode("\u11DA")}).to.throw(Error, "EncodingError U+11DA");
expect(() => {ms932Encoder.encode("\u11DB")}).to.throw(Error, "EncodingError U+11DB");
expect(() => {ms932Encoder.encode("\u11DC")}).to.throw(Error, "EncodingError U+11DC");
expect(() => {ms932Encoder.encode("\u11DD")}).to.throw(Error, "EncodingError U+11DD");
expect(() => {ms932Encoder.encode("\u11DE")}).to.throw(Error, "EncodingError U+11DE");
expect(() => {ms932Encoder.encode("\u11DF")}).to.throw(Error, "EncodingError U+11DF");
expect(() => {ms932Encoder.encode("\u11E0")}).to.throw(Error, "EncodingError U+11E0");
expect(() => {ms932Encoder.encode("\u11E1")}).to.throw(Error, "EncodingError U+11E1");
expect(() => {ms932Encoder.encode("\u11E2")}).to.throw(Error, "EncodingError U+11E2");
expect(() => {ms932Encoder.encode("\u11E3")}).to.throw(Error, "EncodingError U+11E3");
expect(() => {ms932Encoder.encode("\u11E4")}).to.throw(Error, "EncodingError U+11E4");
expect(() => {ms932Encoder.encode("\u11E5")}).to.throw(Error, "EncodingError U+11E5");
expect(() => {ms932Encoder.encode("\u11E6")}).to.throw(Error, "EncodingError U+11E6");
expect(() => {ms932Encoder.encode("\u11E7")}).to.throw(Error, "EncodingError U+11E7");
expect(() => {ms932Encoder.encode("\u11E8")}).to.throw(Error, "EncodingError U+11E8");
expect(() => {ms932Encoder.encode("\u11E9")}).to.throw(Error, "EncodingError U+11E9");
expect(() => {ms932Encoder.encode("\u11EA")}).to.throw(Error, "EncodingError U+11EA");
expect(() => {ms932Encoder.encode("\u11EB")}).to.throw(Error, "EncodingError U+11EB");
expect(() => {ms932Encoder.encode("\u11EC")}).to.throw(Error, "EncodingError U+11EC");
expect(() => {ms932Encoder.encode("\u11ED")}).to.throw(Error, "EncodingError U+11ED");
expect(() => {ms932Encoder.encode("\u11EE")}).to.throw(Error, "EncodingError U+11EE");
expect(() => {ms932Encoder.encode("\u11EF")}).to.throw(Error, "EncodingError U+11EF");
expect(() => {ms932Encoder.encode("\u11F0")}).to.throw(Error, "EncodingError U+11F0");
expect(() => {ms932Encoder.encode("\u11F1")}).to.throw(Error, "EncodingError U+11F1");
expect(() => {ms932Encoder.encode("\u11F2")}).to.throw(Error, "EncodingError U+11F2");
expect(() => {ms932Encoder.encode("\u11F3")}).to.throw(Error, "EncodingError U+11F3");
expect(() => {ms932Encoder.encode("\u11F4")}).to.throw(Error, "EncodingError U+11F4");
expect(() => {ms932Encoder.encode("\u11F5")}).to.throw(Error, "EncodingError U+11F5");
expect(() => {ms932Encoder.encode("\u11F6")}).to.throw(Error, "EncodingError U+11F6");
expect(() => {ms932Encoder.encode("\u11F7")}).to.throw(Error, "EncodingError U+11F7");
expect(() => {ms932Encoder.encode("\u11F8")}).to.throw(Error, "EncodingError U+11F8");
expect(() => {ms932Encoder.encode("\u11F9")}).to.throw(Error, "EncodingError U+11F9");
expect(() => {ms932Encoder.encode("\u11FA")}).to.throw(Error, "EncodingError U+11FA");
expect(() => {ms932Encoder.encode("\u11FB")}).to.throw(Error, "EncodingError U+11FB");
expect(() => {ms932Encoder.encode("\u11FC")}).to.throw(Error, "EncodingError U+11FC");
expect(() => {ms932Encoder.encode("\u11FD")}).to.throw(Error, "EncodingError U+11FD");
expect(() => {ms932Encoder.encode("\u11FE")}).to.throw(Error, "EncodingError U+11FE");
expect(() => {ms932Encoder.encode("\u11FF")}).to.throw(Error, "EncodingError U+11FF");
expect(() => {ms932Encoder.encode("\u1200")}).to.throw(Error, "EncodingError U+1200");
expect(() => {ms932Encoder.encode("\u1201")}).to.throw(Error, "EncodingError U+1201");
expect(() => {ms932Encoder.encode("\u1202")}).to.throw(Error, "EncodingError U+1202");
expect(() => {ms932Encoder.encode("\u1203")}).to.throw(Error, "EncodingError U+1203");
expect(() => {ms932Encoder.encode("\u1204")}).to.throw(Error, "EncodingError U+1204");
expect(() => {ms932Encoder.encode("\u1205")}).to.throw(Error, "EncodingError U+1205");
expect(() => {ms932Encoder.encode("\u1206")}).to.throw(Error, "EncodingError U+1206");
expect(() => {ms932Encoder.encode("\u1207")}).to.throw(Error, "EncodingError U+1207");
expect(() => {ms932Encoder.encode("\u1208")}).to.throw(Error, "EncodingError U+1208");
expect(() => {ms932Encoder.encode("\u1209")}).to.throw(Error, "EncodingError U+1209");
expect(() => {ms932Encoder.encode("\u120A")}).to.throw(Error, "EncodingError U+120A");
expect(() => {ms932Encoder.encode("\u120B")}).to.throw(Error, "EncodingError U+120B");
expect(() => {ms932Encoder.encode("\u120C")}).to.throw(Error, "EncodingError U+120C");
expect(() => {ms932Encoder.encode("\u120D")}).to.throw(Error, "EncodingError U+120D");
expect(() => {ms932Encoder.encode("\u120E")}).to.throw(Error, "EncodingError U+120E");
expect(() => {ms932Encoder.encode("\u120F")}).to.throw(Error, "EncodingError U+120F");
expect(() => {ms932Encoder.encode("\u1210")}).to.throw(Error, "EncodingError U+1210");
expect(() => {ms932Encoder.encode("\u1211")}).to.throw(Error, "EncodingError U+1211");
expect(() => {ms932Encoder.encode("\u1212")}).to.throw(Error, "EncodingError U+1212");
expect(() => {ms932Encoder.encode("\u1213")}).to.throw(Error, "EncodingError U+1213");
expect(() => {ms932Encoder.encode("\u1214")}).to.throw(Error, "EncodingError U+1214");
expect(() => {ms932Encoder.encode("\u1215")}).to.throw(Error, "EncodingError U+1215");
expect(() => {ms932Encoder.encode("\u1216")}).to.throw(Error, "EncodingError U+1216");
expect(() => {ms932Encoder.encode("\u1217")}).to.throw(Error, "EncodingError U+1217");
expect(() => {ms932Encoder.encode("\u1218")}).to.throw(Error, "EncodingError U+1218");
expect(() => {ms932Encoder.encode("\u1219")}).to.throw(Error, "EncodingError U+1219");
expect(() => {ms932Encoder.encode("\u121A")}).to.throw(Error, "EncodingError U+121A");
expect(() => {ms932Encoder.encode("\u121B")}).to.throw(Error, "EncodingError U+121B");
expect(() => {ms932Encoder.encode("\u121C")}).to.throw(Error, "EncodingError U+121C");
expect(() => {ms932Encoder.encode("\u121D")}).to.throw(Error, "EncodingError U+121D");
expect(() => {ms932Encoder.encode("\u121E")}).to.throw(Error, "EncodingError U+121E");
expect(() => {ms932Encoder.encode("\u121F")}).to.throw(Error, "EncodingError U+121F");
expect(() => {ms932Encoder.encode("\u1220")}).to.throw(Error, "EncodingError U+1220");
expect(() => {ms932Encoder.encode("\u1221")}).to.throw(Error, "EncodingError U+1221");
expect(() => {ms932Encoder.encode("\u1222")}).to.throw(Error, "EncodingError U+1222");
expect(() => {ms932Encoder.encode("\u1223")}).to.throw(Error, "EncodingError U+1223");
expect(() => {ms932Encoder.encode("\u1224")}).to.throw(Error, "EncodingError U+1224");
expect(() => {ms932Encoder.encode("\u1225")}).to.throw(Error, "EncodingError U+1225");
expect(() => {ms932Encoder.encode("\u1226")}).to.throw(Error, "EncodingError U+1226");
expect(() => {ms932Encoder.encode("\u1227")}).to.throw(Error, "EncodingError U+1227");
expect(() => {ms932Encoder.encode("\u1228")}).to.throw(Error, "EncodingError U+1228");
expect(() => {ms932Encoder.encode("\u1229")}).to.throw(Error, "EncodingError U+1229");
expect(() => {ms932Encoder.encode("\u122A")}).to.throw(Error, "EncodingError U+122A");
expect(() => {ms932Encoder.encode("\u122B")}).to.throw(Error, "EncodingError U+122B");
expect(() => {ms932Encoder.encode("\u122C")}).to.throw(Error, "EncodingError U+122C");
expect(() => {ms932Encoder.encode("\u122D")}).to.throw(Error, "EncodingError U+122D");
expect(() => {ms932Encoder.encode("\u122E")}).to.throw(Error, "EncodingError U+122E");
expect(() => {ms932Encoder.encode("\u122F")}).to.throw(Error, "EncodingError U+122F");
expect(() => {ms932Encoder.encode("\u1230")}).to.throw(Error, "EncodingError U+1230");
expect(() => {ms932Encoder.encode("\u1231")}).to.throw(Error, "EncodingError U+1231");
expect(() => {ms932Encoder.encode("\u1232")}).to.throw(Error, "EncodingError U+1232");
expect(() => {ms932Encoder.encode("\u1233")}).to.throw(Error, "EncodingError U+1233");
expect(() => {ms932Encoder.encode("\u1234")}).to.throw(Error, "EncodingError U+1234");
expect(() => {ms932Encoder.encode("\u1235")}).to.throw(Error, "EncodingError U+1235");
expect(() => {ms932Encoder.encode("\u1236")}).to.throw(Error, "EncodingError U+1236");
expect(() => {ms932Encoder.encode("\u1237")}).to.throw(Error, "EncodingError U+1237");
expect(() => {ms932Encoder.encode("\u1238")}).to.throw(Error, "EncodingError U+1238");
expect(() => {ms932Encoder.encode("\u1239")}).to.throw(Error, "EncodingError U+1239");
expect(() => {ms932Encoder.encode("\u123A")}).to.throw(Error, "EncodingError U+123A");
expect(() => {ms932Encoder.encode("\u123B")}).to.throw(Error, "EncodingError U+123B");
expect(() => {ms932Encoder.encode("\u123C")}).to.throw(Error, "EncodingError U+123C");
expect(() => {ms932Encoder.encode("\u123D")}).to.throw(Error, "EncodingError U+123D");
expect(() => {ms932Encoder.encode("\u123E")}).to.throw(Error, "EncodingError U+123E");
expect(() => {ms932Encoder.encode("\u123F")}).to.throw(Error, "EncodingError U+123F");
expect(() => {ms932Encoder.encode("\u1240")}).to.throw(Error, "EncodingError U+1240");
expect(() => {ms932Encoder.encode("\u1241")}).to.throw(Error, "EncodingError U+1241");
expect(() => {ms932Encoder.encode("\u1242")}).to.throw(Error, "EncodingError U+1242");
expect(() => {ms932Encoder.encode("\u1243")}).to.throw(Error, "EncodingError U+1243");
expect(() => {ms932Encoder.encode("\u1244")}).to.throw(Error, "EncodingError U+1244");
expect(() => {ms932Encoder.encode("\u1245")}).to.throw(Error, "EncodingError U+1245");
expect(() => {ms932Encoder.encode("\u1246")}).to.throw(Error, "EncodingError U+1246");
expect(() => {ms932Encoder.encode("\u1247")}).to.throw(Error, "EncodingError U+1247");
expect(() => {ms932Encoder.encode("\u1248")}).to.throw(Error, "EncodingError U+1248");
expect(() => {ms932Encoder.encode("\u1249")}).to.throw(Error, "EncodingError U+1249");
expect(() => {ms932Encoder.encode("\u124A")}).to.throw(Error, "EncodingError U+124A");
expect(() => {ms932Encoder.encode("\u124B")}).to.throw(Error, "EncodingError U+124B");
expect(() => {ms932Encoder.encode("\u124C")}).to.throw(Error, "EncodingError U+124C");
expect(() => {ms932Encoder.encode("\u124D")}).to.throw(Error, "EncodingError U+124D");
expect(() => {ms932Encoder.encode("\u124E")}).to.throw(Error, "EncodingError U+124E");
expect(() => {ms932Encoder.encode("\u124F")}).to.throw(Error, "EncodingError U+124F");
expect(() => {ms932Encoder.encode("\u1250")}).to.throw(Error, "EncodingError U+1250");
expect(() => {ms932Encoder.encode("\u1251")}).to.throw(Error, "EncodingError U+1251");
expect(() => {ms932Encoder.encode("\u1252")}).to.throw(Error, "EncodingError U+1252");
expect(() => {ms932Encoder.encode("\u1253")}).to.throw(Error, "EncodingError U+1253");
expect(() => {ms932Encoder.encode("\u1254")}).to.throw(Error, "EncodingError U+1254");
expect(() => {ms932Encoder.encode("\u1255")}).to.throw(Error, "EncodingError U+1255");
expect(() => {ms932Encoder.encode("\u1256")}).to.throw(Error, "EncodingError U+1256");
expect(() => {ms932Encoder.encode("\u1257")}).to.throw(Error, "EncodingError U+1257");
expect(() => {ms932Encoder.encode("\u1258")}).to.throw(Error, "EncodingError U+1258");
expect(() => {ms932Encoder.encode("\u1259")}).to.throw(Error, "EncodingError U+1259");
expect(() => {ms932Encoder.encode("\u125A")}).to.throw(Error, "EncodingError U+125A");
expect(() => {ms932Encoder.encode("\u125B")}).to.throw(Error, "EncodingError U+125B");
expect(() => {ms932Encoder.encode("\u125C")}).to.throw(Error, "EncodingError U+125C");
expect(() => {ms932Encoder.encode("\u125D")}).to.throw(Error, "EncodingError U+125D");
expect(() => {ms932Encoder.encode("\u125E")}).to.throw(Error, "EncodingError U+125E");
expect(() => {ms932Encoder.encode("\u125F")}).to.throw(Error, "EncodingError U+125F");
expect(() => {ms932Encoder.encode("\u1260")}).to.throw(Error, "EncodingError U+1260");
expect(() => {ms932Encoder.encode("\u1261")}).to.throw(Error, "EncodingError U+1261");
expect(() => {ms932Encoder.encode("\u1262")}).to.throw(Error, "EncodingError U+1262");
expect(() => {ms932Encoder.encode("\u1263")}).to.throw(Error, "EncodingError U+1263");
expect(() => {ms932Encoder.encode("\u1264")}).to.throw(Error, "EncodingError U+1264");
expect(() => {ms932Encoder.encode("\u1265")}).to.throw(Error, "EncodingError U+1265");
expect(() => {ms932Encoder.encode("\u1266")}).to.throw(Error, "EncodingError U+1266");
expect(() => {ms932Encoder.encode("\u1267")}).to.throw(Error, "EncodingError U+1267");
expect(() => {ms932Encoder.encode("\u1268")}).to.throw(Error, "EncodingError U+1268");
expect(() => {ms932Encoder.encode("\u1269")}).to.throw(Error, "EncodingError U+1269");
expect(() => {ms932Encoder.encode("\u126A")}).to.throw(Error, "EncodingError U+126A");
expect(() => {ms932Encoder.encode("\u126B")}).to.throw(Error, "EncodingError U+126B");
expect(() => {ms932Encoder.encode("\u126C")}).to.throw(Error, "EncodingError U+126C");
expect(() => {ms932Encoder.encode("\u126D")}).to.throw(Error, "EncodingError U+126D");
expect(() => {ms932Encoder.encode("\u126E")}).to.throw(Error, "EncodingError U+126E");
expect(() => {ms932Encoder.encode("\u126F")}).to.throw(Error, "EncodingError U+126F");
expect(() => {ms932Encoder.encode("\u1270")}).to.throw(Error, "EncodingError U+1270");
expect(() => {ms932Encoder.encode("\u1271")}).to.throw(Error, "EncodingError U+1271");
expect(() => {ms932Encoder.encode("\u1272")}).to.throw(Error, "EncodingError U+1272");
expect(() => {ms932Encoder.encode("\u1273")}).to.throw(Error, "EncodingError U+1273");
expect(() => {ms932Encoder.encode("\u1274")}).to.throw(Error, "EncodingError U+1274");
expect(() => {ms932Encoder.encode("\u1275")}).to.throw(Error, "EncodingError U+1275");
expect(() => {ms932Encoder.encode("\u1276")}).to.throw(Error, "EncodingError U+1276");
expect(() => {ms932Encoder.encode("\u1277")}).to.throw(Error, "EncodingError U+1277");
expect(() => {ms932Encoder.encode("\u1278")}).to.throw(Error, "EncodingError U+1278");
expect(() => {ms932Encoder.encode("\u1279")}).to.throw(Error, "EncodingError U+1279");
expect(() => {ms932Encoder.encode("\u127A")}).to.throw(Error, "EncodingError U+127A");
expect(() => {ms932Encoder.encode("\u127B")}).to.throw(Error, "EncodingError U+127B");
expect(() => {ms932Encoder.encode("\u127C")}).to.throw(Error, "EncodingError U+127C");
expect(() => {ms932Encoder.encode("\u127D")}).to.throw(Error, "EncodingError U+127D");
expect(() => {ms932Encoder.encode("\u127E")}).to.throw(Error, "EncodingError U+127E");
expect(() => {ms932Encoder.encode("\u127F")}).to.throw(Error, "EncodingError U+127F");
expect(() => {ms932Encoder.encode("\u1280")}).to.throw(Error, "EncodingError U+1280");
expect(() => {ms932Encoder.encode("\u1281")}).to.throw(Error, "EncodingError U+1281");
expect(() => {ms932Encoder.encode("\u1282")}).to.throw(Error, "EncodingError U+1282");
expect(() => {ms932Encoder.encode("\u1283")}).to.throw(Error, "EncodingError U+1283");
expect(() => {ms932Encoder.encode("\u1284")}).to.throw(Error, "EncodingError U+1284");
expect(() => {ms932Encoder.encode("\u1285")}).to.throw(Error, "EncodingError U+1285");
expect(() => {ms932Encoder.encode("\u1286")}).to.throw(Error, "EncodingError U+1286");
expect(() => {ms932Encoder.encode("\u1287")}).to.throw(Error, "EncodingError U+1287");
expect(() => {ms932Encoder.encode("\u1288")}).to.throw(Error, "EncodingError U+1288");
expect(() => {ms932Encoder.encode("\u1289")}).to.throw(Error, "EncodingError U+1289");
expect(() => {ms932Encoder.encode("\u128A")}).to.throw(Error, "EncodingError U+128A");
expect(() => {ms932Encoder.encode("\u128B")}).to.throw(Error, "EncodingError U+128B");
expect(() => {ms932Encoder.encode("\u128C")}).to.throw(Error, "EncodingError U+128C");
expect(() => {ms932Encoder.encode("\u128D")}).to.throw(Error, "EncodingError U+128D");
expect(() => {ms932Encoder.encode("\u128E")}).to.throw(Error, "EncodingError U+128E");
expect(() => {ms932Encoder.encode("\u128F")}).to.throw(Error, "EncodingError U+128F");
expect(() => {ms932Encoder.encode("\u1290")}).to.throw(Error, "EncodingError U+1290");
expect(() => {ms932Encoder.encode("\u1291")}).to.throw(Error, "EncodingError U+1291");
expect(() => {ms932Encoder.encode("\u1292")}).to.throw(Error, "EncodingError U+1292");
expect(() => {ms932Encoder.encode("\u1293")}).to.throw(Error, "EncodingError U+1293");
expect(() => {ms932Encoder.encode("\u1294")}).to.throw(Error, "EncodingError U+1294");
expect(() => {ms932Encoder.encode("\u1295")}).to.throw(Error, "EncodingError U+1295");
expect(() => {ms932Encoder.encode("\u1296")}).to.throw(Error, "EncodingError U+1296");
expect(() => {ms932Encoder.encode("\u1297")}).to.throw(Error, "EncodingError U+1297");
expect(() => {ms932Encoder.encode("\u1298")}).to.throw(Error, "EncodingError U+1298");
expect(() => {ms932Encoder.encode("\u1299")}).to.throw(Error, "EncodingError U+1299");
expect(() => {ms932Encoder.encode("\u129A")}).to.throw(Error, "EncodingError U+129A");
expect(() => {ms932Encoder.encode("\u129B")}).to.throw(Error, "EncodingError U+129B");
expect(() => {ms932Encoder.encode("\u129C")}).to.throw(Error, "EncodingError U+129C");
expect(() => {ms932Encoder.encode("\u129D")}).to.throw(Error, "EncodingError U+129D");
expect(() => {ms932Encoder.encode("\u129E")}).to.throw(Error, "EncodingError U+129E");
expect(() => {ms932Encoder.encode("\u129F")}).to.throw(Error, "EncodingError U+129F");
expect(() => {ms932Encoder.encode("\u12A0")}).to.throw(Error, "EncodingError U+12A0");
expect(() => {ms932Encoder.encode("\u12A1")}).to.throw(Error, "EncodingError U+12A1");
expect(() => {ms932Encoder.encode("\u12A2")}).to.throw(Error, "EncodingError U+12A2");
expect(() => {ms932Encoder.encode("\u12A3")}).to.throw(Error, "EncodingError U+12A3");
expect(() => {ms932Encoder.encode("\u12A4")}).to.throw(Error, "EncodingError U+12A4");
expect(() => {ms932Encoder.encode("\u12A5")}).to.throw(Error, "EncodingError U+12A5");
expect(() => {ms932Encoder.encode("\u12A6")}).to.throw(Error, "EncodingError U+12A6");
expect(() => {ms932Encoder.encode("\u12A7")}).to.throw(Error, "EncodingError U+12A7");
expect(() => {ms932Encoder.encode("\u12A8")}).to.throw(Error, "EncodingError U+12A8");
expect(() => {ms932Encoder.encode("\u12A9")}).to.throw(Error, "EncodingError U+12A9");
expect(() => {ms932Encoder.encode("\u12AA")}).to.throw(Error, "EncodingError U+12AA");
expect(() => {ms932Encoder.encode("\u12AB")}).to.throw(Error, "EncodingError U+12AB");
expect(() => {ms932Encoder.encode("\u12AC")}).to.throw(Error, "EncodingError U+12AC");
expect(() => {ms932Encoder.encode("\u12AD")}).to.throw(Error, "EncodingError U+12AD");
expect(() => {ms932Encoder.encode("\u12AE")}).to.throw(Error, "EncodingError U+12AE");
expect(() => {ms932Encoder.encode("\u12AF")}).to.throw(Error, "EncodingError U+12AF");
expect(() => {ms932Encoder.encode("\u12B0")}).to.throw(Error, "EncodingError U+12B0");
expect(() => {ms932Encoder.encode("\u12B1")}).to.throw(Error, "EncodingError U+12B1");
expect(() => {ms932Encoder.encode("\u12B2")}).to.throw(Error, "EncodingError U+12B2");
expect(() => {ms932Encoder.encode("\u12B3")}).to.throw(Error, "EncodingError U+12B3");
expect(() => {ms932Encoder.encode("\u12B4")}).to.throw(Error, "EncodingError U+12B4");
expect(() => {ms932Encoder.encode("\u12B5")}).to.throw(Error, "EncodingError U+12B5");
expect(() => {ms932Encoder.encode("\u12B6")}).to.throw(Error, "EncodingError U+12B6");
expect(() => {ms932Encoder.encode("\u12B7")}).to.throw(Error, "EncodingError U+12B7");
expect(() => {ms932Encoder.encode("\u12B8")}).to.throw(Error, "EncodingError U+12B8");
expect(() => {ms932Encoder.encode("\u12B9")}).to.throw(Error, "EncodingError U+12B9");
expect(() => {ms932Encoder.encode("\u12BA")}).to.throw(Error, "EncodingError U+12BA");
expect(() => {ms932Encoder.encode("\u12BB")}).to.throw(Error, "EncodingError U+12BB");
expect(() => {ms932Encoder.encode("\u12BC")}).to.throw(Error, "EncodingError U+12BC");
expect(() => {ms932Encoder.encode("\u12BD")}).to.throw(Error, "EncodingError U+12BD");
expect(() => {ms932Encoder.encode("\u12BE")}).to.throw(Error, "EncodingError U+12BE");
expect(() => {ms932Encoder.encode("\u12BF")}).to.throw(Error, "EncodingError U+12BF");
expect(() => {ms932Encoder.encode("\u12C0")}).to.throw(Error, "EncodingError U+12C0");
expect(() => {ms932Encoder.encode("\u12C1")}).to.throw(Error, "EncodingError U+12C1");
expect(() => {ms932Encoder.encode("\u12C2")}).to.throw(Error, "EncodingError U+12C2");
expect(() => {ms932Encoder.encode("\u12C3")}).to.throw(Error, "EncodingError U+12C3");
expect(() => {ms932Encoder.encode("\u12C4")}).to.throw(Error, "EncodingError U+12C4");
expect(() => {ms932Encoder.encode("\u12C5")}).to.throw(Error, "EncodingError U+12C5");
expect(() => {ms932Encoder.encode("\u12C6")}).to.throw(Error, "EncodingError U+12C6");
expect(() => {ms932Encoder.encode("\u12C7")}).to.throw(Error, "EncodingError U+12C7");
expect(() => {ms932Encoder.encode("\u12C8")}).to.throw(Error, "EncodingError U+12C8");
expect(() => {ms932Encoder.encode("\u12C9")}).to.throw(Error, "EncodingError U+12C9");
expect(() => {ms932Encoder.encode("\u12CA")}).to.throw(Error, "EncodingError U+12CA");
expect(() => {ms932Encoder.encode("\u12CB")}).to.throw(Error, "EncodingError U+12CB");
expect(() => {ms932Encoder.encode("\u12CC")}).to.throw(Error, "EncodingError U+12CC");
expect(() => {ms932Encoder.encode("\u12CD")}).to.throw(Error, "EncodingError U+12CD");
expect(() => {ms932Encoder.encode("\u12CE")}).to.throw(Error, "EncodingError U+12CE");
expect(() => {ms932Encoder.encode("\u12CF")}).to.throw(Error, "EncodingError U+12CF");
expect(() => {ms932Encoder.encode("\u12D0")}).to.throw(Error, "EncodingError U+12D0");
expect(() => {ms932Encoder.encode("\u12D1")}).to.throw(Error, "EncodingError U+12D1");
expect(() => {ms932Encoder.encode("\u12D2")}).to.throw(Error, "EncodingError U+12D2");
expect(() => {ms932Encoder.encode("\u12D3")}).to.throw(Error, "EncodingError U+12D3");
expect(() => {ms932Encoder.encode("\u12D4")}).to.throw(Error, "EncodingError U+12D4");
expect(() => {ms932Encoder.encode("\u12D5")}).to.throw(Error, "EncodingError U+12D5");
expect(() => {ms932Encoder.encode("\u12D6")}).to.throw(Error, "EncodingError U+12D6");
expect(() => {ms932Encoder.encode("\u12D7")}).to.throw(Error, "EncodingError U+12D7");
expect(() => {ms932Encoder.encode("\u12D8")}).to.throw(Error, "EncodingError U+12D8");
expect(() => {ms932Encoder.encode("\u12D9")}).to.throw(Error, "EncodingError U+12D9");
expect(() => {ms932Encoder.encode("\u12DA")}).to.throw(Error, "EncodingError U+12DA");
expect(() => {ms932Encoder.encode("\u12DB")}).to.throw(Error, "EncodingError U+12DB");
expect(() => {ms932Encoder.encode("\u12DC")}).to.throw(Error, "EncodingError U+12DC");
expect(() => {ms932Encoder.encode("\u12DD")}).to.throw(Error, "EncodingError U+12DD");
expect(() => {ms932Encoder.encode("\u12DE")}).to.throw(Error, "EncodingError U+12DE");
expect(() => {ms932Encoder.encode("\u12DF")}).to.throw(Error, "EncodingError U+12DF");
expect(() => {ms932Encoder.encode("\u12E0")}).to.throw(Error, "EncodingError U+12E0");
expect(() => {ms932Encoder.encode("\u12E1")}).to.throw(Error, "EncodingError U+12E1");
expect(() => {ms932Encoder.encode("\u12E2")}).to.throw(Error, "EncodingError U+12E2");
expect(() => {ms932Encoder.encode("\u12E3")}).to.throw(Error, "EncodingError U+12E3");
expect(() => {ms932Encoder.encode("\u12E4")}).to.throw(Error, "EncodingError U+12E4");
expect(() => {ms932Encoder.encode("\u12E5")}).to.throw(Error, "EncodingError U+12E5");
expect(() => {ms932Encoder.encode("\u12E6")}).to.throw(Error, "EncodingError U+12E6");
expect(() => {ms932Encoder.encode("\u12E7")}).to.throw(Error, "EncodingError U+12E7");
expect(() => {ms932Encoder.encode("\u12E8")}).to.throw(Error, "EncodingError U+12E8");
expect(() => {ms932Encoder.encode("\u12E9")}).to.throw(Error, "EncodingError U+12E9");
expect(() => {ms932Encoder.encode("\u12EA")}).to.throw(Error, "EncodingError U+12EA");
expect(() => {ms932Encoder.encode("\u12EB")}).to.throw(Error, "EncodingError U+12EB");
expect(() => {ms932Encoder.encode("\u12EC")}).to.throw(Error, "EncodingError U+12EC");
expect(() => {ms932Encoder.encode("\u12ED")}).to.throw(Error, "EncodingError U+12ED");
expect(() => {ms932Encoder.encode("\u12EE")}).to.throw(Error, "EncodingError U+12EE");
expect(() => {ms932Encoder.encode("\u12EF")}).to.throw(Error, "EncodingError U+12EF");
expect(() => {ms932Encoder.encode("\u12F0")}).to.throw(Error, "EncodingError U+12F0");
expect(() => {ms932Encoder.encode("\u12F1")}).to.throw(Error, "EncodingError U+12F1");
expect(() => {ms932Encoder.encode("\u12F2")}).to.throw(Error, "EncodingError U+12F2");
expect(() => {ms932Encoder.encode("\u12F3")}).to.throw(Error, "EncodingError U+12F3");
expect(() => {ms932Encoder.encode("\u12F4")}).to.throw(Error, "EncodingError U+12F4");
expect(() => {ms932Encoder.encode("\u12F5")}).to.throw(Error, "EncodingError U+12F5");
expect(() => {ms932Encoder.encode("\u12F6")}).to.throw(Error, "EncodingError U+12F6");
expect(() => {ms932Encoder.encode("\u12F7")}).to.throw(Error, "EncodingError U+12F7");
expect(() => {ms932Encoder.encode("\u12F8")}).to.throw(Error, "EncodingError U+12F8");
expect(() => {ms932Encoder.encode("\u12F9")}).to.throw(Error, "EncodingError U+12F9");
expect(() => {ms932Encoder.encode("\u12FA")}).to.throw(Error, "EncodingError U+12FA");
expect(() => {ms932Encoder.encode("\u12FB")}).to.throw(Error, "EncodingError U+12FB");
expect(() => {ms932Encoder.encode("\u12FC")}).to.throw(Error, "EncodingError U+12FC");
expect(() => {ms932Encoder.encode("\u12FD")}).to.throw(Error, "EncodingError U+12FD");
expect(() => {ms932Encoder.encode("\u12FE")}).to.throw(Error, "EncodingError U+12FE");
expect(() => {ms932Encoder.encode("\u12FF")}).to.throw(Error, "EncodingError U+12FF");
expect(() => {ms932Encoder.encode("\u1300")}).to.throw(Error, "EncodingError U+1300");
expect(() => {ms932Encoder.encode("\u1301")}).to.throw(Error, "EncodingError U+1301");
expect(() => {ms932Encoder.encode("\u1302")}).to.throw(Error, "EncodingError U+1302");
expect(() => {ms932Encoder.encode("\u1303")}).to.throw(Error, "EncodingError U+1303");
expect(() => {ms932Encoder.encode("\u1304")}).to.throw(Error, "EncodingError U+1304");
expect(() => {ms932Encoder.encode("\u1305")}).to.throw(Error, "EncodingError U+1305");
expect(() => {ms932Encoder.encode("\u1306")}).to.throw(Error, "EncodingError U+1306");
expect(() => {ms932Encoder.encode("\u1307")}).to.throw(Error, "EncodingError U+1307");
expect(() => {ms932Encoder.encode("\u1308")}).to.throw(Error, "EncodingError U+1308");
expect(() => {ms932Encoder.encode("\u1309")}).to.throw(Error, "EncodingError U+1309");
expect(() => {ms932Encoder.encode("\u130A")}).to.throw(Error, "EncodingError U+130A");
expect(() => {ms932Encoder.encode("\u130B")}).to.throw(Error, "EncodingError U+130B");
expect(() => {ms932Encoder.encode("\u130C")}).to.throw(Error, "EncodingError U+130C");
expect(() => {ms932Encoder.encode("\u130D")}).to.throw(Error, "EncodingError U+130D");
expect(() => {ms932Encoder.encode("\u130E")}).to.throw(Error, "EncodingError U+130E");
expect(() => {ms932Encoder.encode("\u130F")}).to.throw(Error, "EncodingError U+130F");
expect(() => {ms932Encoder.encode("\u1310")}).to.throw(Error, "EncodingError U+1310");
expect(() => {ms932Encoder.encode("\u1311")}).to.throw(Error, "EncodingError U+1311");
expect(() => {ms932Encoder.encode("\u1312")}).to.throw(Error, "EncodingError U+1312");
expect(() => {ms932Encoder.encode("\u1313")}).to.throw(Error, "EncodingError U+1313");
expect(() => {ms932Encoder.encode("\u1314")}).to.throw(Error, "EncodingError U+1314");
expect(() => {ms932Encoder.encode("\u1315")}).to.throw(Error, "EncodingError U+1315");
expect(() => {ms932Encoder.encode("\u1316")}).to.throw(Error, "EncodingError U+1316");
expect(() => {ms932Encoder.encode("\u1317")}).to.throw(Error, "EncodingError U+1317");
expect(() => {ms932Encoder.encode("\u1318")}).to.throw(Error, "EncodingError U+1318");
expect(() => {ms932Encoder.encode("\u1319")}).to.throw(Error, "EncodingError U+1319");
expect(() => {ms932Encoder.encode("\u131A")}).to.throw(Error, "EncodingError U+131A");
expect(() => {ms932Encoder.encode("\u131B")}).to.throw(Error, "EncodingError U+131B");
expect(() => {ms932Encoder.encode("\u131C")}).to.throw(Error, "EncodingError U+131C");
expect(() => {ms932Encoder.encode("\u131D")}).to.throw(Error, "EncodingError U+131D");
expect(() => {ms932Encoder.encode("\u131E")}).to.throw(Error, "EncodingError U+131E");
expect(() => {ms932Encoder.encode("\u131F")}).to.throw(Error, "EncodingError U+131F");
expect(() => {ms932Encoder.encode("\u1320")}).to.throw(Error, "EncodingError U+1320");
expect(() => {ms932Encoder.encode("\u1321")}).to.throw(Error, "EncodingError U+1321");
expect(() => {ms932Encoder.encode("\u1322")}).to.throw(Error, "EncodingError U+1322");
expect(() => {ms932Encoder.encode("\u1323")}).to.throw(Error, "EncodingError U+1323");
expect(() => {ms932Encoder.encode("\u1324")}).to.throw(Error, "EncodingError U+1324");
expect(() => {ms932Encoder.encode("\u1325")}).to.throw(Error, "EncodingError U+1325");
expect(() => {ms932Encoder.encode("\u1326")}).to.throw(Error, "EncodingError U+1326");
expect(() => {ms932Encoder.encode("\u1327")}).to.throw(Error, "EncodingError U+1327");
expect(() => {ms932Encoder.encode("\u1328")}).to.throw(Error, "EncodingError U+1328");
expect(() => {ms932Encoder.encode("\u1329")}).to.throw(Error, "EncodingError U+1329");
expect(() => {ms932Encoder.encode("\u132A")}).to.throw(Error, "EncodingError U+132A");
expect(() => {ms932Encoder.encode("\u132B")}).to.throw(Error, "EncodingError U+132B");
expect(() => {ms932Encoder.encode("\u132C")}).to.throw(Error, "EncodingError U+132C");
expect(() => {ms932Encoder.encode("\u132D")}).to.throw(Error, "EncodingError U+132D");
expect(() => {ms932Encoder.encode("\u132E")}).to.throw(Error, "EncodingError U+132E");
expect(() => {ms932Encoder.encode("\u132F")}).to.throw(Error, "EncodingError U+132F");
expect(() => {ms932Encoder.encode("\u1330")}).to.throw(Error, "EncodingError U+1330");
expect(() => {ms932Encoder.encode("\u1331")}).to.throw(Error, "EncodingError U+1331");
expect(() => {ms932Encoder.encode("\u1332")}).to.throw(Error, "EncodingError U+1332");
expect(() => {ms932Encoder.encode("\u1333")}).to.throw(Error, "EncodingError U+1333");
expect(() => {ms932Encoder.encode("\u1334")}).to.throw(Error, "EncodingError U+1334");
expect(() => {ms932Encoder.encode("\u1335")}).to.throw(Error, "EncodingError U+1335");
expect(() => {ms932Encoder.encode("\u1336")}).to.throw(Error, "EncodingError U+1336");
expect(() => {ms932Encoder.encode("\u1337")}).to.throw(Error, "EncodingError U+1337");
expect(() => {ms932Encoder.encode("\u1338")}).to.throw(Error, "EncodingError U+1338");
expect(() => {ms932Encoder.encode("\u1339")}).to.throw(Error, "EncodingError U+1339");
expect(() => {ms932Encoder.encode("\u133A")}).to.throw(Error, "EncodingError U+133A");
expect(() => {ms932Encoder.encode("\u133B")}).to.throw(Error, "EncodingError U+133B");
expect(() => {ms932Encoder.encode("\u133C")}).to.throw(Error, "EncodingError U+133C");
expect(() => {ms932Encoder.encode("\u133D")}).to.throw(Error, "EncodingError U+133D");
expect(() => {ms932Encoder.encode("\u133E")}).to.throw(Error, "EncodingError U+133E");
expect(() => {ms932Encoder.encode("\u133F")}).to.throw(Error, "EncodingError U+133F");
expect(() => {ms932Encoder.encode("\u1340")}).to.throw(Error, "EncodingError U+1340");
expect(() => {ms932Encoder.encode("\u1341")}).to.throw(Error, "EncodingError U+1341");
expect(() => {ms932Encoder.encode("\u1342")}).to.throw(Error, "EncodingError U+1342");
expect(() => {ms932Encoder.encode("\u1343")}).to.throw(Error, "EncodingError U+1343");
expect(() => {ms932Encoder.encode("\u1344")}).to.throw(Error, "EncodingError U+1344");
expect(() => {ms932Encoder.encode("\u1345")}).to.throw(Error, "EncodingError U+1345");
expect(() => {ms932Encoder.encode("\u1346")}).to.throw(Error, "EncodingError U+1346");
expect(() => {ms932Encoder.encode("\u1347")}).to.throw(Error, "EncodingError U+1347");
expect(() => {ms932Encoder.encode("\u1348")}).to.throw(Error, "EncodingError U+1348");
expect(() => {ms932Encoder.encode("\u1349")}).to.throw(Error, "EncodingError U+1349");
expect(() => {ms932Encoder.encode("\u134A")}).to.throw(Error, "EncodingError U+134A");
expect(() => {ms932Encoder.encode("\u134B")}).to.throw(Error, "EncodingError U+134B");
expect(() => {ms932Encoder.encode("\u134C")}).to.throw(Error, "EncodingError U+134C");
expect(() => {ms932Encoder.encode("\u134D")}).to.throw(Error, "EncodingError U+134D");
expect(() => {ms932Encoder.encode("\u134E")}).to.throw(Error, "EncodingError U+134E");
expect(() => {ms932Encoder.encode("\u134F")}).to.throw(Error, "EncodingError U+134F");
expect(() => {ms932Encoder.encode("\u1350")}).to.throw(Error, "EncodingError U+1350");
expect(() => {ms932Encoder.encode("\u1351")}).to.throw(Error, "EncodingError U+1351");
expect(() => {ms932Encoder.encode("\u1352")}).to.throw(Error, "EncodingError U+1352");
expect(() => {ms932Encoder.encode("\u1353")}).to.throw(Error, "EncodingError U+1353");
expect(() => {ms932Encoder.encode("\u1354")}).to.throw(Error, "EncodingError U+1354");
expect(() => {ms932Encoder.encode("\u1355")}).to.throw(Error, "EncodingError U+1355");
expect(() => {ms932Encoder.encode("\u1356")}).to.throw(Error, "EncodingError U+1356");
expect(() => {ms932Encoder.encode("\u1357")}).to.throw(Error, "EncodingError U+1357");
expect(() => {ms932Encoder.encode("\u1358")}).to.throw(Error, "EncodingError U+1358");
expect(() => {ms932Encoder.encode("\u1359")}).to.throw(Error, "EncodingError U+1359");
expect(() => {ms932Encoder.encode("\u135A")}).to.throw(Error, "EncodingError U+135A");
expect(() => {ms932Encoder.encode("\u135B")}).to.throw(Error, "EncodingError U+135B");
expect(() => {ms932Encoder.encode("\u135C")}).to.throw(Error, "EncodingError U+135C");
expect(() => {ms932Encoder.encode("\u135D")}).to.throw(Error, "EncodingError U+135D");
expect(() => {ms932Encoder.encode("\u135E")}).to.throw(Error, "EncodingError U+135E");
expect(() => {ms932Encoder.encode("\u135F")}).to.throw(Error, "EncodingError U+135F");
expect(() => {ms932Encoder.encode("\u1360")}).to.throw(Error, "EncodingError U+1360");
expect(() => {ms932Encoder.encode("\u1361")}).to.throw(Error, "EncodingError U+1361");
expect(() => {ms932Encoder.encode("\u1362")}).to.throw(Error, "EncodingError U+1362");
expect(() => {ms932Encoder.encode("\u1363")}).to.throw(Error, "EncodingError U+1363");
expect(() => {ms932Encoder.encode("\u1364")}).to.throw(Error, "EncodingError U+1364");
expect(() => {ms932Encoder.encode("\u1365")}).to.throw(Error, "EncodingError U+1365");
expect(() => {ms932Encoder.encode("\u1366")}).to.throw(Error, "EncodingError U+1366");
expect(() => {ms932Encoder.encode("\u1367")}).to.throw(Error, "EncodingError U+1367");
expect(() => {ms932Encoder.encode("\u1368")}).to.throw(Error, "EncodingError U+1368");
expect(() => {ms932Encoder.encode("\u1369")}).to.throw(Error, "EncodingError U+1369");
expect(() => {ms932Encoder.encode("\u136A")}).to.throw(Error, "EncodingError U+136A");
expect(() => {ms932Encoder.encode("\u136B")}).to.throw(Error, "EncodingError U+136B");
expect(() => {ms932Encoder.encode("\u136C")}).to.throw(Error, "EncodingError U+136C");
expect(() => {ms932Encoder.encode("\u136D")}).to.throw(Error, "EncodingError U+136D");
expect(() => {ms932Encoder.encode("\u136E")}).to.throw(Error, "EncodingError U+136E");
expect(() => {ms932Encoder.encode("\u136F")}).to.throw(Error, "EncodingError U+136F");
expect(() => {ms932Encoder.encode("\u1370")}).to.throw(Error, "EncodingError U+1370");
expect(() => {ms932Encoder.encode("\u1371")}).to.throw(Error, "EncodingError U+1371");
expect(() => {ms932Encoder.encode("\u1372")}).to.throw(Error, "EncodingError U+1372");
expect(() => {ms932Encoder.encode("\u1373")}).to.throw(Error, "EncodingError U+1373");
expect(() => {ms932Encoder.encode("\u1374")}).to.throw(Error, "EncodingError U+1374");
expect(() => {ms932Encoder.encode("\u1375")}).to.throw(Error, "EncodingError U+1375");
expect(() => {ms932Encoder.encode("\u1376")}).to.throw(Error, "EncodingError U+1376");
expect(() => {ms932Encoder.encode("\u1377")}).to.throw(Error, "EncodingError U+1377");
expect(() => {ms932Encoder.encode("\u1378")}).to.throw(Error, "EncodingError U+1378");
expect(() => {ms932Encoder.encode("\u1379")}).to.throw(Error, "EncodingError U+1379");
expect(() => {ms932Encoder.encode("\u137A")}).to.throw(Error, "EncodingError U+137A");
expect(() => {ms932Encoder.encode("\u137B")}).to.throw(Error, "EncodingError U+137B");
expect(() => {ms932Encoder.encode("\u137C")}).to.throw(Error, "EncodingError U+137C");
expect(() => {ms932Encoder.encode("\u137D")}).to.throw(Error, "EncodingError U+137D");
expect(() => {ms932Encoder.encode("\u137E")}).to.throw(Error, "EncodingError U+137E");
expect(() => {ms932Encoder.encode("\u137F")}).to.throw(Error, "EncodingError U+137F");
expect(() => {ms932Encoder.encode("\u1380")}).to.throw(Error, "EncodingError U+1380");
expect(() => {ms932Encoder.encode("\u1381")}).to.throw(Error, "EncodingError U+1381");
expect(() => {ms932Encoder.encode("\u1382")}).to.throw(Error, "EncodingError U+1382");
expect(() => {ms932Encoder.encode("\u1383")}).to.throw(Error, "EncodingError U+1383");
expect(() => {ms932Encoder.encode("\u1384")}).to.throw(Error, "EncodingError U+1384");
expect(() => {ms932Encoder.encode("\u1385")}).to.throw(Error, "EncodingError U+1385");
expect(() => {ms932Encoder.encode("\u1386")}).to.throw(Error, "EncodingError U+1386");
expect(() => {ms932Encoder.encode("\u1387")}).to.throw(Error, "EncodingError U+1387");
expect(() => {ms932Encoder.encode("\u1388")}).to.throw(Error, "EncodingError U+1388");
expect(() => {ms932Encoder.encode("\u1389")}).to.throw(Error, "EncodingError U+1389");
expect(() => {ms932Encoder.encode("\u138A")}).to.throw(Error, "EncodingError U+138A");
expect(() => {ms932Encoder.encode("\u138B")}).to.throw(Error, "EncodingError U+138B");
expect(() => {ms932Encoder.encode("\u138C")}).to.throw(Error, "EncodingError U+138C");
expect(() => {ms932Encoder.encode("\u138D")}).to.throw(Error, "EncodingError U+138D");
expect(() => {ms932Encoder.encode("\u138E")}).to.throw(Error, "EncodingError U+138E");
expect(() => {ms932Encoder.encode("\u138F")}).to.throw(Error, "EncodingError U+138F");
expect(() => {ms932Encoder.encode("\u1390")}).to.throw(Error, "EncodingError U+1390");
expect(() => {ms932Encoder.encode("\u1391")}).to.throw(Error, "EncodingError U+1391");
expect(() => {ms932Encoder.encode("\u1392")}).to.throw(Error, "EncodingError U+1392");
expect(() => {ms932Encoder.encode("\u1393")}).to.throw(Error, "EncodingError U+1393");
expect(() => {ms932Encoder.encode("\u1394")}).to.throw(Error, "EncodingError U+1394");
expect(() => {ms932Encoder.encode("\u1395")}).to.throw(Error, "EncodingError U+1395");
expect(() => {ms932Encoder.encode("\u1396")}).to.throw(Error, "EncodingError U+1396");
expect(() => {ms932Encoder.encode("\u1397")}).to.throw(Error, "EncodingError U+1397");
expect(() => {ms932Encoder.encode("\u1398")}).to.throw(Error, "EncodingError U+1398");
expect(() => {ms932Encoder.encode("\u1399")}).to.throw(Error, "EncodingError U+1399");
expect(() => {ms932Encoder.encode("\u139A")}).to.throw(Error, "EncodingError U+139A");
expect(() => {ms932Encoder.encode("\u139B")}).to.throw(Error, "EncodingError U+139B");
expect(() => {ms932Encoder.encode("\u139C")}).to.throw(Error, "EncodingError U+139C");
expect(() => {ms932Encoder.encode("\u139D")}).to.throw(Error, "EncodingError U+139D");
expect(() => {ms932Encoder.encode("\u139E")}).to.throw(Error, "EncodingError U+139E");
expect(() => {ms932Encoder.encode("\u139F")}).to.throw(Error, "EncodingError U+139F");
expect(() => {ms932Encoder.encode("\u13A0")}).to.throw(Error, "EncodingError U+13A0");
expect(() => {ms932Encoder.encode("\u13A1")}).to.throw(Error, "EncodingError U+13A1");
expect(() => {ms932Encoder.encode("\u13A2")}).to.throw(Error, "EncodingError U+13A2");
expect(() => {ms932Encoder.encode("\u13A3")}).to.throw(Error, "EncodingError U+13A3");
expect(() => {ms932Encoder.encode("\u13A4")}).to.throw(Error, "EncodingError U+13A4");
expect(() => {ms932Encoder.encode("\u13A5")}).to.throw(Error, "EncodingError U+13A5");
expect(() => {ms932Encoder.encode("\u13A6")}).to.throw(Error, "EncodingError U+13A6");
expect(() => {ms932Encoder.encode("\u13A7")}).to.throw(Error, "EncodingError U+13A7");
expect(() => {ms932Encoder.encode("\u13A8")}).to.throw(Error, "EncodingError U+13A8");
expect(() => {ms932Encoder.encode("\u13A9")}).to.throw(Error, "EncodingError U+13A9");
expect(() => {ms932Encoder.encode("\u13AA")}).to.throw(Error, "EncodingError U+13AA");
expect(() => {ms932Encoder.encode("\u13AB")}).to.throw(Error, "EncodingError U+13AB");
expect(() => {ms932Encoder.encode("\u13AC")}).to.throw(Error, "EncodingError U+13AC");
expect(() => {ms932Encoder.encode("\u13AD")}).to.throw(Error, "EncodingError U+13AD");
expect(() => {ms932Encoder.encode("\u13AE")}).to.throw(Error, "EncodingError U+13AE");
expect(() => {ms932Encoder.encode("\u13AF")}).to.throw(Error, "EncodingError U+13AF");
expect(() => {ms932Encoder.encode("\u13B0")}).to.throw(Error, "EncodingError U+13B0");
expect(() => {ms932Encoder.encode("\u13B1")}).to.throw(Error, "EncodingError U+13B1");
expect(() => {ms932Encoder.encode("\u13B2")}).to.throw(Error, "EncodingError U+13B2");
expect(() => {ms932Encoder.encode("\u13B3")}).to.throw(Error, "EncodingError U+13B3");
expect(() => {ms932Encoder.encode("\u13B4")}).to.throw(Error, "EncodingError U+13B4");
expect(() => {ms932Encoder.encode("\u13B5")}).to.throw(Error, "EncodingError U+13B5");
expect(() => {ms932Encoder.encode("\u13B6")}).to.throw(Error, "EncodingError U+13B6");
expect(() => {ms932Encoder.encode("\u13B7")}).to.throw(Error, "EncodingError U+13B7");
expect(() => {ms932Encoder.encode("\u13B8")}).to.throw(Error, "EncodingError U+13B8");
expect(() => {ms932Encoder.encode("\u13B9")}).to.throw(Error, "EncodingError U+13B9");
expect(() => {ms932Encoder.encode("\u13BA")}).to.throw(Error, "EncodingError U+13BA");
expect(() => {ms932Encoder.encode("\u13BB")}).to.throw(Error, "EncodingError U+13BB");
expect(() => {ms932Encoder.encode("\u13BC")}).to.throw(Error, "EncodingError U+13BC");
expect(() => {ms932Encoder.encode("\u13BD")}).to.throw(Error, "EncodingError U+13BD");
expect(() => {ms932Encoder.encode("\u13BE")}).to.throw(Error, "EncodingError U+13BE");
expect(() => {ms932Encoder.encode("\u13BF")}).to.throw(Error, "EncodingError U+13BF");
expect(() => {ms932Encoder.encode("\u13C0")}).to.throw(Error, "EncodingError U+13C0");
expect(() => {ms932Encoder.encode("\u13C1")}).to.throw(Error, "EncodingError U+13C1");
expect(() => {ms932Encoder.encode("\u13C2")}).to.throw(Error, "EncodingError U+13C2");
expect(() => {ms932Encoder.encode("\u13C3")}).to.throw(Error, "EncodingError U+13C3");
expect(() => {ms932Encoder.encode("\u13C4")}).to.throw(Error, "EncodingError U+13C4");
expect(() => {ms932Encoder.encode("\u13C5")}).to.throw(Error, "EncodingError U+13C5");
expect(() => {ms932Encoder.encode("\u13C6")}).to.throw(Error, "EncodingError U+13C6");
expect(() => {ms932Encoder.encode("\u13C7")}).to.throw(Error, "EncodingError U+13C7");
expect(() => {ms932Encoder.encode("\u13C8")}).to.throw(Error, "EncodingError U+13C8");
expect(() => {ms932Encoder.encode("\u13C9")}).to.throw(Error, "EncodingError U+13C9");
expect(() => {ms932Encoder.encode("\u13CA")}).to.throw(Error, "EncodingError U+13CA");
expect(() => {ms932Encoder.encode("\u13CB")}).to.throw(Error, "EncodingError U+13CB");
expect(() => {ms932Encoder.encode("\u13CC")}).to.throw(Error, "EncodingError U+13CC");
expect(() => {ms932Encoder.encode("\u13CD")}).to.throw(Error, "EncodingError U+13CD");
expect(() => {ms932Encoder.encode("\u13CE")}).to.throw(Error, "EncodingError U+13CE");
expect(() => {ms932Encoder.encode("\u13CF")}).to.throw(Error, "EncodingError U+13CF");
expect(() => {ms932Encoder.encode("\u13D0")}).to.throw(Error, "EncodingError U+13D0");
expect(() => {ms932Encoder.encode("\u13D1")}).to.throw(Error, "EncodingError U+13D1");
expect(() => {ms932Encoder.encode("\u13D2")}).to.throw(Error, "EncodingError U+13D2");
expect(() => {ms932Encoder.encode("\u13D3")}).to.throw(Error, "EncodingError U+13D3");
expect(() => {ms932Encoder.encode("\u13D4")}).to.throw(Error, "EncodingError U+13D4");
expect(() => {ms932Encoder.encode("\u13D5")}).to.throw(Error, "EncodingError U+13D5");
expect(() => {ms932Encoder.encode("\u13D6")}).to.throw(Error, "EncodingError U+13D6");
expect(() => {ms932Encoder.encode("\u13D7")}).to.throw(Error, "EncodingError U+13D7");
expect(() => {ms932Encoder.encode("\u13D8")}).to.throw(Error, "EncodingError U+13D8");
expect(() => {ms932Encoder.encode("\u13D9")}).to.throw(Error, "EncodingError U+13D9");
expect(() => {ms932Encoder.encode("\u13DA")}).to.throw(Error, "EncodingError U+13DA");
expect(() => {ms932Encoder.encode("\u13DB")}).to.throw(Error, "EncodingError U+13DB");
expect(() => {ms932Encoder.encode("\u13DC")}).to.throw(Error, "EncodingError U+13DC");
expect(() => {ms932Encoder.encode("\u13DD")}).to.throw(Error, "EncodingError U+13DD");
expect(() => {ms932Encoder.encode("\u13DE")}).to.throw(Error, "EncodingError U+13DE");
expect(() => {ms932Encoder.encode("\u13DF")}).to.throw(Error, "EncodingError U+13DF");
expect(() => {ms932Encoder.encode("\u13E0")}).to.throw(Error, "EncodingError U+13E0");
expect(() => {ms932Encoder.encode("\u13E1")}).to.throw(Error, "EncodingError U+13E1");
expect(() => {ms932Encoder.encode("\u13E2")}).to.throw(Error, "EncodingError U+13E2");
expect(() => {ms932Encoder.encode("\u13E3")}).to.throw(Error, "EncodingError U+13E3");
expect(() => {ms932Encoder.encode("\u13E4")}).to.throw(Error, "EncodingError U+13E4");
expect(() => {ms932Encoder.encode("\u13E5")}).to.throw(Error, "EncodingError U+13E5");
expect(() => {ms932Encoder.encode("\u13E6")}).to.throw(Error, "EncodingError U+13E6");
expect(() => {ms932Encoder.encode("\u13E7")}).to.throw(Error, "EncodingError U+13E7");
expect(() => {ms932Encoder.encode("\u13E8")}).to.throw(Error, "EncodingError U+13E8");
expect(() => {ms932Encoder.encode("\u13E9")}).to.throw(Error, "EncodingError U+13E9");
expect(() => {ms932Encoder.encode("\u13EA")}).to.throw(Error, "EncodingError U+13EA");
expect(() => {ms932Encoder.encode("\u13EB")}).to.throw(Error, "EncodingError U+13EB");
expect(() => {ms932Encoder.encode("\u13EC")}).to.throw(Error, "EncodingError U+13EC");
expect(() => {ms932Encoder.encode("\u13ED")}).to.throw(Error, "EncodingError U+13ED");
expect(() => {ms932Encoder.encode("\u13EE")}).to.throw(Error, "EncodingError U+13EE");
expect(() => {ms932Encoder.encode("\u13EF")}).to.throw(Error, "EncodingError U+13EF");
expect(() => {ms932Encoder.encode("\u13F0")}).to.throw(Error, "EncodingError U+13F0");
expect(() => {ms932Encoder.encode("\u13F1")}).to.throw(Error, "EncodingError U+13F1");
expect(() => {ms932Encoder.encode("\u13F2")}).to.throw(Error, "EncodingError U+13F2");
expect(() => {ms932Encoder.encode("\u13F3")}).to.throw(Error, "EncodingError U+13F3");
expect(() => {ms932Encoder.encode("\u13F4")}).to.throw(Error, "EncodingError U+13F4");
expect(() => {ms932Encoder.encode("\u13F5")}).to.throw(Error, "EncodingError U+13F5");
expect(() => {ms932Encoder.encode("\u13F6")}).to.throw(Error, "EncodingError U+13F6");
expect(() => {ms932Encoder.encode("\u13F7")}).to.throw(Error, "EncodingError U+13F7");
expect(() => {ms932Encoder.encode("\u13F8")}).to.throw(Error, "EncodingError U+13F8");
expect(() => {ms932Encoder.encode("\u13F9")}).to.throw(Error, "EncodingError U+13F9");
expect(() => {ms932Encoder.encode("\u13FA")}).to.throw(Error, "EncodingError U+13FA");
expect(() => {ms932Encoder.encode("\u13FB")}).to.throw(Error, "EncodingError U+13FB");
expect(() => {ms932Encoder.encode("\u13FC")}).to.throw(Error, "EncodingError U+13FC");
expect(() => {ms932Encoder.encode("\u13FD")}).to.throw(Error, "EncodingError U+13FD");
expect(() => {ms932Encoder.encode("\u13FE")}).to.throw(Error, "EncodingError U+13FE");
expect(() => {ms932Encoder.encode("\u13FF")}).to.throw(Error, "EncodingError U+13FF");
expect(() => {ms932Encoder.encode("\u1400")}).to.throw(Error, "EncodingError U+1400");
expect(() => {ms932Encoder.encode("\u1401")}).to.throw(Error, "EncodingError U+1401");
expect(() => {ms932Encoder.encode("\u1402")}).to.throw(Error, "EncodingError U+1402");
expect(() => {ms932Encoder.encode("\u1403")}).to.throw(Error, "EncodingError U+1403");
expect(() => {ms932Encoder.encode("\u1404")}).to.throw(Error, "EncodingError U+1404");
expect(() => {ms932Encoder.encode("\u1405")}).to.throw(Error, "EncodingError U+1405");
expect(() => {ms932Encoder.encode("\u1406")}).to.throw(Error, "EncodingError U+1406");
expect(() => {ms932Encoder.encode("\u1407")}).to.throw(Error, "EncodingError U+1407");
expect(() => {ms932Encoder.encode("\u1408")}).to.throw(Error, "EncodingError U+1408");
expect(() => {ms932Encoder.encode("\u1409")}).to.throw(Error, "EncodingError U+1409");
expect(() => {ms932Encoder.encode("\u140A")}).to.throw(Error, "EncodingError U+140A");
expect(() => {ms932Encoder.encode("\u140B")}).to.throw(Error, "EncodingError U+140B");
expect(() => {ms932Encoder.encode("\u140C")}).to.throw(Error, "EncodingError U+140C");
expect(() => {ms932Encoder.encode("\u140D")}).to.throw(Error, "EncodingError U+140D");
expect(() => {ms932Encoder.encode("\u140E")}).to.throw(Error, "EncodingError U+140E");
expect(() => {ms932Encoder.encode("\u140F")}).to.throw(Error, "EncodingError U+140F");
expect(() => {ms932Encoder.encode("\u1410")}).to.throw(Error, "EncodingError U+1410");
expect(() => {ms932Encoder.encode("\u1411")}).to.throw(Error, "EncodingError U+1411");
expect(() => {ms932Encoder.encode("\u1412")}).to.throw(Error, "EncodingError U+1412");
expect(() => {ms932Encoder.encode("\u1413")}).to.throw(Error, "EncodingError U+1413");
expect(() => {ms932Encoder.encode("\u1414")}).to.throw(Error, "EncodingError U+1414");
expect(() => {ms932Encoder.encode("\u1415")}).to.throw(Error, "EncodingError U+1415");
expect(() => {ms932Encoder.encode("\u1416")}).to.throw(Error, "EncodingError U+1416");
expect(() => {ms932Encoder.encode("\u1417")}).to.throw(Error, "EncodingError U+1417");
expect(() => {ms932Encoder.encode("\u1418")}).to.throw(Error, "EncodingError U+1418");
expect(() => {ms932Encoder.encode("\u1419")}).to.throw(Error, "EncodingError U+1419");
expect(() => {ms932Encoder.encode("\u141A")}).to.throw(Error, "EncodingError U+141A");
expect(() => {ms932Encoder.encode("\u141B")}).to.throw(Error, "EncodingError U+141B");
expect(() => {ms932Encoder.encode("\u141C")}).to.throw(Error, "EncodingError U+141C");
expect(() => {ms932Encoder.encode("\u141D")}).to.throw(Error, "EncodingError U+141D");
expect(() => {ms932Encoder.encode("\u141E")}).to.throw(Error, "EncodingError U+141E");
expect(() => {ms932Encoder.encode("\u141F")}).to.throw(Error, "EncodingError U+141F");
expect(() => {ms932Encoder.encode("\u1420")}).to.throw(Error, "EncodingError U+1420");
expect(() => {ms932Encoder.encode("\u1421")}).to.throw(Error, "EncodingError U+1421");
expect(() => {ms932Encoder.encode("\u1422")}).to.throw(Error, "EncodingError U+1422");
expect(() => {ms932Encoder.encode("\u1423")}).to.throw(Error, "EncodingError U+1423");
expect(() => {ms932Encoder.encode("\u1424")}).to.throw(Error, "EncodingError U+1424");
expect(() => {ms932Encoder.encode("\u1425")}).to.throw(Error, "EncodingError U+1425");
expect(() => {ms932Encoder.encode("\u1426")}).to.throw(Error, "EncodingError U+1426");
expect(() => {ms932Encoder.encode("\u1427")}).to.throw(Error, "EncodingError U+1427");
expect(() => {ms932Encoder.encode("\u1428")}).to.throw(Error, "EncodingError U+1428");
expect(() => {ms932Encoder.encode("\u1429")}).to.throw(Error, "EncodingError U+1429");
expect(() => {ms932Encoder.encode("\u142A")}).to.throw(Error, "EncodingError U+142A");
expect(() => {ms932Encoder.encode("\u142B")}).to.throw(Error, "EncodingError U+142B");
expect(() => {ms932Encoder.encode("\u142C")}).to.throw(Error, "EncodingError U+142C");
expect(() => {ms932Encoder.encode("\u142D")}).to.throw(Error, "EncodingError U+142D");
expect(() => {ms932Encoder.encode("\u142E")}).to.throw(Error, "EncodingError U+142E");
expect(() => {ms932Encoder.encode("\u142F")}).to.throw(Error, "EncodingError U+142F");
expect(() => {ms932Encoder.encode("\u1430")}).to.throw(Error, "EncodingError U+1430");
expect(() => {ms932Encoder.encode("\u1431")}).to.throw(Error, "EncodingError U+1431");
expect(() => {ms932Encoder.encode("\u1432")}).to.throw(Error, "EncodingError U+1432");
expect(() => {ms932Encoder.encode("\u1433")}).to.throw(Error, "EncodingError U+1433");
expect(() => {ms932Encoder.encode("\u1434")}).to.throw(Error, "EncodingError U+1434");
expect(() => {ms932Encoder.encode("\u1435")}).to.throw(Error, "EncodingError U+1435");
expect(() => {ms932Encoder.encode("\u1436")}).to.throw(Error, "EncodingError U+1436");
expect(() => {ms932Encoder.encode("\u1437")}).to.throw(Error, "EncodingError U+1437");
expect(() => {ms932Encoder.encode("\u1438")}).to.throw(Error, "EncodingError U+1438");
expect(() => {ms932Encoder.encode("\u1439")}).to.throw(Error, "EncodingError U+1439");
expect(() => {ms932Encoder.encode("\u143A")}).to.throw(Error, "EncodingError U+143A");
expect(() => {ms932Encoder.encode("\u143B")}).to.throw(Error, "EncodingError U+143B");
expect(() => {ms932Encoder.encode("\u143C")}).to.throw(Error, "EncodingError U+143C");
expect(() => {ms932Encoder.encode("\u143D")}).to.throw(Error, "EncodingError U+143D");
expect(() => {ms932Encoder.encode("\u143E")}).to.throw(Error, "EncodingError U+143E");
expect(() => {ms932Encoder.encode("\u143F")}).to.throw(Error, "EncodingError U+143F");
expect(() => {ms932Encoder.encode("\u1440")}).to.throw(Error, "EncodingError U+1440");
expect(() => {ms932Encoder.encode("\u1441")}).to.throw(Error, "EncodingError U+1441");
expect(() => {ms932Encoder.encode("\u1442")}).to.throw(Error, "EncodingError U+1442");
expect(() => {ms932Encoder.encode("\u1443")}).to.throw(Error, "EncodingError U+1443");
expect(() => {ms932Encoder.encode("\u1444")}).to.throw(Error, "EncodingError U+1444");
expect(() => {ms932Encoder.encode("\u1445")}).to.throw(Error, "EncodingError U+1445");
expect(() => {ms932Encoder.encode("\u1446")}).to.throw(Error, "EncodingError U+1446");
expect(() => {ms932Encoder.encode("\u1447")}).to.throw(Error, "EncodingError U+1447");
expect(() => {ms932Encoder.encode("\u1448")}).to.throw(Error, "EncodingError U+1448");
expect(() => {ms932Encoder.encode("\u1449")}).to.throw(Error, "EncodingError U+1449");
expect(() => {ms932Encoder.encode("\u144A")}).to.throw(Error, "EncodingError U+144A");
expect(() => {ms932Encoder.encode("\u144B")}).to.throw(Error, "EncodingError U+144B");
expect(() => {ms932Encoder.encode("\u144C")}).to.throw(Error, "EncodingError U+144C");
expect(() => {ms932Encoder.encode("\u144D")}).to.throw(Error, "EncodingError U+144D");
expect(() => {ms932Encoder.encode("\u144E")}).to.throw(Error, "EncodingError U+144E");
expect(() => {ms932Encoder.encode("\u144F")}).to.throw(Error, "EncodingError U+144F");
expect(() => {ms932Encoder.encode("\u1450")}).to.throw(Error, "EncodingError U+1450");
expect(() => {ms932Encoder.encode("\u1451")}).to.throw(Error, "EncodingError U+1451");
expect(() => {ms932Encoder.encode("\u1452")}).to.throw(Error, "EncodingError U+1452");
expect(() => {ms932Encoder.encode("\u1453")}).to.throw(Error, "EncodingError U+1453");
expect(() => {ms932Encoder.encode("\u1454")}).to.throw(Error, "EncodingError U+1454");
expect(() => {ms932Encoder.encode("\u1455")}).to.throw(Error, "EncodingError U+1455");
expect(() => {ms932Encoder.encode("\u1456")}).to.throw(Error, "EncodingError U+1456");
expect(() => {ms932Encoder.encode("\u1457")}).to.throw(Error, "EncodingError U+1457");
expect(() => {ms932Encoder.encode("\u1458")}).to.throw(Error, "EncodingError U+1458");
expect(() => {ms932Encoder.encode("\u1459")}).to.throw(Error, "EncodingError U+1459");
expect(() => {ms932Encoder.encode("\u145A")}).to.throw(Error, "EncodingError U+145A");
expect(() => {ms932Encoder.encode("\u145B")}).to.throw(Error, "EncodingError U+145B");
expect(() => {ms932Encoder.encode("\u145C")}).to.throw(Error, "EncodingError U+145C");
expect(() => {ms932Encoder.encode("\u145D")}).to.throw(Error, "EncodingError U+145D");
expect(() => {ms932Encoder.encode("\u145E")}).to.throw(Error, "EncodingError U+145E");
expect(() => {ms932Encoder.encode("\u145F")}).to.throw(Error, "EncodingError U+145F");
expect(() => {ms932Encoder.encode("\u1460")}).to.throw(Error, "EncodingError U+1460");
expect(() => {ms932Encoder.encode("\u1461")}).to.throw(Error, "EncodingError U+1461");
expect(() => {ms932Encoder.encode("\u1462")}).to.throw(Error, "EncodingError U+1462");
expect(() => {ms932Encoder.encode("\u1463")}).to.throw(Error, "EncodingError U+1463");
expect(() => {ms932Encoder.encode("\u1464")}).to.throw(Error, "EncodingError U+1464");
expect(() => {ms932Encoder.encode("\u1465")}).to.throw(Error, "EncodingError U+1465");
expect(() => {ms932Encoder.encode("\u1466")}).to.throw(Error, "EncodingError U+1466");
expect(() => {ms932Encoder.encode("\u1467")}).to.throw(Error, "EncodingError U+1467");
expect(() => {ms932Encoder.encode("\u1468")}).to.throw(Error, "EncodingError U+1468");
expect(() => {ms932Encoder.encode("\u1469")}).to.throw(Error, "EncodingError U+1469");
expect(() => {ms932Encoder.encode("\u146A")}).to.throw(Error, "EncodingError U+146A");
expect(() => {ms932Encoder.encode("\u146B")}).to.throw(Error, "EncodingError U+146B");
expect(() => {ms932Encoder.encode("\u146C")}).to.throw(Error, "EncodingError U+146C");
expect(() => {ms932Encoder.encode("\u146D")}).to.throw(Error, "EncodingError U+146D");
expect(() => {ms932Encoder.encode("\u146E")}).to.throw(Error, "EncodingError U+146E");
expect(() => {ms932Encoder.encode("\u146F")}).to.throw(Error, "EncodingError U+146F");
expect(() => {ms932Encoder.encode("\u1470")}).to.throw(Error, "EncodingError U+1470");
expect(() => {ms932Encoder.encode("\u1471")}).to.throw(Error, "EncodingError U+1471");
expect(() => {ms932Encoder.encode("\u1472")}).to.throw(Error, "EncodingError U+1472");
expect(() => {ms932Encoder.encode("\u1473")}).to.throw(Error, "EncodingError U+1473");
expect(() => {ms932Encoder.encode("\u1474")}).to.throw(Error, "EncodingError U+1474");
expect(() => {ms932Encoder.encode("\u1475")}).to.throw(Error, "EncodingError U+1475");
expect(() => {ms932Encoder.encode("\u1476")}).to.throw(Error, "EncodingError U+1476");
expect(() => {ms932Encoder.encode("\u1477")}).to.throw(Error, "EncodingError U+1477");
expect(() => {ms932Encoder.encode("\u1478")}).to.throw(Error, "EncodingError U+1478");
expect(() => {ms932Encoder.encode("\u1479")}).to.throw(Error, "EncodingError U+1479");
expect(() => {ms932Encoder.encode("\u147A")}).to.throw(Error, "EncodingError U+147A");
expect(() => {ms932Encoder.encode("\u147B")}).to.throw(Error, "EncodingError U+147B");
expect(() => {ms932Encoder.encode("\u147C")}).to.throw(Error, "EncodingError U+147C");
expect(() => {ms932Encoder.encode("\u147D")}).to.throw(Error, "EncodingError U+147D");
expect(() => {ms932Encoder.encode("\u147E")}).to.throw(Error, "EncodingError U+147E");
expect(() => {ms932Encoder.encode("\u147F")}).to.throw(Error, "EncodingError U+147F");
expect(() => {ms932Encoder.encode("\u1480")}).to.throw(Error, "EncodingError U+1480");
expect(() => {ms932Encoder.encode("\u1481")}).to.throw(Error, "EncodingError U+1481");
expect(() => {ms932Encoder.encode("\u1482")}).to.throw(Error, "EncodingError U+1482");
expect(() => {ms932Encoder.encode("\u1483")}).to.throw(Error, "EncodingError U+1483");
expect(() => {ms932Encoder.encode("\u1484")}).to.throw(Error, "EncodingError U+1484");
expect(() => {ms932Encoder.encode("\u1485")}).to.throw(Error, "EncodingError U+1485");
expect(() => {ms932Encoder.encode("\u1486")}).to.throw(Error, "EncodingError U+1486");
expect(() => {ms932Encoder.encode("\u1487")}).to.throw(Error, "EncodingError U+1487");
expect(() => {ms932Encoder.encode("\u1488")}).to.throw(Error, "EncodingError U+1488");
expect(() => {ms932Encoder.encode("\u1489")}).to.throw(Error, "EncodingError U+1489");
expect(() => {ms932Encoder.encode("\u148A")}).to.throw(Error, "EncodingError U+148A");
expect(() => {ms932Encoder.encode("\u148B")}).to.throw(Error, "EncodingError U+148B");
expect(() => {ms932Encoder.encode("\u148C")}).to.throw(Error, "EncodingError U+148C");
expect(() => {ms932Encoder.encode("\u148D")}).to.throw(Error, "EncodingError U+148D");
expect(() => {ms932Encoder.encode("\u148E")}).to.throw(Error, "EncodingError U+148E");
expect(() => {ms932Encoder.encode("\u148F")}).to.throw(Error, "EncodingError U+148F");
expect(() => {ms932Encoder.encode("\u1490")}).to.throw(Error, "EncodingError U+1490");
expect(() => {ms932Encoder.encode("\u1491")}).to.throw(Error, "EncodingError U+1491");
expect(() => {ms932Encoder.encode("\u1492")}).to.throw(Error, "EncodingError U+1492");
expect(() => {ms932Encoder.encode("\u1493")}).to.throw(Error, "EncodingError U+1493");
expect(() => {ms932Encoder.encode("\u1494")}).to.throw(Error, "EncodingError U+1494");
expect(() => {ms932Encoder.encode("\u1495")}).to.throw(Error, "EncodingError U+1495");
expect(() => {ms932Encoder.encode("\u1496")}).to.throw(Error, "EncodingError U+1496");
expect(() => {ms932Encoder.encode("\u1497")}).to.throw(Error, "EncodingError U+1497");
expect(() => {ms932Encoder.encode("\u1498")}).to.throw(Error, "EncodingError U+1498");
expect(() => {ms932Encoder.encode("\u1499")}).to.throw(Error, "EncodingError U+1499");
expect(() => {ms932Encoder.encode("\u149A")}).to.throw(Error, "EncodingError U+149A");
expect(() => {ms932Encoder.encode("\u149B")}).to.throw(Error, "EncodingError U+149B");
expect(() => {ms932Encoder.encode("\u149C")}).to.throw(Error, "EncodingError U+149C");
expect(() => {ms932Encoder.encode("\u149D")}).to.throw(Error, "EncodingError U+149D");
expect(() => {ms932Encoder.encode("\u149E")}).to.throw(Error, "EncodingError U+149E");
expect(() => {ms932Encoder.encode("\u149F")}).to.throw(Error, "EncodingError U+149F");
expect(() => {ms932Encoder.encode("\u14A0")}).to.throw(Error, "EncodingError U+14A0");
expect(() => {ms932Encoder.encode("\u14A1")}).to.throw(Error, "EncodingError U+14A1");
expect(() => {ms932Encoder.encode("\u14A2")}).to.throw(Error, "EncodingError U+14A2");
expect(() => {ms932Encoder.encode("\u14A3")}).to.throw(Error, "EncodingError U+14A3");
expect(() => {ms932Encoder.encode("\u14A4")}).to.throw(Error, "EncodingError U+14A4");
expect(() => {ms932Encoder.encode("\u14A5")}).to.throw(Error, "EncodingError U+14A5");
expect(() => {ms932Encoder.encode("\u14A6")}).to.throw(Error, "EncodingError U+14A6");
expect(() => {ms932Encoder.encode("\u14A7")}).to.throw(Error, "EncodingError U+14A7");
expect(() => {ms932Encoder.encode("\u14A8")}).to.throw(Error, "EncodingError U+14A8");
expect(() => {ms932Encoder.encode("\u14A9")}).to.throw(Error, "EncodingError U+14A9");
expect(() => {ms932Encoder.encode("\u14AA")}).to.throw(Error, "EncodingError U+14AA");
expect(() => {ms932Encoder.encode("\u14AB")}).to.throw(Error, "EncodingError U+14AB");
expect(() => {ms932Encoder.encode("\u14AC")}).to.throw(Error, "EncodingError U+14AC");
expect(() => {ms932Encoder.encode("\u14AD")}).to.throw(Error, "EncodingError U+14AD");
expect(() => {ms932Encoder.encode("\u14AE")}).to.throw(Error, "EncodingError U+14AE");
expect(() => {ms932Encoder.encode("\u14AF")}).to.throw(Error, "EncodingError U+14AF");
expect(() => {ms932Encoder.encode("\u14B0")}).to.throw(Error, "EncodingError U+14B0");
expect(() => {ms932Encoder.encode("\u14B1")}).to.throw(Error, "EncodingError U+14B1");
expect(() => {ms932Encoder.encode("\u14B2")}).to.throw(Error, "EncodingError U+14B2");
expect(() => {ms932Encoder.encode("\u14B3")}).to.throw(Error, "EncodingError U+14B3");
expect(() => {ms932Encoder.encode("\u14B4")}).to.throw(Error, "EncodingError U+14B4");
expect(() => {ms932Encoder.encode("\u14B5")}).to.throw(Error, "EncodingError U+14B5");
expect(() => {ms932Encoder.encode("\u14B6")}).to.throw(Error, "EncodingError U+14B6");
expect(() => {ms932Encoder.encode("\u14B7")}).to.throw(Error, "EncodingError U+14B7");
expect(() => {ms932Encoder.encode("\u14B8")}).to.throw(Error, "EncodingError U+14B8");
expect(() => {ms932Encoder.encode("\u14B9")}).to.throw(Error, "EncodingError U+14B9");
expect(() => {ms932Encoder.encode("\u14BA")}).to.throw(Error, "EncodingError U+14BA");
expect(() => {ms932Encoder.encode("\u14BB")}).to.throw(Error, "EncodingError U+14BB");
expect(() => {ms932Encoder.encode("\u14BC")}).to.throw(Error, "EncodingError U+14BC");
expect(() => {ms932Encoder.encode("\u14BD")}).to.throw(Error, "EncodingError U+14BD");
expect(() => {ms932Encoder.encode("\u14BE")}).to.throw(Error, "EncodingError U+14BE");
expect(() => {ms932Encoder.encode("\u14BF")}).to.throw(Error, "EncodingError U+14BF");
expect(() => {ms932Encoder.encode("\u14C0")}).to.throw(Error, "EncodingError U+14C0");
expect(() => {ms932Encoder.encode("\u14C1")}).to.throw(Error, "EncodingError U+14C1");
expect(() => {ms932Encoder.encode("\u14C2")}).to.throw(Error, "EncodingError U+14C2");
expect(() => {ms932Encoder.encode("\u14C3")}).to.throw(Error, "EncodingError U+14C3");
expect(() => {ms932Encoder.encode("\u14C4")}).to.throw(Error, "EncodingError U+14C4");
expect(() => {ms932Encoder.encode("\u14C5")}).to.throw(Error, "EncodingError U+14C5");
expect(() => {ms932Encoder.encode("\u14C6")}).to.throw(Error, "EncodingError U+14C6");
expect(() => {ms932Encoder.encode("\u14C7")}).to.throw(Error, "EncodingError U+14C7");
expect(() => {ms932Encoder.encode("\u14C8")}).to.throw(Error, "EncodingError U+14C8");
expect(() => {ms932Encoder.encode("\u14C9")}).to.throw(Error, "EncodingError U+14C9");
expect(() => {ms932Encoder.encode("\u14CA")}).to.throw(Error, "EncodingError U+14CA");
expect(() => {ms932Encoder.encode("\u14CB")}).to.throw(Error, "EncodingError U+14CB");
expect(() => {ms932Encoder.encode("\u14CC")}).to.throw(Error, "EncodingError U+14CC");
expect(() => {ms932Encoder.encode("\u14CD")}).to.throw(Error, "EncodingError U+14CD");
expect(() => {ms932Encoder.encode("\u14CE")}).to.throw(Error, "EncodingError U+14CE");
expect(() => {ms932Encoder.encode("\u14CF")}).to.throw(Error, "EncodingError U+14CF");
expect(() => {ms932Encoder.encode("\u14D0")}).to.throw(Error, "EncodingError U+14D0");
expect(() => {ms932Encoder.encode("\u14D1")}).to.throw(Error, "EncodingError U+14D1");
expect(() => {ms932Encoder.encode("\u14D2")}).to.throw(Error, "EncodingError U+14D2");
expect(() => {ms932Encoder.encode("\u14D3")}).to.throw(Error, "EncodingError U+14D3");
expect(() => {ms932Encoder.encode("\u14D4")}).to.throw(Error, "EncodingError U+14D4");
expect(() => {ms932Encoder.encode("\u14D5")}).to.throw(Error, "EncodingError U+14D5");
expect(() => {ms932Encoder.encode("\u14D6")}).to.throw(Error, "EncodingError U+14D6");
expect(() => {ms932Encoder.encode("\u14D7")}).to.throw(Error, "EncodingError U+14D7");
expect(() => {ms932Encoder.encode("\u14D8")}).to.throw(Error, "EncodingError U+14D8");
expect(() => {ms932Encoder.encode("\u14D9")}).to.throw(Error, "EncodingError U+14D9");
expect(() => {ms932Encoder.encode("\u14DA")}).to.throw(Error, "EncodingError U+14DA");
expect(() => {ms932Encoder.encode("\u14DB")}).to.throw(Error, "EncodingError U+14DB");
expect(() => {ms932Encoder.encode("\u14DC")}).to.throw(Error, "EncodingError U+14DC");
expect(() => {ms932Encoder.encode("\u14DD")}).to.throw(Error, "EncodingError U+14DD");
expect(() => {ms932Encoder.encode("\u14DE")}).to.throw(Error, "EncodingError U+14DE");
expect(() => {ms932Encoder.encode("\u14DF")}).to.throw(Error, "EncodingError U+14DF");
expect(() => {ms932Encoder.encode("\u14E0")}).to.throw(Error, "EncodingError U+14E0");
expect(() => {ms932Encoder.encode("\u14E1")}).to.throw(Error, "EncodingError U+14E1");
expect(() => {ms932Encoder.encode("\u14E2")}).to.throw(Error, "EncodingError U+14E2");
expect(() => {ms932Encoder.encode("\u14E3")}).to.throw(Error, "EncodingError U+14E3");
expect(() => {ms932Encoder.encode("\u14E4")}).to.throw(Error, "EncodingError U+14E4");
expect(() => {ms932Encoder.encode("\u14E5")}).to.throw(Error, "EncodingError U+14E5");
expect(() => {ms932Encoder.encode("\u14E6")}).to.throw(Error, "EncodingError U+14E6");
expect(() => {ms932Encoder.encode("\u14E7")}).to.throw(Error, "EncodingError U+14E7");
expect(() => {ms932Encoder.encode("\u14E8")}).to.throw(Error, "EncodingError U+14E8");
expect(() => {ms932Encoder.encode("\u14E9")}).to.throw(Error, "EncodingError U+14E9");
expect(() => {ms932Encoder.encode("\u14EA")}).to.throw(Error, "EncodingError U+14EA");
expect(() => {ms932Encoder.encode("\u14EB")}).to.throw(Error, "EncodingError U+14EB");
expect(() => {ms932Encoder.encode("\u14EC")}).to.throw(Error, "EncodingError U+14EC");
expect(() => {ms932Encoder.encode("\u14ED")}).to.throw(Error, "EncodingError U+14ED");
expect(() => {ms932Encoder.encode("\u14EE")}).to.throw(Error, "EncodingError U+14EE");
expect(() => {ms932Encoder.encode("\u14EF")}).to.throw(Error, "EncodingError U+14EF");
expect(() => {ms932Encoder.encode("\u14F0")}).to.throw(Error, "EncodingError U+14F0");
expect(() => {ms932Encoder.encode("\u14F1")}).to.throw(Error, "EncodingError U+14F1");
expect(() => {ms932Encoder.encode("\u14F2")}).to.throw(Error, "EncodingError U+14F2");
expect(() => {ms932Encoder.encode("\u14F3")}).to.throw(Error, "EncodingError U+14F3");
expect(() => {ms932Encoder.encode("\u14F4")}).to.throw(Error, "EncodingError U+14F4");
expect(() => {ms932Encoder.encode("\u14F5")}).to.throw(Error, "EncodingError U+14F5");
expect(() => {ms932Encoder.encode("\u14F6")}).to.throw(Error, "EncodingError U+14F6");
expect(() => {ms932Encoder.encode("\u14F7")}).to.throw(Error, "EncodingError U+14F7");
expect(() => {ms932Encoder.encode("\u14F8")}).to.throw(Error, "EncodingError U+14F8");
expect(() => {ms932Encoder.encode("\u14F9")}).to.throw(Error, "EncodingError U+14F9");
expect(() => {ms932Encoder.encode("\u14FA")}).to.throw(Error, "EncodingError U+14FA");
expect(() => {ms932Encoder.encode("\u14FB")}).to.throw(Error, "EncodingError U+14FB");
expect(() => {ms932Encoder.encode("\u14FC")}).to.throw(Error, "EncodingError U+14FC");
expect(() => {ms932Encoder.encode("\u14FD")}).to.throw(Error, "EncodingError U+14FD");
expect(() => {ms932Encoder.encode("\u14FE")}).to.throw(Error, "EncodingError U+14FE");
expect(() => {ms932Encoder.encode("\u14FF")}).to.throw(Error, "EncodingError U+14FF");
expect(() => {ms932Encoder.encode("\u1500")}).to.throw(Error, "EncodingError U+1500");
expect(() => {ms932Encoder.encode("\u1501")}).to.throw(Error, "EncodingError U+1501");
expect(() => {ms932Encoder.encode("\u1502")}).to.throw(Error, "EncodingError U+1502");
expect(() => {ms932Encoder.encode("\u1503")}).to.throw(Error, "EncodingError U+1503");
expect(() => {ms932Encoder.encode("\u1504")}).to.throw(Error, "EncodingError U+1504");
expect(() => {ms932Encoder.encode("\u1505")}).to.throw(Error, "EncodingError U+1505");
expect(() => {ms932Encoder.encode("\u1506")}).to.throw(Error, "EncodingError U+1506");
expect(() => {ms932Encoder.encode("\u1507")}).to.throw(Error, "EncodingError U+1507");
expect(() => {ms932Encoder.encode("\u1508")}).to.throw(Error, "EncodingError U+1508");
expect(() => {ms932Encoder.encode("\u1509")}).to.throw(Error, "EncodingError U+1509");
expect(() => {ms932Encoder.encode("\u150A")}).to.throw(Error, "EncodingError U+150A");
expect(() => {ms932Encoder.encode("\u150B")}).to.throw(Error, "EncodingError U+150B");
expect(() => {ms932Encoder.encode("\u150C")}).to.throw(Error, "EncodingError U+150C");
expect(() => {ms932Encoder.encode("\u150D")}).to.throw(Error, "EncodingError U+150D");
expect(() => {ms932Encoder.encode("\u150E")}).to.throw(Error, "EncodingError U+150E");
expect(() => {ms932Encoder.encode("\u150F")}).to.throw(Error, "EncodingError U+150F");
expect(() => {ms932Encoder.encode("\u1510")}).to.throw(Error, "EncodingError U+1510");
expect(() => {ms932Encoder.encode("\u1511")}).to.throw(Error, "EncodingError U+1511");
expect(() => {ms932Encoder.encode("\u1512")}).to.throw(Error, "EncodingError U+1512");
expect(() => {ms932Encoder.encode("\u1513")}).to.throw(Error, "EncodingError U+1513");
expect(() => {ms932Encoder.encode("\u1514")}).to.throw(Error, "EncodingError U+1514");
expect(() => {ms932Encoder.encode("\u1515")}).to.throw(Error, "EncodingError U+1515");
expect(() => {ms932Encoder.encode("\u1516")}).to.throw(Error, "EncodingError U+1516");
expect(() => {ms932Encoder.encode("\u1517")}).to.throw(Error, "EncodingError U+1517");
expect(() => {ms932Encoder.encode("\u1518")}).to.throw(Error, "EncodingError U+1518");
expect(() => {ms932Encoder.encode("\u1519")}).to.throw(Error, "EncodingError U+1519");
expect(() => {ms932Encoder.encode("\u151A")}).to.throw(Error, "EncodingError U+151A");
expect(() => {ms932Encoder.encode("\u151B")}).to.throw(Error, "EncodingError U+151B");
expect(() => {ms932Encoder.encode("\u151C")}).to.throw(Error, "EncodingError U+151C");
expect(() => {ms932Encoder.encode("\u151D")}).to.throw(Error, "EncodingError U+151D");
expect(() => {ms932Encoder.encode("\u151E")}).to.throw(Error, "EncodingError U+151E");
expect(() => {ms932Encoder.encode("\u151F")}).to.throw(Error, "EncodingError U+151F");
expect(() => {ms932Encoder.encode("\u1520")}).to.throw(Error, "EncodingError U+1520");
expect(() => {ms932Encoder.encode("\u1521")}).to.throw(Error, "EncodingError U+1521");
expect(() => {ms932Encoder.encode("\u1522")}).to.throw(Error, "EncodingError U+1522");
expect(() => {ms932Encoder.encode("\u1523")}).to.throw(Error, "EncodingError U+1523");
expect(() => {ms932Encoder.encode("\u1524")}).to.throw(Error, "EncodingError U+1524");
expect(() => {ms932Encoder.encode("\u1525")}).to.throw(Error, "EncodingError U+1525");
expect(() => {ms932Encoder.encode("\u1526")}).to.throw(Error, "EncodingError U+1526");
expect(() => {ms932Encoder.encode("\u1527")}).to.throw(Error, "EncodingError U+1527");
expect(() => {ms932Encoder.encode("\u1528")}).to.throw(Error, "EncodingError U+1528");
expect(() => {ms932Encoder.encode("\u1529")}).to.throw(Error, "EncodingError U+1529");
expect(() => {ms932Encoder.encode("\u152A")}).to.throw(Error, "EncodingError U+152A");
expect(() => {ms932Encoder.encode("\u152B")}).to.throw(Error, "EncodingError U+152B");
expect(() => {ms932Encoder.encode("\u152C")}).to.throw(Error, "EncodingError U+152C");
expect(() => {ms932Encoder.encode("\u152D")}).to.throw(Error, "EncodingError U+152D");
expect(() => {ms932Encoder.encode("\u152E")}).to.throw(Error, "EncodingError U+152E");
expect(() => {ms932Encoder.encode("\u152F")}).to.throw(Error, "EncodingError U+152F");
expect(() => {ms932Encoder.encode("\u1530")}).to.throw(Error, "EncodingError U+1530");
expect(() => {ms932Encoder.encode("\u1531")}).to.throw(Error, "EncodingError U+1531");
expect(() => {ms932Encoder.encode("\u1532")}).to.throw(Error, "EncodingError U+1532");
expect(() => {ms932Encoder.encode("\u1533")}).to.throw(Error, "EncodingError U+1533");
expect(() => {ms932Encoder.encode("\u1534")}).to.throw(Error, "EncodingError U+1534");
expect(() => {ms932Encoder.encode("\u1535")}).to.throw(Error, "EncodingError U+1535");
expect(() => {ms932Encoder.encode("\u1536")}).to.throw(Error, "EncodingError U+1536");
expect(() => {ms932Encoder.encode("\u1537")}).to.throw(Error, "EncodingError U+1537");
expect(() => {ms932Encoder.encode("\u1538")}).to.throw(Error, "EncodingError U+1538");
expect(() => {ms932Encoder.encode("\u1539")}).to.throw(Error, "EncodingError U+1539");
expect(() => {ms932Encoder.encode("\u153A")}).to.throw(Error, "EncodingError U+153A");
expect(() => {ms932Encoder.encode("\u153B")}).to.throw(Error, "EncodingError U+153B");
expect(() => {ms932Encoder.encode("\u153C")}).to.throw(Error, "EncodingError U+153C");
expect(() => {ms932Encoder.encode("\u153D")}).to.throw(Error, "EncodingError U+153D");
expect(() => {ms932Encoder.encode("\u153E")}).to.throw(Error, "EncodingError U+153E");
expect(() => {ms932Encoder.encode("\u153F")}).to.throw(Error, "EncodingError U+153F");
expect(() => {ms932Encoder.encode("\u1540")}).to.throw(Error, "EncodingError U+1540");
expect(() => {ms932Encoder.encode("\u1541")}).to.throw(Error, "EncodingError U+1541");
expect(() => {ms932Encoder.encode("\u1542")}).to.throw(Error, "EncodingError U+1542");
expect(() => {ms932Encoder.encode("\u1543")}).to.throw(Error, "EncodingError U+1543");
expect(() => {ms932Encoder.encode("\u1544")}).to.throw(Error, "EncodingError U+1544");
expect(() => {ms932Encoder.encode("\u1545")}).to.throw(Error, "EncodingError U+1545");
expect(() => {ms932Encoder.encode("\u1546")}).to.throw(Error, "EncodingError U+1546");
expect(() => {ms932Encoder.encode("\u1547")}).to.throw(Error, "EncodingError U+1547");
expect(() => {ms932Encoder.encode("\u1548")}).to.throw(Error, "EncodingError U+1548");
expect(() => {ms932Encoder.encode("\u1549")}).to.throw(Error, "EncodingError U+1549");
expect(() => {ms932Encoder.encode("\u154A")}).to.throw(Error, "EncodingError U+154A");
expect(() => {ms932Encoder.encode("\u154B")}).to.throw(Error, "EncodingError U+154B");
expect(() => {ms932Encoder.encode("\u154C")}).to.throw(Error, "EncodingError U+154C");
expect(() => {ms932Encoder.encode("\u154D")}).to.throw(Error, "EncodingError U+154D");
expect(() => {ms932Encoder.encode("\u154E")}).to.throw(Error, "EncodingError U+154E");
expect(() => {ms932Encoder.encode("\u154F")}).to.throw(Error, "EncodingError U+154F");
expect(() => {ms932Encoder.encode("\u1550")}).to.throw(Error, "EncodingError U+1550");
expect(() => {ms932Encoder.encode("\u1551")}).to.throw(Error, "EncodingError U+1551");
expect(() => {ms932Encoder.encode("\u1552")}).to.throw(Error, "EncodingError U+1552");
expect(() => {ms932Encoder.encode("\u1553")}).to.throw(Error, "EncodingError U+1553");
expect(() => {ms932Encoder.encode("\u1554")}).to.throw(Error, "EncodingError U+1554");
expect(() => {ms932Encoder.encode("\u1555")}).to.throw(Error, "EncodingError U+1555");
expect(() => {ms932Encoder.encode("\u1556")}).to.throw(Error, "EncodingError U+1556");
expect(() => {ms932Encoder.encode("\u1557")}).to.throw(Error, "EncodingError U+1557");
expect(() => {ms932Encoder.encode("\u1558")}).to.throw(Error, "EncodingError U+1558");
expect(() => {ms932Encoder.encode("\u1559")}).to.throw(Error, "EncodingError U+1559");
expect(() => {ms932Encoder.encode("\u155A")}).to.throw(Error, "EncodingError U+155A");
expect(() => {ms932Encoder.encode("\u155B")}).to.throw(Error, "EncodingError U+155B");
expect(() => {ms932Encoder.encode("\u155C")}).to.throw(Error, "EncodingError U+155C");
expect(() => {ms932Encoder.encode("\u155D")}).to.throw(Error, "EncodingError U+155D");
expect(() => {ms932Encoder.encode("\u155E")}).to.throw(Error, "EncodingError U+155E");
expect(() => {ms932Encoder.encode("\u155F")}).to.throw(Error, "EncodingError U+155F");
expect(() => {ms932Encoder.encode("\u1560")}).to.throw(Error, "EncodingError U+1560");
expect(() => {ms932Encoder.encode("\u1561")}).to.throw(Error, "EncodingError U+1561");
expect(() => {ms932Encoder.encode("\u1562")}).to.throw(Error, "EncodingError U+1562");
expect(() => {ms932Encoder.encode("\u1563")}).to.throw(Error, "EncodingError U+1563");
expect(() => {ms932Encoder.encode("\u1564")}).to.throw(Error, "EncodingError U+1564");
expect(() => {ms932Encoder.encode("\u1565")}).to.throw(Error, "EncodingError U+1565");
expect(() => {ms932Encoder.encode("\u1566")}).to.throw(Error, "EncodingError U+1566");
expect(() => {ms932Encoder.encode("\u1567")}).to.throw(Error, "EncodingError U+1567");
expect(() => {ms932Encoder.encode("\u1568")}).to.throw(Error, "EncodingError U+1568");
expect(() => {ms932Encoder.encode("\u1569")}).to.throw(Error, "EncodingError U+1569");
expect(() => {ms932Encoder.encode("\u156A")}).to.throw(Error, "EncodingError U+156A");
expect(() => {ms932Encoder.encode("\u156B")}).to.throw(Error, "EncodingError U+156B");
expect(() => {ms932Encoder.encode("\u156C")}).to.throw(Error, "EncodingError U+156C");
expect(() => {ms932Encoder.encode("\u156D")}).to.throw(Error, "EncodingError U+156D");
expect(() => {ms932Encoder.encode("\u156E")}).to.throw(Error, "EncodingError U+156E");
expect(() => {ms932Encoder.encode("\u156F")}).to.throw(Error, "EncodingError U+156F");
expect(() => {ms932Encoder.encode("\u1570")}).to.throw(Error, "EncodingError U+1570");
expect(() => {ms932Encoder.encode("\u1571")}).to.throw(Error, "EncodingError U+1571");
expect(() => {ms932Encoder.encode("\u1572")}).to.throw(Error, "EncodingError U+1572");
expect(() => {ms932Encoder.encode("\u1573")}).to.throw(Error, "EncodingError U+1573");
expect(() => {ms932Encoder.encode("\u1574")}).to.throw(Error, "EncodingError U+1574");
expect(() => {ms932Encoder.encode("\u1575")}).to.throw(Error, "EncodingError U+1575");
expect(() => {ms932Encoder.encode("\u1576")}).to.throw(Error, "EncodingError U+1576");
expect(() => {ms932Encoder.encode("\u1577")}).to.throw(Error, "EncodingError U+1577");
expect(() => {ms932Encoder.encode("\u1578")}).to.throw(Error, "EncodingError U+1578");
expect(() => {ms932Encoder.encode("\u1579")}).to.throw(Error, "EncodingError U+1579");
expect(() => {ms932Encoder.encode("\u157A")}).to.throw(Error, "EncodingError U+157A");
expect(() => {ms932Encoder.encode("\u157B")}).to.throw(Error, "EncodingError U+157B");
expect(() => {ms932Encoder.encode("\u157C")}).to.throw(Error, "EncodingError U+157C");
expect(() => {ms932Encoder.encode("\u157D")}).to.throw(Error, "EncodingError U+157D");
expect(() => {ms932Encoder.encode("\u157E")}).to.throw(Error, "EncodingError U+157E");
expect(() => {ms932Encoder.encode("\u157F")}).to.throw(Error, "EncodingError U+157F");
expect(() => {ms932Encoder.encode("\u1580")}).to.throw(Error, "EncodingError U+1580");
expect(() => {ms932Encoder.encode("\u1581")}).to.throw(Error, "EncodingError U+1581");
expect(() => {ms932Encoder.encode("\u1582")}).to.throw(Error, "EncodingError U+1582");
expect(() => {ms932Encoder.encode("\u1583")}).to.throw(Error, "EncodingError U+1583");
expect(() => {ms932Encoder.encode("\u1584")}).to.throw(Error, "EncodingError U+1584");
expect(() => {ms932Encoder.encode("\u1585")}).to.throw(Error, "EncodingError U+1585");
expect(() => {ms932Encoder.encode("\u1586")}).to.throw(Error, "EncodingError U+1586");
expect(() => {ms932Encoder.encode("\u1587")}).to.throw(Error, "EncodingError U+1587");
expect(() => {ms932Encoder.encode("\u1588")}).to.throw(Error, "EncodingError U+1588");
expect(() => {ms932Encoder.encode("\u1589")}).to.throw(Error, "EncodingError U+1589");
expect(() => {ms932Encoder.encode("\u158A")}).to.throw(Error, "EncodingError U+158A");
expect(() => {ms932Encoder.encode("\u158B")}).to.throw(Error, "EncodingError U+158B");
expect(() => {ms932Encoder.encode("\u158C")}).to.throw(Error, "EncodingError U+158C");
expect(() => {ms932Encoder.encode("\u158D")}).to.throw(Error, "EncodingError U+158D");
expect(() => {ms932Encoder.encode("\u158E")}).to.throw(Error, "EncodingError U+158E");
expect(() => {ms932Encoder.encode("\u158F")}).to.throw(Error, "EncodingError U+158F");
expect(() => {ms932Encoder.encode("\u1590")}).to.throw(Error, "EncodingError U+1590");
expect(() => {ms932Encoder.encode("\u1591")}).to.throw(Error, "EncodingError U+1591");
expect(() => {ms932Encoder.encode("\u1592")}).to.throw(Error, "EncodingError U+1592");
expect(() => {ms932Encoder.encode("\u1593")}).to.throw(Error, "EncodingError U+1593");
expect(() => {ms932Encoder.encode("\u1594")}).to.throw(Error, "EncodingError U+1594");
expect(() => {ms932Encoder.encode("\u1595")}).to.throw(Error, "EncodingError U+1595");
expect(() => {ms932Encoder.encode("\u1596")}).to.throw(Error, "EncodingError U+1596");
expect(() => {ms932Encoder.encode("\u1597")}).to.throw(Error, "EncodingError U+1597");
expect(() => {ms932Encoder.encode("\u1598")}).to.throw(Error, "EncodingError U+1598");
expect(() => {ms932Encoder.encode("\u1599")}).to.throw(Error, "EncodingError U+1599");
expect(() => {ms932Encoder.encode("\u159A")}).to.throw(Error, "EncodingError U+159A");
expect(() => {ms932Encoder.encode("\u159B")}).to.throw(Error, "EncodingError U+159B");
expect(() => {ms932Encoder.encode("\u159C")}).to.throw(Error, "EncodingError U+159C");
expect(() => {ms932Encoder.encode("\u159D")}).to.throw(Error, "EncodingError U+159D");
expect(() => {ms932Encoder.encode("\u159E")}).to.throw(Error, "EncodingError U+159E");
expect(() => {ms932Encoder.encode("\u159F")}).to.throw(Error, "EncodingError U+159F");
expect(() => {ms932Encoder.encode("\u15A0")}).to.throw(Error, "EncodingError U+15A0");
expect(() => {ms932Encoder.encode("\u15A1")}).to.throw(Error, "EncodingError U+15A1");
expect(() => {ms932Encoder.encode("\u15A2")}).to.throw(Error, "EncodingError U+15A2");
expect(() => {ms932Encoder.encode("\u15A3")}).to.throw(Error, "EncodingError U+15A3");
expect(() => {ms932Encoder.encode("\u15A4")}).to.throw(Error, "EncodingError U+15A4");
expect(() => {ms932Encoder.encode("\u15A5")}).to.throw(Error, "EncodingError U+15A5");
expect(() => {ms932Encoder.encode("\u15A6")}).to.throw(Error, "EncodingError U+15A6");
expect(() => {ms932Encoder.encode("\u15A7")}).to.throw(Error, "EncodingError U+15A7");
expect(() => {ms932Encoder.encode("\u15A8")}).to.throw(Error, "EncodingError U+15A8");
expect(() => {ms932Encoder.encode("\u15A9")}).to.throw(Error, "EncodingError U+15A9");
expect(() => {ms932Encoder.encode("\u15AA")}).to.throw(Error, "EncodingError U+15AA");
expect(() => {ms932Encoder.encode("\u15AB")}).to.throw(Error, "EncodingError U+15AB");
expect(() => {ms932Encoder.encode("\u15AC")}).to.throw(Error, "EncodingError U+15AC");
expect(() => {ms932Encoder.encode("\u15AD")}).to.throw(Error, "EncodingError U+15AD");
expect(() => {ms932Encoder.encode("\u15AE")}).to.throw(Error, "EncodingError U+15AE");
expect(() => {ms932Encoder.encode("\u15AF")}).to.throw(Error, "EncodingError U+15AF");
expect(() => {ms932Encoder.encode("\u15B0")}).to.throw(Error, "EncodingError U+15B0");
expect(() => {ms932Encoder.encode("\u15B1")}).to.throw(Error, "EncodingError U+15B1");
expect(() => {ms932Encoder.encode("\u15B2")}).to.throw(Error, "EncodingError U+15B2");
expect(() => {ms932Encoder.encode("\u15B3")}).to.throw(Error, "EncodingError U+15B3");
expect(() => {ms932Encoder.encode("\u15B4")}).to.throw(Error, "EncodingError U+15B4");
expect(() => {ms932Encoder.encode("\u15B5")}).to.throw(Error, "EncodingError U+15B5");
expect(() => {ms932Encoder.encode("\u15B6")}).to.throw(Error, "EncodingError U+15B6");
expect(() => {ms932Encoder.encode("\u15B7")}).to.throw(Error, "EncodingError U+15B7");
expect(() => {ms932Encoder.encode("\u15B8")}).to.throw(Error, "EncodingError U+15B8");
expect(() => {ms932Encoder.encode("\u15B9")}).to.throw(Error, "EncodingError U+15B9");
expect(() => {ms932Encoder.encode("\u15BA")}).to.throw(Error, "EncodingError U+15BA");
expect(() => {ms932Encoder.encode("\u15BB")}).to.throw(Error, "EncodingError U+15BB");
expect(() => {ms932Encoder.encode("\u15BC")}).to.throw(Error, "EncodingError U+15BC");
expect(() => {ms932Encoder.encode("\u15BD")}).to.throw(Error, "EncodingError U+15BD");
expect(() => {ms932Encoder.encode("\u15BE")}).to.throw(Error, "EncodingError U+15BE");
expect(() => {ms932Encoder.encode("\u15BF")}).to.throw(Error, "EncodingError U+15BF");
expect(() => {ms932Encoder.encode("\u15C0")}).to.throw(Error, "EncodingError U+15C0");
expect(() => {ms932Encoder.encode("\u15C1")}).to.throw(Error, "EncodingError U+15C1");
expect(() => {ms932Encoder.encode("\u15C2")}).to.throw(Error, "EncodingError U+15C2");
expect(() => {ms932Encoder.encode("\u15C3")}).to.throw(Error, "EncodingError U+15C3");
expect(() => {ms932Encoder.encode("\u15C4")}).to.throw(Error, "EncodingError U+15C4");
expect(() => {ms932Encoder.encode("\u15C5")}).to.throw(Error, "EncodingError U+15C5");
expect(() => {ms932Encoder.encode("\u15C6")}).to.throw(Error, "EncodingError U+15C6");
expect(() => {ms932Encoder.encode("\u15C7")}).to.throw(Error, "EncodingError U+15C7");
expect(() => {ms932Encoder.encode("\u15C8")}).to.throw(Error, "EncodingError U+15C8");
expect(() => {ms932Encoder.encode("\u15C9")}).to.throw(Error, "EncodingError U+15C9");
expect(() => {ms932Encoder.encode("\u15CA")}).to.throw(Error, "EncodingError U+15CA");
expect(() => {ms932Encoder.encode("\u15CB")}).to.throw(Error, "EncodingError U+15CB");
expect(() => {ms932Encoder.encode("\u15CC")}).to.throw(Error, "EncodingError U+15CC");
expect(() => {ms932Encoder.encode("\u15CD")}).to.throw(Error, "EncodingError U+15CD");
expect(() => {ms932Encoder.encode("\u15CE")}).to.throw(Error, "EncodingError U+15CE");
expect(() => {ms932Encoder.encode("\u15CF")}).to.throw(Error, "EncodingError U+15CF");
expect(() => {ms932Encoder.encode("\u15D0")}).to.throw(Error, "EncodingError U+15D0");
expect(() => {ms932Encoder.encode("\u15D1")}).to.throw(Error, "EncodingError U+15D1");
expect(() => {ms932Encoder.encode("\u15D2")}).to.throw(Error, "EncodingError U+15D2");
expect(() => {ms932Encoder.encode("\u15D3")}).to.throw(Error, "EncodingError U+15D3");
expect(() => {ms932Encoder.encode("\u15D4")}).to.throw(Error, "EncodingError U+15D4");
expect(() => {ms932Encoder.encode("\u15D5")}).to.throw(Error, "EncodingError U+15D5");
expect(() => {ms932Encoder.encode("\u15D6")}).to.throw(Error, "EncodingError U+15D6");
expect(() => {ms932Encoder.encode("\u15D7")}).to.throw(Error, "EncodingError U+15D7");
expect(() => {ms932Encoder.encode("\u15D8")}).to.throw(Error, "EncodingError U+15D8");
expect(() => {ms932Encoder.encode("\u15D9")}).to.throw(Error, "EncodingError U+15D9");
expect(() => {ms932Encoder.encode("\u15DA")}).to.throw(Error, "EncodingError U+15DA");
expect(() => {ms932Encoder.encode("\u15DB")}).to.throw(Error, "EncodingError U+15DB");
expect(() => {ms932Encoder.encode("\u15DC")}).to.throw(Error, "EncodingError U+15DC");
expect(() => {ms932Encoder.encode("\u15DD")}).to.throw(Error, "EncodingError U+15DD");
expect(() => {ms932Encoder.encode("\u15DE")}).to.throw(Error, "EncodingError U+15DE");
expect(() => {ms932Encoder.encode("\u15DF")}).to.throw(Error, "EncodingError U+15DF");
expect(() => {ms932Encoder.encode("\u15E0")}).to.throw(Error, "EncodingError U+15E0");
expect(() => {ms932Encoder.encode("\u15E1")}).to.throw(Error, "EncodingError U+15E1");
expect(() => {ms932Encoder.encode("\u15E2")}).to.throw(Error, "EncodingError U+15E2");
expect(() => {ms932Encoder.encode("\u15E3")}).to.throw(Error, "EncodingError U+15E3");
expect(() => {ms932Encoder.encode("\u15E4")}).to.throw(Error, "EncodingError U+15E4");
expect(() => {ms932Encoder.encode("\u15E5")}).to.throw(Error, "EncodingError U+15E5");
expect(() => {ms932Encoder.encode("\u15E6")}).to.throw(Error, "EncodingError U+15E6");
expect(() => {ms932Encoder.encode("\u15E7")}).to.throw(Error, "EncodingError U+15E7");
expect(() => {ms932Encoder.encode("\u15E8")}).to.throw(Error, "EncodingError U+15E8");
expect(() => {ms932Encoder.encode("\u15E9")}).to.throw(Error, "EncodingError U+15E9");
expect(() => {ms932Encoder.encode("\u15EA")}).to.throw(Error, "EncodingError U+15EA");
expect(() => {ms932Encoder.encode("\u15EB")}).to.throw(Error, "EncodingError U+15EB");
expect(() => {ms932Encoder.encode("\u15EC")}).to.throw(Error, "EncodingError U+15EC");
expect(() => {ms932Encoder.encode("\u15ED")}).to.throw(Error, "EncodingError U+15ED");
expect(() => {ms932Encoder.encode("\u15EE")}).to.throw(Error, "EncodingError U+15EE");
expect(() => {ms932Encoder.encode("\u15EF")}).to.throw(Error, "EncodingError U+15EF");
expect(() => {ms932Encoder.encode("\u15F0")}).to.throw(Error, "EncodingError U+15F0");
expect(() => {ms932Encoder.encode("\u15F1")}).to.throw(Error, "EncodingError U+15F1");
expect(() => {ms932Encoder.encode("\u15F2")}).to.throw(Error, "EncodingError U+15F2");
expect(() => {ms932Encoder.encode("\u15F3")}).to.throw(Error, "EncodingError U+15F3");
expect(() => {ms932Encoder.encode("\u15F4")}).to.throw(Error, "EncodingError U+15F4");
expect(() => {ms932Encoder.encode("\u15F5")}).to.throw(Error, "EncodingError U+15F5");
expect(() => {ms932Encoder.encode("\u15F6")}).to.throw(Error, "EncodingError U+15F6");
expect(() => {ms932Encoder.encode("\u15F7")}).to.throw(Error, "EncodingError U+15F7");
expect(() => {ms932Encoder.encode("\u15F8")}).to.throw(Error, "EncodingError U+15F8");
expect(() => {ms932Encoder.encode("\u15F9")}).to.throw(Error, "EncodingError U+15F9");
expect(() => {ms932Encoder.encode("\u15FA")}).to.throw(Error, "EncodingError U+15FA");
expect(() => {ms932Encoder.encode("\u15FB")}).to.throw(Error, "EncodingError U+15FB");
expect(() => {ms932Encoder.encode("\u15FC")}).to.throw(Error, "EncodingError U+15FC");
expect(() => {ms932Encoder.encode("\u15FD")}).to.throw(Error, "EncodingError U+15FD");
expect(() => {ms932Encoder.encode("\u15FE")}).to.throw(Error, "EncodingError U+15FE");
expect(() => {ms932Encoder.encode("\u15FF")}).to.throw(Error, "EncodingError U+15FF");
expect(() => {ms932Encoder.encode("\u1600")}).to.throw(Error, "EncodingError U+1600");
expect(() => {ms932Encoder.encode("\u1601")}).to.throw(Error, "EncodingError U+1601");
expect(() => {ms932Encoder.encode("\u1602")}).to.throw(Error, "EncodingError U+1602");
expect(() => {ms932Encoder.encode("\u1603")}).to.throw(Error, "EncodingError U+1603");
expect(() => {ms932Encoder.encode("\u1604")}).to.throw(Error, "EncodingError U+1604");
expect(() => {ms932Encoder.encode("\u1605")}).to.throw(Error, "EncodingError U+1605");
expect(() => {ms932Encoder.encode("\u1606")}).to.throw(Error, "EncodingError U+1606");
expect(() => {ms932Encoder.encode("\u1607")}).to.throw(Error, "EncodingError U+1607");
expect(() => {ms932Encoder.encode("\u1608")}).to.throw(Error, "EncodingError U+1608");
expect(() => {ms932Encoder.encode("\u1609")}).to.throw(Error, "EncodingError U+1609");
expect(() => {ms932Encoder.encode("\u160A")}).to.throw(Error, "EncodingError U+160A");
expect(() => {ms932Encoder.encode("\u160B")}).to.throw(Error, "EncodingError U+160B");
expect(() => {ms932Encoder.encode("\u160C")}).to.throw(Error, "EncodingError U+160C");
expect(() => {ms932Encoder.encode("\u160D")}).to.throw(Error, "EncodingError U+160D");
expect(() => {ms932Encoder.encode("\u160E")}).to.throw(Error, "EncodingError U+160E");
expect(() => {ms932Encoder.encode("\u160F")}).to.throw(Error, "EncodingError U+160F");
expect(() => {ms932Encoder.encode("\u1610")}).to.throw(Error, "EncodingError U+1610");
expect(() => {ms932Encoder.encode("\u1611")}).to.throw(Error, "EncodingError U+1611");
expect(() => {ms932Encoder.encode("\u1612")}).to.throw(Error, "EncodingError U+1612");
expect(() => {ms932Encoder.encode("\u1613")}).to.throw(Error, "EncodingError U+1613");
expect(() => {ms932Encoder.encode("\u1614")}).to.throw(Error, "EncodingError U+1614");
expect(() => {ms932Encoder.encode("\u1615")}).to.throw(Error, "EncodingError U+1615");
expect(() => {ms932Encoder.encode("\u1616")}).to.throw(Error, "EncodingError U+1616");
expect(() => {ms932Encoder.encode("\u1617")}).to.throw(Error, "EncodingError U+1617");
expect(() => {ms932Encoder.encode("\u1618")}).to.throw(Error, "EncodingError U+1618");
expect(() => {ms932Encoder.encode("\u1619")}).to.throw(Error, "EncodingError U+1619");
expect(() => {ms932Encoder.encode("\u161A")}).to.throw(Error, "EncodingError U+161A");
expect(() => {ms932Encoder.encode("\u161B")}).to.throw(Error, "EncodingError U+161B");
expect(() => {ms932Encoder.encode("\u161C")}).to.throw(Error, "EncodingError U+161C");
expect(() => {ms932Encoder.encode("\u161D")}).to.throw(Error, "EncodingError U+161D");
expect(() => {ms932Encoder.encode("\u161E")}).to.throw(Error, "EncodingError U+161E");
expect(() => {ms932Encoder.encode("\u161F")}).to.throw(Error, "EncodingError U+161F");
expect(() => {ms932Encoder.encode("\u1620")}).to.throw(Error, "EncodingError U+1620");
expect(() => {ms932Encoder.encode("\u1621")}).to.throw(Error, "EncodingError U+1621");
expect(() => {ms932Encoder.encode("\u1622")}).to.throw(Error, "EncodingError U+1622");
expect(() => {ms932Encoder.encode("\u1623")}).to.throw(Error, "EncodingError U+1623");
expect(() => {ms932Encoder.encode("\u1624")}).to.throw(Error, "EncodingError U+1624");
expect(() => {ms932Encoder.encode("\u1625")}).to.throw(Error, "EncodingError U+1625");
expect(() => {ms932Encoder.encode("\u1626")}).to.throw(Error, "EncodingError U+1626");
expect(() => {ms932Encoder.encode("\u1627")}).to.throw(Error, "EncodingError U+1627");
expect(() => {ms932Encoder.encode("\u1628")}).to.throw(Error, "EncodingError U+1628");
expect(() => {ms932Encoder.encode("\u1629")}).to.throw(Error, "EncodingError U+1629");
expect(() => {ms932Encoder.encode("\u162A")}).to.throw(Error, "EncodingError U+162A");
expect(() => {ms932Encoder.encode("\u162B")}).to.throw(Error, "EncodingError U+162B");
expect(() => {ms932Encoder.encode("\u162C")}).to.throw(Error, "EncodingError U+162C");
expect(() => {ms932Encoder.encode("\u162D")}).to.throw(Error, "EncodingError U+162D");
expect(() => {ms932Encoder.encode("\u162E")}).to.throw(Error, "EncodingError U+162E");
expect(() => {ms932Encoder.encode("\u162F")}).to.throw(Error, "EncodingError U+162F");
expect(() => {ms932Encoder.encode("\u1630")}).to.throw(Error, "EncodingError U+1630");
expect(() => {ms932Encoder.encode("\u1631")}).to.throw(Error, "EncodingError U+1631");
expect(() => {ms932Encoder.encode("\u1632")}).to.throw(Error, "EncodingError U+1632");
expect(() => {ms932Encoder.encode("\u1633")}).to.throw(Error, "EncodingError U+1633");
expect(() => {ms932Encoder.encode("\u1634")}).to.throw(Error, "EncodingError U+1634");
expect(() => {ms932Encoder.encode("\u1635")}).to.throw(Error, "EncodingError U+1635");
expect(() => {ms932Encoder.encode("\u1636")}).to.throw(Error, "EncodingError U+1636");
expect(() => {ms932Encoder.encode("\u1637")}).to.throw(Error, "EncodingError U+1637");
expect(() => {ms932Encoder.encode("\u1638")}).to.throw(Error, "EncodingError U+1638");
expect(() => {ms932Encoder.encode("\u1639")}).to.throw(Error, "EncodingError U+1639");
expect(() => {ms932Encoder.encode("\u163A")}).to.throw(Error, "EncodingError U+163A");
expect(() => {ms932Encoder.encode("\u163B")}).to.throw(Error, "EncodingError U+163B");
expect(() => {ms932Encoder.encode("\u163C")}).to.throw(Error, "EncodingError U+163C");
expect(() => {ms932Encoder.encode("\u163D")}).to.throw(Error, "EncodingError U+163D");
expect(() => {ms932Encoder.encode("\u163E")}).to.throw(Error, "EncodingError U+163E");
expect(() => {ms932Encoder.encode("\u163F")}).to.throw(Error, "EncodingError U+163F");
expect(() => {ms932Encoder.encode("\u1640")}).to.throw(Error, "EncodingError U+1640");
expect(() => {ms932Encoder.encode("\u1641")}).to.throw(Error, "EncodingError U+1641");
expect(() => {ms932Encoder.encode("\u1642")}).to.throw(Error, "EncodingError U+1642");
expect(() => {ms932Encoder.encode("\u1643")}).to.throw(Error, "EncodingError U+1643");
expect(() => {ms932Encoder.encode("\u1644")}).to.throw(Error, "EncodingError U+1644");
expect(() => {ms932Encoder.encode("\u1645")}).to.throw(Error, "EncodingError U+1645");
expect(() => {ms932Encoder.encode("\u1646")}).to.throw(Error, "EncodingError U+1646");
expect(() => {ms932Encoder.encode("\u1647")}).to.throw(Error, "EncodingError U+1647");
expect(() => {ms932Encoder.encode("\u1648")}).to.throw(Error, "EncodingError U+1648");
expect(() => {ms932Encoder.encode("\u1649")}).to.throw(Error, "EncodingError U+1649");
expect(() => {ms932Encoder.encode("\u164A")}).to.throw(Error, "EncodingError U+164A");
expect(() => {ms932Encoder.encode("\u164B")}).to.throw(Error, "EncodingError U+164B");
expect(() => {ms932Encoder.encode("\u164C")}).to.throw(Error, "EncodingError U+164C");
expect(() => {ms932Encoder.encode("\u164D")}).to.throw(Error, "EncodingError U+164D");
expect(() => {ms932Encoder.encode("\u164E")}).to.throw(Error, "EncodingError U+164E");
expect(() => {ms932Encoder.encode("\u164F")}).to.throw(Error, "EncodingError U+164F");
expect(() => {ms932Encoder.encode("\u1650")}).to.throw(Error, "EncodingError U+1650");
expect(() => {ms932Encoder.encode("\u1651")}).to.throw(Error, "EncodingError U+1651");
expect(() => {ms932Encoder.encode("\u1652")}).to.throw(Error, "EncodingError U+1652");
expect(() => {ms932Encoder.encode("\u1653")}).to.throw(Error, "EncodingError U+1653");
expect(() => {ms932Encoder.encode("\u1654")}).to.throw(Error, "EncodingError U+1654");
expect(() => {ms932Encoder.encode("\u1655")}).to.throw(Error, "EncodingError U+1655");
expect(() => {ms932Encoder.encode("\u1656")}).to.throw(Error, "EncodingError U+1656");
expect(() => {ms932Encoder.encode("\u1657")}).to.throw(Error, "EncodingError U+1657");
expect(() => {ms932Encoder.encode("\u1658")}).to.throw(Error, "EncodingError U+1658");
expect(() => {ms932Encoder.encode("\u1659")}).to.throw(Error, "EncodingError U+1659");
expect(() => {ms932Encoder.encode("\u165A")}).to.throw(Error, "EncodingError U+165A");
expect(() => {ms932Encoder.encode("\u165B")}).to.throw(Error, "EncodingError U+165B");
expect(() => {ms932Encoder.encode("\u165C")}).to.throw(Error, "EncodingError U+165C");
expect(() => {ms932Encoder.encode("\u165D")}).to.throw(Error, "EncodingError U+165D");
expect(() => {ms932Encoder.encode("\u165E")}).to.throw(Error, "EncodingError U+165E");
expect(() => {ms932Encoder.encode("\u165F")}).to.throw(Error, "EncodingError U+165F");
expect(() => {ms932Encoder.encode("\u1660")}).to.throw(Error, "EncodingError U+1660");
expect(() => {ms932Encoder.encode("\u1661")}).to.throw(Error, "EncodingError U+1661");
expect(() => {ms932Encoder.encode("\u1662")}).to.throw(Error, "EncodingError U+1662");
expect(() => {ms932Encoder.encode("\u1663")}).to.throw(Error, "EncodingError U+1663");
expect(() => {ms932Encoder.encode("\u1664")}).to.throw(Error, "EncodingError U+1664");
expect(() => {ms932Encoder.encode("\u1665")}).to.throw(Error, "EncodingError U+1665");
expect(() => {ms932Encoder.encode("\u1666")}).to.throw(Error, "EncodingError U+1666");
expect(() => {ms932Encoder.encode("\u1667")}).to.throw(Error, "EncodingError U+1667");
expect(() => {ms932Encoder.encode("\u1668")}).to.throw(Error, "EncodingError U+1668");
expect(() => {ms932Encoder.encode("\u1669")}).to.throw(Error, "EncodingError U+1669");
expect(() => {ms932Encoder.encode("\u166A")}).to.throw(Error, "EncodingError U+166A");
expect(() => {ms932Encoder.encode("\u166B")}).to.throw(Error, "EncodingError U+166B");
expect(() => {ms932Encoder.encode("\u166C")}).to.throw(Error, "EncodingError U+166C");
expect(() => {ms932Encoder.encode("\u166D")}).to.throw(Error, "EncodingError U+166D");
expect(() => {ms932Encoder.encode("\u166E")}).to.throw(Error, "EncodingError U+166E");
expect(() => {ms932Encoder.encode("\u166F")}).to.throw(Error, "EncodingError U+166F");
expect(() => {ms932Encoder.encode("\u1670")}).to.throw(Error, "EncodingError U+1670");
expect(() => {ms932Encoder.encode("\u1671")}).to.throw(Error, "EncodingError U+1671");
expect(() => {ms932Encoder.encode("\u1672")}).to.throw(Error, "EncodingError U+1672");
expect(() => {ms932Encoder.encode("\u1673")}).to.throw(Error, "EncodingError U+1673");
expect(() => {ms932Encoder.encode("\u1674")}).to.throw(Error, "EncodingError U+1674");
expect(() => {ms932Encoder.encode("\u1675")}).to.throw(Error, "EncodingError U+1675");
expect(() => {ms932Encoder.encode("\u1676")}).to.throw(Error, "EncodingError U+1676");
expect(() => {ms932Encoder.encode("\u1677")}).to.throw(Error, "EncodingError U+1677");
expect(() => {ms932Encoder.encode("\u1678")}).to.throw(Error, "EncodingError U+1678");
expect(() => {ms932Encoder.encode("\u1679")}).to.throw(Error, "EncodingError U+1679");
expect(() => {ms932Encoder.encode("\u167A")}).to.throw(Error, "EncodingError U+167A");
expect(() => {ms932Encoder.encode("\u167B")}).to.throw(Error, "EncodingError U+167B");
expect(() => {ms932Encoder.encode("\u167C")}).to.throw(Error, "EncodingError U+167C");
expect(() => {ms932Encoder.encode("\u167D")}).to.throw(Error, "EncodingError U+167D");
expect(() => {ms932Encoder.encode("\u167E")}).to.throw(Error, "EncodingError U+167E");
expect(() => {ms932Encoder.encode("\u167F")}).to.throw(Error, "EncodingError U+167F");
expect(() => {ms932Encoder.encode("\u1680")}).to.throw(Error, "EncodingError U+1680");
expect(() => {ms932Encoder.encode("\u1681")}).to.throw(Error, "EncodingError U+1681");
expect(() => {ms932Encoder.encode("\u1682")}).to.throw(Error, "EncodingError U+1682");
expect(() => {ms932Encoder.encode("\u1683")}).to.throw(Error, "EncodingError U+1683");
expect(() => {ms932Encoder.encode("\u1684")}).to.throw(Error, "EncodingError U+1684");
expect(() => {ms932Encoder.encode("\u1685")}).to.throw(Error, "EncodingError U+1685");
expect(() => {ms932Encoder.encode("\u1686")}).to.throw(Error, "EncodingError U+1686");
expect(() => {ms932Encoder.encode("\u1687")}).to.throw(Error, "EncodingError U+1687");
expect(() => {ms932Encoder.encode("\u1688")}).to.throw(Error, "EncodingError U+1688");
expect(() => {ms932Encoder.encode("\u1689")}).to.throw(Error, "EncodingError U+1689");
expect(() => {ms932Encoder.encode("\u168A")}).to.throw(Error, "EncodingError U+168A");
expect(() => {ms932Encoder.encode("\u168B")}).to.throw(Error, "EncodingError U+168B");
expect(() => {ms932Encoder.encode("\u168C")}).to.throw(Error, "EncodingError U+168C");
expect(() => {ms932Encoder.encode("\u168D")}).to.throw(Error, "EncodingError U+168D");
expect(() => {ms932Encoder.encode("\u168E")}).to.throw(Error, "EncodingError U+168E");
expect(() => {ms932Encoder.encode("\u168F")}).to.throw(Error, "EncodingError U+168F");
expect(() => {ms932Encoder.encode("\u1690")}).to.throw(Error, "EncodingError U+1690");
expect(() => {ms932Encoder.encode("\u1691")}).to.throw(Error, "EncodingError U+1691");
expect(() => {ms932Encoder.encode("\u1692")}).to.throw(Error, "EncodingError U+1692");
expect(() => {ms932Encoder.encode("\u1693")}).to.throw(Error, "EncodingError U+1693");
expect(() => {ms932Encoder.encode("\u1694")}).to.throw(Error, "EncodingError U+1694");
expect(() => {ms932Encoder.encode("\u1695")}).to.throw(Error, "EncodingError U+1695");
expect(() => {ms932Encoder.encode("\u1696")}).to.throw(Error, "EncodingError U+1696");
expect(() => {ms932Encoder.encode("\u1697")}).to.throw(Error, "EncodingError U+1697");
expect(() => {ms932Encoder.encode("\u1698")}).to.throw(Error, "EncodingError U+1698");
expect(() => {ms932Encoder.encode("\u1699")}).to.throw(Error, "EncodingError U+1699");
expect(() => {ms932Encoder.encode("\u169A")}).to.throw(Error, "EncodingError U+169A");
expect(() => {ms932Encoder.encode("\u169B")}).to.throw(Error, "EncodingError U+169B");
expect(() => {ms932Encoder.encode("\u169C")}).to.throw(Error, "EncodingError U+169C");
expect(() => {ms932Encoder.encode("\u169D")}).to.throw(Error, "EncodingError U+169D");
expect(() => {ms932Encoder.encode("\u169E")}).to.throw(Error, "EncodingError U+169E");
expect(() => {ms932Encoder.encode("\u169F")}).to.throw(Error, "EncodingError U+169F");
expect(() => {ms932Encoder.encode("\u16A0")}).to.throw(Error, "EncodingError U+16A0");
expect(() => {ms932Encoder.encode("\u16A1")}).to.throw(Error, "EncodingError U+16A1");
expect(() => {ms932Encoder.encode("\u16A2")}).to.throw(Error, "EncodingError U+16A2");
expect(() => {ms932Encoder.encode("\u16A3")}).to.throw(Error, "EncodingError U+16A3");
expect(() => {ms932Encoder.encode("\u16A4")}).to.throw(Error, "EncodingError U+16A4");
expect(() => {ms932Encoder.encode("\u16A5")}).to.throw(Error, "EncodingError U+16A5");
expect(() => {ms932Encoder.encode("\u16A6")}).to.throw(Error, "EncodingError U+16A6");
expect(() => {ms932Encoder.encode("\u16A7")}).to.throw(Error, "EncodingError U+16A7");
expect(() => {ms932Encoder.encode("\u16A8")}).to.throw(Error, "EncodingError U+16A8");
expect(() => {ms932Encoder.encode("\u16A9")}).to.throw(Error, "EncodingError U+16A9");
expect(() => {ms932Encoder.encode("\u16AA")}).to.throw(Error, "EncodingError U+16AA");
expect(() => {ms932Encoder.encode("\u16AB")}).to.throw(Error, "EncodingError U+16AB");
expect(() => {ms932Encoder.encode("\u16AC")}).to.throw(Error, "EncodingError U+16AC");
expect(() => {ms932Encoder.encode("\u16AD")}).to.throw(Error, "EncodingError U+16AD");
expect(() => {ms932Encoder.encode("\u16AE")}).to.throw(Error, "EncodingError U+16AE");
expect(() => {ms932Encoder.encode("\u16AF")}).to.throw(Error, "EncodingError U+16AF");
expect(() => {ms932Encoder.encode("\u16B0")}).to.throw(Error, "EncodingError U+16B0");
expect(() => {ms932Encoder.encode("\u16B1")}).to.throw(Error, "EncodingError U+16B1");
expect(() => {ms932Encoder.encode("\u16B2")}).to.throw(Error, "EncodingError U+16B2");
expect(() => {ms932Encoder.encode("\u16B3")}).to.throw(Error, "EncodingError U+16B3");
expect(() => {ms932Encoder.encode("\u16B4")}).to.throw(Error, "EncodingError U+16B4");
expect(() => {ms932Encoder.encode("\u16B5")}).to.throw(Error, "EncodingError U+16B5");
expect(() => {ms932Encoder.encode("\u16B6")}).to.throw(Error, "EncodingError U+16B6");
expect(() => {ms932Encoder.encode("\u16B7")}).to.throw(Error, "EncodingError U+16B7");
expect(() => {ms932Encoder.encode("\u16B8")}).to.throw(Error, "EncodingError U+16B8");
expect(() => {ms932Encoder.encode("\u16B9")}).to.throw(Error, "EncodingError U+16B9");
expect(() => {ms932Encoder.encode("\u16BA")}).to.throw(Error, "EncodingError U+16BA");
expect(() => {ms932Encoder.encode("\u16BB")}).to.throw(Error, "EncodingError U+16BB");
expect(() => {ms932Encoder.encode("\u16BC")}).to.throw(Error, "EncodingError U+16BC");
expect(() => {ms932Encoder.encode("\u16BD")}).to.throw(Error, "EncodingError U+16BD");
expect(() => {ms932Encoder.encode("\u16BE")}).to.throw(Error, "EncodingError U+16BE");
expect(() => {ms932Encoder.encode("\u16BF")}).to.throw(Error, "EncodingError U+16BF");
expect(() => {ms932Encoder.encode("\u16C0")}).to.throw(Error, "EncodingError U+16C0");
expect(() => {ms932Encoder.encode("\u16C1")}).to.throw(Error, "EncodingError U+16C1");
expect(() => {ms932Encoder.encode("\u16C2")}).to.throw(Error, "EncodingError U+16C2");
expect(() => {ms932Encoder.encode("\u16C3")}).to.throw(Error, "EncodingError U+16C3");
expect(() => {ms932Encoder.encode("\u16C4")}).to.throw(Error, "EncodingError U+16C4");
expect(() => {ms932Encoder.encode("\u16C5")}).to.throw(Error, "EncodingError U+16C5");
expect(() => {ms932Encoder.encode("\u16C6")}).to.throw(Error, "EncodingError U+16C6");
expect(() => {ms932Encoder.encode("\u16C7")}).to.throw(Error, "EncodingError U+16C7");
expect(() => {ms932Encoder.encode("\u16C8")}).to.throw(Error, "EncodingError U+16C8");
expect(() => {ms932Encoder.encode("\u16C9")}).to.throw(Error, "EncodingError U+16C9");
expect(() => {ms932Encoder.encode("\u16CA")}).to.throw(Error, "EncodingError U+16CA");
expect(() => {ms932Encoder.encode("\u16CB")}).to.throw(Error, "EncodingError U+16CB");
expect(() => {ms932Encoder.encode("\u16CC")}).to.throw(Error, "EncodingError U+16CC");
expect(() => {ms932Encoder.encode("\u16CD")}).to.throw(Error, "EncodingError U+16CD");
expect(() => {ms932Encoder.encode("\u16CE")}).to.throw(Error, "EncodingError U+16CE");
expect(() => {ms932Encoder.encode("\u16CF")}).to.throw(Error, "EncodingError U+16CF");
expect(() => {ms932Encoder.encode("\u16D0")}).to.throw(Error, "EncodingError U+16D0");
expect(() => {ms932Encoder.encode("\u16D1")}).to.throw(Error, "EncodingError U+16D1");
expect(() => {ms932Encoder.encode("\u16D2")}).to.throw(Error, "EncodingError U+16D2");
expect(() => {ms932Encoder.encode("\u16D3")}).to.throw(Error, "EncodingError U+16D3");
expect(() => {ms932Encoder.encode("\u16D4")}).to.throw(Error, "EncodingError U+16D4");
expect(() => {ms932Encoder.encode("\u16D5")}).to.throw(Error, "EncodingError U+16D5");
expect(() => {ms932Encoder.encode("\u16D6")}).to.throw(Error, "EncodingError U+16D6");
expect(() => {ms932Encoder.encode("\u16D7")}).to.throw(Error, "EncodingError U+16D7");
expect(() => {ms932Encoder.encode("\u16D8")}).to.throw(Error, "EncodingError U+16D8");
expect(() => {ms932Encoder.encode("\u16D9")}).to.throw(Error, "EncodingError U+16D9");
expect(() => {ms932Encoder.encode("\u16DA")}).to.throw(Error, "EncodingError U+16DA");
expect(() => {ms932Encoder.encode("\u16DB")}).to.throw(Error, "EncodingError U+16DB");
expect(() => {ms932Encoder.encode("\u16DC")}).to.throw(Error, "EncodingError U+16DC");
expect(() => {ms932Encoder.encode("\u16DD")}).to.throw(Error, "EncodingError U+16DD");
expect(() => {ms932Encoder.encode("\u16DE")}).to.throw(Error, "EncodingError U+16DE");
expect(() => {ms932Encoder.encode("\u16DF")}).to.throw(Error, "EncodingError U+16DF");
expect(() => {ms932Encoder.encode("\u16E0")}).to.throw(Error, "EncodingError U+16E0");
expect(() => {ms932Encoder.encode("\u16E1")}).to.throw(Error, "EncodingError U+16E1");
expect(() => {ms932Encoder.encode("\u16E2")}).to.throw(Error, "EncodingError U+16E2");
expect(() => {ms932Encoder.encode("\u16E3")}).to.throw(Error, "EncodingError U+16E3");
expect(() => {ms932Encoder.encode("\u16E4")}).to.throw(Error, "EncodingError U+16E4");
expect(() => {ms932Encoder.encode("\u16E5")}).to.throw(Error, "EncodingError U+16E5");
expect(() => {ms932Encoder.encode("\u16E6")}).to.throw(Error, "EncodingError U+16E6");
expect(() => {ms932Encoder.encode("\u16E7")}).to.throw(Error, "EncodingError U+16E7");
expect(() => {ms932Encoder.encode("\u16E8")}).to.throw(Error, "EncodingError U+16E8");
expect(() => {ms932Encoder.encode("\u16E9")}).to.throw(Error, "EncodingError U+16E9");
expect(() => {ms932Encoder.encode("\u16EA")}).to.throw(Error, "EncodingError U+16EA");
expect(() => {ms932Encoder.encode("\u16EB")}).to.throw(Error, "EncodingError U+16EB");
expect(() => {ms932Encoder.encode("\u16EC")}).to.throw(Error, "EncodingError U+16EC");
expect(() => {ms932Encoder.encode("\u16ED")}).to.throw(Error, "EncodingError U+16ED");
expect(() => {ms932Encoder.encode("\u16EE")}).to.throw(Error, "EncodingError U+16EE");
expect(() => {ms932Encoder.encode("\u16EF")}).to.throw(Error, "EncodingError U+16EF");
expect(() => {ms932Encoder.encode("\u16F0")}).to.throw(Error, "EncodingError U+16F0");
expect(() => {ms932Encoder.encode("\u16F1")}).to.throw(Error, "EncodingError U+16F1");
expect(() => {ms932Encoder.encode("\u16F2")}).to.throw(Error, "EncodingError U+16F2");
expect(() => {ms932Encoder.encode("\u16F3")}).to.throw(Error, "EncodingError U+16F3");
expect(() => {ms932Encoder.encode("\u16F4")}).to.throw(Error, "EncodingError U+16F4");
expect(() => {ms932Encoder.encode("\u16F5")}).to.throw(Error, "EncodingError U+16F5");
expect(() => {ms932Encoder.encode("\u16F6")}).to.throw(Error, "EncodingError U+16F6");
expect(() => {ms932Encoder.encode("\u16F7")}).to.throw(Error, "EncodingError U+16F7");
expect(() => {ms932Encoder.encode("\u16F8")}).to.throw(Error, "EncodingError U+16F8");
expect(() => {ms932Encoder.encode("\u16F9")}).to.throw(Error, "EncodingError U+16F9");
expect(() => {ms932Encoder.encode("\u16FA")}).to.throw(Error, "EncodingError U+16FA");
expect(() => {ms932Encoder.encode("\u16FB")}).to.throw(Error, "EncodingError U+16FB");
expect(() => {ms932Encoder.encode("\u16FC")}).to.throw(Error, "EncodingError U+16FC");
expect(() => {ms932Encoder.encode("\u16FD")}).to.throw(Error, "EncodingError U+16FD");
expect(() => {ms932Encoder.encode("\u16FE")}).to.throw(Error, "EncodingError U+16FE");
expect(() => {ms932Encoder.encode("\u16FF")}).to.throw(Error, "EncodingError U+16FF");
expect(() => {ms932Encoder.encode("\u1700")}).to.throw(Error, "EncodingError U+1700");
expect(() => {ms932Encoder.encode("\u1701")}).to.throw(Error, "EncodingError U+1701");
expect(() => {ms932Encoder.encode("\u1702")}).to.throw(Error, "EncodingError U+1702");
expect(() => {ms932Encoder.encode("\u1703")}).to.throw(Error, "EncodingError U+1703");
expect(() => {ms932Encoder.encode("\u1704")}).to.throw(Error, "EncodingError U+1704");
expect(() => {ms932Encoder.encode("\u1705")}).to.throw(Error, "EncodingError U+1705");
expect(() => {ms932Encoder.encode("\u1706")}).to.throw(Error, "EncodingError U+1706");
expect(() => {ms932Encoder.encode("\u1707")}).to.throw(Error, "EncodingError U+1707");
expect(() => {ms932Encoder.encode("\u1708")}).to.throw(Error, "EncodingError U+1708");
expect(() => {ms932Encoder.encode("\u1709")}).to.throw(Error, "EncodingError U+1709");
expect(() => {ms932Encoder.encode("\u170A")}).to.throw(Error, "EncodingError U+170A");
expect(() => {ms932Encoder.encode("\u170B")}).to.throw(Error, "EncodingError U+170B");
expect(() => {ms932Encoder.encode("\u170C")}).to.throw(Error, "EncodingError U+170C");
expect(() => {ms932Encoder.encode("\u170D")}).to.throw(Error, "EncodingError U+170D");
expect(() => {ms932Encoder.encode("\u170E")}).to.throw(Error, "EncodingError U+170E");
expect(() => {ms932Encoder.encode("\u170F")}).to.throw(Error, "EncodingError U+170F");
expect(() => {ms932Encoder.encode("\u1710")}).to.throw(Error, "EncodingError U+1710");
expect(() => {ms932Encoder.encode("\u1711")}).to.throw(Error, "EncodingError U+1711");
expect(() => {ms932Encoder.encode("\u1712")}).to.throw(Error, "EncodingError U+1712");
expect(() => {ms932Encoder.encode("\u1713")}).to.throw(Error, "EncodingError U+1713");
expect(() => {ms932Encoder.encode("\u1714")}).to.throw(Error, "EncodingError U+1714");
expect(() => {ms932Encoder.encode("\u1715")}).to.throw(Error, "EncodingError U+1715");
expect(() => {ms932Encoder.encode("\u1716")}).to.throw(Error, "EncodingError U+1716");
expect(() => {ms932Encoder.encode("\u1717")}).to.throw(Error, "EncodingError U+1717");
expect(() => {ms932Encoder.encode("\u1718")}).to.throw(Error, "EncodingError U+1718");
expect(() => {ms932Encoder.encode("\u1719")}).to.throw(Error, "EncodingError U+1719");
expect(() => {ms932Encoder.encode("\u171A")}).to.throw(Error, "EncodingError U+171A");
expect(() => {ms932Encoder.encode("\u171B")}).to.throw(Error, "EncodingError U+171B");
expect(() => {ms932Encoder.encode("\u171C")}).to.throw(Error, "EncodingError U+171C");
expect(() => {ms932Encoder.encode("\u171D")}).to.throw(Error, "EncodingError U+171D");
expect(() => {ms932Encoder.encode("\u171E")}).to.throw(Error, "EncodingError U+171E");
expect(() => {ms932Encoder.encode("\u171F")}).to.throw(Error, "EncodingError U+171F");
expect(() => {ms932Encoder.encode("\u1720")}).to.throw(Error, "EncodingError U+1720");
expect(() => {ms932Encoder.encode("\u1721")}).to.throw(Error, "EncodingError U+1721");
expect(() => {ms932Encoder.encode("\u1722")}).to.throw(Error, "EncodingError U+1722");
expect(() => {ms932Encoder.encode("\u1723")}).to.throw(Error, "EncodingError U+1723");
expect(() => {ms932Encoder.encode("\u1724")}).to.throw(Error, "EncodingError U+1724");
expect(() => {ms932Encoder.encode("\u1725")}).to.throw(Error, "EncodingError U+1725");
expect(() => {ms932Encoder.encode("\u1726")}).to.throw(Error, "EncodingError U+1726");
expect(() => {ms932Encoder.encode("\u1727")}).to.throw(Error, "EncodingError U+1727");
expect(() => {ms932Encoder.encode("\u1728")}).to.throw(Error, "EncodingError U+1728");
expect(() => {ms932Encoder.encode("\u1729")}).to.throw(Error, "EncodingError U+1729");
expect(() => {ms932Encoder.encode("\u172A")}).to.throw(Error, "EncodingError U+172A");
expect(() => {ms932Encoder.encode("\u172B")}).to.throw(Error, "EncodingError U+172B");
expect(() => {ms932Encoder.encode("\u172C")}).to.throw(Error, "EncodingError U+172C");
expect(() => {ms932Encoder.encode("\u172D")}).to.throw(Error, "EncodingError U+172D");
expect(() => {ms932Encoder.encode("\u172E")}).to.throw(Error, "EncodingError U+172E");
expect(() => {ms932Encoder.encode("\u172F")}).to.throw(Error, "EncodingError U+172F");
expect(() => {ms932Encoder.encode("\u1730")}).to.throw(Error, "EncodingError U+1730");
expect(() => {ms932Encoder.encode("\u1731")}).to.throw(Error, "EncodingError U+1731");
expect(() => {ms932Encoder.encode("\u1732")}).to.throw(Error, "EncodingError U+1732");
expect(() => {ms932Encoder.encode("\u1733")}).to.throw(Error, "EncodingError U+1733");
expect(() => {ms932Encoder.encode("\u1734")}).to.throw(Error, "EncodingError U+1734");
expect(() => {ms932Encoder.encode("\u1735")}).to.throw(Error, "EncodingError U+1735");
expect(() => {ms932Encoder.encode("\u1736")}).to.throw(Error, "EncodingError U+1736");
expect(() => {ms932Encoder.encode("\u1737")}).to.throw(Error, "EncodingError U+1737");
expect(() => {ms932Encoder.encode("\u1738")}).to.throw(Error, "EncodingError U+1738");
expect(() => {ms932Encoder.encode("\u1739")}).to.throw(Error, "EncodingError U+1739");
expect(() => {ms932Encoder.encode("\u173A")}).to.throw(Error, "EncodingError U+173A");
expect(() => {ms932Encoder.encode("\u173B")}).to.throw(Error, "EncodingError U+173B");
expect(() => {ms932Encoder.encode("\u173C")}).to.throw(Error, "EncodingError U+173C");
expect(() => {ms932Encoder.encode("\u173D")}).to.throw(Error, "EncodingError U+173D");
expect(() => {ms932Encoder.encode("\u173E")}).to.throw(Error, "EncodingError U+173E");
expect(() => {ms932Encoder.encode("\u173F")}).to.throw(Error, "EncodingError U+173F");
expect(() => {ms932Encoder.encode("\u1740")}).to.throw(Error, "EncodingError U+1740");
expect(() => {ms932Encoder.encode("\u1741")}).to.throw(Error, "EncodingError U+1741");
expect(() => {ms932Encoder.encode("\u1742")}).to.throw(Error, "EncodingError U+1742");
expect(() => {ms932Encoder.encode("\u1743")}).to.throw(Error, "EncodingError U+1743");
expect(() => {ms932Encoder.encode("\u1744")}).to.throw(Error, "EncodingError U+1744");
expect(() => {ms932Encoder.encode("\u1745")}).to.throw(Error, "EncodingError U+1745");
expect(() => {ms932Encoder.encode("\u1746")}).to.throw(Error, "EncodingError U+1746");
expect(() => {ms932Encoder.encode("\u1747")}).to.throw(Error, "EncodingError U+1747");
expect(() => {ms932Encoder.encode("\u1748")}).to.throw(Error, "EncodingError U+1748");
expect(() => {ms932Encoder.encode("\u1749")}).to.throw(Error, "EncodingError U+1749");
expect(() => {ms932Encoder.encode("\u174A")}).to.throw(Error, "EncodingError U+174A");
expect(() => {ms932Encoder.encode("\u174B")}).to.throw(Error, "EncodingError U+174B");
expect(() => {ms932Encoder.encode("\u174C")}).to.throw(Error, "EncodingError U+174C");
expect(() => {ms932Encoder.encode("\u174D")}).to.throw(Error, "EncodingError U+174D");
expect(() => {ms932Encoder.encode("\u174E")}).to.throw(Error, "EncodingError U+174E");
expect(() => {ms932Encoder.encode("\u174F")}).to.throw(Error, "EncodingError U+174F");
expect(() => {ms932Encoder.encode("\u1750")}).to.throw(Error, "EncodingError U+1750");
expect(() => {ms932Encoder.encode("\u1751")}).to.throw(Error, "EncodingError U+1751");
expect(() => {ms932Encoder.encode("\u1752")}).to.throw(Error, "EncodingError U+1752");
expect(() => {ms932Encoder.encode("\u1753")}).to.throw(Error, "EncodingError U+1753");
expect(() => {ms932Encoder.encode("\u1754")}).to.throw(Error, "EncodingError U+1754");
expect(() => {ms932Encoder.encode("\u1755")}).to.throw(Error, "EncodingError U+1755");
expect(() => {ms932Encoder.encode("\u1756")}).to.throw(Error, "EncodingError U+1756");
expect(() => {ms932Encoder.encode("\u1757")}).to.throw(Error, "EncodingError U+1757");
expect(() => {ms932Encoder.encode("\u1758")}).to.throw(Error, "EncodingError U+1758");
expect(() => {ms932Encoder.encode("\u1759")}).to.throw(Error, "EncodingError U+1759");
expect(() => {ms932Encoder.encode("\u175A")}).to.throw(Error, "EncodingError U+175A");
expect(() => {ms932Encoder.encode("\u175B")}).to.throw(Error, "EncodingError U+175B");
expect(() => {ms932Encoder.encode("\u175C")}).to.throw(Error, "EncodingError U+175C");
expect(() => {ms932Encoder.encode("\u175D")}).to.throw(Error, "EncodingError U+175D");
expect(() => {ms932Encoder.encode("\u175E")}).to.throw(Error, "EncodingError U+175E");
expect(() => {ms932Encoder.encode("\u175F")}).to.throw(Error, "EncodingError U+175F");
expect(() => {ms932Encoder.encode("\u1760")}).to.throw(Error, "EncodingError U+1760");
expect(() => {ms932Encoder.encode("\u1761")}).to.throw(Error, "EncodingError U+1761");
expect(() => {ms932Encoder.encode("\u1762")}).to.throw(Error, "EncodingError U+1762");
expect(() => {ms932Encoder.encode("\u1763")}).to.throw(Error, "EncodingError U+1763");
expect(() => {ms932Encoder.encode("\u1764")}).to.throw(Error, "EncodingError U+1764");
expect(() => {ms932Encoder.encode("\u1765")}).to.throw(Error, "EncodingError U+1765");
expect(() => {ms932Encoder.encode("\u1766")}).to.throw(Error, "EncodingError U+1766");
expect(() => {ms932Encoder.encode("\u1767")}).to.throw(Error, "EncodingError U+1767");
expect(() => {ms932Encoder.encode("\u1768")}).to.throw(Error, "EncodingError U+1768");
expect(() => {ms932Encoder.encode("\u1769")}).to.throw(Error, "EncodingError U+1769");
expect(() => {ms932Encoder.encode("\u176A")}).to.throw(Error, "EncodingError U+176A");
expect(() => {ms932Encoder.encode("\u176B")}).to.throw(Error, "EncodingError U+176B");
expect(() => {ms932Encoder.encode("\u176C")}).to.throw(Error, "EncodingError U+176C");
expect(() => {ms932Encoder.encode("\u176D")}).to.throw(Error, "EncodingError U+176D");
expect(() => {ms932Encoder.encode("\u176E")}).to.throw(Error, "EncodingError U+176E");
expect(() => {ms932Encoder.encode("\u176F")}).to.throw(Error, "EncodingError U+176F");
expect(() => {ms932Encoder.encode("\u1770")}).to.throw(Error, "EncodingError U+1770");
expect(() => {ms932Encoder.encode("\u1771")}).to.throw(Error, "EncodingError U+1771");
expect(() => {ms932Encoder.encode("\u1772")}).to.throw(Error, "EncodingError U+1772");
expect(() => {ms932Encoder.encode("\u1773")}).to.throw(Error, "EncodingError U+1773");
expect(() => {ms932Encoder.encode("\u1774")}).to.throw(Error, "EncodingError U+1774");
expect(() => {ms932Encoder.encode("\u1775")}).to.throw(Error, "EncodingError U+1775");
expect(() => {ms932Encoder.encode("\u1776")}).to.throw(Error, "EncodingError U+1776");
expect(() => {ms932Encoder.encode("\u1777")}).to.throw(Error, "EncodingError U+1777");
expect(() => {ms932Encoder.encode("\u1778")}).to.throw(Error, "EncodingError U+1778");
expect(() => {ms932Encoder.encode("\u1779")}).to.throw(Error, "EncodingError U+1779");
expect(() => {ms932Encoder.encode("\u177A")}).to.throw(Error, "EncodingError U+177A");
expect(() => {ms932Encoder.encode("\u177B")}).to.throw(Error, "EncodingError U+177B");
expect(() => {ms932Encoder.encode("\u177C")}).to.throw(Error, "EncodingError U+177C");
expect(() => {ms932Encoder.encode("\u177D")}).to.throw(Error, "EncodingError U+177D");
expect(() => {ms932Encoder.encode("\u177E")}).to.throw(Error, "EncodingError U+177E");
expect(() => {ms932Encoder.encode("\u177F")}).to.throw(Error, "EncodingError U+177F");
expect(() => {ms932Encoder.encode("\u1780")}).to.throw(Error, "EncodingError U+1780");
expect(() => {ms932Encoder.encode("\u1781")}).to.throw(Error, "EncodingError U+1781");
expect(() => {ms932Encoder.encode("\u1782")}).to.throw(Error, "EncodingError U+1782");
expect(() => {ms932Encoder.encode("\u1783")}).to.throw(Error, "EncodingError U+1783");
expect(() => {ms932Encoder.encode("\u1784")}).to.throw(Error, "EncodingError U+1784");
expect(() => {ms932Encoder.encode("\u1785")}).to.throw(Error, "EncodingError U+1785");
expect(() => {ms932Encoder.encode("\u1786")}).to.throw(Error, "EncodingError U+1786");
expect(() => {ms932Encoder.encode("\u1787")}).to.throw(Error, "EncodingError U+1787");
expect(() => {ms932Encoder.encode("\u1788")}).to.throw(Error, "EncodingError U+1788");
expect(() => {ms932Encoder.encode("\u1789")}).to.throw(Error, "EncodingError U+1789");
expect(() => {ms932Encoder.encode("\u178A")}).to.throw(Error, "EncodingError U+178A");
expect(() => {ms932Encoder.encode("\u178B")}).to.throw(Error, "EncodingError U+178B");
expect(() => {ms932Encoder.encode("\u178C")}).to.throw(Error, "EncodingError U+178C");
expect(() => {ms932Encoder.encode("\u178D")}).to.throw(Error, "EncodingError U+178D");
expect(() => {ms932Encoder.encode("\u178E")}).to.throw(Error, "EncodingError U+178E");
expect(() => {ms932Encoder.encode("\u178F")}).to.throw(Error, "EncodingError U+178F");
expect(() => {ms932Encoder.encode("\u1790")}).to.throw(Error, "EncodingError U+1790");
expect(() => {ms932Encoder.encode("\u1791")}).to.throw(Error, "EncodingError U+1791");
expect(() => {ms932Encoder.encode("\u1792")}).to.throw(Error, "EncodingError U+1792");
expect(() => {ms932Encoder.encode("\u1793")}).to.throw(Error, "EncodingError U+1793");
expect(() => {ms932Encoder.encode("\u1794")}).to.throw(Error, "EncodingError U+1794");
expect(() => {ms932Encoder.encode("\u1795")}).to.throw(Error, "EncodingError U+1795");
expect(() => {ms932Encoder.encode("\u1796")}).to.throw(Error, "EncodingError U+1796");
expect(() => {ms932Encoder.encode("\u1797")}).to.throw(Error, "EncodingError U+1797");
expect(() => {ms932Encoder.encode("\u1798")}).to.throw(Error, "EncodingError U+1798");
expect(() => {ms932Encoder.encode("\u1799")}).to.throw(Error, "EncodingError U+1799");
expect(() => {ms932Encoder.encode("\u179A")}).to.throw(Error, "EncodingError U+179A");
expect(() => {ms932Encoder.encode("\u179B")}).to.throw(Error, "EncodingError U+179B");
expect(() => {ms932Encoder.encode("\u179C")}).to.throw(Error, "EncodingError U+179C");
expect(() => {ms932Encoder.encode("\u179D")}).to.throw(Error, "EncodingError U+179D");
expect(() => {ms932Encoder.encode("\u179E")}).to.throw(Error, "EncodingError U+179E");
expect(() => {ms932Encoder.encode("\u179F")}).to.throw(Error, "EncodingError U+179F");
expect(() => {ms932Encoder.encode("\u17A0")}).to.throw(Error, "EncodingError U+17A0");
expect(() => {ms932Encoder.encode("\u17A1")}).to.throw(Error, "EncodingError U+17A1");
expect(() => {ms932Encoder.encode("\u17A2")}).to.throw(Error, "EncodingError U+17A2");
expect(() => {ms932Encoder.encode("\u17A3")}).to.throw(Error, "EncodingError U+17A3");
expect(() => {ms932Encoder.encode("\u17A4")}).to.throw(Error, "EncodingError U+17A4");
expect(() => {ms932Encoder.encode("\u17A5")}).to.throw(Error, "EncodingError U+17A5");
expect(() => {ms932Encoder.encode("\u17A6")}).to.throw(Error, "EncodingError U+17A6");
expect(() => {ms932Encoder.encode("\u17A7")}).to.throw(Error, "EncodingError U+17A7");
expect(() => {ms932Encoder.encode("\u17A8")}).to.throw(Error, "EncodingError U+17A8");
expect(() => {ms932Encoder.encode("\u17A9")}).to.throw(Error, "EncodingError U+17A9");
expect(() => {ms932Encoder.encode("\u17AA")}).to.throw(Error, "EncodingError U+17AA");
expect(() => {ms932Encoder.encode("\u17AB")}).to.throw(Error, "EncodingError U+17AB");
expect(() => {ms932Encoder.encode("\u17AC")}).to.throw(Error, "EncodingError U+17AC");
expect(() => {ms932Encoder.encode("\u17AD")}).to.throw(Error, "EncodingError U+17AD");
expect(() => {ms932Encoder.encode("\u17AE")}).to.throw(Error, "EncodingError U+17AE");
expect(() => {ms932Encoder.encode("\u17AF")}).to.throw(Error, "EncodingError U+17AF");
expect(() => {ms932Encoder.encode("\u17B0")}).to.throw(Error, "EncodingError U+17B0");
expect(() => {ms932Encoder.encode("\u17B1")}).to.throw(Error, "EncodingError U+17B1");
expect(() => {ms932Encoder.encode("\u17B2")}).to.throw(Error, "EncodingError U+17B2");
expect(() => {ms932Encoder.encode("\u17B3")}).to.throw(Error, "EncodingError U+17B3");
expect(() => {ms932Encoder.encode("\u17B4")}).to.throw(Error, "EncodingError U+17B4");
expect(() => {ms932Encoder.encode("\u17B5")}).to.throw(Error, "EncodingError U+17B5");
expect(() => {ms932Encoder.encode("\u17B6")}).to.throw(Error, "EncodingError U+17B6");
expect(() => {ms932Encoder.encode("\u17B7")}).to.throw(Error, "EncodingError U+17B7");
expect(() => {ms932Encoder.encode("\u17B8")}).to.throw(Error, "EncodingError U+17B8");
expect(() => {ms932Encoder.encode("\u17B9")}).to.throw(Error, "EncodingError U+17B9");
expect(() => {ms932Encoder.encode("\u17BA")}).to.throw(Error, "EncodingError U+17BA");
expect(() => {ms932Encoder.encode("\u17BB")}).to.throw(Error, "EncodingError U+17BB");
expect(() => {ms932Encoder.encode("\u17BC")}).to.throw(Error, "EncodingError U+17BC");
expect(() => {ms932Encoder.encode("\u17BD")}).to.throw(Error, "EncodingError U+17BD");
expect(() => {ms932Encoder.encode("\u17BE")}).to.throw(Error, "EncodingError U+17BE");
expect(() => {ms932Encoder.encode("\u17BF")}).to.throw(Error, "EncodingError U+17BF");
expect(() => {ms932Encoder.encode("\u17C0")}).to.throw(Error, "EncodingError U+17C0");
expect(() => {ms932Encoder.encode("\u17C1")}).to.throw(Error, "EncodingError U+17C1");
expect(() => {ms932Encoder.encode("\u17C2")}).to.throw(Error, "EncodingError U+17C2");
expect(() => {ms932Encoder.encode("\u17C3")}).to.throw(Error, "EncodingError U+17C3");
expect(() => {ms932Encoder.encode("\u17C4")}).to.throw(Error, "EncodingError U+17C4");
expect(() => {ms932Encoder.encode("\u17C5")}).to.throw(Error, "EncodingError U+17C5");
expect(() => {ms932Encoder.encode("\u17C6")}).to.throw(Error, "EncodingError U+17C6");
expect(() => {ms932Encoder.encode("\u17C7")}).to.throw(Error, "EncodingError U+17C7");
expect(() => {ms932Encoder.encode("\u17C8")}).to.throw(Error, "EncodingError U+17C8");
expect(() => {ms932Encoder.encode("\u17C9")}).to.throw(Error, "EncodingError U+17C9");
expect(() => {ms932Encoder.encode("\u17CA")}).to.throw(Error, "EncodingError U+17CA");
expect(() => {ms932Encoder.encode("\u17CB")}).to.throw(Error, "EncodingError U+17CB");
expect(() => {ms932Encoder.encode("\u17CC")}).to.throw(Error, "EncodingError U+17CC");
expect(() => {ms932Encoder.encode("\u17CD")}).to.throw(Error, "EncodingError U+17CD");
expect(() => {ms932Encoder.encode("\u17CE")}).to.throw(Error, "EncodingError U+17CE");
expect(() => {ms932Encoder.encode("\u17CF")}).to.throw(Error, "EncodingError U+17CF");
expect(() => {ms932Encoder.encode("\u17D0")}).to.throw(Error, "EncodingError U+17D0");
expect(() => {ms932Encoder.encode("\u17D1")}).to.throw(Error, "EncodingError U+17D1");
expect(() => {ms932Encoder.encode("\u17D2")}).to.throw(Error, "EncodingError U+17D2");
expect(() => {ms932Encoder.encode("\u17D3")}).to.throw(Error, "EncodingError U+17D3");
expect(() => {ms932Encoder.encode("\u17D4")}).to.throw(Error, "EncodingError U+17D4");
expect(() => {ms932Encoder.encode("\u17D5")}).to.throw(Error, "EncodingError U+17D5");
expect(() => {ms932Encoder.encode("\u17D6")}).to.throw(Error, "EncodingError U+17D6");
expect(() => {ms932Encoder.encode("\u17D7")}).to.throw(Error, "EncodingError U+17D7");
expect(() => {ms932Encoder.encode("\u17D8")}).to.throw(Error, "EncodingError U+17D8");
expect(() => {ms932Encoder.encode("\u17D9")}).to.throw(Error, "EncodingError U+17D9");
expect(() => {ms932Encoder.encode("\u17DA")}).to.throw(Error, "EncodingError U+17DA");
expect(() => {ms932Encoder.encode("\u17DB")}).to.throw(Error, "EncodingError U+17DB");
expect(() => {ms932Encoder.encode("\u17DC")}).to.throw(Error, "EncodingError U+17DC");
expect(() => {ms932Encoder.encode("\u17DD")}).to.throw(Error, "EncodingError U+17DD");
expect(() => {ms932Encoder.encode("\u17DE")}).to.throw(Error, "EncodingError U+17DE");
expect(() => {ms932Encoder.encode("\u17DF")}).to.throw(Error, "EncodingError U+17DF");
expect(() => {ms932Encoder.encode("\u17E0")}).to.throw(Error, "EncodingError U+17E0");
expect(() => {ms932Encoder.encode("\u17E1")}).to.throw(Error, "EncodingError U+17E1");
expect(() => {ms932Encoder.encode("\u17E2")}).to.throw(Error, "EncodingError U+17E2");
expect(() => {ms932Encoder.encode("\u17E3")}).to.throw(Error, "EncodingError U+17E3");
expect(() => {ms932Encoder.encode("\u17E4")}).to.throw(Error, "EncodingError U+17E4");
expect(() => {ms932Encoder.encode("\u17E5")}).to.throw(Error, "EncodingError U+17E5");
expect(() => {ms932Encoder.encode("\u17E6")}).to.throw(Error, "EncodingError U+17E6");
expect(() => {ms932Encoder.encode("\u17E7")}).to.throw(Error, "EncodingError U+17E7");
expect(() => {ms932Encoder.encode("\u17E8")}).to.throw(Error, "EncodingError U+17E8");
expect(() => {ms932Encoder.encode("\u17E9")}).to.throw(Error, "EncodingError U+17E9");
expect(() => {ms932Encoder.encode("\u17EA")}).to.throw(Error, "EncodingError U+17EA");
expect(() => {ms932Encoder.encode("\u17EB")}).to.throw(Error, "EncodingError U+17EB");
expect(() => {ms932Encoder.encode("\u17EC")}).to.throw(Error, "EncodingError U+17EC");
expect(() => {ms932Encoder.encode("\u17ED")}).to.throw(Error, "EncodingError U+17ED");
expect(() => {ms932Encoder.encode("\u17EE")}).to.throw(Error, "EncodingError U+17EE");
expect(() => {ms932Encoder.encode("\u17EF")}).to.throw(Error, "EncodingError U+17EF");
expect(() => {ms932Encoder.encode("\u17F0")}).to.throw(Error, "EncodingError U+17F0");
expect(() => {ms932Encoder.encode("\u17F1")}).to.throw(Error, "EncodingError U+17F1");
expect(() => {ms932Encoder.encode("\u17F2")}).to.throw(Error, "EncodingError U+17F2");
expect(() => {ms932Encoder.encode("\u17F3")}).to.throw(Error, "EncodingError U+17F3");
expect(() => {ms932Encoder.encode("\u17F4")}).to.throw(Error, "EncodingError U+17F4");
expect(() => {ms932Encoder.encode("\u17F5")}).to.throw(Error, "EncodingError U+17F5");
expect(() => {ms932Encoder.encode("\u17F6")}).to.throw(Error, "EncodingError U+17F6");
expect(() => {ms932Encoder.encode("\u17F7")}).to.throw(Error, "EncodingError U+17F7");
expect(() => {ms932Encoder.encode("\u17F8")}).to.throw(Error, "EncodingError U+17F8");
expect(() => {ms932Encoder.encode("\u17F9")}).to.throw(Error, "EncodingError U+17F9");
expect(() => {ms932Encoder.encode("\u17FA")}).to.throw(Error, "EncodingError U+17FA");
expect(() => {ms932Encoder.encode("\u17FB")}).to.throw(Error, "EncodingError U+17FB");
expect(() => {ms932Encoder.encode("\u17FC")}).to.throw(Error, "EncodingError U+17FC");
expect(() => {ms932Encoder.encode("\u17FD")}).to.throw(Error, "EncodingError U+17FD");
expect(() => {ms932Encoder.encode("\u17FE")}).to.throw(Error, "EncodingError U+17FE");
expect(() => {ms932Encoder.encode("\u17FF")}).to.throw(Error, "EncodingError U+17FF");
expect(() => {ms932Encoder.encode("\u1800")}).to.throw(Error, "EncodingError U+1800");
expect(() => {ms932Encoder.encode("\u1801")}).to.throw(Error, "EncodingError U+1801");
expect(() => {ms932Encoder.encode("\u1802")}).to.throw(Error, "EncodingError U+1802");
expect(() => {ms932Encoder.encode("\u1803")}).to.throw(Error, "EncodingError U+1803");
expect(() => {ms932Encoder.encode("\u1804")}).to.throw(Error, "EncodingError U+1804");
expect(() => {ms932Encoder.encode("\u1805")}).to.throw(Error, "EncodingError U+1805");
expect(() => {ms932Encoder.encode("\u1806")}).to.throw(Error, "EncodingError U+1806");
expect(() => {ms932Encoder.encode("\u1807")}).to.throw(Error, "EncodingError U+1807");
expect(() => {ms932Encoder.encode("\u1808")}).to.throw(Error, "EncodingError U+1808");
expect(() => {ms932Encoder.encode("\u1809")}).to.throw(Error, "EncodingError U+1809");
expect(() => {ms932Encoder.encode("\u180A")}).to.throw(Error, "EncodingError U+180A");
expect(() => {ms932Encoder.encode("\u180B")}).to.throw(Error, "EncodingError U+180B");
expect(() => {ms932Encoder.encode("\u180C")}).to.throw(Error, "EncodingError U+180C");
expect(() => {ms932Encoder.encode("\u180D")}).to.throw(Error, "EncodingError U+180D");
expect(() => {ms932Encoder.encode("\u180E")}).to.throw(Error, "EncodingError U+180E");
expect(() => {ms932Encoder.encode("\u180F")}).to.throw(Error, "EncodingError U+180F");
expect(() => {ms932Encoder.encode("\u1810")}).to.throw(Error, "EncodingError U+1810");
expect(() => {ms932Encoder.encode("\u1811")}).to.throw(Error, "EncodingError U+1811");
expect(() => {ms932Encoder.encode("\u1812")}).to.throw(Error, "EncodingError U+1812");
expect(() => {ms932Encoder.encode("\u1813")}).to.throw(Error, "EncodingError U+1813");
expect(() => {ms932Encoder.encode("\u1814")}).to.throw(Error, "EncodingError U+1814");
expect(() => {ms932Encoder.encode("\u1815")}).to.throw(Error, "EncodingError U+1815");
expect(() => {ms932Encoder.encode("\u1816")}).to.throw(Error, "EncodingError U+1816");
expect(() => {ms932Encoder.encode("\u1817")}).to.throw(Error, "EncodingError U+1817");
expect(() => {ms932Encoder.encode("\u1818")}).to.throw(Error, "EncodingError U+1818");
expect(() => {ms932Encoder.encode("\u1819")}).to.throw(Error, "EncodingError U+1819");
expect(() => {ms932Encoder.encode("\u181A")}).to.throw(Error, "EncodingError U+181A");
expect(() => {ms932Encoder.encode("\u181B")}).to.throw(Error, "EncodingError U+181B");
expect(() => {ms932Encoder.encode("\u181C")}).to.throw(Error, "EncodingError U+181C");
expect(() => {ms932Encoder.encode("\u181D")}).to.throw(Error, "EncodingError U+181D");
expect(() => {ms932Encoder.encode("\u181E")}).to.throw(Error, "EncodingError U+181E");
expect(() => {ms932Encoder.encode("\u181F")}).to.throw(Error, "EncodingError U+181F");
expect(() => {ms932Encoder.encode("\u1820")}).to.throw(Error, "EncodingError U+1820");
expect(() => {ms932Encoder.encode("\u1821")}).to.throw(Error, "EncodingError U+1821");
expect(() => {ms932Encoder.encode("\u1822")}).to.throw(Error, "EncodingError U+1822");
expect(() => {ms932Encoder.encode("\u1823")}).to.throw(Error, "EncodingError U+1823");
expect(() => {ms932Encoder.encode("\u1824")}).to.throw(Error, "EncodingError U+1824");
expect(() => {ms932Encoder.encode("\u1825")}).to.throw(Error, "EncodingError U+1825");
expect(() => {ms932Encoder.encode("\u1826")}).to.throw(Error, "EncodingError U+1826");
expect(() => {ms932Encoder.encode("\u1827")}).to.throw(Error, "EncodingError U+1827");
expect(() => {ms932Encoder.encode("\u1828")}).to.throw(Error, "EncodingError U+1828");
expect(() => {ms932Encoder.encode("\u1829")}).to.throw(Error, "EncodingError U+1829");
expect(() => {ms932Encoder.encode("\u182A")}).to.throw(Error, "EncodingError U+182A");
expect(() => {ms932Encoder.encode("\u182B")}).to.throw(Error, "EncodingError U+182B");
expect(() => {ms932Encoder.encode("\u182C")}).to.throw(Error, "EncodingError U+182C");
expect(() => {ms932Encoder.encode("\u182D")}).to.throw(Error, "EncodingError U+182D");
expect(() => {ms932Encoder.encode("\u182E")}).to.throw(Error, "EncodingError U+182E");
expect(() => {ms932Encoder.encode("\u182F")}).to.throw(Error, "EncodingError U+182F");
expect(() => {ms932Encoder.encode("\u1830")}).to.throw(Error, "EncodingError U+1830");
expect(() => {ms932Encoder.encode("\u1831")}).to.throw(Error, "EncodingError U+1831");
expect(() => {ms932Encoder.encode("\u1832")}).to.throw(Error, "EncodingError U+1832");
expect(() => {ms932Encoder.encode("\u1833")}).to.throw(Error, "EncodingError U+1833");
expect(() => {ms932Encoder.encode("\u1834")}).to.throw(Error, "EncodingError U+1834");
expect(() => {ms932Encoder.encode("\u1835")}).to.throw(Error, "EncodingError U+1835");
expect(() => {ms932Encoder.encode("\u1836")}).to.throw(Error, "EncodingError U+1836");
expect(() => {ms932Encoder.encode("\u1837")}).to.throw(Error, "EncodingError U+1837");
expect(() => {ms932Encoder.encode("\u1838")}).to.throw(Error, "EncodingError U+1838");
expect(() => {ms932Encoder.encode("\u1839")}).to.throw(Error, "EncodingError U+1839");
expect(() => {ms932Encoder.encode("\u183A")}).to.throw(Error, "EncodingError U+183A");
expect(() => {ms932Encoder.encode("\u183B")}).to.throw(Error, "EncodingError U+183B");
expect(() => {ms932Encoder.encode("\u183C")}).to.throw(Error, "EncodingError U+183C");
expect(() => {ms932Encoder.encode("\u183D")}).to.throw(Error, "EncodingError U+183D");
expect(() => {ms932Encoder.encode("\u183E")}).to.throw(Error, "EncodingError U+183E");
expect(() => {ms932Encoder.encode("\u183F")}).to.throw(Error, "EncodingError U+183F");
expect(() => {ms932Encoder.encode("\u1840")}).to.throw(Error, "EncodingError U+1840");
expect(() => {ms932Encoder.encode("\u1841")}).to.throw(Error, "EncodingError U+1841");
expect(() => {ms932Encoder.encode("\u1842")}).to.throw(Error, "EncodingError U+1842");
expect(() => {ms932Encoder.encode("\u1843")}).to.throw(Error, "EncodingError U+1843");
expect(() => {ms932Encoder.encode("\u1844")}).to.throw(Error, "EncodingError U+1844");
expect(() => {ms932Encoder.encode("\u1845")}).to.throw(Error, "EncodingError U+1845");
expect(() => {ms932Encoder.encode("\u1846")}).to.throw(Error, "EncodingError U+1846");
expect(() => {ms932Encoder.encode("\u1847")}).to.throw(Error, "EncodingError U+1847");
expect(() => {ms932Encoder.encode("\u1848")}).to.throw(Error, "EncodingError U+1848");
expect(() => {ms932Encoder.encode("\u1849")}).to.throw(Error, "EncodingError U+1849");
expect(() => {ms932Encoder.encode("\u184A")}).to.throw(Error, "EncodingError U+184A");
expect(() => {ms932Encoder.encode("\u184B")}).to.throw(Error, "EncodingError U+184B");
expect(() => {ms932Encoder.encode("\u184C")}).to.throw(Error, "EncodingError U+184C");
expect(() => {ms932Encoder.encode("\u184D")}).to.throw(Error, "EncodingError U+184D");
expect(() => {ms932Encoder.encode("\u184E")}).to.throw(Error, "EncodingError U+184E");
expect(() => {ms932Encoder.encode("\u184F")}).to.throw(Error, "EncodingError U+184F");
expect(() => {ms932Encoder.encode("\u1850")}).to.throw(Error, "EncodingError U+1850");
expect(() => {ms932Encoder.encode("\u1851")}).to.throw(Error, "EncodingError U+1851");
expect(() => {ms932Encoder.encode("\u1852")}).to.throw(Error, "EncodingError U+1852");
expect(() => {ms932Encoder.encode("\u1853")}).to.throw(Error, "EncodingError U+1853");
expect(() => {ms932Encoder.encode("\u1854")}).to.throw(Error, "EncodingError U+1854");
expect(() => {ms932Encoder.encode("\u1855")}).to.throw(Error, "EncodingError U+1855");
expect(() => {ms932Encoder.encode("\u1856")}).to.throw(Error, "EncodingError U+1856");
expect(() => {ms932Encoder.encode("\u1857")}).to.throw(Error, "EncodingError U+1857");
expect(() => {ms932Encoder.encode("\u1858")}).to.throw(Error, "EncodingError U+1858");
expect(() => {ms932Encoder.encode("\u1859")}).to.throw(Error, "EncodingError U+1859");
expect(() => {ms932Encoder.encode("\u185A")}).to.throw(Error, "EncodingError U+185A");
expect(() => {ms932Encoder.encode("\u185B")}).to.throw(Error, "EncodingError U+185B");
expect(() => {ms932Encoder.encode("\u185C")}).to.throw(Error, "EncodingError U+185C");
expect(() => {ms932Encoder.encode("\u185D")}).to.throw(Error, "EncodingError U+185D");
expect(() => {ms932Encoder.encode("\u185E")}).to.throw(Error, "EncodingError U+185E");
expect(() => {ms932Encoder.encode("\u185F")}).to.throw(Error, "EncodingError U+185F");
expect(() => {ms932Encoder.encode("\u1860")}).to.throw(Error, "EncodingError U+1860");
expect(() => {ms932Encoder.encode("\u1861")}).to.throw(Error, "EncodingError U+1861");
expect(() => {ms932Encoder.encode("\u1862")}).to.throw(Error, "EncodingError U+1862");
expect(() => {ms932Encoder.encode("\u1863")}).to.throw(Error, "EncodingError U+1863");
expect(() => {ms932Encoder.encode("\u1864")}).to.throw(Error, "EncodingError U+1864");
expect(() => {ms932Encoder.encode("\u1865")}).to.throw(Error, "EncodingError U+1865");
expect(() => {ms932Encoder.encode("\u1866")}).to.throw(Error, "EncodingError U+1866");
expect(() => {ms932Encoder.encode("\u1867")}).to.throw(Error, "EncodingError U+1867");
expect(() => {ms932Encoder.encode("\u1868")}).to.throw(Error, "EncodingError U+1868");
expect(() => {ms932Encoder.encode("\u1869")}).to.throw(Error, "EncodingError U+1869");
expect(() => {ms932Encoder.encode("\u186A")}).to.throw(Error, "EncodingError U+186A");
expect(() => {ms932Encoder.encode("\u186B")}).to.throw(Error, "EncodingError U+186B");
expect(() => {ms932Encoder.encode("\u186C")}).to.throw(Error, "EncodingError U+186C");
expect(() => {ms932Encoder.encode("\u186D")}).to.throw(Error, "EncodingError U+186D");
expect(() => {ms932Encoder.encode("\u186E")}).to.throw(Error, "EncodingError U+186E");
expect(() => {ms932Encoder.encode("\u186F")}).to.throw(Error, "EncodingError U+186F");
expect(() => {ms932Encoder.encode("\u1870")}).to.throw(Error, "EncodingError U+1870");
expect(() => {ms932Encoder.encode("\u1871")}).to.throw(Error, "EncodingError U+1871");
expect(() => {ms932Encoder.encode("\u1872")}).to.throw(Error, "EncodingError U+1872");
expect(() => {ms932Encoder.encode("\u1873")}).to.throw(Error, "EncodingError U+1873");
expect(() => {ms932Encoder.encode("\u1874")}).to.throw(Error, "EncodingError U+1874");
expect(() => {ms932Encoder.encode("\u1875")}).to.throw(Error, "EncodingError U+1875");
expect(() => {ms932Encoder.encode("\u1876")}).to.throw(Error, "EncodingError U+1876");
expect(() => {ms932Encoder.encode("\u1877")}).to.throw(Error, "EncodingError U+1877");
expect(() => {ms932Encoder.encode("\u1878")}).to.throw(Error, "EncodingError U+1878");
expect(() => {ms932Encoder.encode("\u1879")}).to.throw(Error, "EncodingError U+1879");
expect(() => {ms932Encoder.encode("\u187A")}).to.throw(Error, "EncodingError U+187A");
expect(() => {ms932Encoder.encode("\u187B")}).to.throw(Error, "EncodingError U+187B");
expect(() => {ms932Encoder.encode("\u187C")}).to.throw(Error, "EncodingError U+187C");
expect(() => {ms932Encoder.encode("\u187D")}).to.throw(Error, "EncodingError U+187D");
expect(() => {ms932Encoder.encode("\u187E")}).to.throw(Error, "EncodingError U+187E");
expect(() => {ms932Encoder.encode("\u187F")}).to.throw(Error, "EncodingError U+187F");
expect(() => {ms932Encoder.encode("\u1880")}).to.throw(Error, "EncodingError U+1880");
expect(() => {ms932Encoder.encode("\u1881")}).to.throw(Error, "EncodingError U+1881");
expect(() => {ms932Encoder.encode("\u1882")}).to.throw(Error, "EncodingError U+1882");
expect(() => {ms932Encoder.encode("\u1883")}).to.throw(Error, "EncodingError U+1883");
expect(() => {ms932Encoder.encode("\u1884")}).to.throw(Error, "EncodingError U+1884");
expect(() => {ms932Encoder.encode("\u1885")}).to.throw(Error, "EncodingError U+1885");
expect(() => {ms932Encoder.encode("\u1886")}).to.throw(Error, "EncodingError U+1886");
expect(() => {ms932Encoder.encode("\u1887")}).to.throw(Error, "EncodingError U+1887");
expect(() => {ms932Encoder.encode("\u1888")}).to.throw(Error, "EncodingError U+1888");
expect(() => {ms932Encoder.encode("\u1889")}).to.throw(Error, "EncodingError U+1889");
expect(() => {ms932Encoder.encode("\u188A")}).to.throw(Error, "EncodingError U+188A");
expect(() => {ms932Encoder.encode("\u188B")}).to.throw(Error, "EncodingError U+188B");
expect(() => {ms932Encoder.encode("\u188C")}).to.throw(Error, "EncodingError U+188C");
expect(() => {ms932Encoder.encode("\u188D")}).to.throw(Error, "EncodingError U+188D");
expect(() => {ms932Encoder.encode("\u188E")}).to.throw(Error, "EncodingError U+188E");
expect(() => {ms932Encoder.encode("\u188F")}).to.throw(Error, "EncodingError U+188F");
expect(() => {ms932Encoder.encode("\u1890")}).to.throw(Error, "EncodingError U+1890");
expect(() => {ms932Encoder.encode("\u1891")}).to.throw(Error, "EncodingError U+1891");
expect(() => {ms932Encoder.encode("\u1892")}).to.throw(Error, "EncodingError U+1892");
expect(() => {ms932Encoder.encode("\u1893")}).to.throw(Error, "EncodingError U+1893");
expect(() => {ms932Encoder.encode("\u1894")}).to.throw(Error, "EncodingError U+1894");
expect(() => {ms932Encoder.encode("\u1895")}).to.throw(Error, "EncodingError U+1895");
expect(() => {ms932Encoder.encode("\u1896")}).to.throw(Error, "EncodingError U+1896");
expect(() => {ms932Encoder.encode("\u1897")}).to.throw(Error, "EncodingError U+1897");
expect(() => {ms932Encoder.encode("\u1898")}).to.throw(Error, "EncodingError U+1898");
expect(() => {ms932Encoder.encode("\u1899")}).to.throw(Error, "EncodingError U+1899");
expect(() => {ms932Encoder.encode("\u189A")}).to.throw(Error, "EncodingError U+189A");
expect(() => {ms932Encoder.encode("\u189B")}).to.throw(Error, "EncodingError U+189B");
expect(() => {ms932Encoder.encode("\u189C")}).to.throw(Error, "EncodingError U+189C");
expect(() => {ms932Encoder.encode("\u189D")}).to.throw(Error, "EncodingError U+189D");
expect(() => {ms932Encoder.encode("\u189E")}).to.throw(Error, "EncodingError U+189E");
expect(() => {ms932Encoder.encode("\u189F")}).to.throw(Error, "EncodingError U+189F");
expect(() => {ms932Encoder.encode("\u18A0")}).to.throw(Error, "EncodingError U+18A0");
expect(() => {ms932Encoder.encode("\u18A1")}).to.throw(Error, "EncodingError U+18A1");
expect(() => {ms932Encoder.encode("\u18A2")}).to.throw(Error, "EncodingError U+18A2");
expect(() => {ms932Encoder.encode("\u18A3")}).to.throw(Error, "EncodingError U+18A3");
expect(() => {ms932Encoder.encode("\u18A4")}).to.throw(Error, "EncodingError U+18A4");
expect(() => {ms932Encoder.encode("\u18A5")}).to.throw(Error, "EncodingError U+18A5");
expect(() => {ms932Encoder.encode("\u18A6")}).to.throw(Error, "EncodingError U+18A6");
expect(() => {ms932Encoder.encode("\u18A7")}).to.throw(Error, "EncodingError U+18A7");
expect(() => {ms932Encoder.encode("\u18A8")}).to.throw(Error, "EncodingError U+18A8");
expect(() => {ms932Encoder.encode("\u18A9")}).to.throw(Error, "EncodingError U+18A9");
expect(() => {ms932Encoder.encode("\u18AA")}).to.throw(Error, "EncodingError U+18AA");
expect(() => {ms932Encoder.encode("\u18AB")}).to.throw(Error, "EncodingError U+18AB");
expect(() => {ms932Encoder.encode("\u18AC")}).to.throw(Error, "EncodingError U+18AC");
expect(() => {ms932Encoder.encode("\u18AD")}).to.throw(Error, "EncodingError U+18AD");
expect(() => {ms932Encoder.encode("\u18AE")}).to.throw(Error, "EncodingError U+18AE");
expect(() => {ms932Encoder.encode("\u18AF")}).to.throw(Error, "EncodingError U+18AF");
expect(() => {ms932Encoder.encode("\u18B0")}).to.throw(Error, "EncodingError U+18B0");
expect(() => {ms932Encoder.encode("\u18B1")}).to.throw(Error, "EncodingError U+18B1");
expect(() => {ms932Encoder.encode("\u18B2")}).to.throw(Error, "EncodingError U+18B2");
expect(() => {ms932Encoder.encode("\u18B3")}).to.throw(Error, "EncodingError U+18B3");
expect(() => {ms932Encoder.encode("\u18B4")}).to.throw(Error, "EncodingError U+18B4");
expect(() => {ms932Encoder.encode("\u18B5")}).to.throw(Error, "EncodingError U+18B5");
expect(() => {ms932Encoder.encode("\u18B6")}).to.throw(Error, "EncodingError U+18B6");
expect(() => {ms932Encoder.encode("\u18B7")}).to.throw(Error, "EncodingError U+18B7");
expect(() => {ms932Encoder.encode("\u18B8")}).to.throw(Error, "EncodingError U+18B8");
expect(() => {ms932Encoder.encode("\u18B9")}).to.throw(Error, "EncodingError U+18B9");
expect(() => {ms932Encoder.encode("\u18BA")}).to.throw(Error, "EncodingError U+18BA");
expect(() => {ms932Encoder.encode("\u18BB")}).to.throw(Error, "EncodingError U+18BB");
expect(() => {ms932Encoder.encode("\u18BC")}).to.throw(Error, "EncodingError U+18BC");
expect(() => {ms932Encoder.encode("\u18BD")}).to.throw(Error, "EncodingError U+18BD");
expect(() => {ms932Encoder.encode("\u18BE")}).to.throw(Error, "EncodingError U+18BE");
expect(() => {ms932Encoder.encode("\u18BF")}).to.throw(Error, "EncodingError U+18BF");
expect(() => {ms932Encoder.encode("\u18C0")}).to.throw(Error, "EncodingError U+18C0");
expect(() => {ms932Encoder.encode("\u18C1")}).to.throw(Error, "EncodingError U+18C1");
expect(() => {ms932Encoder.encode("\u18C2")}).to.throw(Error, "EncodingError U+18C2");
expect(() => {ms932Encoder.encode("\u18C3")}).to.throw(Error, "EncodingError U+18C3");
expect(() => {ms932Encoder.encode("\u18C4")}).to.throw(Error, "EncodingError U+18C4");
expect(() => {ms932Encoder.encode("\u18C5")}).to.throw(Error, "EncodingError U+18C5");
expect(() => {ms932Encoder.encode("\u18C6")}).to.throw(Error, "EncodingError U+18C6");
expect(() => {ms932Encoder.encode("\u18C7")}).to.throw(Error, "EncodingError U+18C7");
expect(() => {ms932Encoder.encode("\u18C8")}).to.throw(Error, "EncodingError U+18C8");
expect(() => {ms932Encoder.encode("\u18C9")}).to.throw(Error, "EncodingError U+18C9");
expect(() => {ms932Encoder.encode("\u18CA")}).to.throw(Error, "EncodingError U+18CA");
expect(() => {ms932Encoder.encode("\u18CB")}).to.throw(Error, "EncodingError U+18CB");
expect(() => {ms932Encoder.encode("\u18CC")}).to.throw(Error, "EncodingError U+18CC");
expect(() => {ms932Encoder.encode("\u18CD")}).to.throw(Error, "EncodingError U+18CD");
expect(() => {ms932Encoder.encode("\u18CE")}).to.throw(Error, "EncodingError U+18CE");
expect(() => {ms932Encoder.encode("\u18CF")}).to.throw(Error, "EncodingError U+18CF");
expect(() => {ms932Encoder.encode("\u18D0")}).to.throw(Error, "EncodingError U+18D0");
expect(() => {ms932Encoder.encode("\u18D1")}).to.throw(Error, "EncodingError U+18D1");
expect(() => {ms932Encoder.encode("\u18D2")}).to.throw(Error, "EncodingError U+18D2");
expect(() => {ms932Encoder.encode("\u18D3")}).to.throw(Error, "EncodingError U+18D3");
expect(() => {ms932Encoder.encode("\u18D4")}).to.throw(Error, "EncodingError U+18D4");
expect(() => {ms932Encoder.encode("\u18D5")}).to.throw(Error, "EncodingError U+18D5");
expect(() => {ms932Encoder.encode("\u18D6")}).to.throw(Error, "EncodingError U+18D6");
expect(() => {ms932Encoder.encode("\u18D7")}).to.throw(Error, "EncodingError U+18D7");
expect(() => {ms932Encoder.encode("\u18D8")}).to.throw(Error, "EncodingError U+18D8");
expect(() => {ms932Encoder.encode("\u18D9")}).to.throw(Error, "EncodingError U+18D9");
expect(() => {ms932Encoder.encode("\u18DA")}).to.throw(Error, "EncodingError U+18DA");
expect(() => {ms932Encoder.encode("\u18DB")}).to.throw(Error, "EncodingError U+18DB");
expect(() => {ms932Encoder.encode("\u18DC")}).to.throw(Error, "EncodingError U+18DC");
expect(() => {ms932Encoder.encode("\u18DD")}).to.throw(Error, "EncodingError U+18DD");
expect(() => {ms932Encoder.encode("\u18DE")}).to.throw(Error, "EncodingError U+18DE");
expect(() => {ms932Encoder.encode("\u18DF")}).to.throw(Error, "EncodingError U+18DF");
expect(() => {ms932Encoder.encode("\u18E0")}).to.throw(Error, "EncodingError U+18E0");
expect(() => {ms932Encoder.encode("\u18E1")}).to.throw(Error, "EncodingError U+18E1");
expect(() => {ms932Encoder.encode("\u18E2")}).to.throw(Error, "EncodingError U+18E2");
expect(() => {ms932Encoder.encode("\u18E3")}).to.throw(Error, "EncodingError U+18E3");
expect(() => {ms932Encoder.encode("\u18E4")}).to.throw(Error, "EncodingError U+18E4");
expect(() => {ms932Encoder.encode("\u18E5")}).to.throw(Error, "EncodingError U+18E5");
expect(() => {ms932Encoder.encode("\u18E6")}).to.throw(Error, "EncodingError U+18E6");
expect(() => {ms932Encoder.encode("\u18E7")}).to.throw(Error, "EncodingError U+18E7");
expect(() => {ms932Encoder.encode("\u18E8")}).to.throw(Error, "EncodingError U+18E8");
expect(() => {ms932Encoder.encode("\u18E9")}).to.throw(Error, "EncodingError U+18E9");
expect(() => {ms932Encoder.encode("\u18EA")}).to.throw(Error, "EncodingError U+18EA");
expect(() => {ms932Encoder.encode("\u18EB")}).to.throw(Error, "EncodingError U+18EB");
expect(() => {ms932Encoder.encode("\u18EC")}).to.throw(Error, "EncodingError U+18EC");
expect(() => {ms932Encoder.encode("\u18ED")}).to.throw(Error, "EncodingError U+18ED");
expect(() => {ms932Encoder.encode("\u18EE")}).to.throw(Error, "EncodingError U+18EE");
expect(() => {ms932Encoder.encode("\u18EF")}).to.throw(Error, "EncodingError U+18EF");
expect(() => {ms932Encoder.encode("\u18F0")}).to.throw(Error, "EncodingError U+18F0");
expect(() => {ms932Encoder.encode("\u18F1")}).to.throw(Error, "EncodingError U+18F1");
expect(() => {ms932Encoder.encode("\u18F2")}).to.throw(Error, "EncodingError U+18F2");
expect(() => {ms932Encoder.encode("\u18F3")}).to.throw(Error, "EncodingError U+18F3");
expect(() => {ms932Encoder.encode("\u18F4")}).to.throw(Error, "EncodingError U+18F4");
expect(() => {ms932Encoder.encode("\u18F5")}).to.throw(Error, "EncodingError U+18F5");
expect(() => {ms932Encoder.encode("\u18F6")}).to.throw(Error, "EncodingError U+18F6");
expect(() => {ms932Encoder.encode("\u18F7")}).to.throw(Error, "EncodingError U+18F7");
expect(() => {ms932Encoder.encode("\u18F8")}).to.throw(Error, "EncodingError U+18F8");
expect(() => {ms932Encoder.encode("\u18F9")}).to.throw(Error, "EncodingError U+18F9");
expect(() => {ms932Encoder.encode("\u18FA")}).to.throw(Error, "EncodingError U+18FA");
expect(() => {ms932Encoder.encode("\u18FB")}).to.throw(Error, "EncodingError U+18FB");
expect(() => {ms932Encoder.encode("\u18FC")}).to.throw(Error, "EncodingError U+18FC");
expect(() => {ms932Encoder.encode("\u18FD")}).to.throw(Error, "EncodingError U+18FD");
expect(() => {ms932Encoder.encode("\u18FE")}).to.throw(Error, "EncodingError U+18FE");
expect(() => {ms932Encoder.encode("\u18FF")}).to.throw(Error, "EncodingError U+18FF");
expect(() => {ms932Encoder.encode("\u1900")}).to.throw(Error, "EncodingError U+1900");
expect(() => {ms932Encoder.encode("\u1901")}).to.throw(Error, "EncodingError U+1901");
expect(() => {ms932Encoder.encode("\u1902")}).to.throw(Error, "EncodingError U+1902");
expect(() => {ms932Encoder.encode("\u1903")}).to.throw(Error, "EncodingError U+1903");
expect(() => {ms932Encoder.encode("\u1904")}).to.throw(Error, "EncodingError U+1904");
expect(() => {ms932Encoder.encode("\u1905")}).to.throw(Error, "EncodingError U+1905");
expect(() => {ms932Encoder.encode("\u1906")}).to.throw(Error, "EncodingError U+1906");
expect(() => {ms932Encoder.encode("\u1907")}).to.throw(Error, "EncodingError U+1907");
expect(() => {ms932Encoder.encode("\u1908")}).to.throw(Error, "EncodingError U+1908");
expect(() => {ms932Encoder.encode("\u1909")}).to.throw(Error, "EncodingError U+1909");
expect(() => {ms932Encoder.encode("\u190A")}).to.throw(Error, "EncodingError U+190A");
expect(() => {ms932Encoder.encode("\u190B")}).to.throw(Error, "EncodingError U+190B");
expect(() => {ms932Encoder.encode("\u190C")}).to.throw(Error, "EncodingError U+190C");
expect(() => {ms932Encoder.encode("\u190D")}).to.throw(Error, "EncodingError U+190D");
expect(() => {ms932Encoder.encode("\u190E")}).to.throw(Error, "EncodingError U+190E");
expect(() => {ms932Encoder.encode("\u190F")}).to.throw(Error, "EncodingError U+190F");
expect(() => {ms932Encoder.encode("\u1910")}).to.throw(Error, "EncodingError U+1910");
expect(() => {ms932Encoder.encode("\u1911")}).to.throw(Error, "EncodingError U+1911");
expect(() => {ms932Encoder.encode("\u1912")}).to.throw(Error, "EncodingError U+1912");
expect(() => {ms932Encoder.encode("\u1913")}).to.throw(Error, "EncodingError U+1913");
expect(() => {ms932Encoder.encode("\u1914")}).to.throw(Error, "EncodingError U+1914");
expect(() => {ms932Encoder.encode("\u1915")}).to.throw(Error, "EncodingError U+1915");
expect(() => {ms932Encoder.encode("\u1916")}).to.throw(Error, "EncodingError U+1916");
expect(() => {ms932Encoder.encode("\u1917")}).to.throw(Error, "EncodingError U+1917");
expect(() => {ms932Encoder.encode("\u1918")}).to.throw(Error, "EncodingError U+1918");
expect(() => {ms932Encoder.encode("\u1919")}).to.throw(Error, "EncodingError U+1919");
expect(() => {ms932Encoder.encode("\u191A")}).to.throw(Error, "EncodingError U+191A");
expect(() => {ms932Encoder.encode("\u191B")}).to.throw(Error, "EncodingError U+191B");
expect(() => {ms932Encoder.encode("\u191C")}).to.throw(Error, "EncodingError U+191C");
expect(() => {ms932Encoder.encode("\u191D")}).to.throw(Error, "EncodingError U+191D");
expect(() => {ms932Encoder.encode("\u191E")}).to.throw(Error, "EncodingError U+191E");
expect(() => {ms932Encoder.encode("\u191F")}).to.throw(Error, "EncodingError U+191F");
expect(() => {ms932Encoder.encode("\u1920")}).to.throw(Error, "EncodingError U+1920");
expect(() => {ms932Encoder.encode("\u1921")}).to.throw(Error, "EncodingError U+1921");
expect(() => {ms932Encoder.encode("\u1922")}).to.throw(Error, "EncodingError U+1922");
expect(() => {ms932Encoder.encode("\u1923")}).to.throw(Error, "EncodingError U+1923");
expect(() => {ms932Encoder.encode("\u1924")}).to.throw(Error, "EncodingError U+1924");
expect(() => {ms932Encoder.encode("\u1925")}).to.throw(Error, "EncodingError U+1925");
expect(() => {ms932Encoder.encode("\u1926")}).to.throw(Error, "EncodingError U+1926");
expect(() => {ms932Encoder.encode("\u1927")}).to.throw(Error, "EncodingError U+1927");
expect(() => {ms932Encoder.encode("\u1928")}).to.throw(Error, "EncodingError U+1928");
expect(() => {ms932Encoder.encode("\u1929")}).to.throw(Error, "EncodingError U+1929");
expect(() => {ms932Encoder.encode("\u192A")}).to.throw(Error, "EncodingError U+192A");
expect(() => {ms932Encoder.encode("\u192B")}).to.throw(Error, "EncodingError U+192B");
expect(() => {ms932Encoder.encode("\u192C")}).to.throw(Error, "EncodingError U+192C");
expect(() => {ms932Encoder.encode("\u192D")}).to.throw(Error, "EncodingError U+192D");
expect(() => {ms932Encoder.encode("\u192E")}).to.throw(Error, "EncodingError U+192E");
expect(() => {ms932Encoder.encode("\u192F")}).to.throw(Error, "EncodingError U+192F");
expect(() => {ms932Encoder.encode("\u1930")}).to.throw(Error, "EncodingError U+1930");
expect(() => {ms932Encoder.encode("\u1931")}).to.throw(Error, "EncodingError U+1931");
expect(() => {ms932Encoder.encode("\u1932")}).to.throw(Error, "EncodingError U+1932");
expect(() => {ms932Encoder.encode("\u1933")}).to.throw(Error, "EncodingError U+1933");
expect(() => {ms932Encoder.encode("\u1934")}).to.throw(Error, "EncodingError U+1934");
expect(() => {ms932Encoder.encode("\u1935")}).to.throw(Error, "EncodingError U+1935");
expect(() => {ms932Encoder.encode("\u1936")}).to.throw(Error, "EncodingError U+1936");
expect(() => {ms932Encoder.encode("\u1937")}).to.throw(Error, "EncodingError U+1937");
expect(() => {ms932Encoder.encode("\u1938")}).to.throw(Error, "EncodingError U+1938");
expect(() => {ms932Encoder.encode("\u1939")}).to.throw(Error, "EncodingError U+1939");
expect(() => {ms932Encoder.encode("\u193A")}).to.throw(Error, "EncodingError U+193A");
expect(() => {ms932Encoder.encode("\u193B")}).to.throw(Error, "EncodingError U+193B");
expect(() => {ms932Encoder.encode("\u193C")}).to.throw(Error, "EncodingError U+193C");
expect(() => {ms932Encoder.encode("\u193D")}).to.throw(Error, "EncodingError U+193D");
expect(() => {ms932Encoder.encode("\u193E")}).to.throw(Error, "EncodingError U+193E");
expect(() => {ms932Encoder.encode("\u193F")}).to.throw(Error, "EncodingError U+193F");
expect(() => {ms932Encoder.encode("\u1940")}).to.throw(Error, "EncodingError U+1940");
expect(() => {ms932Encoder.encode("\u1941")}).to.throw(Error, "EncodingError U+1941");
expect(() => {ms932Encoder.encode("\u1942")}).to.throw(Error, "EncodingError U+1942");
expect(() => {ms932Encoder.encode("\u1943")}).to.throw(Error, "EncodingError U+1943");
expect(() => {ms932Encoder.encode("\u1944")}).to.throw(Error, "EncodingError U+1944");
expect(() => {ms932Encoder.encode("\u1945")}).to.throw(Error, "EncodingError U+1945");
expect(() => {ms932Encoder.encode("\u1946")}).to.throw(Error, "EncodingError U+1946");
expect(() => {ms932Encoder.encode("\u1947")}).to.throw(Error, "EncodingError U+1947");
expect(() => {ms932Encoder.encode("\u1948")}).to.throw(Error, "EncodingError U+1948");
expect(() => {ms932Encoder.encode("\u1949")}).to.throw(Error, "EncodingError U+1949");
expect(() => {ms932Encoder.encode("\u194A")}).to.throw(Error, "EncodingError U+194A");
expect(() => {ms932Encoder.encode("\u194B")}).to.throw(Error, "EncodingError U+194B");
expect(() => {ms932Encoder.encode("\u194C")}).to.throw(Error, "EncodingError U+194C");
expect(() => {ms932Encoder.encode("\u194D")}).to.throw(Error, "EncodingError U+194D");
expect(() => {ms932Encoder.encode("\u194E")}).to.throw(Error, "EncodingError U+194E");
expect(() => {ms932Encoder.encode("\u194F")}).to.throw(Error, "EncodingError U+194F");
expect(() => {ms932Encoder.encode("\u1950")}).to.throw(Error, "EncodingError U+1950");
expect(() => {ms932Encoder.encode("\u1951")}).to.throw(Error, "EncodingError U+1951");
expect(() => {ms932Encoder.encode("\u1952")}).to.throw(Error, "EncodingError U+1952");
expect(() => {ms932Encoder.encode("\u1953")}).to.throw(Error, "EncodingError U+1953");
expect(() => {ms932Encoder.encode("\u1954")}).to.throw(Error, "EncodingError U+1954");
expect(() => {ms932Encoder.encode("\u1955")}).to.throw(Error, "EncodingError U+1955");
expect(() => {ms932Encoder.encode("\u1956")}).to.throw(Error, "EncodingError U+1956");
expect(() => {ms932Encoder.encode("\u1957")}).to.throw(Error, "EncodingError U+1957");
expect(() => {ms932Encoder.encode("\u1958")}).to.throw(Error, "EncodingError U+1958");
expect(() => {ms932Encoder.encode("\u1959")}).to.throw(Error, "EncodingError U+1959");
expect(() => {ms932Encoder.encode("\u195A")}).to.throw(Error, "EncodingError U+195A");
expect(() => {ms932Encoder.encode("\u195B")}).to.throw(Error, "EncodingError U+195B");
expect(() => {ms932Encoder.encode("\u195C")}).to.throw(Error, "EncodingError U+195C");
expect(() => {ms932Encoder.encode("\u195D")}).to.throw(Error, "EncodingError U+195D");
expect(() => {ms932Encoder.encode("\u195E")}).to.throw(Error, "EncodingError U+195E");
expect(() => {ms932Encoder.encode("\u195F")}).to.throw(Error, "EncodingError U+195F");
expect(() => {ms932Encoder.encode("\u1960")}).to.throw(Error, "EncodingError U+1960");
expect(() => {ms932Encoder.encode("\u1961")}).to.throw(Error, "EncodingError U+1961");
expect(() => {ms932Encoder.encode("\u1962")}).to.throw(Error, "EncodingError U+1962");
expect(() => {ms932Encoder.encode("\u1963")}).to.throw(Error, "EncodingError U+1963");
expect(() => {ms932Encoder.encode("\u1964")}).to.throw(Error, "EncodingError U+1964");
expect(() => {ms932Encoder.encode("\u1965")}).to.throw(Error, "EncodingError U+1965");
expect(() => {ms932Encoder.encode("\u1966")}).to.throw(Error, "EncodingError U+1966");
expect(() => {ms932Encoder.encode("\u1967")}).to.throw(Error, "EncodingError U+1967");
expect(() => {ms932Encoder.encode("\u1968")}).to.throw(Error, "EncodingError U+1968");
expect(() => {ms932Encoder.encode("\u1969")}).to.throw(Error, "EncodingError U+1969");
expect(() => {ms932Encoder.encode("\u196A")}).to.throw(Error, "EncodingError U+196A");
expect(() => {ms932Encoder.encode("\u196B")}).to.throw(Error, "EncodingError U+196B");
expect(() => {ms932Encoder.encode("\u196C")}).to.throw(Error, "EncodingError U+196C");
expect(() => {ms932Encoder.encode("\u196D")}).to.throw(Error, "EncodingError U+196D");
expect(() => {ms932Encoder.encode("\u196E")}).to.throw(Error, "EncodingError U+196E");
expect(() => {ms932Encoder.encode("\u196F")}).to.throw(Error, "EncodingError U+196F");
expect(() => {ms932Encoder.encode("\u1970")}).to.throw(Error, "EncodingError U+1970");
expect(() => {ms932Encoder.encode("\u1971")}).to.throw(Error, "EncodingError U+1971");
expect(() => {ms932Encoder.encode("\u1972")}).to.throw(Error, "EncodingError U+1972");
expect(() => {ms932Encoder.encode("\u1973")}).to.throw(Error, "EncodingError U+1973");
expect(() => {ms932Encoder.encode("\u1974")}).to.throw(Error, "EncodingError U+1974");
expect(() => {ms932Encoder.encode("\u1975")}).to.throw(Error, "EncodingError U+1975");
expect(() => {ms932Encoder.encode("\u1976")}).to.throw(Error, "EncodingError U+1976");
expect(() => {ms932Encoder.encode("\u1977")}).to.throw(Error, "EncodingError U+1977");
expect(() => {ms932Encoder.encode("\u1978")}).to.throw(Error, "EncodingError U+1978");
expect(() => {ms932Encoder.encode("\u1979")}).to.throw(Error, "EncodingError U+1979");
expect(() => {ms932Encoder.encode("\u197A")}).to.throw(Error, "EncodingError U+197A");
expect(() => {ms932Encoder.encode("\u197B")}).to.throw(Error, "EncodingError U+197B");
expect(() => {ms932Encoder.encode("\u197C")}).to.throw(Error, "EncodingError U+197C");
expect(() => {ms932Encoder.encode("\u197D")}).to.throw(Error, "EncodingError U+197D");
expect(() => {ms932Encoder.encode("\u197E")}).to.throw(Error, "EncodingError U+197E");
expect(() => {ms932Encoder.encode("\u197F")}).to.throw(Error, "EncodingError U+197F");
expect(() => {ms932Encoder.encode("\u1980")}).to.throw(Error, "EncodingError U+1980");
expect(() => {ms932Encoder.encode("\u1981")}).to.throw(Error, "EncodingError U+1981");
expect(() => {ms932Encoder.encode("\u1982")}).to.throw(Error, "EncodingError U+1982");
expect(() => {ms932Encoder.encode("\u1983")}).to.throw(Error, "EncodingError U+1983");
expect(() => {ms932Encoder.encode("\u1984")}).to.throw(Error, "EncodingError U+1984");
expect(() => {ms932Encoder.encode("\u1985")}).to.throw(Error, "EncodingError U+1985");
expect(() => {ms932Encoder.encode("\u1986")}).to.throw(Error, "EncodingError U+1986");
expect(() => {ms932Encoder.encode("\u1987")}).to.throw(Error, "EncodingError U+1987");
expect(() => {ms932Encoder.encode("\u1988")}).to.throw(Error, "EncodingError U+1988");
expect(() => {ms932Encoder.encode("\u1989")}).to.throw(Error, "EncodingError U+1989");
expect(() => {ms932Encoder.encode("\u198A")}).to.throw(Error, "EncodingError U+198A");
expect(() => {ms932Encoder.encode("\u198B")}).to.throw(Error, "EncodingError U+198B");
expect(() => {ms932Encoder.encode("\u198C")}).to.throw(Error, "EncodingError U+198C");
expect(() => {ms932Encoder.encode("\u198D")}).to.throw(Error, "EncodingError U+198D");
expect(() => {ms932Encoder.encode("\u198E")}).to.throw(Error, "EncodingError U+198E");
expect(() => {ms932Encoder.encode("\u198F")}).to.throw(Error, "EncodingError U+198F");
expect(() => {ms932Encoder.encode("\u1990")}).to.throw(Error, "EncodingError U+1990");
expect(() => {ms932Encoder.encode("\u1991")}).to.throw(Error, "EncodingError U+1991");
expect(() => {ms932Encoder.encode("\u1992")}).to.throw(Error, "EncodingError U+1992");
expect(() => {ms932Encoder.encode("\u1993")}).to.throw(Error, "EncodingError U+1993");
expect(() => {ms932Encoder.encode("\u1994")}).to.throw(Error, "EncodingError U+1994");
expect(() => {ms932Encoder.encode("\u1995")}).to.throw(Error, "EncodingError U+1995");
expect(() => {ms932Encoder.encode("\u1996")}).to.throw(Error, "EncodingError U+1996");
expect(() => {ms932Encoder.encode("\u1997")}).to.throw(Error, "EncodingError U+1997");
expect(() => {ms932Encoder.encode("\u1998")}).to.throw(Error, "EncodingError U+1998");
expect(() => {ms932Encoder.encode("\u1999")}).to.throw(Error, "EncodingError U+1999");
expect(() => {ms932Encoder.encode("\u199A")}).to.throw(Error, "EncodingError U+199A");
expect(() => {ms932Encoder.encode("\u199B")}).to.throw(Error, "EncodingError U+199B");
expect(() => {ms932Encoder.encode("\u199C")}).to.throw(Error, "EncodingError U+199C");
expect(() => {ms932Encoder.encode("\u199D")}).to.throw(Error, "EncodingError U+199D");
expect(() => {ms932Encoder.encode("\u199E")}).to.throw(Error, "EncodingError U+199E");
expect(() => {ms932Encoder.encode("\u199F")}).to.throw(Error, "EncodingError U+199F");
expect(() => {ms932Encoder.encode("\u19A0")}).to.throw(Error, "EncodingError U+19A0");
expect(() => {ms932Encoder.encode("\u19A1")}).to.throw(Error, "EncodingError U+19A1");
expect(() => {ms932Encoder.encode("\u19A2")}).to.throw(Error, "EncodingError U+19A2");
expect(() => {ms932Encoder.encode("\u19A3")}).to.throw(Error, "EncodingError U+19A3");
expect(() => {ms932Encoder.encode("\u19A4")}).to.throw(Error, "EncodingError U+19A4");
expect(() => {ms932Encoder.encode("\u19A5")}).to.throw(Error, "EncodingError U+19A5");
expect(() => {ms932Encoder.encode("\u19A6")}).to.throw(Error, "EncodingError U+19A6");
expect(() => {ms932Encoder.encode("\u19A7")}).to.throw(Error, "EncodingError U+19A7");
expect(() => {ms932Encoder.encode("\u19A8")}).to.throw(Error, "EncodingError U+19A8");
expect(() => {ms932Encoder.encode("\u19A9")}).to.throw(Error, "EncodingError U+19A9");
expect(() => {ms932Encoder.encode("\u19AA")}).to.throw(Error, "EncodingError U+19AA");
expect(() => {ms932Encoder.encode("\u19AB")}).to.throw(Error, "EncodingError U+19AB");
expect(() => {ms932Encoder.encode("\u19AC")}).to.throw(Error, "EncodingError U+19AC");
expect(() => {ms932Encoder.encode("\u19AD")}).to.throw(Error, "EncodingError U+19AD");
expect(() => {ms932Encoder.encode("\u19AE")}).to.throw(Error, "EncodingError U+19AE");
expect(() => {ms932Encoder.encode("\u19AF")}).to.throw(Error, "EncodingError U+19AF");
expect(() => {ms932Encoder.encode("\u19B0")}).to.throw(Error, "EncodingError U+19B0");
expect(() => {ms932Encoder.encode("\u19B1")}).to.throw(Error, "EncodingError U+19B1");
expect(() => {ms932Encoder.encode("\u19B2")}).to.throw(Error, "EncodingError U+19B2");
expect(() => {ms932Encoder.encode("\u19B3")}).to.throw(Error, "EncodingError U+19B3");
expect(() => {ms932Encoder.encode("\u19B4")}).to.throw(Error, "EncodingError U+19B4");
expect(() => {ms932Encoder.encode("\u19B5")}).to.throw(Error, "EncodingError U+19B5");
expect(() => {ms932Encoder.encode("\u19B6")}).to.throw(Error, "EncodingError U+19B6");
expect(() => {ms932Encoder.encode("\u19B7")}).to.throw(Error, "EncodingError U+19B7");
expect(() => {ms932Encoder.encode("\u19B8")}).to.throw(Error, "EncodingError U+19B8");
expect(() => {ms932Encoder.encode("\u19B9")}).to.throw(Error, "EncodingError U+19B9");
expect(() => {ms932Encoder.encode("\u19BA")}).to.throw(Error, "EncodingError U+19BA");
expect(() => {ms932Encoder.encode("\u19BB")}).to.throw(Error, "EncodingError U+19BB");
expect(() => {ms932Encoder.encode("\u19BC")}).to.throw(Error, "EncodingError U+19BC");
expect(() => {ms932Encoder.encode("\u19BD")}).to.throw(Error, "EncodingError U+19BD");
expect(() => {ms932Encoder.encode("\u19BE")}).to.throw(Error, "EncodingError U+19BE");
expect(() => {ms932Encoder.encode("\u19BF")}).to.throw(Error, "EncodingError U+19BF");
expect(() => {ms932Encoder.encode("\u19C0")}).to.throw(Error, "EncodingError U+19C0");
expect(() => {ms932Encoder.encode("\u19C1")}).to.throw(Error, "EncodingError U+19C1");
expect(() => {ms932Encoder.encode("\u19C2")}).to.throw(Error, "EncodingError U+19C2");
expect(() => {ms932Encoder.encode("\u19C3")}).to.throw(Error, "EncodingError U+19C3");
expect(() => {ms932Encoder.encode("\u19C4")}).to.throw(Error, "EncodingError U+19C4");
expect(() => {ms932Encoder.encode("\u19C5")}).to.throw(Error, "EncodingError U+19C5");
expect(() => {ms932Encoder.encode("\u19C6")}).to.throw(Error, "EncodingError U+19C6");
expect(() => {ms932Encoder.encode("\u19C7")}).to.throw(Error, "EncodingError U+19C7");
expect(() => {ms932Encoder.encode("\u19C8")}).to.throw(Error, "EncodingError U+19C8");
expect(() => {ms932Encoder.encode("\u19C9")}).to.throw(Error, "EncodingError U+19C9");
expect(() => {ms932Encoder.encode("\u19CA")}).to.throw(Error, "EncodingError U+19CA");
expect(() => {ms932Encoder.encode("\u19CB")}).to.throw(Error, "EncodingError U+19CB");
expect(() => {ms932Encoder.encode("\u19CC")}).to.throw(Error, "EncodingError U+19CC");
expect(() => {ms932Encoder.encode("\u19CD")}).to.throw(Error, "EncodingError U+19CD");
expect(() => {ms932Encoder.encode("\u19CE")}).to.throw(Error, "EncodingError U+19CE");
expect(() => {ms932Encoder.encode("\u19CF")}).to.throw(Error, "EncodingError U+19CF");
expect(() => {ms932Encoder.encode("\u19D0")}).to.throw(Error, "EncodingError U+19D0");
expect(() => {ms932Encoder.encode("\u19D1")}).to.throw(Error, "EncodingError U+19D1");
expect(() => {ms932Encoder.encode("\u19D2")}).to.throw(Error, "EncodingError U+19D2");
expect(() => {ms932Encoder.encode("\u19D3")}).to.throw(Error, "EncodingError U+19D3");
expect(() => {ms932Encoder.encode("\u19D4")}).to.throw(Error, "EncodingError U+19D4");
expect(() => {ms932Encoder.encode("\u19D5")}).to.throw(Error, "EncodingError U+19D5");
expect(() => {ms932Encoder.encode("\u19D6")}).to.throw(Error, "EncodingError U+19D6");
expect(() => {ms932Encoder.encode("\u19D7")}).to.throw(Error, "EncodingError U+19D7");
expect(() => {ms932Encoder.encode("\u19D8")}).to.throw(Error, "EncodingError U+19D8");
expect(() => {ms932Encoder.encode("\u19D9")}).to.throw(Error, "EncodingError U+19D9");
expect(() => {ms932Encoder.encode("\u19DA")}).to.throw(Error, "EncodingError U+19DA");
expect(() => {ms932Encoder.encode("\u19DB")}).to.throw(Error, "EncodingError U+19DB");
expect(() => {ms932Encoder.encode("\u19DC")}).to.throw(Error, "EncodingError U+19DC");
expect(() => {ms932Encoder.encode("\u19DD")}).to.throw(Error, "EncodingError U+19DD");
expect(() => {ms932Encoder.encode("\u19DE")}).to.throw(Error, "EncodingError U+19DE");
expect(() => {ms932Encoder.encode("\u19DF")}).to.throw(Error, "EncodingError U+19DF");
expect(() => {ms932Encoder.encode("\u19E0")}).to.throw(Error, "EncodingError U+19E0");
expect(() => {ms932Encoder.encode("\u19E1")}).to.throw(Error, "EncodingError U+19E1");
expect(() => {ms932Encoder.encode("\u19E2")}).to.throw(Error, "EncodingError U+19E2");
expect(() => {ms932Encoder.encode("\u19E3")}).to.throw(Error, "EncodingError U+19E3");
expect(() => {ms932Encoder.encode("\u19E4")}).to.throw(Error, "EncodingError U+19E4");
expect(() => {ms932Encoder.encode("\u19E5")}).to.throw(Error, "EncodingError U+19E5");
expect(() => {ms932Encoder.encode("\u19E6")}).to.throw(Error, "EncodingError U+19E6");
expect(() => {ms932Encoder.encode("\u19E7")}).to.throw(Error, "EncodingError U+19E7");
expect(() => {ms932Encoder.encode("\u19E8")}).to.throw(Error, "EncodingError U+19E8");
expect(() => {ms932Encoder.encode("\u19E9")}).to.throw(Error, "EncodingError U+19E9");
expect(() => {ms932Encoder.encode("\u19EA")}).to.throw(Error, "EncodingError U+19EA");
expect(() => {ms932Encoder.encode("\u19EB")}).to.throw(Error, "EncodingError U+19EB");
expect(() => {ms932Encoder.encode("\u19EC")}).to.throw(Error, "EncodingError U+19EC");
expect(() => {ms932Encoder.encode("\u19ED")}).to.throw(Error, "EncodingError U+19ED");
expect(() => {ms932Encoder.encode("\u19EE")}).to.throw(Error, "EncodingError U+19EE");
expect(() => {ms932Encoder.encode("\u19EF")}).to.throw(Error, "EncodingError U+19EF");
expect(() => {ms932Encoder.encode("\u19F0")}).to.throw(Error, "EncodingError U+19F0");
expect(() => {ms932Encoder.encode("\u19F1")}).to.throw(Error, "EncodingError U+19F1");
expect(() => {ms932Encoder.encode("\u19F2")}).to.throw(Error, "EncodingError U+19F2");
expect(() => {ms932Encoder.encode("\u19F3")}).to.throw(Error, "EncodingError U+19F3");
expect(() => {ms932Encoder.encode("\u19F4")}).to.throw(Error, "EncodingError U+19F4");
expect(() => {ms932Encoder.encode("\u19F5")}).to.throw(Error, "EncodingError U+19F5");
expect(() => {ms932Encoder.encode("\u19F6")}).to.throw(Error, "EncodingError U+19F6");
expect(() => {ms932Encoder.encode("\u19F7")}).to.throw(Error, "EncodingError U+19F7");
expect(() => {ms932Encoder.encode("\u19F8")}).to.throw(Error, "EncodingError U+19F8");
expect(() => {ms932Encoder.encode("\u19F9")}).to.throw(Error, "EncodingError U+19F9");
expect(() => {ms932Encoder.encode("\u19FA")}).to.throw(Error, "EncodingError U+19FA");
expect(() => {ms932Encoder.encode("\u19FB")}).to.throw(Error, "EncodingError U+19FB");
expect(() => {ms932Encoder.encode("\u19FC")}).to.throw(Error, "EncodingError U+19FC");
expect(() => {ms932Encoder.encode("\u19FD")}).to.throw(Error, "EncodingError U+19FD");
expect(() => {ms932Encoder.encode("\u19FE")}).to.throw(Error, "EncodingError U+19FE");
expect(() => {ms932Encoder.encode("\u19FF")}).to.throw(Error, "EncodingError U+19FF");
expect(() => {ms932Encoder.encode("\u1A00")}).to.throw(Error, "EncodingError U+1A00");
expect(() => {ms932Encoder.encode("\u1A01")}).to.throw(Error, "EncodingError U+1A01");
expect(() => {ms932Encoder.encode("\u1A02")}).to.throw(Error, "EncodingError U+1A02");
expect(() => {ms932Encoder.encode("\u1A03")}).to.throw(Error, "EncodingError U+1A03");
expect(() => {ms932Encoder.encode("\u1A04")}).to.throw(Error, "EncodingError U+1A04");
expect(() => {ms932Encoder.encode("\u1A05")}).to.throw(Error, "EncodingError U+1A05");
expect(() => {ms932Encoder.encode("\u1A06")}).to.throw(Error, "EncodingError U+1A06");
expect(() => {ms932Encoder.encode("\u1A07")}).to.throw(Error, "EncodingError U+1A07");
expect(() => {ms932Encoder.encode("\u1A08")}).to.throw(Error, "EncodingError U+1A08");
expect(() => {ms932Encoder.encode("\u1A09")}).to.throw(Error, "EncodingError U+1A09");
expect(() => {ms932Encoder.encode("\u1A0A")}).to.throw(Error, "EncodingError U+1A0A");
expect(() => {ms932Encoder.encode("\u1A0B")}).to.throw(Error, "EncodingError U+1A0B");
expect(() => {ms932Encoder.encode("\u1A0C")}).to.throw(Error, "EncodingError U+1A0C");
expect(() => {ms932Encoder.encode("\u1A0D")}).to.throw(Error, "EncodingError U+1A0D");
expect(() => {ms932Encoder.encode("\u1A0E")}).to.throw(Error, "EncodingError U+1A0E");
expect(() => {ms932Encoder.encode("\u1A0F")}).to.throw(Error, "EncodingError U+1A0F");
expect(() => {ms932Encoder.encode("\u1A10")}).to.throw(Error, "EncodingError U+1A10");
expect(() => {ms932Encoder.encode("\u1A11")}).to.throw(Error, "EncodingError U+1A11");
expect(() => {ms932Encoder.encode("\u1A12")}).to.throw(Error, "EncodingError U+1A12");
expect(() => {ms932Encoder.encode("\u1A13")}).to.throw(Error, "EncodingError U+1A13");
expect(() => {ms932Encoder.encode("\u1A14")}).to.throw(Error, "EncodingError U+1A14");
expect(() => {ms932Encoder.encode("\u1A15")}).to.throw(Error, "EncodingError U+1A15");
expect(() => {ms932Encoder.encode("\u1A16")}).to.throw(Error, "EncodingError U+1A16");
expect(() => {ms932Encoder.encode("\u1A17")}).to.throw(Error, "EncodingError U+1A17");
expect(() => {ms932Encoder.encode("\u1A18")}).to.throw(Error, "EncodingError U+1A18");
expect(() => {ms932Encoder.encode("\u1A19")}).to.throw(Error, "EncodingError U+1A19");
expect(() => {ms932Encoder.encode("\u1A1A")}).to.throw(Error, "EncodingError U+1A1A");
expect(() => {ms932Encoder.encode("\u1A1B")}).to.throw(Error, "EncodingError U+1A1B");
expect(() => {ms932Encoder.encode("\u1A1C")}).to.throw(Error, "EncodingError U+1A1C");
expect(() => {ms932Encoder.encode("\u1A1D")}).to.throw(Error, "EncodingError U+1A1D");
expect(() => {ms932Encoder.encode("\u1A1E")}).to.throw(Error, "EncodingError U+1A1E");
expect(() => {ms932Encoder.encode("\u1A1F")}).to.throw(Error, "EncodingError U+1A1F");
expect(() => {ms932Encoder.encode("\u1A20")}).to.throw(Error, "EncodingError U+1A20");
expect(() => {ms932Encoder.encode("\u1A21")}).to.throw(Error, "EncodingError U+1A21");
expect(() => {ms932Encoder.encode("\u1A22")}).to.throw(Error, "EncodingError U+1A22");
expect(() => {ms932Encoder.encode("\u1A23")}).to.throw(Error, "EncodingError U+1A23");
expect(() => {ms932Encoder.encode("\u1A24")}).to.throw(Error, "EncodingError U+1A24");
expect(() => {ms932Encoder.encode("\u1A25")}).to.throw(Error, "EncodingError U+1A25");
expect(() => {ms932Encoder.encode("\u1A26")}).to.throw(Error, "EncodingError U+1A26");
expect(() => {ms932Encoder.encode("\u1A27")}).to.throw(Error, "EncodingError U+1A27");
expect(() => {ms932Encoder.encode("\u1A28")}).to.throw(Error, "EncodingError U+1A28");
expect(() => {ms932Encoder.encode("\u1A29")}).to.throw(Error, "EncodingError U+1A29");
expect(() => {ms932Encoder.encode("\u1A2A")}).to.throw(Error, "EncodingError U+1A2A");
expect(() => {ms932Encoder.encode("\u1A2B")}).to.throw(Error, "EncodingError U+1A2B");
expect(() => {ms932Encoder.encode("\u1A2C")}).to.throw(Error, "EncodingError U+1A2C");
expect(() => {ms932Encoder.encode("\u1A2D")}).to.throw(Error, "EncodingError U+1A2D");
expect(() => {ms932Encoder.encode("\u1A2E")}).to.throw(Error, "EncodingError U+1A2E");
expect(() => {ms932Encoder.encode("\u1A2F")}).to.throw(Error, "EncodingError U+1A2F");
expect(() => {ms932Encoder.encode("\u1A30")}).to.throw(Error, "EncodingError U+1A30");
expect(() => {ms932Encoder.encode("\u1A31")}).to.throw(Error, "EncodingError U+1A31");
expect(() => {ms932Encoder.encode("\u1A32")}).to.throw(Error, "EncodingError U+1A32");
expect(() => {ms932Encoder.encode("\u1A33")}).to.throw(Error, "EncodingError U+1A33");
expect(() => {ms932Encoder.encode("\u1A34")}).to.throw(Error, "EncodingError U+1A34");
expect(() => {ms932Encoder.encode("\u1A35")}).to.throw(Error, "EncodingError U+1A35");
expect(() => {ms932Encoder.encode("\u1A36")}).to.throw(Error, "EncodingError U+1A36");
expect(() => {ms932Encoder.encode("\u1A37")}).to.throw(Error, "EncodingError U+1A37");
expect(() => {ms932Encoder.encode("\u1A38")}).to.throw(Error, "EncodingError U+1A38");
expect(() => {ms932Encoder.encode("\u1A39")}).to.throw(Error, "EncodingError U+1A39");
expect(() => {ms932Encoder.encode("\u1A3A")}).to.throw(Error, "EncodingError U+1A3A");
expect(() => {ms932Encoder.encode("\u1A3B")}).to.throw(Error, "EncodingError U+1A3B");
expect(() => {ms932Encoder.encode("\u1A3C")}).to.throw(Error, "EncodingError U+1A3C");
expect(() => {ms932Encoder.encode("\u1A3D")}).to.throw(Error, "EncodingError U+1A3D");
expect(() => {ms932Encoder.encode("\u1A3E")}).to.throw(Error, "EncodingError U+1A3E");
expect(() => {ms932Encoder.encode("\u1A3F")}).to.throw(Error, "EncodingError U+1A3F");
expect(() => {ms932Encoder.encode("\u1A40")}).to.throw(Error, "EncodingError U+1A40");
expect(() => {ms932Encoder.encode("\u1A41")}).to.throw(Error, "EncodingError U+1A41");
expect(() => {ms932Encoder.encode("\u1A42")}).to.throw(Error, "EncodingError U+1A42");
expect(() => {ms932Encoder.encode("\u1A43")}).to.throw(Error, "EncodingError U+1A43");
expect(() => {ms932Encoder.encode("\u1A44")}).to.throw(Error, "EncodingError U+1A44");
expect(() => {ms932Encoder.encode("\u1A45")}).to.throw(Error, "EncodingError U+1A45");
expect(() => {ms932Encoder.encode("\u1A46")}).to.throw(Error, "EncodingError U+1A46");
expect(() => {ms932Encoder.encode("\u1A47")}).to.throw(Error, "EncodingError U+1A47");
expect(() => {ms932Encoder.encode("\u1A48")}).to.throw(Error, "EncodingError U+1A48");
expect(() => {ms932Encoder.encode("\u1A49")}).to.throw(Error, "EncodingError U+1A49");
expect(() => {ms932Encoder.encode("\u1A4A")}).to.throw(Error, "EncodingError U+1A4A");
expect(() => {ms932Encoder.encode("\u1A4B")}).to.throw(Error, "EncodingError U+1A4B");
expect(() => {ms932Encoder.encode("\u1A4C")}).to.throw(Error, "EncodingError U+1A4C");
expect(() => {ms932Encoder.encode("\u1A4D")}).to.throw(Error, "EncodingError U+1A4D");
expect(() => {ms932Encoder.encode("\u1A4E")}).to.throw(Error, "EncodingError U+1A4E");
expect(() => {ms932Encoder.encode("\u1A4F")}).to.throw(Error, "EncodingError U+1A4F");
expect(() => {ms932Encoder.encode("\u1A50")}).to.throw(Error, "EncodingError U+1A50");
expect(() => {ms932Encoder.encode("\u1A51")}).to.throw(Error, "EncodingError U+1A51");
expect(() => {ms932Encoder.encode("\u1A52")}).to.throw(Error, "EncodingError U+1A52");
expect(() => {ms932Encoder.encode("\u1A53")}).to.throw(Error, "EncodingError U+1A53");
expect(() => {ms932Encoder.encode("\u1A54")}).to.throw(Error, "EncodingError U+1A54");
expect(() => {ms932Encoder.encode("\u1A55")}).to.throw(Error, "EncodingError U+1A55");
expect(() => {ms932Encoder.encode("\u1A56")}).to.throw(Error, "EncodingError U+1A56");
expect(() => {ms932Encoder.encode("\u1A57")}).to.throw(Error, "EncodingError U+1A57");
expect(() => {ms932Encoder.encode("\u1A58")}).to.throw(Error, "EncodingError U+1A58");
expect(() => {ms932Encoder.encode("\u1A59")}).to.throw(Error, "EncodingError U+1A59");
expect(() => {ms932Encoder.encode("\u1A5A")}).to.throw(Error, "EncodingError U+1A5A");
expect(() => {ms932Encoder.encode("\u1A5B")}).to.throw(Error, "EncodingError U+1A5B");
expect(() => {ms932Encoder.encode("\u1A5C")}).to.throw(Error, "EncodingError U+1A5C");
expect(() => {ms932Encoder.encode("\u1A5D")}).to.throw(Error, "EncodingError U+1A5D");
expect(() => {ms932Encoder.encode("\u1A5E")}).to.throw(Error, "EncodingError U+1A5E");
expect(() => {ms932Encoder.encode("\u1A5F")}).to.throw(Error, "EncodingError U+1A5F");
expect(() => {ms932Encoder.encode("\u1A60")}).to.throw(Error, "EncodingError U+1A60");
expect(() => {ms932Encoder.encode("\u1A61")}).to.throw(Error, "EncodingError U+1A61");
expect(() => {ms932Encoder.encode("\u1A62")}).to.throw(Error, "EncodingError U+1A62");
expect(() => {ms932Encoder.encode("\u1A63")}).to.throw(Error, "EncodingError U+1A63");
expect(() => {ms932Encoder.encode("\u1A64")}).to.throw(Error, "EncodingError U+1A64");
expect(() => {ms932Encoder.encode("\u1A65")}).to.throw(Error, "EncodingError U+1A65");
expect(() => {ms932Encoder.encode("\u1A66")}).to.throw(Error, "EncodingError U+1A66");
expect(() => {ms932Encoder.encode("\u1A67")}).to.throw(Error, "EncodingError U+1A67");
expect(() => {ms932Encoder.encode("\u1A68")}).to.throw(Error, "EncodingError U+1A68");
expect(() => {ms932Encoder.encode("\u1A69")}).to.throw(Error, "EncodingError U+1A69");
expect(() => {ms932Encoder.encode("\u1A6A")}).to.throw(Error, "EncodingError U+1A6A");
expect(() => {ms932Encoder.encode("\u1A6B")}).to.throw(Error, "EncodingError U+1A6B");
expect(() => {ms932Encoder.encode("\u1A6C")}).to.throw(Error, "EncodingError U+1A6C");
expect(() => {ms932Encoder.encode("\u1A6D")}).to.throw(Error, "EncodingError U+1A6D");
expect(() => {ms932Encoder.encode("\u1A6E")}).to.throw(Error, "EncodingError U+1A6E");
expect(() => {ms932Encoder.encode("\u1A6F")}).to.throw(Error, "EncodingError U+1A6F");
expect(() => {ms932Encoder.encode("\u1A70")}).to.throw(Error, "EncodingError U+1A70");
expect(() => {ms932Encoder.encode("\u1A71")}).to.throw(Error, "EncodingError U+1A71");
expect(() => {ms932Encoder.encode("\u1A72")}).to.throw(Error, "EncodingError U+1A72");
expect(() => {ms932Encoder.encode("\u1A73")}).to.throw(Error, "EncodingError U+1A73");
expect(() => {ms932Encoder.encode("\u1A74")}).to.throw(Error, "EncodingError U+1A74");
expect(() => {ms932Encoder.encode("\u1A75")}).to.throw(Error, "EncodingError U+1A75");
expect(() => {ms932Encoder.encode("\u1A76")}).to.throw(Error, "EncodingError U+1A76");
expect(() => {ms932Encoder.encode("\u1A77")}).to.throw(Error, "EncodingError U+1A77");
expect(() => {ms932Encoder.encode("\u1A78")}).to.throw(Error, "EncodingError U+1A78");
expect(() => {ms932Encoder.encode("\u1A79")}).to.throw(Error, "EncodingError U+1A79");
expect(() => {ms932Encoder.encode("\u1A7A")}).to.throw(Error, "EncodingError U+1A7A");
expect(() => {ms932Encoder.encode("\u1A7B")}).to.throw(Error, "EncodingError U+1A7B");
expect(() => {ms932Encoder.encode("\u1A7C")}).to.throw(Error, "EncodingError U+1A7C");
expect(() => {ms932Encoder.encode("\u1A7D")}).to.throw(Error, "EncodingError U+1A7D");
expect(() => {ms932Encoder.encode("\u1A7E")}).to.throw(Error, "EncodingError U+1A7E");
expect(() => {ms932Encoder.encode("\u1A7F")}).to.throw(Error, "EncodingError U+1A7F");
expect(() => {ms932Encoder.encode("\u1A80")}).to.throw(Error, "EncodingError U+1A80");
expect(() => {ms932Encoder.encode("\u1A81")}).to.throw(Error, "EncodingError U+1A81");
expect(() => {ms932Encoder.encode("\u1A82")}).to.throw(Error, "EncodingError U+1A82");
expect(() => {ms932Encoder.encode("\u1A83")}).to.throw(Error, "EncodingError U+1A83");
expect(() => {ms932Encoder.encode("\u1A84")}).to.throw(Error, "EncodingError U+1A84");
expect(() => {ms932Encoder.encode("\u1A85")}).to.throw(Error, "EncodingError U+1A85");
expect(() => {ms932Encoder.encode("\u1A86")}).to.throw(Error, "EncodingError U+1A86");
expect(() => {ms932Encoder.encode("\u1A87")}).to.throw(Error, "EncodingError U+1A87");
expect(() => {ms932Encoder.encode("\u1A88")}).to.throw(Error, "EncodingError U+1A88");
expect(() => {ms932Encoder.encode("\u1A89")}).to.throw(Error, "EncodingError U+1A89");
expect(() => {ms932Encoder.encode("\u1A8A")}).to.throw(Error, "EncodingError U+1A8A");
expect(() => {ms932Encoder.encode("\u1A8B")}).to.throw(Error, "EncodingError U+1A8B");
expect(() => {ms932Encoder.encode("\u1A8C")}).to.throw(Error, "EncodingError U+1A8C");
expect(() => {ms932Encoder.encode("\u1A8D")}).to.throw(Error, "EncodingError U+1A8D");
expect(() => {ms932Encoder.encode("\u1A8E")}).to.throw(Error, "EncodingError U+1A8E");
expect(() => {ms932Encoder.encode("\u1A8F")}).to.throw(Error, "EncodingError U+1A8F");
expect(() => {ms932Encoder.encode("\u1A90")}).to.throw(Error, "EncodingError U+1A90");
expect(() => {ms932Encoder.encode("\u1A91")}).to.throw(Error, "EncodingError U+1A91");
expect(() => {ms932Encoder.encode("\u1A92")}).to.throw(Error, "EncodingError U+1A92");
expect(() => {ms932Encoder.encode("\u1A93")}).to.throw(Error, "EncodingError U+1A93");
expect(() => {ms932Encoder.encode("\u1A94")}).to.throw(Error, "EncodingError U+1A94");
expect(() => {ms932Encoder.encode("\u1A95")}).to.throw(Error, "EncodingError U+1A95");
expect(() => {ms932Encoder.encode("\u1A96")}).to.throw(Error, "EncodingError U+1A96");
expect(() => {ms932Encoder.encode("\u1A97")}).to.throw(Error, "EncodingError U+1A97");
expect(() => {ms932Encoder.encode("\u1A98")}).to.throw(Error, "EncodingError U+1A98");
expect(() => {ms932Encoder.encode("\u1A99")}).to.throw(Error, "EncodingError U+1A99");
expect(() => {ms932Encoder.encode("\u1A9A")}).to.throw(Error, "EncodingError U+1A9A");
expect(() => {ms932Encoder.encode("\u1A9B")}).to.throw(Error, "EncodingError U+1A9B");
expect(() => {ms932Encoder.encode("\u1A9C")}).to.throw(Error, "EncodingError U+1A9C");
expect(() => {ms932Encoder.encode("\u1A9D")}).to.throw(Error, "EncodingError U+1A9D");
expect(() => {ms932Encoder.encode("\u1A9E")}).to.throw(Error, "EncodingError U+1A9E");
expect(() => {ms932Encoder.encode("\u1A9F")}).to.throw(Error, "EncodingError U+1A9F");
expect(() => {ms932Encoder.encode("\u1AA0")}).to.throw(Error, "EncodingError U+1AA0");
expect(() => {ms932Encoder.encode("\u1AA1")}).to.throw(Error, "EncodingError U+1AA1");
expect(() => {ms932Encoder.encode("\u1AA2")}).to.throw(Error, "EncodingError U+1AA2");
expect(() => {ms932Encoder.encode("\u1AA3")}).to.throw(Error, "EncodingError U+1AA3");
expect(() => {ms932Encoder.encode("\u1AA4")}).to.throw(Error, "EncodingError U+1AA4");
expect(() => {ms932Encoder.encode("\u1AA5")}).to.throw(Error, "EncodingError U+1AA5");
expect(() => {ms932Encoder.encode("\u1AA6")}).to.throw(Error, "EncodingError U+1AA6");
expect(() => {ms932Encoder.encode("\u1AA7")}).to.throw(Error, "EncodingError U+1AA7");
expect(() => {ms932Encoder.encode("\u1AA8")}).to.throw(Error, "EncodingError U+1AA8");
expect(() => {ms932Encoder.encode("\u1AA9")}).to.throw(Error, "EncodingError U+1AA9");
expect(() => {ms932Encoder.encode("\u1AAA")}).to.throw(Error, "EncodingError U+1AAA");
expect(() => {ms932Encoder.encode("\u1AAB")}).to.throw(Error, "EncodingError U+1AAB");
expect(() => {ms932Encoder.encode("\u1AAC")}).to.throw(Error, "EncodingError U+1AAC");
expect(() => {ms932Encoder.encode("\u1AAD")}).to.throw(Error, "EncodingError U+1AAD");
expect(() => {ms932Encoder.encode("\u1AAE")}).to.throw(Error, "EncodingError U+1AAE");
expect(() => {ms932Encoder.encode("\u1AAF")}).to.throw(Error, "EncodingError U+1AAF");
expect(() => {ms932Encoder.encode("\u1AB0")}).to.throw(Error, "EncodingError U+1AB0");
expect(() => {ms932Encoder.encode("\u1AB1")}).to.throw(Error, "EncodingError U+1AB1");
expect(() => {ms932Encoder.encode("\u1AB2")}).to.throw(Error, "EncodingError U+1AB2");
expect(() => {ms932Encoder.encode("\u1AB3")}).to.throw(Error, "EncodingError U+1AB3");
expect(() => {ms932Encoder.encode("\u1AB4")}).to.throw(Error, "EncodingError U+1AB4");
expect(() => {ms932Encoder.encode("\u1AB5")}).to.throw(Error, "EncodingError U+1AB5");
expect(() => {ms932Encoder.encode("\u1AB6")}).to.throw(Error, "EncodingError U+1AB6");
expect(() => {ms932Encoder.encode("\u1AB7")}).to.throw(Error, "EncodingError U+1AB7");
expect(() => {ms932Encoder.encode("\u1AB8")}).to.throw(Error, "EncodingError U+1AB8");
expect(() => {ms932Encoder.encode("\u1AB9")}).to.throw(Error, "EncodingError U+1AB9");
expect(() => {ms932Encoder.encode("\u1ABA")}).to.throw(Error, "EncodingError U+1ABA");
expect(() => {ms932Encoder.encode("\u1ABB")}).to.throw(Error, "EncodingError U+1ABB");
expect(() => {ms932Encoder.encode("\u1ABC")}).to.throw(Error, "EncodingError U+1ABC");
expect(() => {ms932Encoder.encode("\u1ABD")}).to.throw(Error, "EncodingError U+1ABD");
expect(() => {ms932Encoder.encode("\u1ABE")}).to.throw(Error, "EncodingError U+1ABE");
expect(() => {ms932Encoder.encode("\u1ABF")}).to.throw(Error, "EncodingError U+1ABF");
expect(() => {ms932Encoder.encode("\u1AC0")}).to.throw(Error, "EncodingError U+1AC0");
expect(() => {ms932Encoder.encode("\u1AC1")}).to.throw(Error, "EncodingError U+1AC1");
expect(() => {ms932Encoder.encode("\u1AC2")}).to.throw(Error, "EncodingError U+1AC2");
expect(() => {ms932Encoder.encode("\u1AC3")}).to.throw(Error, "EncodingError U+1AC3");
expect(() => {ms932Encoder.encode("\u1AC4")}).to.throw(Error, "EncodingError U+1AC4");
expect(() => {ms932Encoder.encode("\u1AC5")}).to.throw(Error, "EncodingError U+1AC5");
expect(() => {ms932Encoder.encode("\u1AC6")}).to.throw(Error, "EncodingError U+1AC6");
expect(() => {ms932Encoder.encode("\u1AC7")}).to.throw(Error, "EncodingError U+1AC7");
expect(() => {ms932Encoder.encode("\u1AC8")}).to.throw(Error, "EncodingError U+1AC8");
expect(() => {ms932Encoder.encode("\u1AC9")}).to.throw(Error, "EncodingError U+1AC9");
expect(() => {ms932Encoder.encode("\u1ACA")}).to.throw(Error, "EncodingError U+1ACA");
expect(() => {ms932Encoder.encode("\u1ACB")}).to.throw(Error, "EncodingError U+1ACB");
expect(() => {ms932Encoder.encode("\u1ACC")}).to.throw(Error, "EncodingError U+1ACC");
expect(() => {ms932Encoder.encode("\u1ACD")}).to.throw(Error, "EncodingError U+1ACD");
expect(() => {ms932Encoder.encode("\u1ACE")}).to.throw(Error, "EncodingError U+1ACE");
expect(() => {ms932Encoder.encode("\u1ACF")}).to.throw(Error, "EncodingError U+1ACF");
expect(() => {ms932Encoder.encode("\u1AD0")}).to.throw(Error, "EncodingError U+1AD0");
expect(() => {ms932Encoder.encode("\u1AD1")}).to.throw(Error, "EncodingError U+1AD1");
expect(() => {ms932Encoder.encode("\u1AD2")}).to.throw(Error, "EncodingError U+1AD2");
expect(() => {ms932Encoder.encode("\u1AD3")}).to.throw(Error, "EncodingError U+1AD3");
expect(() => {ms932Encoder.encode("\u1AD4")}).to.throw(Error, "EncodingError U+1AD4");
expect(() => {ms932Encoder.encode("\u1AD5")}).to.throw(Error, "EncodingError U+1AD5");
expect(() => {ms932Encoder.encode("\u1AD6")}).to.throw(Error, "EncodingError U+1AD6");
expect(() => {ms932Encoder.encode("\u1AD7")}).to.throw(Error, "EncodingError U+1AD7");
expect(() => {ms932Encoder.encode("\u1AD8")}).to.throw(Error, "EncodingError U+1AD8");
expect(() => {ms932Encoder.encode("\u1AD9")}).to.throw(Error, "EncodingError U+1AD9");
expect(() => {ms932Encoder.encode("\u1ADA")}).to.throw(Error, "EncodingError U+1ADA");
expect(() => {ms932Encoder.encode("\u1ADB")}).to.throw(Error, "EncodingError U+1ADB");
expect(() => {ms932Encoder.encode("\u1ADC")}).to.throw(Error, "EncodingError U+1ADC");
expect(() => {ms932Encoder.encode("\u1ADD")}).to.throw(Error, "EncodingError U+1ADD");
expect(() => {ms932Encoder.encode("\u1ADE")}).to.throw(Error, "EncodingError U+1ADE");
expect(() => {ms932Encoder.encode("\u1ADF")}).to.throw(Error, "EncodingError U+1ADF");
expect(() => {ms932Encoder.encode("\u1AE0")}).to.throw(Error, "EncodingError U+1AE0");
expect(() => {ms932Encoder.encode("\u1AE1")}).to.throw(Error, "EncodingError U+1AE1");
expect(() => {ms932Encoder.encode("\u1AE2")}).to.throw(Error, "EncodingError U+1AE2");
expect(() => {ms932Encoder.encode("\u1AE3")}).to.throw(Error, "EncodingError U+1AE3");
expect(() => {ms932Encoder.encode("\u1AE4")}).to.throw(Error, "EncodingError U+1AE4");
expect(() => {ms932Encoder.encode("\u1AE5")}).to.throw(Error, "EncodingError U+1AE5");
expect(() => {ms932Encoder.encode("\u1AE6")}).to.throw(Error, "EncodingError U+1AE6");
expect(() => {ms932Encoder.encode("\u1AE7")}).to.throw(Error, "EncodingError U+1AE7");
expect(() => {ms932Encoder.encode("\u1AE8")}).to.throw(Error, "EncodingError U+1AE8");
expect(() => {ms932Encoder.encode("\u1AE9")}).to.throw(Error, "EncodingError U+1AE9");
expect(() => {ms932Encoder.encode("\u1AEA")}).to.throw(Error, "EncodingError U+1AEA");
expect(() => {ms932Encoder.encode("\u1AEB")}).to.throw(Error, "EncodingError U+1AEB");
expect(() => {ms932Encoder.encode("\u1AEC")}).to.throw(Error, "EncodingError U+1AEC");
expect(() => {ms932Encoder.encode("\u1AED")}).to.throw(Error, "EncodingError U+1AED");
expect(() => {ms932Encoder.encode("\u1AEE")}).to.throw(Error, "EncodingError U+1AEE");
expect(() => {ms932Encoder.encode("\u1AEF")}).to.throw(Error, "EncodingError U+1AEF");
expect(() => {ms932Encoder.encode("\u1AF0")}).to.throw(Error, "EncodingError U+1AF0");
expect(() => {ms932Encoder.encode("\u1AF1")}).to.throw(Error, "EncodingError U+1AF1");
expect(() => {ms932Encoder.encode("\u1AF2")}).to.throw(Error, "EncodingError U+1AF2");
expect(() => {ms932Encoder.encode("\u1AF3")}).to.throw(Error, "EncodingError U+1AF3");
expect(() => {ms932Encoder.encode("\u1AF4")}).to.throw(Error, "EncodingError U+1AF4");
expect(() => {ms932Encoder.encode("\u1AF5")}).to.throw(Error, "EncodingError U+1AF5");
expect(() => {ms932Encoder.encode("\u1AF6")}).to.throw(Error, "EncodingError U+1AF6");
expect(() => {ms932Encoder.encode("\u1AF7")}).to.throw(Error, "EncodingError U+1AF7");
expect(() => {ms932Encoder.encode("\u1AF8")}).to.throw(Error, "EncodingError U+1AF8");
expect(() => {ms932Encoder.encode("\u1AF9")}).to.throw(Error, "EncodingError U+1AF9");
expect(() => {ms932Encoder.encode("\u1AFA")}).to.throw(Error, "EncodingError U+1AFA");
expect(() => {ms932Encoder.encode("\u1AFB")}).to.throw(Error, "EncodingError U+1AFB");
expect(() => {ms932Encoder.encode("\u1AFC")}).to.throw(Error, "EncodingError U+1AFC");
expect(() => {ms932Encoder.encode("\u1AFD")}).to.throw(Error, "EncodingError U+1AFD");
expect(() => {ms932Encoder.encode("\u1AFE")}).to.throw(Error, "EncodingError U+1AFE");
expect(() => {ms932Encoder.encode("\u1AFF")}).to.throw(Error, "EncodingError U+1AFF");
expect(() => {ms932Encoder.encode("\u1B00")}).to.throw(Error, "EncodingError U+1B00");
expect(() => {ms932Encoder.encode("\u1B01")}).to.throw(Error, "EncodingError U+1B01");
expect(() => {ms932Encoder.encode("\u1B02")}).to.throw(Error, "EncodingError U+1B02");
expect(() => {ms932Encoder.encode("\u1B03")}).to.throw(Error, "EncodingError U+1B03");
expect(() => {ms932Encoder.encode("\u1B04")}).to.throw(Error, "EncodingError U+1B04");
expect(() => {ms932Encoder.encode("\u1B05")}).to.throw(Error, "EncodingError U+1B05");
expect(() => {ms932Encoder.encode("\u1B06")}).to.throw(Error, "EncodingError U+1B06");
expect(() => {ms932Encoder.encode("\u1B07")}).to.throw(Error, "EncodingError U+1B07");
expect(() => {ms932Encoder.encode("\u1B08")}).to.throw(Error, "EncodingError U+1B08");
expect(() => {ms932Encoder.encode("\u1B09")}).to.throw(Error, "EncodingError U+1B09");
expect(() => {ms932Encoder.encode("\u1B0A")}).to.throw(Error, "EncodingError U+1B0A");
expect(() => {ms932Encoder.encode("\u1B0B")}).to.throw(Error, "EncodingError U+1B0B");
expect(() => {ms932Encoder.encode("\u1B0C")}).to.throw(Error, "EncodingError U+1B0C");
expect(() => {ms932Encoder.encode("\u1B0D")}).to.throw(Error, "EncodingError U+1B0D");
expect(() => {ms932Encoder.encode("\u1B0E")}).to.throw(Error, "EncodingError U+1B0E");
expect(() => {ms932Encoder.encode("\u1B0F")}).to.throw(Error, "EncodingError U+1B0F");
expect(() => {ms932Encoder.encode("\u1B10")}).to.throw(Error, "EncodingError U+1B10");
expect(() => {ms932Encoder.encode("\u1B11")}).to.throw(Error, "EncodingError U+1B11");
expect(() => {ms932Encoder.encode("\u1B12")}).to.throw(Error, "EncodingError U+1B12");
expect(() => {ms932Encoder.encode("\u1B13")}).to.throw(Error, "EncodingError U+1B13");
expect(() => {ms932Encoder.encode("\u1B14")}).to.throw(Error, "EncodingError U+1B14");
expect(() => {ms932Encoder.encode("\u1B15")}).to.throw(Error, "EncodingError U+1B15");
expect(() => {ms932Encoder.encode("\u1B16")}).to.throw(Error, "EncodingError U+1B16");
expect(() => {ms932Encoder.encode("\u1B17")}).to.throw(Error, "EncodingError U+1B17");
expect(() => {ms932Encoder.encode("\u1B18")}).to.throw(Error, "EncodingError U+1B18");
expect(() => {ms932Encoder.encode("\u1B19")}).to.throw(Error, "EncodingError U+1B19");
expect(() => {ms932Encoder.encode("\u1B1A")}).to.throw(Error, "EncodingError U+1B1A");
expect(() => {ms932Encoder.encode("\u1B1B")}).to.throw(Error, "EncodingError U+1B1B");
expect(() => {ms932Encoder.encode("\u1B1C")}).to.throw(Error, "EncodingError U+1B1C");
expect(() => {ms932Encoder.encode("\u1B1D")}).to.throw(Error, "EncodingError U+1B1D");
expect(() => {ms932Encoder.encode("\u1B1E")}).to.throw(Error, "EncodingError U+1B1E");
expect(() => {ms932Encoder.encode("\u1B1F")}).to.throw(Error, "EncodingError U+1B1F");
expect(() => {ms932Encoder.encode("\u1B20")}).to.throw(Error, "EncodingError U+1B20");
expect(() => {ms932Encoder.encode("\u1B21")}).to.throw(Error, "EncodingError U+1B21");
expect(() => {ms932Encoder.encode("\u1B22")}).to.throw(Error, "EncodingError U+1B22");
expect(() => {ms932Encoder.encode("\u1B23")}).to.throw(Error, "EncodingError U+1B23");
expect(() => {ms932Encoder.encode("\u1B24")}).to.throw(Error, "EncodingError U+1B24");
expect(() => {ms932Encoder.encode("\u1B25")}).to.throw(Error, "EncodingError U+1B25");
expect(() => {ms932Encoder.encode("\u1B26")}).to.throw(Error, "EncodingError U+1B26");
expect(() => {ms932Encoder.encode("\u1B27")}).to.throw(Error, "EncodingError U+1B27");
expect(() => {ms932Encoder.encode("\u1B28")}).to.throw(Error, "EncodingError U+1B28");
expect(() => {ms932Encoder.encode("\u1B29")}).to.throw(Error, "EncodingError U+1B29");
expect(() => {ms932Encoder.encode("\u1B2A")}).to.throw(Error, "EncodingError U+1B2A");
expect(() => {ms932Encoder.encode("\u1B2B")}).to.throw(Error, "EncodingError U+1B2B");
expect(() => {ms932Encoder.encode("\u1B2C")}).to.throw(Error, "EncodingError U+1B2C");
expect(() => {ms932Encoder.encode("\u1B2D")}).to.throw(Error, "EncodingError U+1B2D");
expect(() => {ms932Encoder.encode("\u1B2E")}).to.throw(Error, "EncodingError U+1B2E");
expect(() => {ms932Encoder.encode("\u1B2F")}).to.throw(Error, "EncodingError U+1B2F");
expect(() => {ms932Encoder.encode("\u1B30")}).to.throw(Error, "EncodingError U+1B30");
expect(() => {ms932Encoder.encode("\u1B31")}).to.throw(Error, "EncodingError U+1B31");
expect(() => {ms932Encoder.encode("\u1B32")}).to.throw(Error, "EncodingError U+1B32");
expect(() => {ms932Encoder.encode("\u1B33")}).to.throw(Error, "EncodingError U+1B33");
expect(() => {ms932Encoder.encode("\u1B34")}).to.throw(Error, "EncodingError U+1B34");
expect(() => {ms932Encoder.encode("\u1B35")}).to.throw(Error, "EncodingError U+1B35");
expect(() => {ms932Encoder.encode("\u1B36")}).to.throw(Error, "EncodingError U+1B36");
expect(() => {ms932Encoder.encode("\u1B37")}).to.throw(Error, "EncodingError U+1B37");
expect(() => {ms932Encoder.encode("\u1B38")}).to.throw(Error, "EncodingError U+1B38");
expect(() => {ms932Encoder.encode("\u1B39")}).to.throw(Error, "EncodingError U+1B39");
expect(() => {ms932Encoder.encode("\u1B3A")}).to.throw(Error, "EncodingError U+1B3A");
expect(() => {ms932Encoder.encode("\u1B3B")}).to.throw(Error, "EncodingError U+1B3B");
expect(() => {ms932Encoder.encode("\u1B3C")}).to.throw(Error, "EncodingError U+1B3C");
expect(() => {ms932Encoder.encode("\u1B3D")}).to.throw(Error, "EncodingError U+1B3D");
expect(() => {ms932Encoder.encode("\u1B3E")}).to.throw(Error, "EncodingError U+1B3E");
expect(() => {ms932Encoder.encode("\u1B3F")}).to.throw(Error, "EncodingError U+1B3F");
expect(() => {ms932Encoder.encode("\u1B40")}).to.throw(Error, "EncodingError U+1B40");
expect(() => {ms932Encoder.encode("\u1B41")}).to.throw(Error, "EncodingError U+1B41");
expect(() => {ms932Encoder.encode("\u1B42")}).to.throw(Error, "EncodingError U+1B42");
expect(() => {ms932Encoder.encode("\u1B43")}).to.throw(Error, "EncodingError U+1B43");
expect(() => {ms932Encoder.encode("\u1B44")}).to.throw(Error, "EncodingError U+1B44");
expect(() => {ms932Encoder.encode("\u1B45")}).to.throw(Error, "EncodingError U+1B45");
expect(() => {ms932Encoder.encode("\u1B46")}).to.throw(Error, "EncodingError U+1B46");
expect(() => {ms932Encoder.encode("\u1B47")}).to.throw(Error, "EncodingError U+1B47");
expect(() => {ms932Encoder.encode("\u1B48")}).to.throw(Error, "EncodingError U+1B48");
expect(() => {ms932Encoder.encode("\u1B49")}).to.throw(Error, "EncodingError U+1B49");
expect(() => {ms932Encoder.encode("\u1B4A")}).to.throw(Error, "EncodingError U+1B4A");
expect(() => {ms932Encoder.encode("\u1B4B")}).to.throw(Error, "EncodingError U+1B4B");
expect(() => {ms932Encoder.encode("\u1B4C")}).to.throw(Error, "EncodingError U+1B4C");
expect(() => {ms932Encoder.encode("\u1B4D")}).to.throw(Error, "EncodingError U+1B4D");
expect(() => {ms932Encoder.encode("\u1B4E")}).to.throw(Error, "EncodingError U+1B4E");
expect(() => {ms932Encoder.encode("\u1B4F")}).to.throw(Error, "EncodingError U+1B4F");
expect(() => {ms932Encoder.encode("\u1B50")}).to.throw(Error, "EncodingError U+1B50");
expect(() => {ms932Encoder.encode("\u1B51")}).to.throw(Error, "EncodingError U+1B51");
expect(() => {ms932Encoder.encode("\u1B52")}).to.throw(Error, "EncodingError U+1B52");
expect(() => {ms932Encoder.encode("\u1B53")}).to.throw(Error, "EncodingError U+1B53");
expect(() => {ms932Encoder.encode("\u1B54")}).to.throw(Error, "EncodingError U+1B54");
expect(() => {ms932Encoder.encode("\u1B55")}).to.throw(Error, "EncodingError U+1B55");
expect(() => {ms932Encoder.encode("\u1B56")}).to.throw(Error, "EncodingError U+1B56");
expect(() => {ms932Encoder.encode("\u1B57")}).to.throw(Error, "EncodingError U+1B57");
expect(() => {ms932Encoder.encode("\u1B58")}).to.throw(Error, "EncodingError U+1B58");
expect(() => {ms932Encoder.encode("\u1B59")}).to.throw(Error, "EncodingError U+1B59");
expect(() => {ms932Encoder.encode("\u1B5A")}).to.throw(Error, "EncodingError U+1B5A");
expect(() => {ms932Encoder.encode("\u1B5B")}).to.throw(Error, "EncodingError U+1B5B");
expect(() => {ms932Encoder.encode("\u1B5C")}).to.throw(Error, "EncodingError U+1B5C");
expect(() => {ms932Encoder.encode("\u1B5D")}).to.throw(Error, "EncodingError U+1B5D");
expect(() => {ms932Encoder.encode("\u1B5E")}).to.throw(Error, "EncodingError U+1B5E");
expect(() => {ms932Encoder.encode("\u1B5F")}).to.throw(Error, "EncodingError U+1B5F");
expect(() => {ms932Encoder.encode("\u1B60")}).to.throw(Error, "EncodingError U+1B60");
expect(() => {ms932Encoder.encode("\u1B61")}).to.throw(Error, "EncodingError U+1B61");
expect(() => {ms932Encoder.encode("\u1B62")}).to.throw(Error, "EncodingError U+1B62");
expect(() => {ms932Encoder.encode("\u1B63")}).to.throw(Error, "EncodingError U+1B63");
expect(() => {ms932Encoder.encode("\u1B64")}).to.throw(Error, "EncodingError U+1B64");
expect(() => {ms932Encoder.encode("\u1B65")}).to.throw(Error, "EncodingError U+1B65");
expect(() => {ms932Encoder.encode("\u1B66")}).to.throw(Error, "EncodingError U+1B66");
expect(() => {ms932Encoder.encode("\u1B67")}).to.throw(Error, "EncodingError U+1B67");
expect(() => {ms932Encoder.encode("\u1B68")}).to.throw(Error, "EncodingError U+1B68");
expect(() => {ms932Encoder.encode("\u1B69")}).to.throw(Error, "EncodingError U+1B69");
expect(() => {ms932Encoder.encode("\u1B6A")}).to.throw(Error, "EncodingError U+1B6A");
expect(() => {ms932Encoder.encode("\u1B6B")}).to.throw(Error, "EncodingError U+1B6B");
expect(() => {ms932Encoder.encode("\u1B6C")}).to.throw(Error, "EncodingError U+1B6C");
expect(() => {ms932Encoder.encode("\u1B6D")}).to.throw(Error, "EncodingError U+1B6D");
expect(() => {ms932Encoder.encode("\u1B6E")}).to.throw(Error, "EncodingError U+1B6E");
expect(() => {ms932Encoder.encode("\u1B6F")}).to.throw(Error, "EncodingError U+1B6F");
expect(() => {ms932Encoder.encode("\u1B70")}).to.throw(Error, "EncodingError U+1B70");
expect(() => {ms932Encoder.encode("\u1B71")}).to.throw(Error, "EncodingError U+1B71");
expect(() => {ms932Encoder.encode("\u1B72")}).to.throw(Error, "EncodingError U+1B72");
expect(() => {ms932Encoder.encode("\u1B73")}).to.throw(Error, "EncodingError U+1B73");
expect(() => {ms932Encoder.encode("\u1B74")}).to.throw(Error, "EncodingError U+1B74");
expect(() => {ms932Encoder.encode("\u1B75")}).to.throw(Error, "EncodingError U+1B75");
expect(() => {ms932Encoder.encode("\u1B76")}).to.throw(Error, "EncodingError U+1B76");
expect(() => {ms932Encoder.encode("\u1B77")}).to.throw(Error, "EncodingError U+1B77");
expect(() => {ms932Encoder.encode("\u1B78")}).to.throw(Error, "EncodingError U+1B78");
expect(() => {ms932Encoder.encode("\u1B79")}).to.throw(Error, "EncodingError U+1B79");
expect(() => {ms932Encoder.encode("\u1B7A")}).to.throw(Error, "EncodingError U+1B7A");
expect(() => {ms932Encoder.encode("\u1B7B")}).to.throw(Error, "EncodingError U+1B7B");
expect(() => {ms932Encoder.encode("\u1B7C")}).to.throw(Error, "EncodingError U+1B7C");
expect(() => {ms932Encoder.encode("\u1B7D")}).to.throw(Error, "EncodingError U+1B7D");
expect(() => {ms932Encoder.encode("\u1B7E")}).to.throw(Error, "EncodingError U+1B7E");
expect(() => {ms932Encoder.encode("\u1B7F")}).to.throw(Error, "EncodingError U+1B7F");
expect(() => {ms932Encoder.encode("\u1B80")}).to.throw(Error, "EncodingError U+1B80");
expect(() => {ms932Encoder.encode("\u1B81")}).to.throw(Error, "EncodingError U+1B81");
expect(() => {ms932Encoder.encode("\u1B82")}).to.throw(Error, "EncodingError U+1B82");
expect(() => {ms932Encoder.encode("\u1B83")}).to.throw(Error, "EncodingError U+1B83");
expect(() => {ms932Encoder.encode("\u1B84")}).to.throw(Error, "EncodingError U+1B84");
expect(() => {ms932Encoder.encode("\u1B85")}).to.throw(Error, "EncodingError U+1B85");
expect(() => {ms932Encoder.encode("\u1B86")}).to.throw(Error, "EncodingError U+1B86");
expect(() => {ms932Encoder.encode("\u1B87")}).to.throw(Error, "EncodingError U+1B87");
expect(() => {ms932Encoder.encode("\u1B88")}).to.throw(Error, "EncodingError U+1B88");
expect(() => {ms932Encoder.encode("\u1B89")}).to.throw(Error, "EncodingError U+1B89");
expect(() => {ms932Encoder.encode("\u1B8A")}).to.throw(Error, "EncodingError U+1B8A");
expect(() => {ms932Encoder.encode("\u1B8B")}).to.throw(Error, "EncodingError U+1B8B");
expect(() => {ms932Encoder.encode("\u1B8C")}).to.throw(Error, "EncodingError U+1B8C");
expect(() => {ms932Encoder.encode("\u1B8D")}).to.throw(Error, "EncodingError U+1B8D");
expect(() => {ms932Encoder.encode("\u1B8E")}).to.throw(Error, "EncodingError U+1B8E");
expect(() => {ms932Encoder.encode("\u1B8F")}).to.throw(Error, "EncodingError U+1B8F");
expect(() => {ms932Encoder.encode("\u1B90")}).to.throw(Error, "EncodingError U+1B90");
expect(() => {ms932Encoder.encode("\u1B91")}).to.throw(Error, "EncodingError U+1B91");
expect(() => {ms932Encoder.encode("\u1B92")}).to.throw(Error, "EncodingError U+1B92");
expect(() => {ms932Encoder.encode("\u1B93")}).to.throw(Error, "EncodingError U+1B93");
expect(() => {ms932Encoder.encode("\u1B94")}).to.throw(Error, "EncodingError U+1B94");
expect(() => {ms932Encoder.encode("\u1B95")}).to.throw(Error, "EncodingError U+1B95");
expect(() => {ms932Encoder.encode("\u1B96")}).to.throw(Error, "EncodingError U+1B96");
expect(() => {ms932Encoder.encode("\u1B97")}).to.throw(Error, "EncodingError U+1B97");
expect(() => {ms932Encoder.encode("\u1B98")}).to.throw(Error, "EncodingError U+1B98");
expect(() => {ms932Encoder.encode("\u1B99")}).to.throw(Error, "EncodingError U+1B99");
expect(() => {ms932Encoder.encode("\u1B9A")}).to.throw(Error, "EncodingError U+1B9A");
expect(() => {ms932Encoder.encode("\u1B9B")}).to.throw(Error, "EncodingError U+1B9B");
expect(() => {ms932Encoder.encode("\u1B9C")}).to.throw(Error, "EncodingError U+1B9C");
expect(() => {ms932Encoder.encode("\u1B9D")}).to.throw(Error, "EncodingError U+1B9D");
expect(() => {ms932Encoder.encode("\u1B9E")}).to.throw(Error, "EncodingError U+1B9E");
expect(() => {ms932Encoder.encode("\u1B9F")}).to.throw(Error, "EncodingError U+1B9F");
expect(() => {ms932Encoder.encode("\u1BA0")}).to.throw(Error, "EncodingError U+1BA0");
expect(() => {ms932Encoder.encode("\u1BA1")}).to.throw(Error, "EncodingError U+1BA1");
expect(() => {ms932Encoder.encode("\u1BA2")}).to.throw(Error, "EncodingError U+1BA2");
expect(() => {ms932Encoder.encode("\u1BA3")}).to.throw(Error, "EncodingError U+1BA3");
expect(() => {ms932Encoder.encode("\u1BA4")}).to.throw(Error, "EncodingError U+1BA4");
expect(() => {ms932Encoder.encode("\u1BA5")}).to.throw(Error, "EncodingError U+1BA5");
expect(() => {ms932Encoder.encode("\u1BA6")}).to.throw(Error, "EncodingError U+1BA6");
expect(() => {ms932Encoder.encode("\u1BA7")}).to.throw(Error, "EncodingError U+1BA7");
expect(() => {ms932Encoder.encode("\u1BA8")}).to.throw(Error, "EncodingError U+1BA8");
expect(() => {ms932Encoder.encode("\u1BA9")}).to.throw(Error, "EncodingError U+1BA9");
expect(() => {ms932Encoder.encode("\u1BAA")}).to.throw(Error, "EncodingError U+1BAA");
expect(() => {ms932Encoder.encode("\u1BAB")}).to.throw(Error, "EncodingError U+1BAB");
expect(() => {ms932Encoder.encode("\u1BAC")}).to.throw(Error, "EncodingError U+1BAC");
expect(() => {ms932Encoder.encode("\u1BAD")}).to.throw(Error, "EncodingError U+1BAD");
expect(() => {ms932Encoder.encode("\u1BAE")}).to.throw(Error, "EncodingError U+1BAE");
expect(() => {ms932Encoder.encode("\u1BAF")}).to.throw(Error, "EncodingError U+1BAF");
expect(() => {ms932Encoder.encode("\u1BB0")}).to.throw(Error, "EncodingError U+1BB0");
expect(() => {ms932Encoder.encode("\u1BB1")}).to.throw(Error, "EncodingError U+1BB1");
expect(() => {ms932Encoder.encode("\u1BB2")}).to.throw(Error, "EncodingError U+1BB2");
expect(() => {ms932Encoder.encode("\u1BB3")}).to.throw(Error, "EncodingError U+1BB3");
expect(() => {ms932Encoder.encode("\u1BB4")}).to.throw(Error, "EncodingError U+1BB4");
expect(() => {ms932Encoder.encode("\u1BB5")}).to.throw(Error, "EncodingError U+1BB5");
expect(() => {ms932Encoder.encode("\u1BB6")}).to.throw(Error, "EncodingError U+1BB6");
expect(() => {ms932Encoder.encode("\u1BB7")}).to.throw(Error, "EncodingError U+1BB7");
expect(() => {ms932Encoder.encode("\u1BB8")}).to.throw(Error, "EncodingError U+1BB8");
expect(() => {ms932Encoder.encode("\u1BB9")}).to.throw(Error, "EncodingError U+1BB9");
expect(() => {ms932Encoder.encode("\u1BBA")}).to.throw(Error, "EncodingError U+1BBA");
expect(() => {ms932Encoder.encode("\u1BBB")}).to.throw(Error, "EncodingError U+1BBB");
expect(() => {ms932Encoder.encode("\u1BBC")}).to.throw(Error, "EncodingError U+1BBC");
expect(() => {ms932Encoder.encode("\u1BBD")}).to.throw(Error, "EncodingError U+1BBD");
expect(() => {ms932Encoder.encode("\u1BBE")}).to.throw(Error, "EncodingError U+1BBE");
expect(() => {ms932Encoder.encode("\u1BBF")}).to.throw(Error, "EncodingError U+1BBF");
expect(() => {ms932Encoder.encode("\u1BC0")}).to.throw(Error, "EncodingError U+1BC0");
expect(() => {ms932Encoder.encode("\u1BC1")}).to.throw(Error, "EncodingError U+1BC1");
expect(() => {ms932Encoder.encode("\u1BC2")}).to.throw(Error, "EncodingError U+1BC2");
expect(() => {ms932Encoder.encode("\u1BC3")}).to.throw(Error, "EncodingError U+1BC3");
expect(() => {ms932Encoder.encode("\u1BC4")}).to.throw(Error, "EncodingError U+1BC4");
expect(() => {ms932Encoder.encode("\u1BC5")}).to.throw(Error, "EncodingError U+1BC5");
expect(() => {ms932Encoder.encode("\u1BC6")}).to.throw(Error, "EncodingError U+1BC6");
expect(() => {ms932Encoder.encode("\u1BC7")}).to.throw(Error, "EncodingError U+1BC7");
expect(() => {ms932Encoder.encode("\u1BC8")}).to.throw(Error, "EncodingError U+1BC8");
expect(() => {ms932Encoder.encode("\u1BC9")}).to.throw(Error, "EncodingError U+1BC9");
expect(() => {ms932Encoder.encode("\u1BCA")}).to.throw(Error, "EncodingError U+1BCA");
expect(() => {ms932Encoder.encode("\u1BCB")}).to.throw(Error, "EncodingError U+1BCB");
expect(() => {ms932Encoder.encode("\u1BCC")}).to.throw(Error, "EncodingError U+1BCC");
expect(() => {ms932Encoder.encode("\u1BCD")}).to.throw(Error, "EncodingError U+1BCD");
expect(() => {ms932Encoder.encode("\u1BCE")}).to.throw(Error, "EncodingError U+1BCE");
expect(() => {ms932Encoder.encode("\u1BCF")}).to.throw(Error, "EncodingError U+1BCF");
expect(() => {ms932Encoder.encode("\u1BD0")}).to.throw(Error, "EncodingError U+1BD0");
expect(() => {ms932Encoder.encode("\u1BD1")}).to.throw(Error, "EncodingError U+1BD1");
expect(() => {ms932Encoder.encode("\u1BD2")}).to.throw(Error, "EncodingError U+1BD2");
expect(() => {ms932Encoder.encode("\u1BD3")}).to.throw(Error, "EncodingError U+1BD3");
expect(() => {ms932Encoder.encode("\u1BD4")}).to.throw(Error, "EncodingError U+1BD4");
expect(() => {ms932Encoder.encode("\u1BD5")}).to.throw(Error, "EncodingError U+1BD5");
expect(() => {ms932Encoder.encode("\u1BD6")}).to.throw(Error, "EncodingError U+1BD6");
expect(() => {ms932Encoder.encode("\u1BD7")}).to.throw(Error, "EncodingError U+1BD7");
expect(() => {ms932Encoder.encode("\u1BD8")}).to.throw(Error, "EncodingError U+1BD8");
expect(() => {ms932Encoder.encode("\u1BD9")}).to.throw(Error, "EncodingError U+1BD9");
expect(() => {ms932Encoder.encode("\u1BDA")}).to.throw(Error, "EncodingError U+1BDA");
expect(() => {ms932Encoder.encode("\u1BDB")}).to.throw(Error, "EncodingError U+1BDB");
expect(() => {ms932Encoder.encode("\u1BDC")}).to.throw(Error, "EncodingError U+1BDC");
expect(() => {ms932Encoder.encode("\u1BDD")}).to.throw(Error, "EncodingError U+1BDD");
expect(() => {ms932Encoder.encode("\u1BDE")}).to.throw(Error, "EncodingError U+1BDE");
expect(() => {ms932Encoder.encode("\u1BDF")}).to.throw(Error, "EncodingError U+1BDF");
expect(() => {ms932Encoder.encode("\u1BE0")}).to.throw(Error, "EncodingError U+1BE0");
expect(() => {ms932Encoder.encode("\u1BE1")}).to.throw(Error, "EncodingError U+1BE1");
expect(() => {ms932Encoder.encode("\u1BE2")}).to.throw(Error, "EncodingError U+1BE2");
expect(() => {ms932Encoder.encode("\u1BE3")}).to.throw(Error, "EncodingError U+1BE3");
expect(() => {ms932Encoder.encode("\u1BE4")}).to.throw(Error, "EncodingError U+1BE4");
expect(() => {ms932Encoder.encode("\u1BE5")}).to.throw(Error, "EncodingError U+1BE5");
expect(() => {ms932Encoder.encode("\u1BE6")}).to.throw(Error, "EncodingError U+1BE6");
expect(() => {ms932Encoder.encode("\u1BE7")}).to.throw(Error, "EncodingError U+1BE7");
expect(() => {ms932Encoder.encode("\u1BE8")}).to.throw(Error, "EncodingError U+1BE8");
expect(() => {ms932Encoder.encode("\u1BE9")}).to.throw(Error, "EncodingError U+1BE9");
expect(() => {ms932Encoder.encode("\u1BEA")}).to.throw(Error, "EncodingError U+1BEA");
expect(() => {ms932Encoder.encode("\u1BEB")}).to.throw(Error, "EncodingError U+1BEB");
expect(() => {ms932Encoder.encode("\u1BEC")}).to.throw(Error, "EncodingError U+1BEC");
expect(() => {ms932Encoder.encode("\u1BED")}).to.throw(Error, "EncodingError U+1BED");
expect(() => {ms932Encoder.encode("\u1BEE")}).to.throw(Error, "EncodingError U+1BEE");
expect(() => {ms932Encoder.encode("\u1BEF")}).to.throw(Error, "EncodingError U+1BEF");
expect(() => {ms932Encoder.encode("\u1BF0")}).to.throw(Error, "EncodingError U+1BF0");
expect(() => {ms932Encoder.encode("\u1BF1")}).to.throw(Error, "EncodingError U+1BF1");
expect(() => {ms932Encoder.encode("\u1BF2")}).to.throw(Error, "EncodingError U+1BF2");
expect(() => {ms932Encoder.encode("\u1BF3")}).to.throw(Error, "EncodingError U+1BF3");
expect(() => {ms932Encoder.encode("\u1BF4")}).to.throw(Error, "EncodingError U+1BF4");
expect(() => {ms932Encoder.encode("\u1BF5")}).to.throw(Error, "EncodingError U+1BF5");
expect(() => {ms932Encoder.encode("\u1BF6")}).to.throw(Error, "EncodingError U+1BF6");
expect(() => {ms932Encoder.encode("\u1BF7")}).to.throw(Error, "EncodingError U+1BF7");
expect(() => {ms932Encoder.encode("\u1BF8")}).to.throw(Error, "EncodingError U+1BF8");
expect(() => {ms932Encoder.encode("\u1BF9")}).to.throw(Error, "EncodingError U+1BF9");
expect(() => {ms932Encoder.encode("\u1BFA")}).to.throw(Error, "EncodingError U+1BFA");
expect(() => {ms932Encoder.encode("\u1BFB")}).to.throw(Error, "EncodingError U+1BFB");
expect(() => {ms932Encoder.encode("\u1BFC")}).to.throw(Error, "EncodingError U+1BFC");
expect(() => {ms932Encoder.encode("\u1BFD")}).to.throw(Error, "EncodingError U+1BFD");
expect(() => {ms932Encoder.encode("\u1BFE")}).to.throw(Error, "EncodingError U+1BFE");
expect(() => {ms932Encoder.encode("\u1BFF")}).to.throw(Error, "EncodingError U+1BFF");
expect(() => {ms932Encoder.encode("\u1C00")}).to.throw(Error, "EncodingError U+1C00");
expect(() => {ms932Encoder.encode("\u1C01")}).to.throw(Error, "EncodingError U+1C01");
expect(() => {ms932Encoder.encode("\u1C02")}).to.throw(Error, "EncodingError U+1C02");
expect(() => {ms932Encoder.encode("\u1C03")}).to.throw(Error, "EncodingError U+1C03");
expect(() => {ms932Encoder.encode("\u1C04")}).to.throw(Error, "EncodingError U+1C04");
expect(() => {ms932Encoder.encode("\u1C05")}).to.throw(Error, "EncodingError U+1C05");
expect(() => {ms932Encoder.encode("\u1C06")}).to.throw(Error, "EncodingError U+1C06");
expect(() => {ms932Encoder.encode("\u1C07")}).to.throw(Error, "EncodingError U+1C07");
expect(() => {ms932Encoder.encode("\u1C08")}).to.throw(Error, "EncodingError U+1C08");
expect(() => {ms932Encoder.encode("\u1C09")}).to.throw(Error, "EncodingError U+1C09");
expect(() => {ms932Encoder.encode("\u1C0A")}).to.throw(Error, "EncodingError U+1C0A");
expect(() => {ms932Encoder.encode("\u1C0B")}).to.throw(Error, "EncodingError U+1C0B");
expect(() => {ms932Encoder.encode("\u1C0C")}).to.throw(Error, "EncodingError U+1C0C");
expect(() => {ms932Encoder.encode("\u1C0D")}).to.throw(Error, "EncodingError U+1C0D");
expect(() => {ms932Encoder.encode("\u1C0E")}).to.throw(Error, "EncodingError U+1C0E");
expect(() => {ms932Encoder.encode("\u1C0F")}).to.throw(Error, "EncodingError U+1C0F");
expect(() => {ms932Encoder.encode("\u1C10")}).to.throw(Error, "EncodingError U+1C10");
expect(() => {ms932Encoder.encode("\u1C11")}).to.throw(Error, "EncodingError U+1C11");
expect(() => {ms932Encoder.encode("\u1C12")}).to.throw(Error, "EncodingError U+1C12");
expect(() => {ms932Encoder.encode("\u1C13")}).to.throw(Error, "EncodingError U+1C13");
expect(() => {ms932Encoder.encode("\u1C14")}).to.throw(Error, "EncodingError U+1C14");
expect(() => {ms932Encoder.encode("\u1C15")}).to.throw(Error, "EncodingError U+1C15");
expect(() => {ms932Encoder.encode("\u1C16")}).to.throw(Error, "EncodingError U+1C16");
expect(() => {ms932Encoder.encode("\u1C17")}).to.throw(Error, "EncodingError U+1C17");
expect(() => {ms932Encoder.encode("\u1C18")}).to.throw(Error, "EncodingError U+1C18");
expect(() => {ms932Encoder.encode("\u1C19")}).to.throw(Error, "EncodingError U+1C19");
expect(() => {ms932Encoder.encode("\u1C1A")}).to.throw(Error, "EncodingError U+1C1A");
expect(() => {ms932Encoder.encode("\u1C1B")}).to.throw(Error, "EncodingError U+1C1B");
expect(() => {ms932Encoder.encode("\u1C1C")}).to.throw(Error, "EncodingError U+1C1C");
expect(() => {ms932Encoder.encode("\u1C1D")}).to.throw(Error, "EncodingError U+1C1D");
expect(() => {ms932Encoder.encode("\u1C1E")}).to.throw(Error, "EncodingError U+1C1E");
expect(() => {ms932Encoder.encode("\u1C1F")}).to.throw(Error, "EncodingError U+1C1F");
expect(() => {ms932Encoder.encode("\u1C20")}).to.throw(Error, "EncodingError U+1C20");
expect(() => {ms932Encoder.encode("\u1C21")}).to.throw(Error, "EncodingError U+1C21");
expect(() => {ms932Encoder.encode("\u1C22")}).to.throw(Error, "EncodingError U+1C22");
expect(() => {ms932Encoder.encode("\u1C23")}).to.throw(Error, "EncodingError U+1C23");
expect(() => {ms932Encoder.encode("\u1C24")}).to.throw(Error, "EncodingError U+1C24");
expect(() => {ms932Encoder.encode("\u1C25")}).to.throw(Error, "EncodingError U+1C25");
expect(() => {ms932Encoder.encode("\u1C26")}).to.throw(Error, "EncodingError U+1C26");
expect(() => {ms932Encoder.encode("\u1C27")}).to.throw(Error, "EncodingError U+1C27");
expect(() => {ms932Encoder.encode("\u1C28")}).to.throw(Error, "EncodingError U+1C28");
expect(() => {ms932Encoder.encode("\u1C29")}).to.throw(Error, "EncodingError U+1C29");
expect(() => {ms932Encoder.encode("\u1C2A")}).to.throw(Error, "EncodingError U+1C2A");
expect(() => {ms932Encoder.encode("\u1C2B")}).to.throw(Error, "EncodingError U+1C2B");
expect(() => {ms932Encoder.encode("\u1C2C")}).to.throw(Error, "EncodingError U+1C2C");
expect(() => {ms932Encoder.encode("\u1C2D")}).to.throw(Error, "EncodingError U+1C2D");
expect(() => {ms932Encoder.encode("\u1C2E")}).to.throw(Error, "EncodingError U+1C2E");
expect(() => {ms932Encoder.encode("\u1C2F")}).to.throw(Error, "EncodingError U+1C2F");
expect(() => {ms932Encoder.encode("\u1C30")}).to.throw(Error, "EncodingError U+1C30");
expect(() => {ms932Encoder.encode("\u1C31")}).to.throw(Error, "EncodingError U+1C31");
expect(() => {ms932Encoder.encode("\u1C32")}).to.throw(Error, "EncodingError U+1C32");
expect(() => {ms932Encoder.encode("\u1C33")}).to.throw(Error, "EncodingError U+1C33");
expect(() => {ms932Encoder.encode("\u1C34")}).to.throw(Error, "EncodingError U+1C34");
expect(() => {ms932Encoder.encode("\u1C35")}).to.throw(Error, "EncodingError U+1C35");
expect(() => {ms932Encoder.encode("\u1C36")}).to.throw(Error, "EncodingError U+1C36");
expect(() => {ms932Encoder.encode("\u1C37")}).to.throw(Error, "EncodingError U+1C37");
expect(() => {ms932Encoder.encode("\u1C38")}).to.throw(Error, "EncodingError U+1C38");
expect(() => {ms932Encoder.encode("\u1C39")}).to.throw(Error, "EncodingError U+1C39");
expect(() => {ms932Encoder.encode("\u1C3A")}).to.throw(Error, "EncodingError U+1C3A");
expect(() => {ms932Encoder.encode("\u1C3B")}).to.throw(Error, "EncodingError U+1C3B");
expect(() => {ms932Encoder.encode("\u1C3C")}).to.throw(Error, "EncodingError U+1C3C");
expect(() => {ms932Encoder.encode("\u1C3D")}).to.throw(Error, "EncodingError U+1C3D");
expect(() => {ms932Encoder.encode("\u1C3E")}).to.throw(Error, "EncodingError U+1C3E");
expect(() => {ms932Encoder.encode("\u1C3F")}).to.throw(Error, "EncodingError U+1C3F");
expect(() => {ms932Encoder.encode("\u1C40")}).to.throw(Error, "EncodingError U+1C40");
expect(() => {ms932Encoder.encode("\u1C41")}).to.throw(Error, "EncodingError U+1C41");
expect(() => {ms932Encoder.encode("\u1C42")}).to.throw(Error, "EncodingError U+1C42");
expect(() => {ms932Encoder.encode("\u1C43")}).to.throw(Error, "EncodingError U+1C43");
expect(() => {ms932Encoder.encode("\u1C44")}).to.throw(Error, "EncodingError U+1C44");
expect(() => {ms932Encoder.encode("\u1C45")}).to.throw(Error, "EncodingError U+1C45");
expect(() => {ms932Encoder.encode("\u1C46")}).to.throw(Error, "EncodingError U+1C46");
expect(() => {ms932Encoder.encode("\u1C47")}).to.throw(Error, "EncodingError U+1C47");
expect(() => {ms932Encoder.encode("\u1C48")}).to.throw(Error, "EncodingError U+1C48");
expect(() => {ms932Encoder.encode("\u1C49")}).to.throw(Error, "EncodingError U+1C49");
expect(() => {ms932Encoder.encode("\u1C4A")}).to.throw(Error, "EncodingError U+1C4A");
expect(() => {ms932Encoder.encode("\u1C4B")}).to.throw(Error, "EncodingError U+1C4B");
expect(() => {ms932Encoder.encode("\u1C4C")}).to.throw(Error, "EncodingError U+1C4C");
expect(() => {ms932Encoder.encode("\u1C4D")}).to.throw(Error, "EncodingError U+1C4D");
expect(() => {ms932Encoder.encode("\u1C4E")}).to.throw(Error, "EncodingError U+1C4E");
expect(() => {ms932Encoder.encode("\u1C4F")}).to.throw(Error, "EncodingError U+1C4F");
expect(() => {ms932Encoder.encode("\u1C50")}).to.throw(Error, "EncodingError U+1C50");
expect(() => {ms932Encoder.encode("\u1C51")}).to.throw(Error, "EncodingError U+1C51");
expect(() => {ms932Encoder.encode("\u1C52")}).to.throw(Error, "EncodingError U+1C52");
expect(() => {ms932Encoder.encode("\u1C53")}).to.throw(Error, "EncodingError U+1C53");
expect(() => {ms932Encoder.encode("\u1C54")}).to.throw(Error, "EncodingError U+1C54");
expect(() => {ms932Encoder.encode("\u1C55")}).to.throw(Error, "EncodingError U+1C55");
expect(() => {ms932Encoder.encode("\u1C56")}).to.throw(Error, "EncodingError U+1C56");
expect(() => {ms932Encoder.encode("\u1C57")}).to.throw(Error, "EncodingError U+1C57");
expect(() => {ms932Encoder.encode("\u1C58")}).to.throw(Error, "EncodingError U+1C58");
expect(() => {ms932Encoder.encode("\u1C59")}).to.throw(Error, "EncodingError U+1C59");
expect(() => {ms932Encoder.encode("\u1C5A")}).to.throw(Error, "EncodingError U+1C5A");
expect(() => {ms932Encoder.encode("\u1C5B")}).to.throw(Error, "EncodingError U+1C5B");
expect(() => {ms932Encoder.encode("\u1C5C")}).to.throw(Error, "EncodingError U+1C5C");
expect(() => {ms932Encoder.encode("\u1C5D")}).to.throw(Error, "EncodingError U+1C5D");
expect(() => {ms932Encoder.encode("\u1C5E")}).to.throw(Error, "EncodingError U+1C5E");
expect(() => {ms932Encoder.encode("\u1C5F")}).to.throw(Error, "EncodingError U+1C5F");
expect(() => {ms932Encoder.encode("\u1C60")}).to.throw(Error, "EncodingError U+1C60");
expect(() => {ms932Encoder.encode("\u1C61")}).to.throw(Error, "EncodingError U+1C61");
expect(() => {ms932Encoder.encode("\u1C62")}).to.throw(Error, "EncodingError U+1C62");
expect(() => {ms932Encoder.encode("\u1C63")}).to.throw(Error, "EncodingError U+1C63");
expect(() => {ms932Encoder.encode("\u1C64")}).to.throw(Error, "EncodingError U+1C64");
expect(() => {ms932Encoder.encode("\u1C65")}).to.throw(Error, "EncodingError U+1C65");
expect(() => {ms932Encoder.encode("\u1C66")}).to.throw(Error, "EncodingError U+1C66");
expect(() => {ms932Encoder.encode("\u1C67")}).to.throw(Error, "EncodingError U+1C67");
expect(() => {ms932Encoder.encode("\u1C68")}).to.throw(Error, "EncodingError U+1C68");
expect(() => {ms932Encoder.encode("\u1C69")}).to.throw(Error, "EncodingError U+1C69");
expect(() => {ms932Encoder.encode("\u1C6A")}).to.throw(Error, "EncodingError U+1C6A");
expect(() => {ms932Encoder.encode("\u1C6B")}).to.throw(Error, "EncodingError U+1C6B");
expect(() => {ms932Encoder.encode("\u1C6C")}).to.throw(Error, "EncodingError U+1C6C");
expect(() => {ms932Encoder.encode("\u1C6D")}).to.throw(Error, "EncodingError U+1C6D");
expect(() => {ms932Encoder.encode("\u1C6E")}).to.throw(Error, "EncodingError U+1C6E");
expect(() => {ms932Encoder.encode("\u1C6F")}).to.throw(Error, "EncodingError U+1C6F");
expect(() => {ms932Encoder.encode("\u1C70")}).to.throw(Error, "EncodingError U+1C70");
expect(() => {ms932Encoder.encode("\u1C71")}).to.throw(Error, "EncodingError U+1C71");
expect(() => {ms932Encoder.encode("\u1C72")}).to.throw(Error, "EncodingError U+1C72");
expect(() => {ms932Encoder.encode("\u1C73")}).to.throw(Error, "EncodingError U+1C73");
expect(() => {ms932Encoder.encode("\u1C74")}).to.throw(Error, "EncodingError U+1C74");
expect(() => {ms932Encoder.encode("\u1C75")}).to.throw(Error, "EncodingError U+1C75");
expect(() => {ms932Encoder.encode("\u1C76")}).to.throw(Error, "EncodingError U+1C76");
expect(() => {ms932Encoder.encode("\u1C77")}).to.throw(Error, "EncodingError U+1C77");
expect(() => {ms932Encoder.encode("\u1C78")}).to.throw(Error, "EncodingError U+1C78");
expect(() => {ms932Encoder.encode("\u1C79")}).to.throw(Error, "EncodingError U+1C79");
expect(() => {ms932Encoder.encode("\u1C7A")}).to.throw(Error, "EncodingError U+1C7A");
expect(() => {ms932Encoder.encode("\u1C7B")}).to.throw(Error, "EncodingError U+1C7B");
expect(() => {ms932Encoder.encode("\u1C7C")}).to.throw(Error, "EncodingError U+1C7C");
expect(() => {ms932Encoder.encode("\u1C7D")}).to.throw(Error, "EncodingError U+1C7D");
expect(() => {ms932Encoder.encode("\u1C7E")}).to.throw(Error, "EncodingError U+1C7E");
expect(() => {ms932Encoder.encode("\u1C7F")}).to.throw(Error, "EncodingError U+1C7F");
expect(() => {ms932Encoder.encode("\u1C80")}).to.throw(Error, "EncodingError U+1C80");
expect(() => {ms932Encoder.encode("\u1C81")}).to.throw(Error, "EncodingError U+1C81");
expect(() => {ms932Encoder.encode("\u1C82")}).to.throw(Error, "EncodingError U+1C82");
expect(() => {ms932Encoder.encode("\u1C83")}).to.throw(Error, "EncodingError U+1C83");
expect(() => {ms932Encoder.encode("\u1C84")}).to.throw(Error, "EncodingError U+1C84");
expect(() => {ms932Encoder.encode("\u1C85")}).to.throw(Error, "EncodingError U+1C85");
expect(() => {ms932Encoder.encode("\u1C86")}).to.throw(Error, "EncodingError U+1C86");
expect(() => {ms932Encoder.encode("\u1C87")}).to.throw(Error, "EncodingError U+1C87");
expect(() => {ms932Encoder.encode("\u1C88")}).to.throw(Error, "EncodingError U+1C88");
expect(() => {ms932Encoder.encode("\u1C89")}).to.throw(Error, "EncodingError U+1C89");
expect(() => {ms932Encoder.encode("\u1C8A")}).to.throw(Error, "EncodingError U+1C8A");
expect(() => {ms932Encoder.encode("\u1C8B")}).to.throw(Error, "EncodingError U+1C8B");
expect(() => {ms932Encoder.encode("\u1C8C")}).to.throw(Error, "EncodingError U+1C8C");
expect(() => {ms932Encoder.encode("\u1C8D")}).to.throw(Error, "EncodingError U+1C8D");
expect(() => {ms932Encoder.encode("\u1C8E")}).to.throw(Error, "EncodingError U+1C8E");
expect(() => {ms932Encoder.encode("\u1C8F")}).to.throw(Error, "EncodingError U+1C8F");
expect(() => {ms932Encoder.encode("\u1C90")}).to.throw(Error, "EncodingError U+1C90");
expect(() => {ms932Encoder.encode("\u1C91")}).to.throw(Error, "EncodingError U+1C91");
expect(() => {ms932Encoder.encode("\u1C92")}).to.throw(Error, "EncodingError U+1C92");
expect(() => {ms932Encoder.encode("\u1C93")}).to.throw(Error, "EncodingError U+1C93");
expect(() => {ms932Encoder.encode("\u1C94")}).to.throw(Error, "EncodingError U+1C94");
expect(() => {ms932Encoder.encode("\u1C95")}).to.throw(Error, "EncodingError U+1C95");
expect(() => {ms932Encoder.encode("\u1C96")}).to.throw(Error, "EncodingError U+1C96");
expect(() => {ms932Encoder.encode("\u1C97")}).to.throw(Error, "EncodingError U+1C97");
expect(() => {ms932Encoder.encode("\u1C98")}).to.throw(Error, "EncodingError U+1C98");
expect(() => {ms932Encoder.encode("\u1C99")}).to.throw(Error, "EncodingError U+1C99");
expect(() => {ms932Encoder.encode("\u1C9A")}).to.throw(Error, "EncodingError U+1C9A");
expect(() => {ms932Encoder.encode("\u1C9B")}).to.throw(Error, "EncodingError U+1C9B");
expect(() => {ms932Encoder.encode("\u1C9C")}).to.throw(Error, "EncodingError U+1C9C");
expect(() => {ms932Encoder.encode("\u1C9D")}).to.throw(Error, "EncodingError U+1C9D");
expect(() => {ms932Encoder.encode("\u1C9E")}).to.throw(Error, "EncodingError U+1C9E");
expect(() => {ms932Encoder.encode("\u1C9F")}).to.throw(Error, "EncodingError U+1C9F");
expect(() => {ms932Encoder.encode("\u1CA0")}).to.throw(Error, "EncodingError U+1CA0");
expect(() => {ms932Encoder.encode("\u1CA1")}).to.throw(Error, "EncodingError U+1CA1");
expect(() => {ms932Encoder.encode("\u1CA2")}).to.throw(Error, "EncodingError U+1CA2");
expect(() => {ms932Encoder.encode("\u1CA3")}).to.throw(Error, "EncodingError U+1CA3");
expect(() => {ms932Encoder.encode("\u1CA4")}).to.throw(Error, "EncodingError U+1CA4");
expect(() => {ms932Encoder.encode("\u1CA5")}).to.throw(Error, "EncodingError U+1CA5");
expect(() => {ms932Encoder.encode("\u1CA6")}).to.throw(Error, "EncodingError U+1CA6");
expect(() => {ms932Encoder.encode("\u1CA7")}).to.throw(Error, "EncodingError U+1CA7");
expect(() => {ms932Encoder.encode("\u1CA8")}).to.throw(Error, "EncodingError U+1CA8");
expect(() => {ms932Encoder.encode("\u1CA9")}).to.throw(Error, "EncodingError U+1CA9");
expect(() => {ms932Encoder.encode("\u1CAA")}).to.throw(Error, "EncodingError U+1CAA");
expect(() => {ms932Encoder.encode("\u1CAB")}).to.throw(Error, "EncodingError U+1CAB");
expect(() => {ms932Encoder.encode("\u1CAC")}).to.throw(Error, "EncodingError U+1CAC");
expect(() => {ms932Encoder.encode("\u1CAD")}).to.throw(Error, "EncodingError U+1CAD");
expect(() => {ms932Encoder.encode("\u1CAE")}).to.throw(Error, "EncodingError U+1CAE");
expect(() => {ms932Encoder.encode("\u1CAF")}).to.throw(Error, "EncodingError U+1CAF");
expect(() => {ms932Encoder.encode("\u1CB0")}).to.throw(Error, "EncodingError U+1CB0");
expect(() => {ms932Encoder.encode("\u1CB1")}).to.throw(Error, "EncodingError U+1CB1");
expect(() => {ms932Encoder.encode("\u1CB2")}).to.throw(Error, "EncodingError U+1CB2");
expect(() => {ms932Encoder.encode("\u1CB3")}).to.throw(Error, "EncodingError U+1CB3");
expect(() => {ms932Encoder.encode("\u1CB4")}).to.throw(Error, "EncodingError U+1CB4");
expect(() => {ms932Encoder.encode("\u1CB5")}).to.throw(Error, "EncodingError U+1CB5");
expect(() => {ms932Encoder.encode("\u1CB6")}).to.throw(Error, "EncodingError U+1CB6");
expect(() => {ms932Encoder.encode("\u1CB7")}).to.throw(Error, "EncodingError U+1CB7");
expect(() => {ms932Encoder.encode("\u1CB8")}).to.throw(Error, "EncodingError U+1CB8");
expect(() => {ms932Encoder.encode("\u1CB9")}).to.throw(Error, "EncodingError U+1CB9");
expect(() => {ms932Encoder.encode("\u1CBA")}).to.throw(Error, "EncodingError U+1CBA");
expect(() => {ms932Encoder.encode("\u1CBB")}).to.throw(Error, "EncodingError U+1CBB");
expect(() => {ms932Encoder.encode("\u1CBC")}).to.throw(Error, "EncodingError U+1CBC");
expect(() => {ms932Encoder.encode("\u1CBD")}).to.throw(Error, "EncodingError U+1CBD");
expect(() => {ms932Encoder.encode("\u1CBE")}).to.throw(Error, "EncodingError U+1CBE");
expect(() => {ms932Encoder.encode("\u1CBF")}).to.throw(Error, "EncodingError U+1CBF");
expect(() => {ms932Encoder.encode("\u1CC0")}).to.throw(Error, "EncodingError U+1CC0");
expect(() => {ms932Encoder.encode("\u1CC1")}).to.throw(Error, "EncodingError U+1CC1");
expect(() => {ms932Encoder.encode("\u1CC2")}).to.throw(Error, "EncodingError U+1CC2");
expect(() => {ms932Encoder.encode("\u1CC3")}).to.throw(Error, "EncodingError U+1CC3");
expect(() => {ms932Encoder.encode("\u1CC4")}).to.throw(Error, "EncodingError U+1CC4");
expect(() => {ms932Encoder.encode("\u1CC5")}).to.throw(Error, "EncodingError U+1CC5");
expect(() => {ms932Encoder.encode("\u1CC6")}).to.throw(Error, "EncodingError U+1CC6");
expect(() => {ms932Encoder.encode("\u1CC7")}).to.throw(Error, "EncodingError U+1CC7");
expect(() => {ms932Encoder.encode("\u1CC8")}).to.throw(Error, "EncodingError U+1CC8");
expect(() => {ms932Encoder.encode("\u1CC9")}).to.throw(Error, "EncodingError U+1CC9");
expect(() => {ms932Encoder.encode("\u1CCA")}).to.throw(Error, "EncodingError U+1CCA");
expect(() => {ms932Encoder.encode("\u1CCB")}).to.throw(Error, "EncodingError U+1CCB");
expect(() => {ms932Encoder.encode("\u1CCC")}).to.throw(Error, "EncodingError U+1CCC");
expect(() => {ms932Encoder.encode("\u1CCD")}).to.throw(Error, "EncodingError U+1CCD");
expect(() => {ms932Encoder.encode("\u1CCE")}).to.throw(Error, "EncodingError U+1CCE");
expect(() => {ms932Encoder.encode("\u1CCF")}).to.throw(Error, "EncodingError U+1CCF");
expect(() => {ms932Encoder.encode("\u1CD0")}).to.throw(Error, "EncodingError U+1CD0");
expect(() => {ms932Encoder.encode("\u1CD1")}).to.throw(Error, "EncodingError U+1CD1");
expect(() => {ms932Encoder.encode("\u1CD2")}).to.throw(Error, "EncodingError U+1CD2");
expect(() => {ms932Encoder.encode("\u1CD3")}).to.throw(Error, "EncodingError U+1CD3");
expect(() => {ms932Encoder.encode("\u1CD4")}).to.throw(Error, "EncodingError U+1CD4");
expect(() => {ms932Encoder.encode("\u1CD5")}).to.throw(Error, "EncodingError U+1CD5");
expect(() => {ms932Encoder.encode("\u1CD6")}).to.throw(Error, "EncodingError U+1CD6");
expect(() => {ms932Encoder.encode("\u1CD7")}).to.throw(Error, "EncodingError U+1CD7");
expect(() => {ms932Encoder.encode("\u1CD8")}).to.throw(Error, "EncodingError U+1CD8");
expect(() => {ms932Encoder.encode("\u1CD9")}).to.throw(Error, "EncodingError U+1CD9");
expect(() => {ms932Encoder.encode("\u1CDA")}).to.throw(Error, "EncodingError U+1CDA");
expect(() => {ms932Encoder.encode("\u1CDB")}).to.throw(Error, "EncodingError U+1CDB");
expect(() => {ms932Encoder.encode("\u1CDC")}).to.throw(Error, "EncodingError U+1CDC");
expect(() => {ms932Encoder.encode("\u1CDD")}).to.throw(Error, "EncodingError U+1CDD");
expect(() => {ms932Encoder.encode("\u1CDE")}).to.throw(Error, "EncodingError U+1CDE");
expect(() => {ms932Encoder.encode("\u1CDF")}).to.throw(Error, "EncodingError U+1CDF");
expect(() => {ms932Encoder.encode("\u1CE0")}).to.throw(Error, "EncodingError U+1CE0");
expect(() => {ms932Encoder.encode("\u1CE1")}).to.throw(Error, "EncodingError U+1CE1");
expect(() => {ms932Encoder.encode("\u1CE2")}).to.throw(Error, "EncodingError U+1CE2");
expect(() => {ms932Encoder.encode("\u1CE3")}).to.throw(Error, "EncodingError U+1CE3");
expect(() => {ms932Encoder.encode("\u1CE4")}).to.throw(Error, "EncodingError U+1CE4");
expect(() => {ms932Encoder.encode("\u1CE5")}).to.throw(Error, "EncodingError U+1CE5");
expect(() => {ms932Encoder.encode("\u1CE6")}).to.throw(Error, "EncodingError U+1CE6");
expect(() => {ms932Encoder.encode("\u1CE7")}).to.throw(Error, "EncodingError U+1CE7");
expect(() => {ms932Encoder.encode("\u1CE8")}).to.throw(Error, "EncodingError U+1CE8");
expect(() => {ms932Encoder.encode("\u1CE9")}).to.throw(Error, "EncodingError U+1CE9");
expect(() => {ms932Encoder.encode("\u1CEA")}).to.throw(Error, "EncodingError U+1CEA");
expect(() => {ms932Encoder.encode("\u1CEB")}).to.throw(Error, "EncodingError U+1CEB");
expect(() => {ms932Encoder.encode("\u1CEC")}).to.throw(Error, "EncodingError U+1CEC");
expect(() => {ms932Encoder.encode("\u1CED")}).to.throw(Error, "EncodingError U+1CED");
expect(() => {ms932Encoder.encode("\u1CEE")}).to.throw(Error, "EncodingError U+1CEE");
expect(() => {ms932Encoder.encode("\u1CEF")}).to.throw(Error, "EncodingError U+1CEF");
expect(() => {ms932Encoder.encode("\u1CF0")}).to.throw(Error, "EncodingError U+1CF0");
expect(() => {ms932Encoder.encode("\u1CF1")}).to.throw(Error, "EncodingError U+1CF1");
expect(() => {ms932Encoder.encode("\u1CF2")}).to.throw(Error, "EncodingError U+1CF2");
expect(() => {ms932Encoder.encode("\u1CF3")}).to.throw(Error, "EncodingError U+1CF3");
expect(() => {ms932Encoder.encode("\u1CF4")}).to.throw(Error, "EncodingError U+1CF4");
expect(() => {ms932Encoder.encode("\u1CF5")}).to.throw(Error, "EncodingError U+1CF5");
expect(() => {ms932Encoder.encode("\u1CF6")}).to.throw(Error, "EncodingError U+1CF6");
expect(() => {ms932Encoder.encode("\u1CF7")}).to.throw(Error, "EncodingError U+1CF7");
expect(() => {ms932Encoder.encode("\u1CF8")}).to.throw(Error, "EncodingError U+1CF8");
expect(() => {ms932Encoder.encode("\u1CF9")}).to.throw(Error, "EncodingError U+1CF9");
expect(() => {ms932Encoder.encode("\u1CFA")}).to.throw(Error, "EncodingError U+1CFA");
expect(() => {ms932Encoder.encode("\u1CFB")}).to.throw(Error, "EncodingError U+1CFB");
expect(() => {ms932Encoder.encode("\u1CFC")}).to.throw(Error, "EncodingError U+1CFC");
expect(() => {ms932Encoder.encode("\u1CFD")}).to.throw(Error, "EncodingError U+1CFD");
expect(() => {ms932Encoder.encode("\u1CFE")}).to.throw(Error, "EncodingError U+1CFE");
expect(() => {ms932Encoder.encode("\u1CFF")}).to.throw(Error, "EncodingError U+1CFF");
expect(() => {ms932Encoder.encode("\u1D00")}).to.throw(Error, "EncodingError U+1D00");
expect(() => {ms932Encoder.encode("\u1D01")}).to.throw(Error, "EncodingError U+1D01");
expect(() => {ms932Encoder.encode("\u1D02")}).to.throw(Error, "EncodingError U+1D02");
expect(() => {ms932Encoder.encode("\u1D03")}).to.throw(Error, "EncodingError U+1D03");
expect(() => {ms932Encoder.encode("\u1D04")}).to.throw(Error, "EncodingError U+1D04");
expect(() => {ms932Encoder.encode("\u1D05")}).to.throw(Error, "EncodingError U+1D05");
expect(() => {ms932Encoder.encode("\u1D06")}).to.throw(Error, "EncodingError U+1D06");
expect(() => {ms932Encoder.encode("\u1D07")}).to.throw(Error, "EncodingError U+1D07");
expect(() => {ms932Encoder.encode("\u1D08")}).to.throw(Error, "EncodingError U+1D08");
expect(() => {ms932Encoder.encode("\u1D09")}).to.throw(Error, "EncodingError U+1D09");
expect(() => {ms932Encoder.encode("\u1D0A")}).to.throw(Error, "EncodingError U+1D0A");
expect(() => {ms932Encoder.encode("\u1D0B")}).to.throw(Error, "EncodingError U+1D0B");
expect(() => {ms932Encoder.encode("\u1D0C")}).to.throw(Error, "EncodingError U+1D0C");
expect(() => {ms932Encoder.encode("\u1D0D")}).to.throw(Error, "EncodingError U+1D0D");
expect(() => {ms932Encoder.encode("\u1D0E")}).to.throw(Error, "EncodingError U+1D0E");
expect(() => {ms932Encoder.encode("\u1D0F")}).to.throw(Error, "EncodingError U+1D0F");
expect(() => {ms932Encoder.encode("\u1D10")}).to.throw(Error, "EncodingError U+1D10");
expect(() => {ms932Encoder.encode("\u1D11")}).to.throw(Error, "EncodingError U+1D11");
expect(() => {ms932Encoder.encode("\u1D12")}).to.throw(Error, "EncodingError U+1D12");
expect(() => {ms932Encoder.encode("\u1D13")}).to.throw(Error, "EncodingError U+1D13");
expect(() => {ms932Encoder.encode("\u1D14")}).to.throw(Error, "EncodingError U+1D14");
expect(() => {ms932Encoder.encode("\u1D15")}).to.throw(Error, "EncodingError U+1D15");
expect(() => {ms932Encoder.encode("\u1D16")}).to.throw(Error, "EncodingError U+1D16");
expect(() => {ms932Encoder.encode("\u1D17")}).to.throw(Error, "EncodingError U+1D17");
expect(() => {ms932Encoder.encode("\u1D18")}).to.throw(Error, "EncodingError U+1D18");
expect(() => {ms932Encoder.encode("\u1D19")}).to.throw(Error, "EncodingError U+1D19");
expect(() => {ms932Encoder.encode("\u1D1A")}).to.throw(Error, "EncodingError U+1D1A");
expect(() => {ms932Encoder.encode("\u1D1B")}).to.throw(Error, "EncodingError U+1D1B");
expect(() => {ms932Encoder.encode("\u1D1C")}).to.throw(Error, "EncodingError U+1D1C");
expect(() => {ms932Encoder.encode("\u1D1D")}).to.throw(Error, "EncodingError U+1D1D");
expect(() => {ms932Encoder.encode("\u1D1E")}).to.throw(Error, "EncodingError U+1D1E");
expect(() => {ms932Encoder.encode("\u1D1F")}).to.throw(Error, "EncodingError U+1D1F");
expect(() => {ms932Encoder.encode("\u1D20")}).to.throw(Error, "EncodingError U+1D20");
expect(() => {ms932Encoder.encode("\u1D21")}).to.throw(Error, "EncodingError U+1D21");
expect(() => {ms932Encoder.encode("\u1D22")}).to.throw(Error, "EncodingError U+1D22");
expect(() => {ms932Encoder.encode("\u1D23")}).to.throw(Error, "EncodingError U+1D23");
expect(() => {ms932Encoder.encode("\u1D24")}).to.throw(Error, "EncodingError U+1D24");
expect(() => {ms932Encoder.encode("\u1D25")}).to.throw(Error, "EncodingError U+1D25");
expect(() => {ms932Encoder.encode("\u1D26")}).to.throw(Error, "EncodingError U+1D26");
expect(() => {ms932Encoder.encode("\u1D27")}).to.throw(Error, "EncodingError U+1D27");
expect(() => {ms932Encoder.encode("\u1D28")}).to.throw(Error, "EncodingError U+1D28");
expect(() => {ms932Encoder.encode("\u1D29")}).to.throw(Error, "EncodingError U+1D29");
expect(() => {ms932Encoder.encode("\u1D2A")}).to.throw(Error, "EncodingError U+1D2A");
expect(() => {ms932Encoder.encode("\u1D2B")}).to.throw(Error, "EncodingError U+1D2B");
expect(() => {ms932Encoder.encode("\u1D2C")}).to.throw(Error, "EncodingError U+1D2C");
expect(() => {ms932Encoder.encode("\u1D2D")}).to.throw(Error, "EncodingError U+1D2D");
expect(() => {ms932Encoder.encode("\u1D2E")}).to.throw(Error, "EncodingError U+1D2E");
expect(() => {ms932Encoder.encode("\u1D2F")}).to.throw(Error, "EncodingError U+1D2F");
expect(() => {ms932Encoder.encode("\u1D30")}).to.throw(Error, "EncodingError U+1D30");
expect(() => {ms932Encoder.encode("\u1D31")}).to.throw(Error, "EncodingError U+1D31");
expect(() => {ms932Encoder.encode("\u1D32")}).to.throw(Error, "EncodingError U+1D32");
expect(() => {ms932Encoder.encode("\u1D33")}).to.throw(Error, "EncodingError U+1D33");
expect(() => {ms932Encoder.encode("\u1D34")}).to.throw(Error, "EncodingError U+1D34");
expect(() => {ms932Encoder.encode("\u1D35")}).to.throw(Error, "EncodingError U+1D35");
expect(() => {ms932Encoder.encode("\u1D36")}).to.throw(Error, "EncodingError U+1D36");
expect(() => {ms932Encoder.encode("\u1D37")}).to.throw(Error, "EncodingError U+1D37");
expect(() => {ms932Encoder.encode("\u1D38")}).to.throw(Error, "EncodingError U+1D38");
expect(() => {ms932Encoder.encode("\u1D39")}).to.throw(Error, "EncodingError U+1D39");
expect(() => {ms932Encoder.encode("\u1D3A")}).to.throw(Error, "EncodingError U+1D3A");
expect(() => {ms932Encoder.encode("\u1D3B")}).to.throw(Error, "EncodingError U+1D3B");
expect(() => {ms932Encoder.encode("\u1D3C")}).to.throw(Error, "EncodingError U+1D3C");
expect(() => {ms932Encoder.encode("\u1D3D")}).to.throw(Error, "EncodingError U+1D3D");
expect(() => {ms932Encoder.encode("\u1D3E")}).to.throw(Error, "EncodingError U+1D3E");
expect(() => {ms932Encoder.encode("\u1D3F")}).to.throw(Error, "EncodingError U+1D3F");
expect(() => {ms932Encoder.encode("\u1D40")}).to.throw(Error, "EncodingError U+1D40");
expect(() => {ms932Encoder.encode("\u1D41")}).to.throw(Error, "EncodingError U+1D41");
expect(() => {ms932Encoder.encode("\u1D42")}).to.throw(Error, "EncodingError U+1D42");
expect(() => {ms932Encoder.encode("\u1D43")}).to.throw(Error, "EncodingError U+1D43");
expect(() => {ms932Encoder.encode("\u1D44")}).to.throw(Error, "EncodingError U+1D44");
expect(() => {ms932Encoder.encode("\u1D45")}).to.throw(Error, "EncodingError U+1D45");
expect(() => {ms932Encoder.encode("\u1D46")}).to.throw(Error, "EncodingError U+1D46");
expect(() => {ms932Encoder.encode("\u1D47")}).to.throw(Error, "EncodingError U+1D47");
expect(() => {ms932Encoder.encode("\u1D48")}).to.throw(Error, "EncodingError U+1D48");
expect(() => {ms932Encoder.encode("\u1D49")}).to.throw(Error, "EncodingError U+1D49");
expect(() => {ms932Encoder.encode("\u1D4A")}).to.throw(Error, "EncodingError U+1D4A");
expect(() => {ms932Encoder.encode("\u1D4B")}).to.throw(Error, "EncodingError U+1D4B");
expect(() => {ms932Encoder.encode("\u1D4C")}).to.throw(Error, "EncodingError U+1D4C");
expect(() => {ms932Encoder.encode("\u1D4D")}).to.throw(Error, "EncodingError U+1D4D");
expect(() => {ms932Encoder.encode("\u1D4E")}).to.throw(Error, "EncodingError U+1D4E");
expect(() => {ms932Encoder.encode("\u1D4F")}).to.throw(Error, "EncodingError U+1D4F");
expect(() => {ms932Encoder.encode("\u1D50")}).to.throw(Error, "EncodingError U+1D50");
expect(() => {ms932Encoder.encode("\u1D51")}).to.throw(Error, "EncodingError U+1D51");
expect(() => {ms932Encoder.encode("\u1D52")}).to.throw(Error, "EncodingError U+1D52");
expect(() => {ms932Encoder.encode("\u1D53")}).to.throw(Error, "EncodingError U+1D53");
expect(() => {ms932Encoder.encode("\u1D54")}).to.throw(Error, "EncodingError U+1D54");
expect(() => {ms932Encoder.encode("\u1D55")}).to.throw(Error, "EncodingError U+1D55");
expect(() => {ms932Encoder.encode("\u1D56")}).to.throw(Error, "EncodingError U+1D56");
expect(() => {ms932Encoder.encode("\u1D57")}).to.throw(Error, "EncodingError U+1D57");
expect(() => {ms932Encoder.encode("\u1D58")}).to.throw(Error, "EncodingError U+1D58");
expect(() => {ms932Encoder.encode("\u1D59")}).to.throw(Error, "EncodingError U+1D59");
expect(() => {ms932Encoder.encode("\u1D5A")}).to.throw(Error, "EncodingError U+1D5A");
expect(() => {ms932Encoder.encode("\u1D5B")}).to.throw(Error, "EncodingError U+1D5B");
expect(() => {ms932Encoder.encode("\u1D5C")}).to.throw(Error, "EncodingError U+1D5C");
expect(() => {ms932Encoder.encode("\u1D5D")}).to.throw(Error, "EncodingError U+1D5D");
expect(() => {ms932Encoder.encode("\u1D5E")}).to.throw(Error, "EncodingError U+1D5E");
expect(() => {ms932Encoder.encode("\u1D5F")}).to.throw(Error, "EncodingError U+1D5F");
expect(() => {ms932Encoder.encode("\u1D60")}).to.throw(Error, "EncodingError U+1D60");
expect(() => {ms932Encoder.encode("\u1D61")}).to.throw(Error, "EncodingError U+1D61");
expect(() => {ms932Encoder.encode("\u1D62")}).to.throw(Error, "EncodingError U+1D62");
expect(() => {ms932Encoder.encode("\u1D63")}).to.throw(Error, "EncodingError U+1D63");
expect(() => {ms932Encoder.encode("\u1D64")}).to.throw(Error, "EncodingError U+1D64");
expect(() => {ms932Encoder.encode("\u1D65")}).to.throw(Error, "EncodingError U+1D65");
expect(() => {ms932Encoder.encode("\u1D66")}).to.throw(Error, "EncodingError U+1D66");
expect(() => {ms932Encoder.encode("\u1D67")}).to.throw(Error, "EncodingError U+1D67");
expect(() => {ms932Encoder.encode("\u1D68")}).to.throw(Error, "EncodingError U+1D68");
expect(() => {ms932Encoder.encode("\u1D69")}).to.throw(Error, "EncodingError U+1D69");
expect(() => {ms932Encoder.encode("\u1D6A")}).to.throw(Error, "EncodingError U+1D6A");
expect(() => {ms932Encoder.encode("\u1D6B")}).to.throw(Error, "EncodingError U+1D6B");
expect(() => {ms932Encoder.encode("\u1D6C")}).to.throw(Error, "EncodingError U+1D6C");
expect(() => {ms932Encoder.encode("\u1D6D")}).to.throw(Error, "EncodingError U+1D6D");
expect(() => {ms932Encoder.encode("\u1D6E")}).to.throw(Error, "EncodingError U+1D6E");
expect(() => {ms932Encoder.encode("\u1D6F")}).to.throw(Error, "EncodingError U+1D6F");
expect(() => {ms932Encoder.encode("\u1D70")}).to.throw(Error, "EncodingError U+1D70");
expect(() => {ms932Encoder.encode("\u1D71")}).to.throw(Error, "EncodingError U+1D71");
expect(() => {ms932Encoder.encode("\u1D72")}).to.throw(Error, "EncodingError U+1D72");
expect(() => {ms932Encoder.encode("\u1D73")}).to.throw(Error, "EncodingError U+1D73");
expect(() => {ms932Encoder.encode("\u1D74")}).to.throw(Error, "EncodingError U+1D74");
expect(() => {ms932Encoder.encode("\u1D75")}).to.throw(Error, "EncodingError U+1D75");
expect(() => {ms932Encoder.encode("\u1D76")}).to.throw(Error, "EncodingError U+1D76");
expect(() => {ms932Encoder.encode("\u1D77")}).to.throw(Error, "EncodingError U+1D77");
expect(() => {ms932Encoder.encode("\u1D78")}).to.throw(Error, "EncodingError U+1D78");
expect(() => {ms932Encoder.encode("\u1D79")}).to.throw(Error, "EncodingError U+1D79");
expect(() => {ms932Encoder.encode("\u1D7A")}).to.throw(Error, "EncodingError U+1D7A");
expect(() => {ms932Encoder.encode("\u1D7B")}).to.throw(Error, "EncodingError U+1D7B");
expect(() => {ms932Encoder.encode("\u1D7C")}).to.throw(Error, "EncodingError U+1D7C");
expect(() => {ms932Encoder.encode("\u1D7D")}).to.throw(Error, "EncodingError U+1D7D");
expect(() => {ms932Encoder.encode("\u1D7E")}).to.throw(Error, "EncodingError U+1D7E");
expect(() => {ms932Encoder.encode("\u1D7F")}).to.throw(Error, "EncodingError U+1D7F");
expect(() => {ms932Encoder.encode("\u1D80")}).to.throw(Error, "EncodingError U+1D80");
expect(() => {ms932Encoder.encode("\u1D81")}).to.throw(Error, "EncodingError U+1D81");
expect(() => {ms932Encoder.encode("\u1D82")}).to.throw(Error, "EncodingError U+1D82");
expect(() => {ms932Encoder.encode("\u1D83")}).to.throw(Error, "EncodingError U+1D83");
expect(() => {ms932Encoder.encode("\u1D84")}).to.throw(Error, "EncodingError U+1D84");
expect(() => {ms932Encoder.encode("\u1D85")}).to.throw(Error, "EncodingError U+1D85");
expect(() => {ms932Encoder.encode("\u1D86")}).to.throw(Error, "EncodingError U+1D86");
expect(() => {ms932Encoder.encode("\u1D87")}).to.throw(Error, "EncodingError U+1D87");
expect(() => {ms932Encoder.encode("\u1D88")}).to.throw(Error, "EncodingError U+1D88");
expect(() => {ms932Encoder.encode("\u1D89")}).to.throw(Error, "EncodingError U+1D89");
expect(() => {ms932Encoder.encode("\u1D8A")}).to.throw(Error, "EncodingError U+1D8A");
expect(() => {ms932Encoder.encode("\u1D8B")}).to.throw(Error, "EncodingError U+1D8B");
expect(() => {ms932Encoder.encode("\u1D8C")}).to.throw(Error, "EncodingError U+1D8C");
expect(() => {ms932Encoder.encode("\u1D8D")}).to.throw(Error, "EncodingError U+1D8D");
expect(() => {ms932Encoder.encode("\u1D8E")}).to.throw(Error, "EncodingError U+1D8E");
expect(() => {ms932Encoder.encode("\u1D8F")}).to.throw(Error, "EncodingError U+1D8F");
expect(() => {ms932Encoder.encode("\u1D90")}).to.throw(Error, "EncodingError U+1D90");
expect(() => {ms932Encoder.encode("\u1D91")}).to.throw(Error, "EncodingError U+1D91");
expect(() => {ms932Encoder.encode("\u1D92")}).to.throw(Error, "EncodingError U+1D92");
expect(() => {ms932Encoder.encode("\u1D93")}).to.throw(Error, "EncodingError U+1D93");
expect(() => {ms932Encoder.encode("\u1D94")}).to.throw(Error, "EncodingError U+1D94");
expect(() => {ms932Encoder.encode("\u1D95")}).to.throw(Error, "EncodingError U+1D95");
expect(() => {ms932Encoder.encode("\u1D96")}).to.throw(Error, "EncodingError U+1D96");
expect(() => {ms932Encoder.encode("\u1D97")}).to.throw(Error, "EncodingError U+1D97");
expect(() => {ms932Encoder.encode("\u1D98")}).to.throw(Error, "EncodingError U+1D98");
expect(() => {ms932Encoder.encode("\u1D99")}).to.throw(Error, "EncodingError U+1D99");
expect(() => {ms932Encoder.encode("\u1D9A")}).to.throw(Error, "EncodingError U+1D9A");
expect(() => {ms932Encoder.encode("\u1D9B")}).to.throw(Error, "EncodingError U+1D9B");
expect(() => {ms932Encoder.encode("\u1D9C")}).to.throw(Error, "EncodingError U+1D9C");
expect(() => {ms932Encoder.encode("\u1D9D")}).to.throw(Error, "EncodingError U+1D9D");
expect(() => {ms932Encoder.encode("\u1D9E")}).to.throw(Error, "EncodingError U+1D9E");
expect(() => {ms932Encoder.encode("\u1D9F")}).to.throw(Error, "EncodingError U+1D9F");
expect(() => {ms932Encoder.encode("\u1DA0")}).to.throw(Error, "EncodingError U+1DA0");
expect(() => {ms932Encoder.encode("\u1DA1")}).to.throw(Error, "EncodingError U+1DA1");
expect(() => {ms932Encoder.encode("\u1DA2")}).to.throw(Error, "EncodingError U+1DA2");
expect(() => {ms932Encoder.encode("\u1DA3")}).to.throw(Error, "EncodingError U+1DA3");
expect(() => {ms932Encoder.encode("\u1DA4")}).to.throw(Error, "EncodingError U+1DA4");
expect(() => {ms932Encoder.encode("\u1DA5")}).to.throw(Error, "EncodingError U+1DA5");
expect(() => {ms932Encoder.encode("\u1DA6")}).to.throw(Error, "EncodingError U+1DA6");
expect(() => {ms932Encoder.encode("\u1DA7")}).to.throw(Error, "EncodingError U+1DA7");
expect(() => {ms932Encoder.encode("\u1DA8")}).to.throw(Error, "EncodingError U+1DA8");
expect(() => {ms932Encoder.encode("\u1DA9")}).to.throw(Error, "EncodingError U+1DA9");
expect(() => {ms932Encoder.encode("\u1DAA")}).to.throw(Error, "EncodingError U+1DAA");
expect(() => {ms932Encoder.encode("\u1DAB")}).to.throw(Error, "EncodingError U+1DAB");
expect(() => {ms932Encoder.encode("\u1DAC")}).to.throw(Error, "EncodingError U+1DAC");
expect(() => {ms932Encoder.encode("\u1DAD")}).to.throw(Error, "EncodingError U+1DAD");
expect(() => {ms932Encoder.encode("\u1DAE")}).to.throw(Error, "EncodingError U+1DAE");
expect(() => {ms932Encoder.encode("\u1DAF")}).to.throw(Error, "EncodingError U+1DAF");
expect(() => {ms932Encoder.encode("\u1DB0")}).to.throw(Error, "EncodingError U+1DB0");
expect(() => {ms932Encoder.encode("\u1DB1")}).to.throw(Error, "EncodingError U+1DB1");
expect(() => {ms932Encoder.encode("\u1DB2")}).to.throw(Error, "EncodingError U+1DB2");
expect(() => {ms932Encoder.encode("\u1DB3")}).to.throw(Error, "EncodingError U+1DB3");
expect(() => {ms932Encoder.encode("\u1DB4")}).to.throw(Error, "EncodingError U+1DB4");
expect(() => {ms932Encoder.encode("\u1DB5")}).to.throw(Error, "EncodingError U+1DB5");
expect(() => {ms932Encoder.encode("\u1DB6")}).to.throw(Error, "EncodingError U+1DB6");
expect(() => {ms932Encoder.encode("\u1DB7")}).to.throw(Error, "EncodingError U+1DB7");
expect(() => {ms932Encoder.encode("\u1DB8")}).to.throw(Error, "EncodingError U+1DB8");
expect(() => {ms932Encoder.encode("\u1DB9")}).to.throw(Error, "EncodingError U+1DB9");
expect(() => {ms932Encoder.encode("\u1DBA")}).to.throw(Error, "EncodingError U+1DBA");
expect(() => {ms932Encoder.encode("\u1DBB")}).to.throw(Error, "EncodingError U+1DBB");
expect(() => {ms932Encoder.encode("\u1DBC")}).to.throw(Error, "EncodingError U+1DBC");
expect(() => {ms932Encoder.encode("\u1DBD")}).to.throw(Error, "EncodingError U+1DBD");
expect(() => {ms932Encoder.encode("\u1DBE")}).to.throw(Error, "EncodingError U+1DBE");
expect(() => {ms932Encoder.encode("\u1DBF")}).to.throw(Error, "EncodingError U+1DBF");
expect(() => {ms932Encoder.encode("\u1DC0")}).to.throw(Error, "EncodingError U+1DC0");
expect(() => {ms932Encoder.encode("\u1DC1")}).to.throw(Error, "EncodingError U+1DC1");
expect(() => {ms932Encoder.encode("\u1DC2")}).to.throw(Error, "EncodingError U+1DC2");
expect(() => {ms932Encoder.encode("\u1DC3")}).to.throw(Error, "EncodingError U+1DC3");
expect(() => {ms932Encoder.encode("\u1DC4")}).to.throw(Error, "EncodingError U+1DC4");
expect(() => {ms932Encoder.encode("\u1DC5")}).to.throw(Error, "EncodingError U+1DC5");
expect(() => {ms932Encoder.encode("\u1DC6")}).to.throw(Error, "EncodingError U+1DC6");
expect(() => {ms932Encoder.encode("\u1DC7")}).to.throw(Error, "EncodingError U+1DC7");
expect(() => {ms932Encoder.encode("\u1DC8")}).to.throw(Error, "EncodingError U+1DC8");
expect(() => {ms932Encoder.encode("\u1DC9")}).to.throw(Error, "EncodingError U+1DC9");
expect(() => {ms932Encoder.encode("\u1DCA")}).to.throw(Error, "EncodingError U+1DCA");
expect(() => {ms932Encoder.encode("\u1DCB")}).to.throw(Error, "EncodingError U+1DCB");
expect(() => {ms932Encoder.encode("\u1DCC")}).to.throw(Error, "EncodingError U+1DCC");
expect(() => {ms932Encoder.encode("\u1DCD")}).to.throw(Error, "EncodingError U+1DCD");
expect(() => {ms932Encoder.encode("\u1DCE")}).to.throw(Error, "EncodingError U+1DCE");
expect(() => {ms932Encoder.encode("\u1DCF")}).to.throw(Error, "EncodingError U+1DCF");
expect(() => {ms932Encoder.encode("\u1DD0")}).to.throw(Error, "EncodingError U+1DD0");
expect(() => {ms932Encoder.encode("\u1DD1")}).to.throw(Error, "EncodingError U+1DD1");
expect(() => {ms932Encoder.encode("\u1DD2")}).to.throw(Error, "EncodingError U+1DD2");
expect(() => {ms932Encoder.encode("\u1DD3")}).to.throw(Error, "EncodingError U+1DD3");
expect(() => {ms932Encoder.encode("\u1DD4")}).to.throw(Error, "EncodingError U+1DD4");
expect(() => {ms932Encoder.encode("\u1DD5")}).to.throw(Error, "EncodingError U+1DD5");
expect(() => {ms932Encoder.encode("\u1DD6")}).to.throw(Error, "EncodingError U+1DD6");
expect(() => {ms932Encoder.encode("\u1DD7")}).to.throw(Error, "EncodingError U+1DD7");
expect(() => {ms932Encoder.encode("\u1DD8")}).to.throw(Error, "EncodingError U+1DD8");
expect(() => {ms932Encoder.encode("\u1DD9")}).to.throw(Error, "EncodingError U+1DD9");
expect(() => {ms932Encoder.encode("\u1DDA")}).to.throw(Error, "EncodingError U+1DDA");
expect(() => {ms932Encoder.encode("\u1DDB")}).to.throw(Error, "EncodingError U+1DDB");
expect(() => {ms932Encoder.encode("\u1DDC")}).to.throw(Error, "EncodingError U+1DDC");
expect(() => {ms932Encoder.encode("\u1DDD")}).to.throw(Error, "EncodingError U+1DDD");
expect(() => {ms932Encoder.encode("\u1DDE")}).to.throw(Error, "EncodingError U+1DDE");
expect(() => {ms932Encoder.encode("\u1DDF")}).to.throw(Error, "EncodingError U+1DDF");
expect(() => {ms932Encoder.encode("\u1DE0")}).to.throw(Error, "EncodingError U+1DE0");
expect(() => {ms932Encoder.encode("\u1DE1")}).to.throw(Error, "EncodingError U+1DE1");
expect(() => {ms932Encoder.encode("\u1DE2")}).to.throw(Error, "EncodingError U+1DE2");
expect(() => {ms932Encoder.encode("\u1DE3")}).to.throw(Error, "EncodingError U+1DE3");
expect(() => {ms932Encoder.encode("\u1DE4")}).to.throw(Error, "EncodingError U+1DE4");
expect(() => {ms932Encoder.encode("\u1DE5")}).to.throw(Error, "EncodingError U+1DE5");
expect(() => {ms932Encoder.encode("\u1DE6")}).to.throw(Error, "EncodingError U+1DE6");
expect(() => {ms932Encoder.encode("\u1DE7")}).to.throw(Error, "EncodingError U+1DE7");
expect(() => {ms932Encoder.encode("\u1DE8")}).to.throw(Error, "EncodingError U+1DE8");
expect(() => {ms932Encoder.encode("\u1DE9")}).to.throw(Error, "EncodingError U+1DE9");
expect(() => {ms932Encoder.encode("\u1DEA")}).to.throw(Error, "EncodingError U+1DEA");
expect(() => {ms932Encoder.encode("\u1DEB")}).to.throw(Error, "EncodingError U+1DEB");
expect(() => {ms932Encoder.encode("\u1DEC")}).to.throw(Error, "EncodingError U+1DEC");
expect(() => {ms932Encoder.encode("\u1DED")}).to.throw(Error, "EncodingError U+1DED");
expect(() => {ms932Encoder.encode("\u1DEE")}).to.throw(Error, "EncodingError U+1DEE");
expect(() => {ms932Encoder.encode("\u1DEF")}).to.throw(Error, "EncodingError U+1DEF");
expect(() => {ms932Encoder.encode("\u1DF0")}).to.throw(Error, "EncodingError U+1DF0");
expect(() => {ms932Encoder.encode("\u1DF1")}).to.throw(Error, "EncodingError U+1DF1");
expect(() => {ms932Encoder.encode("\u1DF2")}).to.throw(Error, "EncodingError U+1DF2");
expect(() => {ms932Encoder.encode("\u1DF3")}).to.throw(Error, "EncodingError U+1DF3");
expect(() => {ms932Encoder.encode("\u1DF4")}).to.throw(Error, "EncodingError U+1DF4");
expect(() => {ms932Encoder.encode("\u1DF5")}).to.throw(Error, "EncodingError U+1DF5");
expect(() => {ms932Encoder.encode("\u1DF6")}).to.throw(Error, "EncodingError U+1DF6");
expect(() => {ms932Encoder.encode("\u1DF7")}).to.throw(Error, "EncodingError U+1DF7");
expect(() => {ms932Encoder.encode("\u1DF8")}).to.throw(Error, "EncodingError U+1DF8");
expect(() => {ms932Encoder.encode("\u1DF9")}).to.throw(Error, "EncodingError U+1DF9");
expect(() => {ms932Encoder.encode("\u1DFA")}).to.throw(Error, "EncodingError U+1DFA");
expect(() => {ms932Encoder.encode("\u1DFB")}).to.throw(Error, "EncodingError U+1DFB");
expect(() => {ms932Encoder.encode("\u1DFC")}).to.throw(Error, "EncodingError U+1DFC");
expect(() => {ms932Encoder.encode("\u1DFD")}).to.throw(Error, "EncodingError U+1DFD");
expect(() => {ms932Encoder.encode("\u1DFE")}).to.throw(Error, "EncodingError U+1DFE");
expect(() => {ms932Encoder.encode("\u1DFF")}).to.throw(Error, "EncodingError U+1DFF");
expect(() => {ms932Encoder.encode("\u1E00")}).to.throw(Error, "EncodingError U+1E00");
expect(() => {ms932Encoder.encode("\u1E01")}).to.throw(Error, "EncodingError U+1E01");
expect(() => {ms932Encoder.encode("\u1E02")}).to.throw(Error, "EncodingError U+1E02");
expect(() => {ms932Encoder.encode("\u1E03")}).to.throw(Error, "EncodingError U+1E03");
expect(() => {ms932Encoder.encode("\u1E04")}).to.throw(Error, "EncodingError U+1E04");
expect(() => {ms932Encoder.encode("\u1E05")}).to.throw(Error, "EncodingError U+1E05");
expect(() => {ms932Encoder.encode("\u1E06")}).to.throw(Error, "EncodingError U+1E06");
expect(() => {ms932Encoder.encode("\u1E07")}).to.throw(Error, "EncodingError U+1E07");
expect(() => {ms932Encoder.encode("\u1E08")}).to.throw(Error, "EncodingError U+1E08");
expect(() => {ms932Encoder.encode("\u1E09")}).to.throw(Error, "EncodingError U+1E09");
expect(() => {ms932Encoder.encode("\u1E0A")}).to.throw(Error, "EncodingError U+1E0A");
expect(() => {ms932Encoder.encode("\u1E0B")}).to.throw(Error, "EncodingError U+1E0B");
expect(() => {ms932Encoder.encode("\u1E0C")}).to.throw(Error, "EncodingError U+1E0C");
expect(() => {ms932Encoder.encode("\u1E0D")}).to.throw(Error, "EncodingError U+1E0D");
expect(() => {ms932Encoder.encode("\u1E0E")}).to.throw(Error, "EncodingError U+1E0E");
expect(() => {ms932Encoder.encode("\u1E0F")}).to.throw(Error, "EncodingError U+1E0F");
expect(() => {ms932Encoder.encode("\u1E10")}).to.throw(Error, "EncodingError U+1E10");
expect(() => {ms932Encoder.encode("\u1E11")}).to.throw(Error, "EncodingError U+1E11");
expect(() => {ms932Encoder.encode("\u1E12")}).to.throw(Error, "EncodingError U+1E12");
expect(() => {ms932Encoder.encode("\u1E13")}).to.throw(Error, "EncodingError U+1E13");
expect(() => {ms932Encoder.encode("\u1E14")}).to.throw(Error, "EncodingError U+1E14");
expect(() => {ms932Encoder.encode("\u1E15")}).to.throw(Error, "EncodingError U+1E15");
expect(() => {ms932Encoder.encode("\u1E16")}).to.throw(Error, "EncodingError U+1E16");
expect(() => {ms932Encoder.encode("\u1E17")}).to.throw(Error, "EncodingError U+1E17");
expect(() => {ms932Encoder.encode("\u1E18")}).to.throw(Error, "EncodingError U+1E18");
expect(() => {ms932Encoder.encode("\u1E19")}).to.throw(Error, "EncodingError U+1E19");
expect(() => {ms932Encoder.encode("\u1E1A")}).to.throw(Error, "EncodingError U+1E1A");
expect(() => {ms932Encoder.encode("\u1E1B")}).to.throw(Error, "EncodingError U+1E1B");
expect(() => {ms932Encoder.encode("\u1E1C")}).to.throw(Error, "EncodingError U+1E1C");
expect(() => {ms932Encoder.encode("\u1E1D")}).to.throw(Error, "EncodingError U+1E1D");
expect(() => {ms932Encoder.encode("\u1E1E")}).to.throw(Error, "EncodingError U+1E1E");
expect(() => {ms932Encoder.encode("\u1E1F")}).to.throw(Error, "EncodingError U+1E1F");
expect(() => {ms932Encoder.encode("\u1E20")}).to.throw(Error, "EncodingError U+1E20");
expect(() => {ms932Encoder.encode("\u1E21")}).to.throw(Error, "EncodingError U+1E21");
expect(() => {ms932Encoder.encode("\u1E22")}).to.throw(Error, "EncodingError U+1E22");
expect(() => {ms932Encoder.encode("\u1E23")}).to.throw(Error, "EncodingError U+1E23");
expect(() => {ms932Encoder.encode("\u1E24")}).to.throw(Error, "EncodingError U+1E24");
expect(() => {ms932Encoder.encode("\u1E25")}).to.throw(Error, "EncodingError U+1E25");
expect(() => {ms932Encoder.encode("\u1E26")}).to.throw(Error, "EncodingError U+1E26");
expect(() => {ms932Encoder.encode("\u1E27")}).to.throw(Error, "EncodingError U+1E27");
expect(() => {ms932Encoder.encode("\u1E28")}).to.throw(Error, "EncodingError U+1E28");
expect(() => {ms932Encoder.encode("\u1E29")}).to.throw(Error, "EncodingError U+1E29");
expect(() => {ms932Encoder.encode("\u1E2A")}).to.throw(Error, "EncodingError U+1E2A");
expect(() => {ms932Encoder.encode("\u1E2B")}).to.throw(Error, "EncodingError U+1E2B");
expect(() => {ms932Encoder.encode("\u1E2C")}).to.throw(Error, "EncodingError U+1E2C");
expect(() => {ms932Encoder.encode("\u1E2D")}).to.throw(Error, "EncodingError U+1E2D");
expect(() => {ms932Encoder.encode("\u1E2E")}).to.throw(Error, "EncodingError U+1E2E");
expect(() => {ms932Encoder.encode("\u1E2F")}).to.throw(Error, "EncodingError U+1E2F");
expect(() => {ms932Encoder.encode("\u1E30")}).to.throw(Error, "EncodingError U+1E30");
expect(() => {ms932Encoder.encode("\u1E31")}).to.throw(Error, "EncodingError U+1E31");
expect(() => {ms932Encoder.encode("\u1E32")}).to.throw(Error, "EncodingError U+1E32");
expect(() => {ms932Encoder.encode("\u1E33")}).to.throw(Error, "EncodingError U+1E33");
expect(() => {ms932Encoder.encode("\u1E34")}).to.throw(Error, "EncodingError U+1E34");
expect(() => {ms932Encoder.encode("\u1E35")}).to.throw(Error, "EncodingError U+1E35");
expect(() => {ms932Encoder.encode("\u1E36")}).to.throw(Error, "EncodingError U+1E36");
expect(() => {ms932Encoder.encode("\u1E37")}).to.throw(Error, "EncodingError U+1E37");
expect(() => {ms932Encoder.encode("\u1E38")}).to.throw(Error, "EncodingError U+1E38");
expect(() => {ms932Encoder.encode("\u1E39")}).to.throw(Error, "EncodingError U+1E39");
expect(() => {ms932Encoder.encode("\u1E3A")}).to.throw(Error, "EncodingError U+1E3A");
expect(() => {ms932Encoder.encode("\u1E3B")}).to.throw(Error, "EncodingError U+1E3B");
expect(() => {ms932Encoder.encode("\u1E3C")}).to.throw(Error, "EncodingError U+1E3C");
expect(() => {ms932Encoder.encode("\u1E3D")}).to.throw(Error, "EncodingError U+1E3D");
expect(() => {ms932Encoder.encode("\u1E3E")}).to.throw(Error, "EncodingError U+1E3E");
expect(() => {ms932Encoder.encode("\u1E3F")}).to.throw(Error, "EncodingError U+1E3F");
expect(() => {ms932Encoder.encode("\u1E40")}).to.throw(Error, "EncodingError U+1E40");
expect(() => {ms932Encoder.encode("\u1E41")}).to.throw(Error, "EncodingError U+1E41");
expect(() => {ms932Encoder.encode("\u1E42")}).to.throw(Error, "EncodingError U+1E42");
expect(() => {ms932Encoder.encode("\u1E43")}).to.throw(Error, "EncodingError U+1E43");
expect(() => {ms932Encoder.encode("\u1E44")}).to.throw(Error, "EncodingError U+1E44");
expect(() => {ms932Encoder.encode("\u1E45")}).to.throw(Error, "EncodingError U+1E45");
expect(() => {ms932Encoder.encode("\u1E46")}).to.throw(Error, "EncodingError U+1E46");
expect(() => {ms932Encoder.encode("\u1E47")}).to.throw(Error, "EncodingError U+1E47");
expect(() => {ms932Encoder.encode("\u1E48")}).to.throw(Error, "EncodingError U+1E48");
expect(() => {ms932Encoder.encode("\u1E49")}).to.throw(Error, "EncodingError U+1E49");
expect(() => {ms932Encoder.encode("\u1E4A")}).to.throw(Error, "EncodingError U+1E4A");
expect(() => {ms932Encoder.encode("\u1E4B")}).to.throw(Error, "EncodingError U+1E4B");
expect(() => {ms932Encoder.encode("\u1E4C")}).to.throw(Error, "EncodingError U+1E4C");
expect(() => {ms932Encoder.encode("\u1E4D")}).to.throw(Error, "EncodingError U+1E4D");
expect(() => {ms932Encoder.encode("\u1E4E")}).to.throw(Error, "EncodingError U+1E4E");
expect(() => {ms932Encoder.encode("\u1E4F")}).to.throw(Error, "EncodingError U+1E4F");
expect(() => {ms932Encoder.encode("\u1E50")}).to.throw(Error, "EncodingError U+1E50");
expect(() => {ms932Encoder.encode("\u1E51")}).to.throw(Error, "EncodingError U+1E51");
expect(() => {ms932Encoder.encode("\u1E52")}).to.throw(Error, "EncodingError U+1E52");
expect(() => {ms932Encoder.encode("\u1E53")}).to.throw(Error, "EncodingError U+1E53");
expect(() => {ms932Encoder.encode("\u1E54")}).to.throw(Error, "EncodingError U+1E54");
expect(() => {ms932Encoder.encode("\u1E55")}).to.throw(Error, "EncodingError U+1E55");
expect(() => {ms932Encoder.encode("\u1E56")}).to.throw(Error, "EncodingError U+1E56");
expect(() => {ms932Encoder.encode("\u1E57")}).to.throw(Error, "EncodingError U+1E57");
expect(() => {ms932Encoder.encode("\u1E58")}).to.throw(Error, "EncodingError U+1E58");
expect(() => {ms932Encoder.encode("\u1E59")}).to.throw(Error, "EncodingError U+1E59");
expect(() => {ms932Encoder.encode("\u1E5A")}).to.throw(Error, "EncodingError U+1E5A");
expect(() => {ms932Encoder.encode("\u1E5B")}).to.throw(Error, "EncodingError U+1E5B");
expect(() => {ms932Encoder.encode("\u1E5C")}).to.throw(Error, "EncodingError U+1E5C");
expect(() => {ms932Encoder.encode("\u1E5D")}).to.throw(Error, "EncodingError U+1E5D");
expect(() => {ms932Encoder.encode("\u1E5E")}).to.throw(Error, "EncodingError U+1E5E");
expect(() => {ms932Encoder.encode("\u1E5F")}).to.throw(Error, "EncodingError U+1E5F");
expect(() => {ms932Encoder.encode("\u1E60")}).to.throw(Error, "EncodingError U+1E60");
expect(() => {ms932Encoder.encode("\u1E61")}).to.throw(Error, "EncodingError U+1E61");
expect(() => {ms932Encoder.encode("\u1E62")}).to.throw(Error, "EncodingError U+1E62");
expect(() => {ms932Encoder.encode("\u1E63")}).to.throw(Error, "EncodingError U+1E63");
expect(() => {ms932Encoder.encode("\u1E64")}).to.throw(Error, "EncodingError U+1E64");
expect(() => {ms932Encoder.encode("\u1E65")}).to.throw(Error, "EncodingError U+1E65");
expect(() => {ms932Encoder.encode("\u1E66")}).to.throw(Error, "EncodingError U+1E66");
expect(() => {ms932Encoder.encode("\u1E67")}).to.throw(Error, "EncodingError U+1E67");
expect(() => {ms932Encoder.encode("\u1E68")}).to.throw(Error, "EncodingError U+1E68");
expect(() => {ms932Encoder.encode("\u1E69")}).to.throw(Error, "EncodingError U+1E69");
expect(() => {ms932Encoder.encode("\u1E6A")}).to.throw(Error, "EncodingError U+1E6A");
expect(() => {ms932Encoder.encode("\u1E6B")}).to.throw(Error, "EncodingError U+1E6B");
expect(() => {ms932Encoder.encode("\u1E6C")}).to.throw(Error, "EncodingError U+1E6C");
expect(() => {ms932Encoder.encode("\u1E6D")}).to.throw(Error, "EncodingError U+1E6D");
expect(() => {ms932Encoder.encode("\u1E6E")}).to.throw(Error, "EncodingError U+1E6E");
expect(() => {ms932Encoder.encode("\u1E6F")}).to.throw(Error, "EncodingError U+1E6F");
expect(() => {ms932Encoder.encode("\u1E70")}).to.throw(Error, "EncodingError U+1E70");
expect(() => {ms932Encoder.encode("\u1E71")}).to.throw(Error, "EncodingError U+1E71");
expect(() => {ms932Encoder.encode("\u1E72")}).to.throw(Error, "EncodingError U+1E72");
expect(() => {ms932Encoder.encode("\u1E73")}).to.throw(Error, "EncodingError U+1E73");
expect(() => {ms932Encoder.encode("\u1E74")}).to.throw(Error, "EncodingError U+1E74");
expect(() => {ms932Encoder.encode("\u1E75")}).to.throw(Error, "EncodingError U+1E75");
expect(() => {ms932Encoder.encode("\u1E76")}).to.throw(Error, "EncodingError U+1E76");
expect(() => {ms932Encoder.encode("\u1E77")}).to.throw(Error, "EncodingError U+1E77");
expect(() => {ms932Encoder.encode("\u1E78")}).to.throw(Error, "EncodingError U+1E78");
expect(() => {ms932Encoder.encode("\u1E79")}).to.throw(Error, "EncodingError U+1E79");
expect(() => {ms932Encoder.encode("\u1E7A")}).to.throw(Error, "EncodingError U+1E7A");
expect(() => {ms932Encoder.encode("\u1E7B")}).to.throw(Error, "EncodingError U+1E7B");
expect(() => {ms932Encoder.encode("\u1E7C")}).to.throw(Error, "EncodingError U+1E7C");
expect(() => {ms932Encoder.encode("\u1E7D")}).to.throw(Error, "EncodingError U+1E7D");
expect(() => {ms932Encoder.encode("\u1E7E")}).to.throw(Error, "EncodingError U+1E7E");
expect(() => {ms932Encoder.encode("\u1E7F")}).to.throw(Error, "EncodingError U+1E7F");
expect(() => {ms932Encoder.encode("\u1E80")}).to.throw(Error, "EncodingError U+1E80");
expect(() => {ms932Encoder.encode("\u1E81")}).to.throw(Error, "EncodingError U+1E81");
expect(() => {ms932Encoder.encode("\u1E82")}).to.throw(Error, "EncodingError U+1E82");
expect(() => {ms932Encoder.encode("\u1E83")}).to.throw(Error, "EncodingError U+1E83");
expect(() => {ms932Encoder.encode("\u1E84")}).to.throw(Error, "EncodingError U+1E84");
expect(() => {ms932Encoder.encode("\u1E85")}).to.throw(Error, "EncodingError U+1E85");
expect(() => {ms932Encoder.encode("\u1E86")}).to.throw(Error, "EncodingError U+1E86");
expect(() => {ms932Encoder.encode("\u1E87")}).to.throw(Error, "EncodingError U+1E87");
expect(() => {ms932Encoder.encode("\u1E88")}).to.throw(Error, "EncodingError U+1E88");
expect(() => {ms932Encoder.encode("\u1E89")}).to.throw(Error, "EncodingError U+1E89");
expect(() => {ms932Encoder.encode("\u1E8A")}).to.throw(Error, "EncodingError U+1E8A");
expect(() => {ms932Encoder.encode("\u1E8B")}).to.throw(Error, "EncodingError U+1E8B");
expect(() => {ms932Encoder.encode("\u1E8C")}).to.throw(Error, "EncodingError U+1E8C");
expect(() => {ms932Encoder.encode("\u1E8D")}).to.throw(Error, "EncodingError U+1E8D");
expect(() => {ms932Encoder.encode("\u1E8E")}).to.throw(Error, "EncodingError U+1E8E");
expect(() => {ms932Encoder.encode("\u1E8F")}).to.throw(Error, "EncodingError U+1E8F");
expect(() => {ms932Encoder.encode("\u1E90")}).to.throw(Error, "EncodingError U+1E90");
expect(() => {ms932Encoder.encode("\u1E91")}).to.throw(Error, "EncodingError U+1E91");
expect(() => {ms932Encoder.encode("\u1E92")}).to.throw(Error, "EncodingError U+1E92");
expect(() => {ms932Encoder.encode("\u1E93")}).to.throw(Error, "EncodingError U+1E93");
expect(() => {ms932Encoder.encode("\u1E94")}).to.throw(Error, "EncodingError U+1E94");
expect(() => {ms932Encoder.encode("\u1E95")}).to.throw(Error, "EncodingError U+1E95");
expect(() => {ms932Encoder.encode("\u1E96")}).to.throw(Error, "EncodingError U+1E96");
expect(() => {ms932Encoder.encode("\u1E97")}).to.throw(Error, "EncodingError U+1E97");
expect(() => {ms932Encoder.encode("\u1E98")}).to.throw(Error, "EncodingError U+1E98");
expect(() => {ms932Encoder.encode("\u1E99")}).to.throw(Error, "EncodingError U+1E99");
expect(() => {ms932Encoder.encode("\u1E9A")}).to.throw(Error, "EncodingError U+1E9A");
expect(() => {ms932Encoder.encode("\u1E9B")}).to.throw(Error, "EncodingError U+1E9B");
expect(() => {ms932Encoder.encode("\u1E9C")}).to.throw(Error, "EncodingError U+1E9C");
expect(() => {ms932Encoder.encode("\u1E9D")}).to.throw(Error, "EncodingError U+1E9D");
expect(() => {ms932Encoder.encode("\u1E9E")}).to.throw(Error, "EncodingError U+1E9E");
expect(() => {ms932Encoder.encode("\u1E9F")}).to.throw(Error, "EncodingError U+1E9F");
expect(() => {ms932Encoder.encode("\u1EA0")}).to.throw(Error, "EncodingError U+1EA0");
expect(() => {ms932Encoder.encode("\u1EA1")}).to.throw(Error, "EncodingError U+1EA1");
expect(() => {ms932Encoder.encode("\u1EA2")}).to.throw(Error, "EncodingError U+1EA2");
expect(() => {ms932Encoder.encode("\u1EA3")}).to.throw(Error, "EncodingError U+1EA3");
expect(() => {ms932Encoder.encode("\u1EA4")}).to.throw(Error, "EncodingError U+1EA4");
expect(() => {ms932Encoder.encode("\u1EA5")}).to.throw(Error, "EncodingError U+1EA5");
expect(() => {ms932Encoder.encode("\u1EA6")}).to.throw(Error, "EncodingError U+1EA6");
expect(() => {ms932Encoder.encode("\u1EA7")}).to.throw(Error, "EncodingError U+1EA7");
expect(() => {ms932Encoder.encode("\u1EA8")}).to.throw(Error, "EncodingError U+1EA8");
expect(() => {ms932Encoder.encode("\u1EA9")}).to.throw(Error, "EncodingError U+1EA9");
expect(() => {ms932Encoder.encode("\u1EAA")}).to.throw(Error, "EncodingError U+1EAA");
expect(() => {ms932Encoder.encode("\u1EAB")}).to.throw(Error, "EncodingError U+1EAB");
expect(() => {ms932Encoder.encode("\u1EAC")}).to.throw(Error, "EncodingError U+1EAC");
expect(() => {ms932Encoder.encode("\u1EAD")}).to.throw(Error, "EncodingError U+1EAD");
expect(() => {ms932Encoder.encode("\u1EAE")}).to.throw(Error, "EncodingError U+1EAE");
expect(() => {ms932Encoder.encode("\u1EAF")}).to.throw(Error, "EncodingError U+1EAF");
expect(() => {ms932Encoder.encode("\u1EB0")}).to.throw(Error, "EncodingError U+1EB0");
expect(() => {ms932Encoder.encode("\u1EB1")}).to.throw(Error, "EncodingError U+1EB1");
expect(() => {ms932Encoder.encode("\u1EB2")}).to.throw(Error, "EncodingError U+1EB2");
expect(() => {ms932Encoder.encode("\u1EB3")}).to.throw(Error, "EncodingError U+1EB3");
expect(() => {ms932Encoder.encode("\u1EB4")}).to.throw(Error, "EncodingError U+1EB4");
expect(() => {ms932Encoder.encode("\u1EB5")}).to.throw(Error, "EncodingError U+1EB5");
expect(() => {ms932Encoder.encode("\u1EB6")}).to.throw(Error, "EncodingError U+1EB6");
expect(() => {ms932Encoder.encode("\u1EB7")}).to.throw(Error, "EncodingError U+1EB7");
expect(() => {ms932Encoder.encode("\u1EB8")}).to.throw(Error, "EncodingError U+1EB8");
expect(() => {ms932Encoder.encode("\u1EB9")}).to.throw(Error, "EncodingError U+1EB9");
expect(() => {ms932Encoder.encode("\u1EBA")}).to.throw(Error, "EncodingError U+1EBA");
expect(() => {ms932Encoder.encode("\u1EBB")}).to.throw(Error, "EncodingError U+1EBB");
expect(() => {ms932Encoder.encode("\u1EBC")}).to.throw(Error, "EncodingError U+1EBC");
expect(() => {ms932Encoder.encode("\u1EBD")}).to.throw(Error, "EncodingError U+1EBD");
expect(() => {ms932Encoder.encode("\u1EBE")}).to.throw(Error, "EncodingError U+1EBE");
expect(() => {ms932Encoder.encode("\u1EBF")}).to.throw(Error, "EncodingError U+1EBF");
expect(() => {ms932Encoder.encode("\u1EC0")}).to.throw(Error, "EncodingError U+1EC0");
expect(() => {ms932Encoder.encode("\u1EC1")}).to.throw(Error, "EncodingError U+1EC1");
expect(() => {ms932Encoder.encode("\u1EC2")}).to.throw(Error, "EncodingError U+1EC2");
expect(() => {ms932Encoder.encode("\u1EC3")}).to.throw(Error, "EncodingError U+1EC3");
expect(() => {ms932Encoder.encode("\u1EC4")}).to.throw(Error, "EncodingError U+1EC4");
expect(() => {ms932Encoder.encode("\u1EC5")}).to.throw(Error, "EncodingError U+1EC5");
expect(() => {ms932Encoder.encode("\u1EC6")}).to.throw(Error, "EncodingError U+1EC6");
expect(() => {ms932Encoder.encode("\u1EC7")}).to.throw(Error, "EncodingError U+1EC7");
expect(() => {ms932Encoder.encode("\u1EC8")}).to.throw(Error, "EncodingError U+1EC8");
expect(() => {ms932Encoder.encode("\u1EC9")}).to.throw(Error, "EncodingError U+1EC9");
expect(() => {ms932Encoder.encode("\u1ECA")}).to.throw(Error, "EncodingError U+1ECA");
expect(() => {ms932Encoder.encode("\u1ECB")}).to.throw(Error, "EncodingError U+1ECB");
expect(() => {ms932Encoder.encode("\u1ECC")}).to.throw(Error, "EncodingError U+1ECC");
expect(() => {ms932Encoder.encode("\u1ECD")}).to.throw(Error, "EncodingError U+1ECD");
expect(() => {ms932Encoder.encode("\u1ECE")}).to.throw(Error, "EncodingError U+1ECE");
expect(() => {ms932Encoder.encode("\u1ECF")}).to.throw(Error, "EncodingError U+1ECF");
expect(() => {ms932Encoder.encode("\u1ED0")}).to.throw(Error, "EncodingError U+1ED0");
expect(() => {ms932Encoder.encode("\u1ED1")}).to.throw(Error, "EncodingError U+1ED1");
expect(() => {ms932Encoder.encode("\u1ED2")}).to.throw(Error, "EncodingError U+1ED2");
expect(() => {ms932Encoder.encode("\u1ED3")}).to.throw(Error, "EncodingError U+1ED3");
expect(() => {ms932Encoder.encode("\u1ED4")}).to.throw(Error, "EncodingError U+1ED4");
expect(() => {ms932Encoder.encode("\u1ED5")}).to.throw(Error, "EncodingError U+1ED5");
expect(() => {ms932Encoder.encode("\u1ED6")}).to.throw(Error, "EncodingError U+1ED6");
expect(() => {ms932Encoder.encode("\u1ED7")}).to.throw(Error, "EncodingError U+1ED7");
expect(() => {ms932Encoder.encode("\u1ED8")}).to.throw(Error, "EncodingError U+1ED8");
expect(() => {ms932Encoder.encode("\u1ED9")}).to.throw(Error, "EncodingError U+1ED9");
expect(() => {ms932Encoder.encode("\u1EDA")}).to.throw(Error, "EncodingError U+1EDA");
expect(() => {ms932Encoder.encode("\u1EDB")}).to.throw(Error, "EncodingError U+1EDB");
expect(() => {ms932Encoder.encode("\u1EDC")}).to.throw(Error, "EncodingError U+1EDC");
expect(() => {ms932Encoder.encode("\u1EDD")}).to.throw(Error, "EncodingError U+1EDD");
expect(() => {ms932Encoder.encode("\u1EDE")}).to.throw(Error, "EncodingError U+1EDE");
expect(() => {ms932Encoder.encode("\u1EDF")}).to.throw(Error, "EncodingError U+1EDF");
expect(() => {ms932Encoder.encode("\u1EE0")}).to.throw(Error, "EncodingError U+1EE0");
expect(() => {ms932Encoder.encode("\u1EE1")}).to.throw(Error, "EncodingError U+1EE1");
expect(() => {ms932Encoder.encode("\u1EE2")}).to.throw(Error, "EncodingError U+1EE2");
expect(() => {ms932Encoder.encode("\u1EE3")}).to.throw(Error, "EncodingError U+1EE3");
expect(() => {ms932Encoder.encode("\u1EE4")}).to.throw(Error, "EncodingError U+1EE4");
expect(() => {ms932Encoder.encode("\u1EE5")}).to.throw(Error, "EncodingError U+1EE5");
expect(() => {ms932Encoder.encode("\u1EE6")}).to.throw(Error, "EncodingError U+1EE6");
expect(() => {ms932Encoder.encode("\u1EE7")}).to.throw(Error, "EncodingError U+1EE7");
expect(() => {ms932Encoder.encode("\u1EE8")}).to.throw(Error, "EncodingError U+1EE8");
expect(() => {ms932Encoder.encode("\u1EE9")}).to.throw(Error, "EncodingError U+1EE9");
expect(() => {ms932Encoder.encode("\u1EEA")}).to.throw(Error, "EncodingError U+1EEA");
expect(() => {ms932Encoder.encode("\u1EEB")}).to.throw(Error, "EncodingError U+1EEB");
expect(() => {ms932Encoder.encode("\u1EEC")}).to.throw(Error, "EncodingError U+1EEC");
expect(() => {ms932Encoder.encode("\u1EED")}).to.throw(Error, "EncodingError U+1EED");
expect(() => {ms932Encoder.encode("\u1EEE")}).to.throw(Error, "EncodingError U+1EEE");
expect(() => {ms932Encoder.encode("\u1EEF")}).to.throw(Error, "EncodingError U+1EEF");
expect(() => {ms932Encoder.encode("\u1EF0")}).to.throw(Error, "EncodingError U+1EF0");
expect(() => {ms932Encoder.encode("\u1EF1")}).to.throw(Error, "EncodingError U+1EF1");
expect(() => {ms932Encoder.encode("\u1EF2")}).to.throw(Error, "EncodingError U+1EF2");
expect(() => {ms932Encoder.encode("\u1EF3")}).to.throw(Error, "EncodingError U+1EF3");
expect(() => {ms932Encoder.encode("\u1EF4")}).to.throw(Error, "EncodingError U+1EF4");
expect(() => {ms932Encoder.encode("\u1EF5")}).to.throw(Error, "EncodingError U+1EF5");
expect(() => {ms932Encoder.encode("\u1EF6")}).to.throw(Error, "EncodingError U+1EF6");
expect(() => {ms932Encoder.encode("\u1EF7")}).to.throw(Error, "EncodingError U+1EF7");
expect(() => {ms932Encoder.encode("\u1EF8")}).to.throw(Error, "EncodingError U+1EF8");
expect(() => {ms932Encoder.encode("\u1EF9")}).to.throw(Error, "EncodingError U+1EF9");
expect(() => {ms932Encoder.encode("\u1EFA")}).to.throw(Error, "EncodingError U+1EFA");
expect(() => {ms932Encoder.encode("\u1EFB")}).to.throw(Error, "EncodingError U+1EFB");
expect(() => {ms932Encoder.encode("\u1EFC")}).to.throw(Error, "EncodingError U+1EFC");
expect(() => {ms932Encoder.encode("\u1EFD")}).to.throw(Error, "EncodingError U+1EFD");
expect(() => {ms932Encoder.encode("\u1EFE")}).to.throw(Error, "EncodingError U+1EFE");
expect(() => {ms932Encoder.encode("\u1EFF")}).to.throw(Error, "EncodingError U+1EFF");
expect(() => {ms932Encoder.encode("\u1F00")}).to.throw(Error, "EncodingError U+1F00");
expect(() => {ms932Encoder.encode("\u1F01")}).to.throw(Error, "EncodingError U+1F01");
expect(() => {ms932Encoder.encode("\u1F02")}).to.throw(Error, "EncodingError U+1F02");
expect(() => {ms932Encoder.encode("\u1F03")}).to.throw(Error, "EncodingError U+1F03");
expect(() => {ms932Encoder.encode("\u1F04")}).to.throw(Error, "EncodingError U+1F04");
expect(() => {ms932Encoder.encode("\u1F05")}).to.throw(Error, "EncodingError U+1F05");
expect(() => {ms932Encoder.encode("\u1F06")}).to.throw(Error, "EncodingError U+1F06");
expect(() => {ms932Encoder.encode("\u1F07")}).to.throw(Error, "EncodingError U+1F07");
expect(() => {ms932Encoder.encode("\u1F08")}).to.throw(Error, "EncodingError U+1F08");
expect(() => {ms932Encoder.encode("\u1F09")}).to.throw(Error, "EncodingError U+1F09");
expect(() => {ms932Encoder.encode("\u1F0A")}).to.throw(Error, "EncodingError U+1F0A");
expect(() => {ms932Encoder.encode("\u1F0B")}).to.throw(Error, "EncodingError U+1F0B");
expect(() => {ms932Encoder.encode("\u1F0C")}).to.throw(Error, "EncodingError U+1F0C");
expect(() => {ms932Encoder.encode("\u1F0D")}).to.throw(Error, "EncodingError U+1F0D");
expect(() => {ms932Encoder.encode("\u1F0E")}).to.throw(Error, "EncodingError U+1F0E");
expect(() => {ms932Encoder.encode("\u1F0F")}).to.throw(Error, "EncodingError U+1F0F");
expect(() => {ms932Encoder.encode("\u1F10")}).to.throw(Error, "EncodingError U+1F10");
expect(() => {ms932Encoder.encode("\u1F11")}).to.throw(Error, "EncodingError U+1F11");
expect(() => {ms932Encoder.encode("\u1F12")}).to.throw(Error, "EncodingError U+1F12");
expect(() => {ms932Encoder.encode("\u1F13")}).to.throw(Error, "EncodingError U+1F13");
expect(() => {ms932Encoder.encode("\u1F14")}).to.throw(Error, "EncodingError U+1F14");
expect(() => {ms932Encoder.encode("\u1F15")}).to.throw(Error, "EncodingError U+1F15");
expect(() => {ms932Encoder.encode("\u1F16")}).to.throw(Error, "EncodingError U+1F16");
expect(() => {ms932Encoder.encode("\u1F17")}).to.throw(Error, "EncodingError U+1F17");
expect(() => {ms932Encoder.encode("\u1F18")}).to.throw(Error, "EncodingError U+1F18");
expect(() => {ms932Encoder.encode("\u1F19")}).to.throw(Error, "EncodingError U+1F19");
expect(() => {ms932Encoder.encode("\u1F1A")}).to.throw(Error, "EncodingError U+1F1A");
expect(() => {ms932Encoder.encode("\u1F1B")}).to.throw(Error, "EncodingError U+1F1B");
expect(() => {ms932Encoder.encode("\u1F1C")}).to.throw(Error, "EncodingError U+1F1C");
expect(() => {ms932Encoder.encode("\u1F1D")}).to.throw(Error, "EncodingError U+1F1D");
expect(() => {ms932Encoder.encode("\u1F1E")}).to.throw(Error, "EncodingError U+1F1E");
expect(() => {ms932Encoder.encode("\u1F1F")}).to.throw(Error, "EncodingError U+1F1F");
expect(() => {ms932Encoder.encode("\u1F20")}).to.throw(Error, "EncodingError U+1F20");
expect(() => {ms932Encoder.encode("\u1F21")}).to.throw(Error, "EncodingError U+1F21");
expect(() => {ms932Encoder.encode("\u1F22")}).to.throw(Error, "EncodingError U+1F22");
expect(() => {ms932Encoder.encode("\u1F23")}).to.throw(Error, "EncodingError U+1F23");
expect(() => {ms932Encoder.encode("\u1F24")}).to.throw(Error, "EncodingError U+1F24");
expect(() => {ms932Encoder.encode("\u1F25")}).to.throw(Error, "EncodingError U+1F25");
expect(() => {ms932Encoder.encode("\u1F26")}).to.throw(Error, "EncodingError U+1F26");
expect(() => {ms932Encoder.encode("\u1F27")}).to.throw(Error, "EncodingError U+1F27");
expect(() => {ms932Encoder.encode("\u1F28")}).to.throw(Error, "EncodingError U+1F28");
expect(() => {ms932Encoder.encode("\u1F29")}).to.throw(Error, "EncodingError U+1F29");
expect(() => {ms932Encoder.encode("\u1F2A")}).to.throw(Error, "EncodingError U+1F2A");
expect(() => {ms932Encoder.encode("\u1F2B")}).to.throw(Error, "EncodingError U+1F2B");
expect(() => {ms932Encoder.encode("\u1F2C")}).to.throw(Error, "EncodingError U+1F2C");
expect(() => {ms932Encoder.encode("\u1F2D")}).to.throw(Error, "EncodingError U+1F2D");
expect(() => {ms932Encoder.encode("\u1F2E")}).to.throw(Error, "EncodingError U+1F2E");
expect(() => {ms932Encoder.encode("\u1F2F")}).to.throw(Error, "EncodingError U+1F2F");
expect(() => {ms932Encoder.encode("\u1F30")}).to.throw(Error, "EncodingError U+1F30");
expect(() => {ms932Encoder.encode("\u1F31")}).to.throw(Error, "EncodingError U+1F31");
expect(() => {ms932Encoder.encode("\u1F32")}).to.throw(Error, "EncodingError U+1F32");
expect(() => {ms932Encoder.encode("\u1F33")}).to.throw(Error, "EncodingError U+1F33");
expect(() => {ms932Encoder.encode("\u1F34")}).to.throw(Error, "EncodingError U+1F34");
expect(() => {ms932Encoder.encode("\u1F35")}).to.throw(Error, "EncodingError U+1F35");
expect(() => {ms932Encoder.encode("\u1F36")}).to.throw(Error, "EncodingError U+1F36");
expect(() => {ms932Encoder.encode("\u1F37")}).to.throw(Error, "EncodingError U+1F37");
expect(() => {ms932Encoder.encode("\u1F38")}).to.throw(Error, "EncodingError U+1F38");
expect(() => {ms932Encoder.encode("\u1F39")}).to.throw(Error, "EncodingError U+1F39");
expect(() => {ms932Encoder.encode("\u1F3A")}).to.throw(Error, "EncodingError U+1F3A");
expect(() => {ms932Encoder.encode("\u1F3B")}).to.throw(Error, "EncodingError U+1F3B");
expect(() => {ms932Encoder.encode("\u1F3C")}).to.throw(Error, "EncodingError U+1F3C");
expect(() => {ms932Encoder.encode("\u1F3D")}).to.throw(Error, "EncodingError U+1F3D");
expect(() => {ms932Encoder.encode("\u1F3E")}).to.throw(Error, "EncodingError U+1F3E");
expect(() => {ms932Encoder.encode("\u1F3F")}).to.throw(Error, "EncodingError U+1F3F");
expect(() => {ms932Encoder.encode("\u1F40")}).to.throw(Error, "EncodingError U+1F40");
expect(() => {ms932Encoder.encode("\u1F41")}).to.throw(Error, "EncodingError U+1F41");
expect(() => {ms932Encoder.encode("\u1F42")}).to.throw(Error, "EncodingError U+1F42");
expect(() => {ms932Encoder.encode("\u1F43")}).to.throw(Error, "EncodingError U+1F43");
expect(() => {ms932Encoder.encode("\u1F44")}).to.throw(Error, "EncodingError U+1F44");
expect(() => {ms932Encoder.encode("\u1F45")}).to.throw(Error, "EncodingError U+1F45");
expect(() => {ms932Encoder.encode("\u1F46")}).to.throw(Error, "EncodingError U+1F46");
expect(() => {ms932Encoder.encode("\u1F47")}).to.throw(Error, "EncodingError U+1F47");
expect(() => {ms932Encoder.encode("\u1F48")}).to.throw(Error, "EncodingError U+1F48");
expect(() => {ms932Encoder.encode("\u1F49")}).to.throw(Error, "EncodingError U+1F49");
expect(() => {ms932Encoder.encode("\u1F4A")}).to.throw(Error, "EncodingError U+1F4A");
expect(() => {ms932Encoder.encode("\u1F4B")}).to.throw(Error, "EncodingError U+1F4B");
expect(() => {ms932Encoder.encode("\u1F4C")}).to.throw(Error, "EncodingError U+1F4C");
expect(() => {ms932Encoder.encode("\u1F4D")}).to.throw(Error, "EncodingError U+1F4D");
expect(() => {ms932Encoder.encode("\u1F4E")}).to.throw(Error, "EncodingError U+1F4E");
expect(() => {ms932Encoder.encode("\u1F4F")}).to.throw(Error, "EncodingError U+1F4F");
expect(() => {ms932Encoder.encode("\u1F50")}).to.throw(Error, "EncodingError U+1F50");
expect(() => {ms932Encoder.encode("\u1F51")}).to.throw(Error, "EncodingError U+1F51");
expect(() => {ms932Encoder.encode("\u1F52")}).to.throw(Error, "EncodingError U+1F52");
expect(() => {ms932Encoder.encode("\u1F53")}).to.throw(Error, "EncodingError U+1F53");
expect(() => {ms932Encoder.encode("\u1F54")}).to.throw(Error, "EncodingError U+1F54");
expect(() => {ms932Encoder.encode("\u1F55")}).to.throw(Error, "EncodingError U+1F55");
expect(() => {ms932Encoder.encode("\u1F56")}).to.throw(Error, "EncodingError U+1F56");
expect(() => {ms932Encoder.encode("\u1F57")}).to.throw(Error, "EncodingError U+1F57");
expect(() => {ms932Encoder.encode("\u1F58")}).to.throw(Error, "EncodingError U+1F58");
expect(() => {ms932Encoder.encode("\u1F59")}).to.throw(Error, "EncodingError U+1F59");
expect(() => {ms932Encoder.encode("\u1F5A")}).to.throw(Error, "EncodingError U+1F5A");
expect(() => {ms932Encoder.encode("\u1F5B")}).to.throw(Error, "EncodingError U+1F5B");
expect(() => {ms932Encoder.encode("\u1F5C")}).to.throw(Error, "EncodingError U+1F5C");
expect(() => {ms932Encoder.encode("\u1F5D")}).to.throw(Error, "EncodingError U+1F5D");
expect(() => {ms932Encoder.encode("\u1F5E")}).to.throw(Error, "EncodingError U+1F5E");
expect(() => {ms932Encoder.encode("\u1F5F")}).to.throw(Error, "EncodingError U+1F5F");
expect(() => {ms932Encoder.encode("\u1F60")}).to.throw(Error, "EncodingError U+1F60");
expect(() => {ms932Encoder.encode("\u1F61")}).to.throw(Error, "EncodingError U+1F61");
expect(() => {ms932Encoder.encode("\u1F62")}).to.throw(Error, "EncodingError U+1F62");
expect(() => {ms932Encoder.encode("\u1F63")}).to.throw(Error, "EncodingError U+1F63");
expect(() => {ms932Encoder.encode("\u1F64")}).to.throw(Error, "EncodingError U+1F64");
expect(() => {ms932Encoder.encode("\u1F65")}).to.throw(Error, "EncodingError U+1F65");
expect(() => {ms932Encoder.encode("\u1F66")}).to.throw(Error, "EncodingError U+1F66");
expect(() => {ms932Encoder.encode("\u1F67")}).to.throw(Error, "EncodingError U+1F67");
expect(() => {ms932Encoder.encode("\u1F68")}).to.throw(Error, "EncodingError U+1F68");
expect(() => {ms932Encoder.encode("\u1F69")}).to.throw(Error, "EncodingError U+1F69");
expect(() => {ms932Encoder.encode("\u1F6A")}).to.throw(Error, "EncodingError U+1F6A");
expect(() => {ms932Encoder.encode("\u1F6B")}).to.throw(Error, "EncodingError U+1F6B");
expect(() => {ms932Encoder.encode("\u1F6C")}).to.throw(Error, "EncodingError U+1F6C");
expect(() => {ms932Encoder.encode("\u1F6D")}).to.throw(Error, "EncodingError U+1F6D");
expect(() => {ms932Encoder.encode("\u1F6E")}).to.throw(Error, "EncodingError U+1F6E");
expect(() => {ms932Encoder.encode("\u1F6F")}).to.throw(Error, "EncodingError U+1F6F");
expect(() => {ms932Encoder.encode("\u1F70")}).to.throw(Error, "EncodingError U+1F70");
expect(() => {ms932Encoder.encode("\u1F71")}).to.throw(Error, "EncodingError U+1F71");
expect(() => {ms932Encoder.encode("\u1F72")}).to.throw(Error, "EncodingError U+1F72");
expect(() => {ms932Encoder.encode("\u1F73")}).to.throw(Error, "EncodingError U+1F73");
expect(() => {ms932Encoder.encode("\u1F74")}).to.throw(Error, "EncodingError U+1F74");
expect(() => {ms932Encoder.encode("\u1F75")}).to.throw(Error, "EncodingError U+1F75");
expect(() => {ms932Encoder.encode("\u1F76")}).to.throw(Error, "EncodingError U+1F76");
expect(() => {ms932Encoder.encode("\u1F77")}).to.throw(Error, "EncodingError U+1F77");
expect(() => {ms932Encoder.encode("\u1F78")}).to.throw(Error, "EncodingError U+1F78");
expect(() => {ms932Encoder.encode("\u1F79")}).to.throw(Error, "EncodingError U+1F79");
expect(() => {ms932Encoder.encode("\u1F7A")}).to.throw(Error, "EncodingError U+1F7A");
expect(() => {ms932Encoder.encode("\u1F7B")}).to.throw(Error, "EncodingError U+1F7B");
expect(() => {ms932Encoder.encode("\u1F7C")}).to.throw(Error, "EncodingError U+1F7C");
expect(() => {ms932Encoder.encode("\u1F7D")}).to.throw(Error, "EncodingError U+1F7D");
expect(() => {ms932Encoder.encode("\u1F7E")}).to.throw(Error, "EncodingError U+1F7E");
expect(() => {ms932Encoder.encode("\u1F7F")}).to.throw(Error, "EncodingError U+1F7F");
expect(() => {ms932Encoder.encode("\u1F80")}).to.throw(Error, "EncodingError U+1F80");
expect(() => {ms932Encoder.encode("\u1F81")}).to.throw(Error, "EncodingError U+1F81");
expect(() => {ms932Encoder.encode("\u1F82")}).to.throw(Error, "EncodingError U+1F82");
expect(() => {ms932Encoder.encode("\u1F83")}).to.throw(Error, "EncodingError U+1F83");
expect(() => {ms932Encoder.encode("\u1F84")}).to.throw(Error, "EncodingError U+1F84");
expect(() => {ms932Encoder.encode("\u1F85")}).to.throw(Error, "EncodingError U+1F85");
expect(() => {ms932Encoder.encode("\u1F86")}).to.throw(Error, "EncodingError U+1F86");
expect(() => {ms932Encoder.encode("\u1F87")}).to.throw(Error, "EncodingError U+1F87");
expect(() => {ms932Encoder.encode("\u1F88")}).to.throw(Error, "EncodingError U+1F88");
expect(() => {ms932Encoder.encode("\u1F89")}).to.throw(Error, "EncodingError U+1F89");
expect(() => {ms932Encoder.encode("\u1F8A")}).to.throw(Error, "EncodingError U+1F8A");
expect(() => {ms932Encoder.encode("\u1F8B")}).to.throw(Error, "EncodingError U+1F8B");
expect(() => {ms932Encoder.encode("\u1F8C")}).to.throw(Error, "EncodingError U+1F8C");
expect(() => {ms932Encoder.encode("\u1F8D")}).to.throw(Error, "EncodingError U+1F8D");
expect(() => {ms932Encoder.encode("\u1F8E")}).to.throw(Error, "EncodingError U+1F8E");
expect(() => {ms932Encoder.encode("\u1F8F")}).to.throw(Error, "EncodingError U+1F8F");
expect(() => {ms932Encoder.encode("\u1F90")}).to.throw(Error, "EncodingError U+1F90");
expect(() => {ms932Encoder.encode("\u1F91")}).to.throw(Error, "EncodingError U+1F91");
expect(() => {ms932Encoder.encode("\u1F92")}).to.throw(Error, "EncodingError U+1F92");
expect(() => {ms932Encoder.encode("\u1F93")}).to.throw(Error, "EncodingError U+1F93");
expect(() => {ms932Encoder.encode("\u1F94")}).to.throw(Error, "EncodingError U+1F94");
expect(() => {ms932Encoder.encode("\u1F95")}).to.throw(Error, "EncodingError U+1F95");
expect(() => {ms932Encoder.encode("\u1F96")}).to.throw(Error, "EncodingError U+1F96");
expect(() => {ms932Encoder.encode("\u1F97")}).to.throw(Error, "EncodingError U+1F97");
expect(() => {ms932Encoder.encode("\u1F98")}).to.throw(Error, "EncodingError U+1F98");
expect(() => {ms932Encoder.encode("\u1F99")}).to.throw(Error, "EncodingError U+1F99");
expect(() => {ms932Encoder.encode("\u1F9A")}).to.throw(Error, "EncodingError U+1F9A");
expect(() => {ms932Encoder.encode("\u1F9B")}).to.throw(Error, "EncodingError U+1F9B");
expect(() => {ms932Encoder.encode("\u1F9C")}).to.throw(Error, "EncodingError U+1F9C");
expect(() => {ms932Encoder.encode("\u1F9D")}).to.throw(Error, "EncodingError U+1F9D");
expect(() => {ms932Encoder.encode("\u1F9E")}).to.throw(Error, "EncodingError U+1F9E");
expect(() => {ms932Encoder.encode("\u1F9F")}).to.throw(Error, "EncodingError U+1F9F");
expect(() => {ms932Encoder.encode("\u1FA0")}).to.throw(Error, "EncodingError U+1FA0");
expect(() => {ms932Encoder.encode("\u1FA1")}).to.throw(Error, "EncodingError U+1FA1");
expect(() => {ms932Encoder.encode("\u1FA2")}).to.throw(Error, "EncodingError U+1FA2");
expect(() => {ms932Encoder.encode("\u1FA3")}).to.throw(Error, "EncodingError U+1FA3");
expect(() => {ms932Encoder.encode("\u1FA4")}).to.throw(Error, "EncodingError U+1FA4");
expect(() => {ms932Encoder.encode("\u1FA5")}).to.throw(Error, "EncodingError U+1FA5");
expect(() => {ms932Encoder.encode("\u1FA6")}).to.throw(Error, "EncodingError U+1FA6");
expect(() => {ms932Encoder.encode("\u1FA7")}).to.throw(Error, "EncodingError U+1FA7");
expect(() => {ms932Encoder.encode("\u1FA8")}).to.throw(Error, "EncodingError U+1FA8");
expect(() => {ms932Encoder.encode("\u1FA9")}).to.throw(Error, "EncodingError U+1FA9");
expect(() => {ms932Encoder.encode("\u1FAA")}).to.throw(Error, "EncodingError U+1FAA");
expect(() => {ms932Encoder.encode("\u1FAB")}).to.throw(Error, "EncodingError U+1FAB");
expect(() => {ms932Encoder.encode("\u1FAC")}).to.throw(Error, "EncodingError U+1FAC");
expect(() => {ms932Encoder.encode("\u1FAD")}).to.throw(Error, "EncodingError U+1FAD");
expect(() => {ms932Encoder.encode("\u1FAE")}).to.throw(Error, "EncodingError U+1FAE");
expect(() => {ms932Encoder.encode("\u1FAF")}).to.throw(Error, "EncodingError U+1FAF");
expect(() => {ms932Encoder.encode("\u1FB0")}).to.throw(Error, "EncodingError U+1FB0");
expect(() => {ms932Encoder.encode("\u1FB1")}).to.throw(Error, "EncodingError U+1FB1");
expect(() => {ms932Encoder.encode("\u1FB2")}).to.throw(Error, "EncodingError U+1FB2");
expect(() => {ms932Encoder.encode("\u1FB3")}).to.throw(Error, "EncodingError U+1FB3");
expect(() => {ms932Encoder.encode("\u1FB4")}).to.throw(Error, "EncodingError U+1FB4");
expect(() => {ms932Encoder.encode("\u1FB5")}).to.throw(Error, "EncodingError U+1FB5");
expect(() => {ms932Encoder.encode("\u1FB6")}).to.throw(Error, "EncodingError U+1FB6");
expect(() => {ms932Encoder.encode("\u1FB7")}).to.throw(Error, "EncodingError U+1FB7");
expect(() => {ms932Encoder.encode("\u1FB8")}).to.throw(Error, "EncodingError U+1FB8");
expect(() => {ms932Encoder.encode("\u1FB9")}).to.throw(Error, "EncodingError U+1FB9");
expect(() => {ms932Encoder.encode("\u1FBA")}).to.throw(Error, "EncodingError U+1FBA");
expect(() => {ms932Encoder.encode("\u1FBB")}).to.throw(Error, "EncodingError U+1FBB");
expect(() => {ms932Encoder.encode("\u1FBC")}).to.throw(Error, "EncodingError U+1FBC");
expect(() => {ms932Encoder.encode("\u1FBD")}).to.throw(Error, "EncodingError U+1FBD");
expect(() => {ms932Encoder.encode("\u1FBE")}).to.throw(Error, "EncodingError U+1FBE");
expect(() => {ms932Encoder.encode("\u1FBF")}).to.throw(Error, "EncodingError U+1FBF");
expect(() => {ms932Encoder.encode("\u1FC0")}).to.throw(Error, "EncodingError U+1FC0");
expect(() => {ms932Encoder.encode("\u1FC1")}).to.throw(Error, "EncodingError U+1FC1");
expect(() => {ms932Encoder.encode("\u1FC2")}).to.throw(Error, "EncodingError U+1FC2");
expect(() => {ms932Encoder.encode("\u1FC3")}).to.throw(Error, "EncodingError U+1FC3");
expect(() => {ms932Encoder.encode("\u1FC4")}).to.throw(Error, "EncodingError U+1FC4");
expect(() => {ms932Encoder.encode("\u1FC5")}).to.throw(Error, "EncodingError U+1FC5");
expect(() => {ms932Encoder.encode("\u1FC6")}).to.throw(Error, "EncodingError U+1FC6");
expect(() => {ms932Encoder.encode("\u1FC7")}).to.throw(Error, "EncodingError U+1FC7");
expect(() => {ms932Encoder.encode("\u1FC8")}).to.throw(Error, "EncodingError U+1FC8");
expect(() => {ms932Encoder.encode("\u1FC9")}).to.throw(Error, "EncodingError U+1FC9");
expect(() => {ms932Encoder.encode("\u1FCA")}).to.throw(Error, "EncodingError U+1FCA");
expect(() => {ms932Encoder.encode("\u1FCB")}).to.throw(Error, "EncodingError U+1FCB");
expect(() => {ms932Encoder.encode("\u1FCC")}).to.throw(Error, "EncodingError U+1FCC");
expect(() => {ms932Encoder.encode("\u1FCD")}).to.throw(Error, "EncodingError U+1FCD");
expect(() => {ms932Encoder.encode("\u1FCE")}).to.throw(Error, "EncodingError U+1FCE");
expect(() => {ms932Encoder.encode("\u1FCF")}).to.throw(Error, "EncodingError U+1FCF");
expect(() => {ms932Encoder.encode("\u1FD0")}).to.throw(Error, "EncodingError U+1FD0");
expect(() => {ms932Encoder.encode("\u1FD1")}).to.throw(Error, "EncodingError U+1FD1");
expect(() => {ms932Encoder.encode("\u1FD2")}).to.throw(Error, "EncodingError U+1FD2");
expect(() => {ms932Encoder.encode("\u1FD3")}).to.throw(Error, "EncodingError U+1FD3");
expect(() => {ms932Encoder.encode("\u1FD4")}).to.throw(Error, "EncodingError U+1FD4");
expect(() => {ms932Encoder.encode("\u1FD5")}).to.throw(Error, "EncodingError U+1FD5");
expect(() => {ms932Encoder.encode("\u1FD6")}).to.throw(Error, "EncodingError U+1FD6");
expect(() => {ms932Encoder.encode("\u1FD7")}).to.throw(Error, "EncodingError U+1FD7");
expect(() => {ms932Encoder.encode("\u1FD8")}).to.throw(Error, "EncodingError U+1FD8");
expect(() => {ms932Encoder.encode("\u1FD9")}).to.throw(Error, "EncodingError U+1FD9");
expect(() => {ms932Encoder.encode("\u1FDA")}).to.throw(Error, "EncodingError U+1FDA");
expect(() => {ms932Encoder.encode("\u1FDB")}).to.throw(Error, "EncodingError U+1FDB");
expect(() => {ms932Encoder.encode("\u1FDC")}).to.throw(Error, "EncodingError U+1FDC");
expect(() => {ms932Encoder.encode("\u1FDD")}).to.throw(Error, "EncodingError U+1FDD");
expect(() => {ms932Encoder.encode("\u1FDE")}).to.throw(Error, "EncodingError U+1FDE");
expect(() => {ms932Encoder.encode("\u1FDF")}).to.throw(Error, "EncodingError U+1FDF");
expect(() => {ms932Encoder.encode("\u1FE0")}).to.throw(Error, "EncodingError U+1FE0");
expect(() => {ms932Encoder.encode("\u1FE1")}).to.throw(Error, "EncodingError U+1FE1");
expect(() => {ms932Encoder.encode("\u1FE2")}).to.throw(Error, "EncodingError U+1FE2");
expect(() => {ms932Encoder.encode("\u1FE3")}).to.throw(Error, "EncodingError U+1FE3");
expect(() => {ms932Encoder.encode("\u1FE4")}).to.throw(Error, "EncodingError U+1FE4");
expect(() => {ms932Encoder.encode("\u1FE5")}).to.throw(Error, "EncodingError U+1FE5");
expect(() => {ms932Encoder.encode("\u1FE6")}).to.throw(Error, "EncodingError U+1FE6");
expect(() => {ms932Encoder.encode("\u1FE7")}).to.throw(Error, "EncodingError U+1FE7");
expect(() => {ms932Encoder.encode("\u1FE8")}).to.throw(Error, "EncodingError U+1FE8");
expect(() => {ms932Encoder.encode("\u1FE9")}).to.throw(Error, "EncodingError U+1FE9");
expect(() => {ms932Encoder.encode("\u1FEA")}).to.throw(Error, "EncodingError U+1FEA");
expect(() => {ms932Encoder.encode("\u1FEB")}).to.throw(Error, "EncodingError U+1FEB");
expect(() => {ms932Encoder.encode("\u1FEC")}).to.throw(Error, "EncodingError U+1FEC");
expect(() => {ms932Encoder.encode("\u1FED")}).to.throw(Error, "EncodingError U+1FED");
expect(() => {ms932Encoder.encode("\u1FEE")}).to.throw(Error, "EncodingError U+1FEE");
expect(() => {ms932Encoder.encode("\u1FEF")}).to.throw(Error, "EncodingError U+1FEF");
expect(() => {ms932Encoder.encode("\u1FF0")}).to.throw(Error, "EncodingError U+1FF0");
expect(() => {ms932Encoder.encode("\u1FF1")}).to.throw(Error, "EncodingError U+1FF1");
expect(() => {ms932Encoder.encode("\u1FF2")}).to.throw(Error, "EncodingError U+1FF2");
expect(() => {ms932Encoder.encode("\u1FF3")}).to.throw(Error, "EncodingError U+1FF3");
expect(() => {ms932Encoder.encode("\u1FF4")}).to.throw(Error, "EncodingError U+1FF4");
expect(() => {ms932Encoder.encode("\u1FF5")}).to.throw(Error, "EncodingError U+1FF5");
expect(() => {ms932Encoder.encode("\u1FF6")}).to.throw(Error, "EncodingError U+1FF6");
expect(() => {ms932Encoder.encode("\u1FF7")}).to.throw(Error, "EncodingError U+1FF7");
expect(() => {ms932Encoder.encode("\u1FF8")}).to.throw(Error, "EncodingError U+1FF8");
expect(() => {ms932Encoder.encode("\u1FF9")}).to.throw(Error, "EncodingError U+1FF9");
expect(() => {ms932Encoder.encode("\u1FFA")}).to.throw(Error, "EncodingError U+1FFA");
expect(() => {ms932Encoder.encode("\u1FFB")}).to.throw(Error, "EncodingError U+1FFB");
expect(() => {ms932Encoder.encode("\u1FFC")}).to.throw(Error, "EncodingError U+1FFC");
expect(() => {ms932Encoder.encode("\u1FFD")}).to.throw(Error, "EncodingError U+1FFD");
expect(() => {ms932Encoder.encode("\u1FFE")}).to.throw(Error, "EncodingError U+1FFE");
expect(() => {ms932Encoder.encode("\u1FFF")}).to.throw(Error, "EncodingError U+1FFF");

  });

});
