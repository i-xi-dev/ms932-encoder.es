import { expect } from '@esm-bundle/chai';
import { Ms932Encoder } from "../../dist/index.js";

describe("Ms932Encoder.prototype.encode 13", () => {

  it("encode(string) - U+C000-U+CFFF", () => {
    const ms932Encoder = new Ms932Encoder({fatal:true});

expect(() => {ms932Encoder.encode("\uC000")}).to.throw(Error, "EncodingError U+C000");
expect(() => {ms932Encoder.encode("\uC001")}).to.throw(Error, "EncodingError U+C001");
expect(() => {ms932Encoder.encode("\uC002")}).to.throw(Error, "EncodingError U+C002");
expect(() => {ms932Encoder.encode("\uC003")}).to.throw(Error, "EncodingError U+C003");
expect(() => {ms932Encoder.encode("\uC004")}).to.throw(Error, "EncodingError U+C004");
expect(() => {ms932Encoder.encode("\uC005")}).to.throw(Error, "EncodingError U+C005");
expect(() => {ms932Encoder.encode("\uC006")}).to.throw(Error, "EncodingError U+C006");
expect(() => {ms932Encoder.encode("\uC007")}).to.throw(Error, "EncodingError U+C007");
expect(() => {ms932Encoder.encode("\uC008")}).to.throw(Error, "EncodingError U+C008");
expect(() => {ms932Encoder.encode("\uC009")}).to.throw(Error, "EncodingError U+C009");
expect(() => {ms932Encoder.encode("\uC00A")}).to.throw(Error, "EncodingError U+C00A");
expect(() => {ms932Encoder.encode("\uC00B")}).to.throw(Error, "EncodingError U+C00B");
expect(() => {ms932Encoder.encode("\uC00C")}).to.throw(Error, "EncodingError U+C00C");
expect(() => {ms932Encoder.encode("\uC00D")}).to.throw(Error, "EncodingError U+C00D");
expect(() => {ms932Encoder.encode("\uC00E")}).to.throw(Error, "EncodingError U+C00E");
expect(() => {ms932Encoder.encode("\uC00F")}).to.throw(Error, "EncodingError U+C00F");
expect(() => {ms932Encoder.encode("\uC010")}).to.throw(Error, "EncodingError U+C010");
expect(() => {ms932Encoder.encode("\uC011")}).to.throw(Error, "EncodingError U+C011");
expect(() => {ms932Encoder.encode("\uC012")}).to.throw(Error, "EncodingError U+C012");
expect(() => {ms932Encoder.encode("\uC013")}).to.throw(Error, "EncodingError U+C013");
expect(() => {ms932Encoder.encode("\uC014")}).to.throw(Error, "EncodingError U+C014");
expect(() => {ms932Encoder.encode("\uC015")}).to.throw(Error, "EncodingError U+C015");
expect(() => {ms932Encoder.encode("\uC016")}).to.throw(Error, "EncodingError U+C016");
expect(() => {ms932Encoder.encode("\uC017")}).to.throw(Error, "EncodingError U+C017");
expect(() => {ms932Encoder.encode("\uC018")}).to.throw(Error, "EncodingError U+C018");
expect(() => {ms932Encoder.encode("\uC019")}).to.throw(Error, "EncodingError U+C019");
expect(() => {ms932Encoder.encode("\uC01A")}).to.throw(Error, "EncodingError U+C01A");
expect(() => {ms932Encoder.encode("\uC01B")}).to.throw(Error, "EncodingError U+C01B");
expect(() => {ms932Encoder.encode("\uC01C")}).to.throw(Error, "EncodingError U+C01C");
expect(() => {ms932Encoder.encode("\uC01D")}).to.throw(Error, "EncodingError U+C01D");
expect(() => {ms932Encoder.encode("\uC01E")}).to.throw(Error, "EncodingError U+C01E");
expect(() => {ms932Encoder.encode("\uC01F")}).to.throw(Error, "EncodingError U+C01F");
expect(() => {ms932Encoder.encode("\uC020")}).to.throw(Error, "EncodingError U+C020");
expect(() => {ms932Encoder.encode("\uC021")}).to.throw(Error, "EncodingError U+C021");
expect(() => {ms932Encoder.encode("\uC022")}).to.throw(Error, "EncodingError U+C022");
expect(() => {ms932Encoder.encode("\uC023")}).to.throw(Error, "EncodingError U+C023");
expect(() => {ms932Encoder.encode("\uC024")}).to.throw(Error, "EncodingError U+C024");
expect(() => {ms932Encoder.encode("\uC025")}).to.throw(Error, "EncodingError U+C025");
expect(() => {ms932Encoder.encode("\uC026")}).to.throw(Error, "EncodingError U+C026");
expect(() => {ms932Encoder.encode("\uC027")}).to.throw(Error, "EncodingError U+C027");
expect(() => {ms932Encoder.encode("\uC028")}).to.throw(Error, "EncodingError U+C028");
expect(() => {ms932Encoder.encode("\uC029")}).to.throw(Error, "EncodingError U+C029");
expect(() => {ms932Encoder.encode("\uC02A")}).to.throw(Error, "EncodingError U+C02A");
expect(() => {ms932Encoder.encode("\uC02B")}).to.throw(Error, "EncodingError U+C02B");
expect(() => {ms932Encoder.encode("\uC02C")}).to.throw(Error, "EncodingError U+C02C");
expect(() => {ms932Encoder.encode("\uC02D")}).to.throw(Error, "EncodingError U+C02D");
expect(() => {ms932Encoder.encode("\uC02E")}).to.throw(Error, "EncodingError U+C02E");
expect(() => {ms932Encoder.encode("\uC02F")}).to.throw(Error, "EncodingError U+C02F");
expect(() => {ms932Encoder.encode("\uC030")}).to.throw(Error, "EncodingError U+C030");
expect(() => {ms932Encoder.encode("\uC031")}).to.throw(Error, "EncodingError U+C031");
expect(() => {ms932Encoder.encode("\uC032")}).to.throw(Error, "EncodingError U+C032");
expect(() => {ms932Encoder.encode("\uC033")}).to.throw(Error, "EncodingError U+C033");
expect(() => {ms932Encoder.encode("\uC034")}).to.throw(Error, "EncodingError U+C034");
expect(() => {ms932Encoder.encode("\uC035")}).to.throw(Error, "EncodingError U+C035");
expect(() => {ms932Encoder.encode("\uC036")}).to.throw(Error, "EncodingError U+C036");
expect(() => {ms932Encoder.encode("\uC037")}).to.throw(Error, "EncodingError U+C037");
expect(() => {ms932Encoder.encode("\uC038")}).to.throw(Error, "EncodingError U+C038");
expect(() => {ms932Encoder.encode("\uC039")}).to.throw(Error, "EncodingError U+C039");
expect(() => {ms932Encoder.encode("\uC03A")}).to.throw(Error, "EncodingError U+C03A");
expect(() => {ms932Encoder.encode("\uC03B")}).to.throw(Error, "EncodingError U+C03B");
expect(() => {ms932Encoder.encode("\uC03C")}).to.throw(Error, "EncodingError U+C03C");
expect(() => {ms932Encoder.encode("\uC03D")}).to.throw(Error, "EncodingError U+C03D");
expect(() => {ms932Encoder.encode("\uC03E")}).to.throw(Error, "EncodingError U+C03E");
expect(() => {ms932Encoder.encode("\uC03F")}).to.throw(Error, "EncodingError U+C03F");
expect(() => {ms932Encoder.encode("\uC040")}).to.throw(Error, "EncodingError U+C040");
expect(() => {ms932Encoder.encode("\uC041")}).to.throw(Error, "EncodingError U+C041");
expect(() => {ms932Encoder.encode("\uC042")}).to.throw(Error, "EncodingError U+C042");
expect(() => {ms932Encoder.encode("\uC043")}).to.throw(Error, "EncodingError U+C043");
expect(() => {ms932Encoder.encode("\uC044")}).to.throw(Error, "EncodingError U+C044");
expect(() => {ms932Encoder.encode("\uC045")}).to.throw(Error, "EncodingError U+C045");
expect(() => {ms932Encoder.encode("\uC046")}).to.throw(Error, "EncodingError U+C046");
expect(() => {ms932Encoder.encode("\uC047")}).to.throw(Error, "EncodingError U+C047");
expect(() => {ms932Encoder.encode("\uC048")}).to.throw(Error, "EncodingError U+C048");
expect(() => {ms932Encoder.encode("\uC049")}).to.throw(Error, "EncodingError U+C049");
expect(() => {ms932Encoder.encode("\uC04A")}).to.throw(Error, "EncodingError U+C04A");
expect(() => {ms932Encoder.encode("\uC04B")}).to.throw(Error, "EncodingError U+C04B");
expect(() => {ms932Encoder.encode("\uC04C")}).to.throw(Error, "EncodingError U+C04C");
expect(() => {ms932Encoder.encode("\uC04D")}).to.throw(Error, "EncodingError U+C04D");
expect(() => {ms932Encoder.encode("\uC04E")}).to.throw(Error, "EncodingError U+C04E");
expect(() => {ms932Encoder.encode("\uC04F")}).to.throw(Error, "EncodingError U+C04F");
expect(() => {ms932Encoder.encode("\uC050")}).to.throw(Error, "EncodingError U+C050");
expect(() => {ms932Encoder.encode("\uC051")}).to.throw(Error, "EncodingError U+C051");
expect(() => {ms932Encoder.encode("\uC052")}).to.throw(Error, "EncodingError U+C052");
expect(() => {ms932Encoder.encode("\uC053")}).to.throw(Error, "EncodingError U+C053");
expect(() => {ms932Encoder.encode("\uC054")}).to.throw(Error, "EncodingError U+C054");
expect(() => {ms932Encoder.encode("\uC055")}).to.throw(Error, "EncodingError U+C055");
expect(() => {ms932Encoder.encode("\uC056")}).to.throw(Error, "EncodingError U+C056");
expect(() => {ms932Encoder.encode("\uC057")}).to.throw(Error, "EncodingError U+C057");
expect(() => {ms932Encoder.encode("\uC058")}).to.throw(Error, "EncodingError U+C058");
expect(() => {ms932Encoder.encode("\uC059")}).to.throw(Error, "EncodingError U+C059");
expect(() => {ms932Encoder.encode("\uC05A")}).to.throw(Error, "EncodingError U+C05A");
expect(() => {ms932Encoder.encode("\uC05B")}).to.throw(Error, "EncodingError U+C05B");
expect(() => {ms932Encoder.encode("\uC05C")}).to.throw(Error, "EncodingError U+C05C");
expect(() => {ms932Encoder.encode("\uC05D")}).to.throw(Error, "EncodingError U+C05D");
expect(() => {ms932Encoder.encode("\uC05E")}).to.throw(Error, "EncodingError U+C05E");
expect(() => {ms932Encoder.encode("\uC05F")}).to.throw(Error, "EncodingError U+C05F");
expect(() => {ms932Encoder.encode("\uC060")}).to.throw(Error, "EncodingError U+C060");
expect(() => {ms932Encoder.encode("\uC061")}).to.throw(Error, "EncodingError U+C061");
expect(() => {ms932Encoder.encode("\uC062")}).to.throw(Error, "EncodingError U+C062");
expect(() => {ms932Encoder.encode("\uC063")}).to.throw(Error, "EncodingError U+C063");
expect(() => {ms932Encoder.encode("\uC064")}).to.throw(Error, "EncodingError U+C064");
expect(() => {ms932Encoder.encode("\uC065")}).to.throw(Error, "EncodingError U+C065");
expect(() => {ms932Encoder.encode("\uC066")}).to.throw(Error, "EncodingError U+C066");
expect(() => {ms932Encoder.encode("\uC067")}).to.throw(Error, "EncodingError U+C067");
expect(() => {ms932Encoder.encode("\uC068")}).to.throw(Error, "EncodingError U+C068");
expect(() => {ms932Encoder.encode("\uC069")}).to.throw(Error, "EncodingError U+C069");
expect(() => {ms932Encoder.encode("\uC06A")}).to.throw(Error, "EncodingError U+C06A");
expect(() => {ms932Encoder.encode("\uC06B")}).to.throw(Error, "EncodingError U+C06B");
expect(() => {ms932Encoder.encode("\uC06C")}).to.throw(Error, "EncodingError U+C06C");
expect(() => {ms932Encoder.encode("\uC06D")}).to.throw(Error, "EncodingError U+C06D");
expect(() => {ms932Encoder.encode("\uC06E")}).to.throw(Error, "EncodingError U+C06E");
expect(() => {ms932Encoder.encode("\uC06F")}).to.throw(Error, "EncodingError U+C06F");
expect(() => {ms932Encoder.encode("\uC070")}).to.throw(Error, "EncodingError U+C070");
expect(() => {ms932Encoder.encode("\uC071")}).to.throw(Error, "EncodingError U+C071");
expect(() => {ms932Encoder.encode("\uC072")}).to.throw(Error, "EncodingError U+C072");
expect(() => {ms932Encoder.encode("\uC073")}).to.throw(Error, "EncodingError U+C073");
expect(() => {ms932Encoder.encode("\uC074")}).to.throw(Error, "EncodingError U+C074");
expect(() => {ms932Encoder.encode("\uC075")}).to.throw(Error, "EncodingError U+C075");
expect(() => {ms932Encoder.encode("\uC076")}).to.throw(Error, "EncodingError U+C076");
expect(() => {ms932Encoder.encode("\uC077")}).to.throw(Error, "EncodingError U+C077");
expect(() => {ms932Encoder.encode("\uC078")}).to.throw(Error, "EncodingError U+C078");
expect(() => {ms932Encoder.encode("\uC079")}).to.throw(Error, "EncodingError U+C079");
expect(() => {ms932Encoder.encode("\uC07A")}).to.throw(Error, "EncodingError U+C07A");
expect(() => {ms932Encoder.encode("\uC07B")}).to.throw(Error, "EncodingError U+C07B");
expect(() => {ms932Encoder.encode("\uC07C")}).to.throw(Error, "EncodingError U+C07C");
expect(() => {ms932Encoder.encode("\uC07D")}).to.throw(Error, "EncodingError U+C07D");
expect(() => {ms932Encoder.encode("\uC07E")}).to.throw(Error, "EncodingError U+C07E");
expect(() => {ms932Encoder.encode("\uC07F")}).to.throw(Error, "EncodingError U+C07F");
expect(() => {ms932Encoder.encode("\uC080")}).to.throw(Error, "EncodingError U+C080");
expect(() => {ms932Encoder.encode("\uC081")}).to.throw(Error, "EncodingError U+C081");
expect(() => {ms932Encoder.encode("\uC082")}).to.throw(Error, "EncodingError U+C082");
expect(() => {ms932Encoder.encode("\uC083")}).to.throw(Error, "EncodingError U+C083");
expect(() => {ms932Encoder.encode("\uC084")}).to.throw(Error, "EncodingError U+C084");
expect(() => {ms932Encoder.encode("\uC085")}).to.throw(Error, "EncodingError U+C085");
expect(() => {ms932Encoder.encode("\uC086")}).to.throw(Error, "EncodingError U+C086");
expect(() => {ms932Encoder.encode("\uC087")}).to.throw(Error, "EncodingError U+C087");
expect(() => {ms932Encoder.encode("\uC088")}).to.throw(Error, "EncodingError U+C088");
expect(() => {ms932Encoder.encode("\uC089")}).to.throw(Error, "EncodingError U+C089");
expect(() => {ms932Encoder.encode("\uC08A")}).to.throw(Error, "EncodingError U+C08A");
expect(() => {ms932Encoder.encode("\uC08B")}).to.throw(Error, "EncodingError U+C08B");
expect(() => {ms932Encoder.encode("\uC08C")}).to.throw(Error, "EncodingError U+C08C");
expect(() => {ms932Encoder.encode("\uC08D")}).to.throw(Error, "EncodingError U+C08D");
expect(() => {ms932Encoder.encode("\uC08E")}).to.throw(Error, "EncodingError U+C08E");
expect(() => {ms932Encoder.encode("\uC08F")}).to.throw(Error, "EncodingError U+C08F");
expect(() => {ms932Encoder.encode("\uC090")}).to.throw(Error, "EncodingError U+C090");
expect(() => {ms932Encoder.encode("\uC091")}).to.throw(Error, "EncodingError U+C091");
expect(() => {ms932Encoder.encode("\uC092")}).to.throw(Error, "EncodingError U+C092");
expect(() => {ms932Encoder.encode("\uC093")}).to.throw(Error, "EncodingError U+C093");
expect(() => {ms932Encoder.encode("\uC094")}).to.throw(Error, "EncodingError U+C094");
expect(() => {ms932Encoder.encode("\uC095")}).to.throw(Error, "EncodingError U+C095");
expect(() => {ms932Encoder.encode("\uC096")}).to.throw(Error, "EncodingError U+C096");
expect(() => {ms932Encoder.encode("\uC097")}).to.throw(Error, "EncodingError U+C097");
expect(() => {ms932Encoder.encode("\uC098")}).to.throw(Error, "EncodingError U+C098");
expect(() => {ms932Encoder.encode("\uC099")}).to.throw(Error, "EncodingError U+C099");
expect(() => {ms932Encoder.encode("\uC09A")}).to.throw(Error, "EncodingError U+C09A");
expect(() => {ms932Encoder.encode("\uC09B")}).to.throw(Error, "EncodingError U+C09B");
expect(() => {ms932Encoder.encode("\uC09C")}).to.throw(Error, "EncodingError U+C09C");
expect(() => {ms932Encoder.encode("\uC09D")}).to.throw(Error, "EncodingError U+C09D");
expect(() => {ms932Encoder.encode("\uC09E")}).to.throw(Error, "EncodingError U+C09E");
expect(() => {ms932Encoder.encode("\uC09F")}).to.throw(Error, "EncodingError U+C09F");
expect(() => {ms932Encoder.encode("\uC0A0")}).to.throw(Error, "EncodingError U+C0A0");
expect(() => {ms932Encoder.encode("\uC0A1")}).to.throw(Error, "EncodingError U+C0A1");
expect(() => {ms932Encoder.encode("\uC0A2")}).to.throw(Error, "EncodingError U+C0A2");
expect(() => {ms932Encoder.encode("\uC0A3")}).to.throw(Error, "EncodingError U+C0A3");
expect(() => {ms932Encoder.encode("\uC0A4")}).to.throw(Error, "EncodingError U+C0A4");
expect(() => {ms932Encoder.encode("\uC0A5")}).to.throw(Error, "EncodingError U+C0A5");
expect(() => {ms932Encoder.encode("\uC0A6")}).to.throw(Error, "EncodingError U+C0A6");
expect(() => {ms932Encoder.encode("\uC0A7")}).to.throw(Error, "EncodingError U+C0A7");
expect(() => {ms932Encoder.encode("\uC0A8")}).to.throw(Error, "EncodingError U+C0A8");
expect(() => {ms932Encoder.encode("\uC0A9")}).to.throw(Error, "EncodingError U+C0A9");
expect(() => {ms932Encoder.encode("\uC0AA")}).to.throw(Error, "EncodingError U+C0AA");
expect(() => {ms932Encoder.encode("\uC0AB")}).to.throw(Error, "EncodingError U+C0AB");
expect(() => {ms932Encoder.encode("\uC0AC")}).to.throw(Error, "EncodingError U+C0AC");
expect(() => {ms932Encoder.encode("\uC0AD")}).to.throw(Error, "EncodingError U+C0AD");
expect(() => {ms932Encoder.encode("\uC0AE")}).to.throw(Error, "EncodingError U+C0AE");
expect(() => {ms932Encoder.encode("\uC0AF")}).to.throw(Error, "EncodingError U+C0AF");
expect(() => {ms932Encoder.encode("\uC0B0")}).to.throw(Error, "EncodingError U+C0B0");
expect(() => {ms932Encoder.encode("\uC0B1")}).to.throw(Error, "EncodingError U+C0B1");
expect(() => {ms932Encoder.encode("\uC0B2")}).to.throw(Error, "EncodingError U+C0B2");
expect(() => {ms932Encoder.encode("\uC0B3")}).to.throw(Error, "EncodingError U+C0B3");
expect(() => {ms932Encoder.encode("\uC0B4")}).to.throw(Error, "EncodingError U+C0B4");
expect(() => {ms932Encoder.encode("\uC0B5")}).to.throw(Error, "EncodingError U+C0B5");
expect(() => {ms932Encoder.encode("\uC0B6")}).to.throw(Error, "EncodingError U+C0B6");
expect(() => {ms932Encoder.encode("\uC0B7")}).to.throw(Error, "EncodingError U+C0B7");
expect(() => {ms932Encoder.encode("\uC0B8")}).to.throw(Error, "EncodingError U+C0B8");
expect(() => {ms932Encoder.encode("\uC0B9")}).to.throw(Error, "EncodingError U+C0B9");
expect(() => {ms932Encoder.encode("\uC0BA")}).to.throw(Error, "EncodingError U+C0BA");
expect(() => {ms932Encoder.encode("\uC0BB")}).to.throw(Error, "EncodingError U+C0BB");
expect(() => {ms932Encoder.encode("\uC0BC")}).to.throw(Error, "EncodingError U+C0BC");
expect(() => {ms932Encoder.encode("\uC0BD")}).to.throw(Error, "EncodingError U+C0BD");
expect(() => {ms932Encoder.encode("\uC0BE")}).to.throw(Error, "EncodingError U+C0BE");
expect(() => {ms932Encoder.encode("\uC0BF")}).to.throw(Error, "EncodingError U+C0BF");
expect(() => {ms932Encoder.encode("\uC0C0")}).to.throw(Error, "EncodingError U+C0C0");
expect(() => {ms932Encoder.encode("\uC0C1")}).to.throw(Error, "EncodingError U+C0C1");
expect(() => {ms932Encoder.encode("\uC0C2")}).to.throw(Error, "EncodingError U+C0C2");
expect(() => {ms932Encoder.encode("\uC0C3")}).to.throw(Error, "EncodingError U+C0C3");
expect(() => {ms932Encoder.encode("\uC0C4")}).to.throw(Error, "EncodingError U+C0C4");
expect(() => {ms932Encoder.encode("\uC0C5")}).to.throw(Error, "EncodingError U+C0C5");
expect(() => {ms932Encoder.encode("\uC0C6")}).to.throw(Error, "EncodingError U+C0C6");
expect(() => {ms932Encoder.encode("\uC0C7")}).to.throw(Error, "EncodingError U+C0C7");
expect(() => {ms932Encoder.encode("\uC0C8")}).to.throw(Error, "EncodingError U+C0C8");
expect(() => {ms932Encoder.encode("\uC0C9")}).to.throw(Error, "EncodingError U+C0C9");
expect(() => {ms932Encoder.encode("\uC0CA")}).to.throw(Error, "EncodingError U+C0CA");
expect(() => {ms932Encoder.encode("\uC0CB")}).to.throw(Error, "EncodingError U+C0CB");
expect(() => {ms932Encoder.encode("\uC0CC")}).to.throw(Error, "EncodingError U+C0CC");
expect(() => {ms932Encoder.encode("\uC0CD")}).to.throw(Error, "EncodingError U+C0CD");
expect(() => {ms932Encoder.encode("\uC0CE")}).to.throw(Error, "EncodingError U+C0CE");
expect(() => {ms932Encoder.encode("\uC0CF")}).to.throw(Error, "EncodingError U+C0CF");
expect(() => {ms932Encoder.encode("\uC0D0")}).to.throw(Error, "EncodingError U+C0D0");
expect(() => {ms932Encoder.encode("\uC0D1")}).to.throw(Error, "EncodingError U+C0D1");
expect(() => {ms932Encoder.encode("\uC0D2")}).to.throw(Error, "EncodingError U+C0D2");
expect(() => {ms932Encoder.encode("\uC0D3")}).to.throw(Error, "EncodingError U+C0D3");
expect(() => {ms932Encoder.encode("\uC0D4")}).to.throw(Error, "EncodingError U+C0D4");
expect(() => {ms932Encoder.encode("\uC0D5")}).to.throw(Error, "EncodingError U+C0D5");
expect(() => {ms932Encoder.encode("\uC0D6")}).to.throw(Error, "EncodingError U+C0D6");
expect(() => {ms932Encoder.encode("\uC0D7")}).to.throw(Error, "EncodingError U+C0D7");
expect(() => {ms932Encoder.encode("\uC0D8")}).to.throw(Error, "EncodingError U+C0D8");
expect(() => {ms932Encoder.encode("\uC0D9")}).to.throw(Error, "EncodingError U+C0D9");
expect(() => {ms932Encoder.encode("\uC0DA")}).to.throw(Error, "EncodingError U+C0DA");
expect(() => {ms932Encoder.encode("\uC0DB")}).to.throw(Error, "EncodingError U+C0DB");
expect(() => {ms932Encoder.encode("\uC0DC")}).to.throw(Error, "EncodingError U+C0DC");
expect(() => {ms932Encoder.encode("\uC0DD")}).to.throw(Error, "EncodingError U+C0DD");
expect(() => {ms932Encoder.encode("\uC0DE")}).to.throw(Error, "EncodingError U+C0DE");
expect(() => {ms932Encoder.encode("\uC0DF")}).to.throw(Error, "EncodingError U+C0DF");
expect(() => {ms932Encoder.encode("\uC0E0")}).to.throw(Error, "EncodingError U+C0E0");
expect(() => {ms932Encoder.encode("\uC0E1")}).to.throw(Error, "EncodingError U+C0E1");
expect(() => {ms932Encoder.encode("\uC0E2")}).to.throw(Error, "EncodingError U+C0E2");
expect(() => {ms932Encoder.encode("\uC0E3")}).to.throw(Error, "EncodingError U+C0E3");
expect(() => {ms932Encoder.encode("\uC0E4")}).to.throw(Error, "EncodingError U+C0E4");
expect(() => {ms932Encoder.encode("\uC0E5")}).to.throw(Error, "EncodingError U+C0E5");
expect(() => {ms932Encoder.encode("\uC0E6")}).to.throw(Error, "EncodingError U+C0E6");
expect(() => {ms932Encoder.encode("\uC0E7")}).to.throw(Error, "EncodingError U+C0E7");
expect(() => {ms932Encoder.encode("\uC0E8")}).to.throw(Error, "EncodingError U+C0E8");
expect(() => {ms932Encoder.encode("\uC0E9")}).to.throw(Error, "EncodingError U+C0E9");
expect(() => {ms932Encoder.encode("\uC0EA")}).to.throw(Error, "EncodingError U+C0EA");
expect(() => {ms932Encoder.encode("\uC0EB")}).to.throw(Error, "EncodingError U+C0EB");
expect(() => {ms932Encoder.encode("\uC0EC")}).to.throw(Error, "EncodingError U+C0EC");
expect(() => {ms932Encoder.encode("\uC0ED")}).to.throw(Error, "EncodingError U+C0ED");
expect(() => {ms932Encoder.encode("\uC0EE")}).to.throw(Error, "EncodingError U+C0EE");
expect(() => {ms932Encoder.encode("\uC0EF")}).to.throw(Error, "EncodingError U+C0EF");
expect(() => {ms932Encoder.encode("\uC0F0")}).to.throw(Error, "EncodingError U+C0F0");
expect(() => {ms932Encoder.encode("\uC0F1")}).to.throw(Error, "EncodingError U+C0F1");
expect(() => {ms932Encoder.encode("\uC0F2")}).to.throw(Error, "EncodingError U+C0F2");
expect(() => {ms932Encoder.encode("\uC0F3")}).to.throw(Error, "EncodingError U+C0F3");
expect(() => {ms932Encoder.encode("\uC0F4")}).to.throw(Error, "EncodingError U+C0F4");
expect(() => {ms932Encoder.encode("\uC0F5")}).to.throw(Error, "EncodingError U+C0F5");
expect(() => {ms932Encoder.encode("\uC0F6")}).to.throw(Error, "EncodingError U+C0F6");
expect(() => {ms932Encoder.encode("\uC0F7")}).to.throw(Error, "EncodingError U+C0F7");
expect(() => {ms932Encoder.encode("\uC0F8")}).to.throw(Error, "EncodingError U+C0F8");
expect(() => {ms932Encoder.encode("\uC0F9")}).to.throw(Error, "EncodingError U+C0F9");
expect(() => {ms932Encoder.encode("\uC0FA")}).to.throw(Error, "EncodingError U+C0FA");
expect(() => {ms932Encoder.encode("\uC0FB")}).to.throw(Error, "EncodingError U+C0FB");
expect(() => {ms932Encoder.encode("\uC0FC")}).to.throw(Error, "EncodingError U+C0FC");
expect(() => {ms932Encoder.encode("\uC0FD")}).to.throw(Error, "EncodingError U+C0FD");
expect(() => {ms932Encoder.encode("\uC0FE")}).to.throw(Error, "EncodingError U+C0FE");
expect(() => {ms932Encoder.encode("\uC0FF")}).to.throw(Error, "EncodingError U+C0FF");
expect(() => {ms932Encoder.encode("\uC100")}).to.throw(Error, "EncodingError U+C100");
expect(() => {ms932Encoder.encode("\uC101")}).to.throw(Error, "EncodingError U+C101");
expect(() => {ms932Encoder.encode("\uC102")}).to.throw(Error, "EncodingError U+C102");
expect(() => {ms932Encoder.encode("\uC103")}).to.throw(Error, "EncodingError U+C103");
expect(() => {ms932Encoder.encode("\uC104")}).to.throw(Error, "EncodingError U+C104");
expect(() => {ms932Encoder.encode("\uC105")}).to.throw(Error, "EncodingError U+C105");
expect(() => {ms932Encoder.encode("\uC106")}).to.throw(Error, "EncodingError U+C106");
expect(() => {ms932Encoder.encode("\uC107")}).to.throw(Error, "EncodingError U+C107");
expect(() => {ms932Encoder.encode("\uC108")}).to.throw(Error, "EncodingError U+C108");
expect(() => {ms932Encoder.encode("\uC109")}).to.throw(Error, "EncodingError U+C109");
expect(() => {ms932Encoder.encode("\uC10A")}).to.throw(Error, "EncodingError U+C10A");
expect(() => {ms932Encoder.encode("\uC10B")}).to.throw(Error, "EncodingError U+C10B");
expect(() => {ms932Encoder.encode("\uC10C")}).to.throw(Error, "EncodingError U+C10C");
expect(() => {ms932Encoder.encode("\uC10D")}).to.throw(Error, "EncodingError U+C10D");
expect(() => {ms932Encoder.encode("\uC10E")}).to.throw(Error, "EncodingError U+C10E");
expect(() => {ms932Encoder.encode("\uC10F")}).to.throw(Error, "EncodingError U+C10F");
expect(() => {ms932Encoder.encode("\uC110")}).to.throw(Error, "EncodingError U+C110");
expect(() => {ms932Encoder.encode("\uC111")}).to.throw(Error, "EncodingError U+C111");
expect(() => {ms932Encoder.encode("\uC112")}).to.throw(Error, "EncodingError U+C112");
expect(() => {ms932Encoder.encode("\uC113")}).to.throw(Error, "EncodingError U+C113");
expect(() => {ms932Encoder.encode("\uC114")}).to.throw(Error, "EncodingError U+C114");
expect(() => {ms932Encoder.encode("\uC115")}).to.throw(Error, "EncodingError U+C115");
expect(() => {ms932Encoder.encode("\uC116")}).to.throw(Error, "EncodingError U+C116");
expect(() => {ms932Encoder.encode("\uC117")}).to.throw(Error, "EncodingError U+C117");
expect(() => {ms932Encoder.encode("\uC118")}).to.throw(Error, "EncodingError U+C118");
expect(() => {ms932Encoder.encode("\uC119")}).to.throw(Error, "EncodingError U+C119");
expect(() => {ms932Encoder.encode("\uC11A")}).to.throw(Error, "EncodingError U+C11A");
expect(() => {ms932Encoder.encode("\uC11B")}).to.throw(Error, "EncodingError U+C11B");
expect(() => {ms932Encoder.encode("\uC11C")}).to.throw(Error, "EncodingError U+C11C");
expect(() => {ms932Encoder.encode("\uC11D")}).to.throw(Error, "EncodingError U+C11D");
expect(() => {ms932Encoder.encode("\uC11E")}).to.throw(Error, "EncodingError U+C11E");
expect(() => {ms932Encoder.encode("\uC11F")}).to.throw(Error, "EncodingError U+C11F");
expect(() => {ms932Encoder.encode("\uC120")}).to.throw(Error, "EncodingError U+C120");
expect(() => {ms932Encoder.encode("\uC121")}).to.throw(Error, "EncodingError U+C121");
expect(() => {ms932Encoder.encode("\uC122")}).to.throw(Error, "EncodingError U+C122");
expect(() => {ms932Encoder.encode("\uC123")}).to.throw(Error, "EncodingError U+C123");
expect(() => {ms932Encoder.encode("\uC124")}).to.throw(Error, "EncodingError U+C124");
expect(() => {ms932Encoder.encode("\uC125")}).to.throw(Error, "EncodingError U+C125");
expect(() => {ms932Encoder.encode("\uC126")}).to.throw(Error, "EncodingError U+C126");
expect(() => {ms932Encoder.encode("\uC127")}).to.throw(Error, "EncodingError U+C127");
expect(() => {ms932Encoder.encode("\uC128")}).to.throw(Error, "EncodingError U+C128");
expect(() => {ms932Encoder.encode("\uC129")}).to.throw(Error, "EncodingError U+C129");
expect(() => {ms932Encoder.encode("\uC12A")}).to.throw(Error, "EncodingError U+C12A");
expect(() => {ms932Encoder.encode("\uC12B")}).to.throw(Error, "EncodingError U+C12B");
expect(() => {ms932Encoder.encode("\uC12C")}).to.throw(Error, "EncodingError U+C12C");
expect(() => {ms932Encoder.encode("\uC12D")}).to.throw(Error, "EncodingError U+C12D");
expect(() => {ms932Encoder.encode("\uC12E")}).to.throw(Error, "EncodingError U+C12E");
expect(() => {ms932Encoder.encode("\uC12F")}).to.throw(Error, "EncodingError U+C12F");
expect(() => {ms932Encoder.encode("\uC130")}).to.throw(Error, "EncodingError U+C130");
expect(() => {ms932Encoder.encode("\uC131")}).to.throw(Error, "EncodingError U+C131");
expect(() => {ms932Encoder.encode("\uC132")}).to.throw(Error, "EncodingError U+C132");
expect(() => {ms932Encoder.encode("\uC133")}).to.throw(Error, "EncodingError U+C133");
expect(() => {ms932Encoder.encode("\uC134")}).to.throw(Error, "EncodingError U+C134");
expect(() => {ms932Encoder.encode("\uC135")}).to.throw(Error, "EncodingError U+C135");
expect(() => {ms932Encoder.encode("\uC136")}).to.throw(Error, "EncodingError U+C136");
expect(() => {ms932Encoder.encode("\uC137")}).to.throw(Error, "EncodingError U+C137");
expect(() => {ms932Encoder.encode("\uC138")}).to.throw(Error, "EncodingError U+C138");
expect(() => {ms932Encoder.encode("\uC139")}).to.throw(Error, "EncodingError U+C139");
expect(() => {ms932Encoder.encode("\uC13A")}).to.throw(Error, "EncodingError U+C13A");
expect(() => {ms932Encoder.encode("\uC13B")}).to.throw(Error, "EncodingError U+C13B");
expect(() => {ms932Encoder.encode("\uC13C")}).to.throw(Error, "EncodingError U+C13C");
expect(() => {ms932Encoder.encode("\uC13D")}).to.throw(Error, "EncodingError U+C13D");
expect(() => {ms932Encoder.encode("\uC13E")}).to.throw(Error, "EncodingError U+C13E");
expect(() => {ms932Encoder.encode("\uC13F")}).to.throw(Error, "EncodingError U+C13F");
expect(() => {ms932Encoder.encode("\uC140")}).to.throw(Error, "EncodingError U+C140");
expect(() => {ms932Encoder.encode("\uC141")}).to.throw(Error, "EncodingError U+C141");
expect(() => {ms932Encoder.encode("\uC142")}).to.throw(Error, "EncodingError U+C142");
expect(() => {ms932Encoder.encode("\uC143")}).to.throw(Error, "EncodingError U+C143");
expect(() => {ms932Encoder.encode("\uC144")}).to.throw(Error, "EncodingError U+C144");
expect(() => {ms932Encoder.encode("\uC145")}).to.throw(Error, "EncodingError U+C145");
expect(() => {ms932Encoder.encode("\uC146")}).to.throw(Error, "EncodingError U+C146");
expect(() => {ms932Encoder.encode("\uC147")}).to.throw(Error, "EncodingError U+C147");
expect(() => {ms932Encoder.encode("\uC148")}).to.throw(Error, "EncodingError U+C148");
expect(() => {ms932Encoder.encode("\uC149")}).to.throw(Error, "EncodingError U+C149");
expect(() => {ms932Encoder.encode("\uC14A")}).to.throw(Error, "EncodingError U+C14A");
expect(() => {ms932Encoder.encode("\uC14B")}).to.throw(Error, "EncodingError U+C14B");
expect(() => {ms932Encoder.encode("\uC14C")}).to.throw(Error, "EncodingError U+C14C");
expect(() => {ms932Encoder.encode("\uC14D")}).to.throw(Error, "EncodingError U+C14D");
expect(() => {ms932Encoder.encode("\uC14E")}).to.throw(Error, "EncodingError U+C14E");
expect(() => {ms932Encoder.encode("\uC14F")}).to.throw(Error, "EncodingError U+C14F");
expect(() => {ms932Encoder.encode("\uC150")}).to.throw(Error, "EncodingError U+C150");
expect(() => {ms932Encoder.encode("\uC151")}).to.throw(Error, "EncodingError U+C151");
expect(() => {ms932Encoder.encode("\uC152")}).to.throw(Error, "EncodingError U+C152");
expect(() => {ms932Encoder.encode("\uC153")}).to.throw(Error, "EncodingError U+C153");
expect(() => {ms932Encoder.encode("\uC154")}).to.throw(Error, "EncodingError U+C154");
expect(() => {ms932Encoder.encode("\uC155")}).to.throw(Error, "EncodingError U+C155");
expect(() => {ms932Encoder.encode("\uC156")}).to.throw(Error, "EncodingError U+C156");
expect(() => {ms932Encoder.encode("\uC157")}).to.throw(Error, "EncodingError U+C157");
expect(() => {ms932Encoder.encode("\uC158")}).to.throw(Error, "EncodingError U+C158");
expect(() => {ms932Encoder.encode("\uC159")}).to.throw(Error, "EncodingError U+C159");
expect(() => {ms932Encoder.encode("\uC15A")}).to.throw(Error, "EncodingError U+C15A");
expect(() => {ms932Encoder.encode("\uC15B")}).to.throw(Error, "EncodingError U+C15B");
expect(() => {ms932Encoder.encode("\uC15C")}).to.throw(Error, "EncodingError U+C15C");
expect(() => {ms932Encoder.encode("\uC15D")}).to.throw(Error, "EncodingError U+C15D");
expect(() => {ms932Encoder.encode("\uC15E")}).to.throw(Error, "EncodingError U+C15E");
expect(() => {ms932Encoder.encode("\uC15F")}).to.throw(Error, "EncodingError U+C15F");
expect(() => {ms932Encoder.encode("\uC160")}).to.throw(Error, "EncodingError U+C160");
expect(() => {ms932Encoder.encode("\uC161")}).to.throw(Error, "EncodingError U+C161");
expect(() => {ms932Encoder.encode("\uC162")}).to.throw(Error, "EncodingError U+C162");
expect(() => {ms932Encoder.encode("\uC163")}).to.throw(Error, "EncodingError U+C163");
expect(() => {ms932Encoder.encode("\uC164")}).to.throw(Error, "EncodingError U+C164");
expect(() => {ms932Encoder.encode("\uC165")}).to.throw(Error, "EncodingError U+C165");
expect(() => {ms932Encoder.encode("\uC166")}).to.throw(Error, "EncodingError U+C166");
expect(() => {ms932Encoder.encode("\uC167")}).to.throw(Error, "EncodingError U+C167");
expect(() => {ms932Encoder.encode("\uC168")}).to.throw(Error, "EncodingError U+C168");
expect(() => {ms932Encoder.encode("\uC169")}).to.throw(Error, "EncodingError U+C169");
expect(() => {ms932Encoder.encode("\uC16A")}).to.throw(Error, "EncodingError U+C16A");
expect(() => {ms932Encoder.encode("\uC16B")}).to.throw(Error, "EncodingError U+C16B");
expect(() => {ms932Encoder.encode("\uC16C")}).to.throw(Error, "EncodingError U+C16C");
expect(() => {ms932Encoder.encode("\uC16D")}).to.throw(Error, "EncodingError U+C16D");
expect(() => {ms932Encoder.encode("\uC16E")}).to.throw(Error, "EncodingError U+C16E");
expect(() => {ms932Encoder.encode("\uC16F")}).to.throw(Error, "EncodingError U+C16F");
expect(() => {ms932Encoder.encode("\uC170")}).to.throw(Error, "EncodingError U+C170");
expect(() => {ms932Encoder.encode("\uC171")}).to.throw(Error, "EncodingError U+C171");
expect(() => {ms932Encoder.encode("\uC172")}).to.throw(Error, "EncodingError U+C172");
expect(() => {ms932Encoder.encode("\uC173")}).to.throw(Error, "EncodingError U+C173");
expect(() => {ms932Encoder.encode("\uC174")}).to.throw(Error, "EncodingError U+C174");
expect(() => {ms932Encoder.encode("\uC175")}).to.throw(Error, "EncodingError U+C175");
expect(() => {ms932Encoder.encode("\uC176")}).to.throw(Error, "EncodingError U+C176");
expect(() => {ms932Encoder.encode("\uC177")}).to.throw(Error, "EncodingError U+C177");
expect(() => {ms932Encoder.encode("\uC178")}).to.throw(Error, "EncodingError U+C178");
expect(() => {ms932Encoder.encode("\uC179")}).to.throw(Error, "EncodingError U+C179");
expect(() => {ms932Encoder.encode("\uC17A")}).to.throw(Error, "EncodingError U+C17A");
expect(() => {ms932Encoder.encode("\uC17B")}).to.throw(Error, "EncodingError U+C17B");
expect(() => {ms932Encoder.encode("\uC17C")}).to.throw(Error, "EncodingError U+C17C");
expect(() => {ms932Encoder.encode("\uC17D")}).to.throw(Error, "EncodingError U+C17D");
expect(() => {ms932Encoder.encode("\uC17E")}).to.throw(Error, "EncodingError U+C17E");
expect(() => {ms932Encoder.encode("\uC17F")}).to.throw(Error, "EncodingError U+C17F");
expect(() => {ms932Encoder.encode("\uC180")}).to.throw(Error, "EncodingError U+C180");
expect(() => {ms932Encoder.encode("\uC181")}).to.throw(Error, "EncodingError U+C181");
expect(() => {ms932Encoder.encode("\uC182")}).to.throw(Error, "EncodingError U+C182");
expect(() => {ms932Encoder.encode("\uC183")}).to.throw(Error, "EncodingError U+C183");
expect(() => {ms932Encoder.encode("\uC184")}).to.throw(Error, "EncodingError U+C184");
expect(() => {ms932Encoder.encode("\uC185")}).to.throw(Error, "EncodingError U+C185");
expect(() => {ms932Encoder.encode("\uC186")}).to.throw(Error, "EncodingError U+C186");
expect(() => {ms932Encoder.encode("\uC187")}).to.throw(Error, "EncodingError U+C187");
expect(() => {ms932Encoder.encode("\uC188")}).to.throw(Error, "EncodingError U+C188");
expect(() => {ms932Encoder.encode("\uC189")}).to.throw(Error, "EncodingError U+C189");
expect(() => {ms932Encoder.encode("\uC18A")}).to.throw(Error, "EncodingError U+C18A");
expect(() => {ms932Encoder.encode("\uC18B")}).to.throw(Error, "EncodingError U+C18B");
expect(() => {ms932Encoder.encode("\uC18C")}).to.throw(Error, "EncodingError U+C18C");
expect(() => {ms932Encoder.encode("\uC18D")}).to.throw(Error, "EncodingError U+C18D");
expect(() => {ms932Encoder.encode("\uC18E")}).to.throw(Error, "EncodingError U+C18E");
expect(() => {ms932Encoder.encode("\uC18F")}).to.throw(Error, "EncodingError U+C18F");
expect(() => {ms932Encoder.encode("\uC190")}).to.throw(Error, "EncodingError U+C190");
expect(() => {ms932Encoder.encode("\uC191")}).to.throw(Error, "EncodingError U+C191");
expect(() => {ms932Encoder.encode("\uC192")}).to.throw(Error, "EncodingError U+C192");
expect(() => {ms932Encoder.encode("\uC193")}).to.throw(Error, "EncodingError U+C193");
expect(() => {ms932Encoder.encode("\uC194")}).to.throw(Error, "EncodingError U+C194");
expect(() => {ms932Encoder.encode("\uC195")}).to.throw(Error, "EncodingError U+C195");
expect(() => {ms932Encoder.encode("\uC196")}).to.throw(Error, "EncodingError U+C196");
expect(() => {ms932Encoder.encode("\uC197")}).to.throw(Error, "EncodingError U+C197");
expect(() => {ms932Encoder.encode("\uC198")}).to.throw(Error, "EncodingError U+C198");
expect(() => {ms932Encoder.encode("\uC199")}).to.throw(Error, "EncodingError U+C199");
expect(() => {ms932Encoder.encode("\uC19A")}).to.throw(Error, "EncodingError U+C19A");
expect(() => {ms932Encoder.encode("\uC19B")}).to.throw(Error, "EncodingError U+C19B");
expect(() => {ms932Encoder.encode("\uC19C")}).to.throw(Error, "EncodingError U+C19C");
expect(() => {ms932Encoder.encode("\uC19D")}).to.throw(Error, "EncodingError U+C19D");
expect(() => {ms932Encoder.encode("\uC19E")}).to.throw(Error, "EncodingError U+C19E");
expect(() => {ms932Encoder.encode("\uC19F")}).to.throw(Error, "EncodingError U+C19F");
expect(() => {ms932Encoder.encode("\uC1A0")}).to.throw(Error, "EncodingError U+C1A0");
expect(() => {ms932Encoder.encode("\uC1A1")}).to.throw(Error, "EncodingError U+C1A1");
expect(() => {ms932Encoder.encode("\uC1A2")}).to.throw(Error, "EncodingError U+C1A2");
expect(() => {ms932Encoder.encode("\uC1A3")}).to.throw(Error, "EncodingError U+C1A3");
expect(() => {ms932Encoder.encode("\uC1A4")}).to.throw(Error, "EncodingError U+C1A4");
expect(() => {ms932Encoder.encode("\uC1A5")}).to.throw(Error, "EncodingError U+C1A5");
expect(() => {ms932Encoder.encode("\uC1A6")}).to.throw(Error, "EncodingError U+C1A6");
expect(() => {ms932Encoder.encode("\uC1A7")}).to.throw(Error, "EncodingError U+C1A7");
expect(() => {ms932Encoder.encode("\uC1A8")}).to.throw(Error, "EncodingError U+C1A8");
expect(() => {ms932Encoder.encode("\uC1A9")}).to.throw(Error, "EncodingError U+C1A9");
expect(() => {ms932Encoder.encode("\uC1AA")}).to.throw(Error, "EncodingError U+C1AA");
expect(() => {ms932Encoder.encode("\uC1AB")}).to.throw(Error, "EncodingError U+C1AB");
expect(() => {ms932Encoder.encode("\uC1AC")}).to.throw(Error, "EncodingError U+C1AC");
expect(() => {ms932Encoder.encode("\uC1AD")}).to.throw(Error, "EncodingError U+C1AD");
expect(() => {ms932Encoder.encode("\uC1AE")}).to.throw(Error, "EncodingError U+C1AE");
expect(() => {ms932Encoder.encode("\uC1AF")}).to.throw(Error, "EncodingError U+C1AF");
expect(() => {ms932Encoder.encode("\uC1B0")}).to.throw(Error, "EncodingError U+C1B0");
expect(() => {ms932Encoder.encode("\uC1B1")}).to.throw(Error, "EncodingError U+C1B1");
expect(() => {ms932Encoder.encode("\uC1B2")}).to.throw(Error, "EncodingError U+C1B2");
expect(() => {ms932Encoder.encode("\uC1B3")}).to.throw(Error, "EncodingError U+C1B3");
expect(() => {ms932Encoder.encode("\uC1B4")}).to.throw(Error, "EncodingError U+C1B4");
expect(() => {ms932Encoder.encode("\uC1B5")}).to.throw(Error, "EncodingError U+C1B5");
expect(() => {ms932Encoder.encode("\uC1B6")}).to.throw(Error, "EncodingError U+C1B6");
expect(() => {ms932Encoder.encode("\uC1B7")}).to.throw(Error, "EncodingError U+C1B7");
expect(() => {ms932Encoder.encode("\uC1B8")}).to.throw(Error, "EncodingError U+C1B8");
expect(() => {ms932Encoder.encode("\uC1B9")}).to.throw(Error, "EncodingError U+C1B9");
expect(() => {ms932Encoder.encode("\uC1BA")}).to.throw(Error, "EncodingError U+C1BA");
expect(() => {ms932Encoder.encode("\uC1BB")}).to.throw(Error, "EncodingError U+C1BB");
expect(() => {ms932Encoder.encode("\uC1BC")}).to.throw(Error, "EncodingError U+C1BC");
expect(() => {ms932Encoder.encode("\uC1BD")}).to.throw(Error, "EncodingError U+C1BD");
expect(() => {ms932Encoder.encode("\uC1BE")}).to.throw(Error, "EncodingError U+C1BE");
expect(() => {ms932Encoder.encode("\uC1BF")}).to.throw(Error, "EncodingError U+C1BF");
expect(() => {ms932Encoder.encode("\uC1C0")}).to.throw(Error, "EncodingError U+C1C0");
expect(() => {ms932Encoder.encode("\uC1C1")}).to.throw(Error, "EncodingError U+C1C1");
expect(() => {ms932Encoder.encode("\uC1C2")}).to.throw(Error, "EncodingError U+C1C2");
expect(() => {ms932Encoder.encode("\uC1C3")}).to.throw(Error, "EncodingError U+C1C3");
expect(() => {ms932Encoder.encode("\uC1C4")}).to.throw(Error, "EncodingError U+C1C4");
expect(() => {ms932Encoder.encode("\uC1C5")}).to.throw(Error, "EncodingError U+C1C5");
expect(() => {ms932Encoder.encode("\uC1C6")}).to.throw(Error, "EncodingError U+C1C6");
expect(() => {ms932Encoder.encode("\uC1C7")}).to.throw(Error, "EncodingError U+C1C7");
expect(() => {ms932Encoder.encode("\uC1C8")}).to.throw(Error, "EncodingError U+C1C8");
expect(() => {ms932Encoder.encode("\uC1C9")}).to.throw(Error, "EncodingError U+C1C9");
expect(() => {ms932Encoder.encode("\uC1CA")}).to.throw(Error, "EncodingError U+C1CA");
expect(() => {ms932Encoder.encode("\uC1CB")}).to.throw(Error, "EncodingError U+C1CB");
expect(() => {ms932Encoder.encode("\uC1CC")}).to.throw(Error, "EncodingError U+C1CC");
expect(() => {ms932Encoder.encode("\uC1CD")}).to.throw(Error, "EncodingError U+C1CD");
expect(() => {ms932Encoder.encode("\uC1CE")}).to.throw(Error, "EncodingError U+C1CE");
expect(() => {ms932Encoder.encode("\uC1CF")}).to.throw(Error, "EncodingError U+C1CF");
expect(() => {ms932Encoder.encode("\uC1D0")}).to.throw(Error, "EncodingError U+C1D0");
expect(() => {ms932Encoder.encode("\uC1D1")}).to.throw(Error, "EncodingError U+C1D1");
expect(() => {ms932Encoder.encode("\uC1D2")}).to.throw(Error, "EncodingError U+C1D2");
expect(() => {ms932Encoder.encode("\uC1D3")}).to.throw(Error, "EncodingError U+C1D3");
expect(() => {ms932Encoder.encode("\uC1D4")}).to.throw(Error, "EncodingError U+C1D4");
expect(() => {ms932Encoder.encode("\uC1D5")}).to.throw(Error, "EncodingError U+C1D5");
expect(() => {ms932Encoder.encode("\uC1D6")}).to.throw(Error, "EncodingError U+C1D6");
expect(() => {ms932Encoder.encode("\uC1D7")}).to.throw(Error, "EncodingError U+C1D7");
expect(() => {ms932Encoder.encode("\uC1D8")}).to.throw(Error, "EncodingError U+C1D8");
expect(() => {ms932Encoder.encode("\uC1D9")}).to.throw(Error, "EncodingError U+C1D9");
expect(() => {ms932Encoder.encode("\uC1DA")}).to.throw(Error, "EncodingError U+C1DA");
expect(() => {ms932Encoder.encode("\uC1DB")}).to.throw(Error, "EncodingError U+C1DB");
expect(() => {ms932Encoder.encode("\uC1DC")}).to.throw(Error, "EncodingError U+C1DC");
expect(() => {ms932Encoder.encode("\uC1DD")}).to.throw(Error, "EncodingError U+C1DD");
expect(() => {ms932Encoder.encode("\uC1DE")}).to.throw(Error, "EncodingError U+C1DE");
expect(() => {ms932Encoder.encode("\uC1DF")}).to.throw(Error, "EncodingError U+C1DF");
expect(() => {ms932Encoder.encode("\uC1E0")}).to.throw(Error, "EncodingError U+C1E0");
expect(() => {ms932Encoder.encode("\uC1E1")}).to.throw(Error, "EncodingError U+C1E1");
expect(() => {ms932Encoder.encode("\uC1E2")}).to.throw(Error, "EncodingError U+C1E2");
expect(() => {ms932Encoder.encode("\uC1E3")}).to.throw(Error, "EncodingError U+C1E3");
expect(() => {ms932Encoder.encode("\uC1E4")}).to.throw(Error, "EncodingError U+C1E4");
expect(() => {ms932Encoder.encode("\uC1E5")}).to.throw(Error, "EncodingError U+C1E5");
expect(() => {ms932Encoder.encode("\uC1E6")}).to.throw(Error, "EncodingError U+C1E6");
expect(() => {ms932Encoder.encode("\uC1E7")}).to.throw(Error, "EncodingError U+C1E7");
expect(() => {ms932Encoder.encode("\uC1E8")}).to.throw(Error, "EncodingError U+C1E8");
expect(() => {ms932Encoder.encode("\uC1E9")}).to.throw(Error, "EncodingError U+C1E9");
expect(() => {ms932Encoder.encode("\uC1EA")}).to.throw(Error, "EncodingError U+C1EA");
expect(() => {ms932Encoder.encode("\uC1EB")}).to.throw(Error, "EncodingError U+C1EB");
expect(() => {ms932Encoder.encode("\uC1EC")}).to.throw(Error, "EncodingError U+C1EC");
expect(() => {ms932Encoder.encode("\uC1ED")}).to.throw(Error, "EncodingError U+C1ED");
expect(() => {ms932Encoder.encode("\uC1EE")}).to.throw(Error, "EncodingError U+C1EE");
expect(() => {ms932Encoder.encode("\uC1EF")}).to.throw(Error, "EncodingError U+C1EF");
expect(() => {ms932Encoder.encode("\uC1F0")}).to.throw(Error, "EncodingError U+C1F0");
expect(() => {ms932Encoder.encode("\uC1F1")}).to.throw(Error, "EncodingError U+C1F1");
expect(() => {ms932Encoder.encode("\uC1F2")}).to.throw(Error, "EncodingError U+C1F2");
expect(() => {ms932Encoder.encode("\uC1F3")}).to.throw(Error, "EncodingError U+C1F3");
expect(() => {ms932Encoder.encode("\uC1F4")}).to.throw(Error, "EncodingError U+C1F4");
expect(() => {ms932Encoder.encode("\uC1F5")}).to.throw(Error, "EncodingError U+C1F5");
expect(() => {ms932Encoder.encode("\uC1F6")}).to.throw(Error, "EncodingError U+C1F6");
expect(() => {ms932Encoder.encode("\uC1F7")}).to.throw(Error, "EncodingError U+C1F7");
expect(() => {ms932Encoder.encode("\uC1F8")}).to.throw(Error, "EncodingError U+C1F8");
expect(() => {ms932Encoder.encode("\uC1F9")}).to.throw(Error, "EncodingError U+C1F9");
expect(() => {ms932Encoder.encode("\uC1FA")}).to.throw(Error, "EncodingError U+C1FA");
expect(() => {ms932Encoder.encode("\uC1FB")}).to.throw(Error, "EncodingError U+C1FB");
expect(() => {ms932Encoder.encode("\uC1FC")}).to.throw(Error, "EncodingError U+C1FC");
expect(() => {ms932Encoder.encode("\uC1FD")}).to.throw(Error, "EncodingError U+C1FD");
expect(() => {ms932Encoder.encode("\uC1FE")}).to.throw(Error, "EncodingError U+C1FE");
expect(() => {ms932Encoder.encode("\uC1FF")}).to.throw(Error, "EncodingError U+C1FF");
expect(() => {ms932Encoder.encode("\uC200")}).to.throw(Error, "EncodingError U+C200");
expect(() => {ms932Encoder.encode("\uC201")}).to.throw(Error, "EncodingError U+C201");
expect(() => {ms932Encoder.encode("\uC202")}).to.throw(Error, "EncodingError U+C202");
expect(() => {ms932Encoder.encode("\uC203")}).to.throw(Error, "EncodingError U+C203");
expect(() => {ms932Encoder.encode("\uC204")}).to.throw(Error, "EncodingError U+C204");
expect(() => {ms932Encoder.encode("\uC205")}).to.throw(Error, "EncodingError U+C205");
expect(() => {ms932Encoder.encode("\uC206")}).to.throw(Error, "EncodingError U+C206");
expect(() => {ms932Encoder.encode("\uC207")}).to.throw(Error, "EncodingError U+C207");
expect(() => {ms932Encoder.encode("\uC208")}).to.throw(Error, "EncodingError U+C208");
expect(() => {ms932Encoder.encode("\uC209")}).to.throw(Error, "EncodingError U+C209");
expect(() => {ms932Encoder.encode("\uC20A")}).to.throw(Error, "EncodingError U+C20A");
expect(() => {ms932Encoder.encode("\uC20B")}).to.throw(Error, "EncodingError U+C20B");
expect(() => {ms932Encoder.encode("\uC20C")}).to.throw(Error, "EncodingError U+C20C");
expect(() => {ms932Encoder.encode("\uC20D")}).to.throw(Error, "EncodingError U+C20D");
expect(() => {ms932Encoder.encode("\uC20E")}).to.throw(Error, "EncodingError U+C20E");
expect(() => {ms932Encoder.encode("\uC20F")}).to.throw(Error, "EncodingError U+C20F");
expect(() => {ms932Encoder.encode("\uC210")}).to.throw(Error, "EncodingError U+C210");
expect(() => {ms932Encoder.encode("\uC211")}).to.throw(Error, "EncodingError U+C211");
expect(() => {ms932Encoder.encode("\uC212")}).to.throw(Error, "EncodingError U+C212");
expect(() => {ms932Encoder.encode("\uC213")}).to.throw(Error, "EncodingError U+C213");
expect(() => {ms932Encoder.encode("\uC214")}).to.throw(Error, "EncodingError U+C214");
expect(() => {ms932Encoder.encode("\uC215")}).to.throw(Error, "EncodingError U+C215");
expect(() => {ms932Encoder.encode("\uC216")}).to.throw(Error, "EncodingError U+C216");
expect(() => {ms932Encoder.encode("\uC217")}).to.throw(Error, "EncodingError U+C217");
expect(() => {ms932Encoder.encode("\uC218")}).to.throw(Error, "EncodingError U+C218");
expect(() => {ms932Encoder.encode("\uC219")}).to.throw(Error, "EncodingError U+C219");
expect(() => {ms932Encoder.encode("\uC21A")}).to.throw(Error, "EncodingError U+C21A");
expect(() => {ms932Encoder.encode("\uC21B")}).to.throw(Error, "EncodingError U+C21B");
expect(() => {ms932Encoder.encode("\uC21C")}).to.throw(Error, "EncodingError U+C21C");
expect(() => {ms932Encoder.encode("\uC21D")}).to.throw(Error, "EncodingError U+C21D");
expect(() => {ms932Encoder.encode("\uC21E")}).to.throw(Error, "EncodingError U+C21E");
expect(() => {ms932Encoder.encode("\uC21F")}).to.throw(Error, "EncodingError U+C21F");
expect(() => {ms932Encoder.encode("\uC220")}).to.throw(Error, "EncodingError U+C220");
expect(() => {ms932Encoder.encode("\uC221")}).to.throw(Error, "EncodingError U+C221");
expect(() => {ms932Encoder.encode("\uC222")}).to.throw(Error, "EncodingError U+C222");
expect(() => {ms932Encoder.encode("\uC223")}).to.throw(Error, "EncodingError U+C223");
expect(() => {ms932Encoder.encode("\uC224")}).to.throw(Error, "EncodingError U+C224");
expect(() => {ms932Encoder.encode("\uC225")}).to.throw(Error, "EncodingError U+C225");
expect(() => {ms932Encoder.encode("\uC226")}).to.throw(Error, "EncodingError U+C226");
expect(() => {ms932Encoder.encode("\uC227")}).to.throw(Error, "EncodingError U+C227");
expect(() => {ms932Encoder.encode("\uC228")}).to.throw(Error, "EncodingError U+C228");
expect(() => {ms932Encoder.encode("\uC229")}).to.throw(Error, "EncodingError U+C229");
expect(() => {ms932Encoder.encode("\uC22A")}).to.throw(Error, "EncodingError U+C22A");
expect(() => {ms932Encoder.encode("\uC22B")}).to.throw(Error, "EncodingError U+C22B");
expect(() => {ms932Encoder.encode("\uC22C")}).to.throw(Error, "EncodingError U+C22C");
expect(() => {ms932Encoder.encode("\uC22D")}).to.throw(Error, "EncodingError U+C22D");
expect(() => {ms932Encoder.encode("\uC22E")}).to.throw(Error, "EncodingError U+C22E");
expect(() => {ms932Encoder.encode("\uC22F")}).to.throw(Error, "EncodingError U+C22F");
expect(() => {ms932Encoder.encode("\uC230")}).to.throw(Error, "EncodingError U+C230");
expect(() => {ms932Encoder.encode("\uC231")}).to.throw(Error, "EncodingError U+C231");
expect(() => {ms932Encoder.encode("\uC232")}).to.throw(Error, "EncodingError U+C232");
expect(() => {ms932Encoder.encode("\uC233")}).to.throw(Error, "EncodingError U+C233");
expect(() => {ms932Encoder.encode("\uC234")}).to.throw(Error, "EncodingError U+C234");
expect(() => {ms932Encoder.encode("\uC235")}).to.throw(Error, "EncodingError U+C235");
expect(() => {ms932Encoder.encode("\uC236")}).to.throw(Error, "EncodingError U+C236");
expect(() => {ms932Encoder.encode("\uC237")}).to.throw(Error, "EncodingError U+C237");
expect(() => {ms932Encoder.encode("\uC238")}).to.throw(Error, "EncodingError U+C238");
expect(() => {ms932Encoder.encode("\uC239")}).to.throw(Error, "EncodingError U+C239");
expect(() => {ms932Encoder.encode("\uC23A")}).to.throw(Error, "EncodingError U+C23A");
expect(() => {ms932Encoder.encode("\uC23B")}).to.throw(Error, "EncodingError U+C23B");
expect(() => {ms932Encoder.encode("\uC23C")}).to.throw(Error, "EncodingError U+C23C");
expect(() => {ms932Encoder.encode("\uC23D")}).to.throw(Error, "EncodingError U+C23D");
expect(() => {ms932Encoder.encode("\uC23E")}).to.throw(Error, "EncodingError U+C23E");
expect(() => {ms932Encoder.encode("\uC23F")}).to.throw(Error, "EncodingError U+C23F");
expect(() => {ms932Encoder.encode("\uC240")}).to.throw(Error, "EncodingError U+C240");
expect(() => {ms932Encoder.encode("\uC241")}).to.throw(Error, "EncodingError U+C241");
expect(() => {ms932Encoder.encode("\uC242")}).to.throw(Error, "EncodingError U+C242");
expect(() => {ms932Encoder.encode("\uC243")}).to.throw(Error, "EncodingError U+C243");
expect(() => {ms932Encoder.encode("\uC244")}).to.throw(Error, "EncodingError U+C244");
expect(() => {ms932Encoder.encode("\uC245")}).to.throw(Error, "EncodingError U+C245");
expect(() => {ms932Encoder.encode("\uC246")}).to.throw(Error, "EncodingError U+C246");
expect(() => {ms932Encoder.encode("\uC247")}).to.throw(Error, "EncodingError U+C247");
expect(() => {ms932Encoder.encode("\uC248")}).to.throw(Error, "EncodingError U+C248");
expect(() => {ms932Encoder.encode("\uC249")}).to.throw(Error, "EncodingError U+C249");
expect(() => {ms932Encoder.encode("\uC24A")}).to.throw(Error, "EncodingError U+C24A");
expect(() => {ms932Encoder.encode("\uC24B")}).to.throw(Error, "EncodingError U+C24B");
expect(() => {ms932Encoder.encode("\uC24C")}).to.throw(Error, "EncodingError U+C24C");
expect(() => {ms932Encoder.encode("\uC24D")}).to.throw(Error, "EncodingError U+C24D");
expect(() => {ms932Encoder.encode("\uC24E")}).to.throw(Error, "EncodingError U+C24E");
expect(() => {ms932Encoder.encode("\uC24F")}).to.throw(Error, "EncodingError U+C24F");
expect(() => {ms932Encoder.encode("\uC250")}).to.throw(Error, "EncodingError U+C250");
expect(() => {ms932Encoder.encode("\uC251")}).to.throw(Error, "EncodingError U+C251");
expect(() => {ms932Encoder.encode("\uC252")}).to.throw(Error, "EncodingError U+C252");
expect(() => {ms932Encoder.encode("\uC253")}).to.throw(Error, "EncodingError U+C253");
expect(() => {ms932Encoder.encode("\uC254")}).to.throw(Error, "EncodingError U+C254");
expect(() => {ms932Encoder.encode("\uC255")}).to.throw(Error, "EncodingError U+C255");
expect(() => {ms932Encoder.encode("\uC256")}).to.throw(Error, "EncodingError U+C256");
expect(() => {ms932Encoder.encode("\uC257")}).to.throw(Error, "EncodingError U+C257");
expect(() => {ms932Encoder.encode("\uC258")}).to.throw(Error, "EncodingError U+C258");
expect(() => {ms932Encoder.encode("\uC259")}).to.throw(Error, "EncodingError U+C259");
expect(() => {ms932Encoder.encode("\uC25A")}).to.throw(Error, "EncodingError U+C25A");
expect(() => {ms932Encoder.encode("\uC25B")}).to.throw(Error, "EncodingError U+C25B");
expect(() => {ms932Encoder.encode("\uC25C")}).to.throw(Error, "EncodingError U+C25C");
expect(() => {ms932Encoder.encode("\uC25D")}).to.throw(Error, "EncodingError U+C25D");
expect(() => {ms932Encoder.encode("\uC25E")}).to.throw(Error, "EncodingError U+C25E");
expect(() => {ms932Encoder.encode("\uC25F")}).to.throw(Error, "EncodingError U+C25F");
expect(() => {ms932Encoder.encode("\uC260")}).to.throw(Error, "EncodingError U+C260");
expect(() => {ms932Encoder.encode("\uC261")}).to.throw(Error, "EncodingError U+C261");
expect(() => {ms932Encoder.encode("\uC262")}).to.throw(Error, "EncodingError U+C262");
expect(() => {ms932Encoder.encode("\uC263")}).to.throw(Error, "EncodingError U+C263");
expect(() => {ms932Encoder.encode("\uC264")}).to.throw(Error, "EncodingError U+C264");
expect(() => {ms932Encoder.encode("\uC265")}).to.throw(Error, "EncodingError U+C265");
expect(() => {ms932Encoder.encode("\uC266")}).to.throw(Error, "EncodingError U+C266");
expect(() => {ms932Encoder.encode("\uC267")}).to.throw(Error, "EncodingError U+C267");
expect(() => {ms932Encoder.encode("\uC268")}).to.throw(Error, "EncodingError U+C268");
expect(() => {ms932Encoder.encode("\uC269")}).to.throw(Error, "EncodingError U+C269");
expect(() => {ms932Encoder.encode("\uC26A")}).to.throw(Error, "EncodingError U+C26A");
expect(() => {ms932Encoder.encode("\uC26B")}).to.throw(Error, "EncodingError U+C26B");
expect(() => {ms932Encoder.encode("\uC26C")}).to.throw(Error, "EncodingError U+C26C");
expect(() => {ms932Encoder.encode("\uC26D")}).to.throw(Error, "EncodingError U+C26D");
expect(() => {ms932Encoder.encode("\uC26E")}).to.throw(Error, "EncodingError U+C26E");
expect(() => {ms932Encoder.encode("\uC26F")}).to.throw(Error, "EncodingError U+C26F");
expect(() => {ms932Encoder.encode("\uC270")}).to.throw(Error, "EncodingError U+C270");
expect(() => {ms932Encoder.encode("\uC271")}).to.throw(Error, "EncodingError U+C271");
expect(() => {ms932Encoder.encode("\uC272")}).to.throw(Error, "EncodingError U+C272");
expect(() => {ms932Encoder.encode("\uC273")}).to.throw(Error, "EncodingError U+C273");
expect(() => {ms932Encoder.encode("\uC274")}).to.throw(Error, "EncodingError U+C274");
expect(() => {ms932Encoder.encode("\uC275")}).to.throw(Error, "EncodingError U+C275");
expect(() => {ms932Encoder.encode("\uC276")}).to.throw(Error, "EncodingError U+C276");
expect(() => {ms932Encoder.encode("\uC277")}).to.throw(Error, "EncodingError U+C277");
expect(() => {ms932Encoder.encode("\uC278")}).to.throw(Error, "EncodingError U+C278");
expect(() => {ms932Encoder.encode("\uC279")}).to.throw(Error, "EncodingError U+C279");
expect(() => {ms932Encoder.encode("\uC27A")}).to.throw(Error, "EncodingError U+C27A");
expect(() => {ms932Encoder.encode("\uC27B")}).to.throw(Error, "EncodingError U+C27B");
expect(() => {ms932Encoder.encode("\uC27C")}).to.throw(Error, "EncodingError U+C27C");
expect(() => {ms932Encoder.encode("\uC27D")}).to.throw(Error, "EncodingError U+C27D");
expect(() => {ms932Encoder.encode("\uC27E")}).to.throw(Error, "EncodingError U+C27E");
expect(() => {ms932Encoder.encode("\uC27F")}).to.throw(Error, "EncodingError U+C27F");
expect(() => {ms932Encoder.encode("\uC280")}).to.throw(Error, "EncodingError U+C280");
expect(() => {ms932Encoder.encode("\uC281")}).to.throw(Error, "EncodingError U+C281");
expect(() => {ms932Encoder.encode("\uC282")}).to.throw(Error, "EncodingError U+C282");
expect(() => {ms932Encoder.encode("\uC283")}).to.throw(Error, "EncodingError U+C283");
expect(() => {ms932Encoder.encode("\uC284")}).to.throw(Error, "EncodingError U+C284");
expect(() => {ms932Encoder.encode("\uC285")}).to.throw(Error, "EncodingError U+C285");
expect(() => {ms932Encoder.encode("\uC286")}).to.throw(Error, "EncodingError U+C286");
expect(() => {ms932Encoder.encode("\uC287")}).to.throw(Error, "EncodingError U+C287");
expect(() => {ms932Encoder.encode("\uC288")}).to.throw(Error, "EncodingError U+C288");
expect(() => {ms932Encoder.encode("\uC289")}).to.throw(Error, "EncodingError U+C289");
expect(() => {ms932Encoder.encode("\uC28A")}).to.throw(Error, "EncodingError U+C28A");
expect(() => {ms932Encoder.encode("\uC28B")}).to.throw(Error, "EncodingError U+C28B");
expect(() => {ms932Encoder.encode("\uC28C")}).to.throw(Error, "EncodingError U+C28C");
expect(() => {ms932Encoder.encode("\uC28D")}).to.throw(Error, "EncodingError U+C28D");
expect(() => {ms932Encoder.encode("\uC28E")}).to.throw(Error, "EncodingError U+C28E");
expect(() => {ms932Encoder.encode("\uC28F")}).to.throw(Error, "EncodingError U+C28F");
expect(() => {ms932Encoder.encode("\uC290")}).to.throw(Error, "EncodingError U+C290");
expect(() => {ms932Encoder.encode("\uC291")}).to.throw(Error, "EncodingError U+C291");
expect(() => {ms932Encoder.encode("\uC292")}).to.throw(Error, "EncodingError U+C292");
expect(() => {ms932Encoder.encode("\uC293")}).to.throw(Error, "EncodingError U+C293");
expect(() => {ms932Encoder.encode("\uC294")}).to.throw(Error, "EncodingError U+C294");
expect(() => {ms932Encoder.encode("\uC295")}).to.throw(Error, "EncodingError U+C295");
expect(() => {ms932Encoder.encode("\uC296")}).to.throw(Error, "EncodingError U+C296");
expect(() => {ms932Encoder.encode("\uC297")}).to.throw(Error, "EncodingError U+C297");
expect(() => {ms932Encoder.encode("\uC298")}).to.throw(Error, "EncodingError U+C298");
expect(() => {ms932Encoder.encode("\uC299")}).to.throw(Error, "EncodingError U+C299");
expect(() => {ms932Encoder.encode("\uC29A")}).to.throw(Error, "EncodingError U+C29A");
expect(() => {ms932Encoder.encode("\uC29B")}).to.throw(Error, "EncodingError U+C29B");
expect(() => {ms932Encoder.encode("\uC29C")}).to.throw(Error, "EncodingError U+C29C");
expect(() => {ms932Encoder.encode("\uC29D")}).to.throw(Error, "EncodingError U+C29D");
expect(() => {ms932Encoder.encode("\uC29E")}).to.throw(Error, "EncodingError U+C29E");
expect(() => {ms932Encoder.encode("\uC29F")}).to.throw(Error, "EncodingError U+C29F");
expect(() => {ms932Encoder.encode("\uC2A0")}).to.throw(Error, "EncodingError U+C2A0");
expect(() => {ms932Encoder.encode("\uC2A1")}).to.throw(Error, "EncodingError U+C2A1");
expect(() => {ms932Encoder.encode("\uC2A2")}).to.throw(Error, "EncodingError U+C2A2");
expect(() => {ms932Encoder.encode("\uC2A3")}).to.throw(Error, "EncodingError U+C2A3");
expect(() => {ms932Encoder.encode("\uC2A4")}).to.throw(Error, "EncodingError U+C2A4");
expect(() => {ms932Encoder.encode("\uC2A5")}).to.throw(Error, "EncodingError U+C2A5");
expect(() => {ms932Encoder.encode("\uC2A6")}).to.throw(Error, "EncodingError U+C2A6");
expect(() => {ms932Encoder.encode("\uC2A7")}).to.throw(Error, "EncodingError U+C2A7");
expect(() => {ms932Encoder.encode("\uC2A8")}).to.throw(Error, "EncodingError U+C2A8");
expect(() => {ms932Encoder.encode("\uC2A9")}).to.throw(Error, "EncodingError U+C2A9");
expect(() => {ms932Encoder.encode("\uC2AA")}).to.throw(Error, "EncodingError U+C2AA");
expect(() => {ms932Encoder.encode("\uC2AB")}).to.throw(Error, "EncodingError U+C2AB");
expect(() => {ms932Encoder.encode("\uC2AC")}).to.throw(Error, "EncodingError U+C2AC");
expect(() => {ms932Encoder.encode("\uC2AD")}).to.throw(Error, "EncodingError U+C2AD");
expect(() => {ms932Encoder.encode("\uC2AE")}).to.throw(Error, "EncodingError U+C2AE");
expect(() => {ms932Encoder.encode("\uC2AF")}).to.throw(Error, "EncodingError U+C2AF");
expect(() => {ms932Encoder.encode("\uC2B0")}).to.throw(Error, "EncodingError U+C2B0");
expect(() => {ms932Encoder.encode("\uC2B1")}).to.throw(Error, "EncodingError U+C2B1");
expect(() => {ms932Encoder.encode("\uC2B2")}).to.throw(Error, "EncodingError U+C2B2");
expect(() => {ms932Encoder.encode("\uC2B3")}).to.throw(Error, "EncodingError U+C2B3");
expect(() => {ms932Encoder.encode("\uC2B4")}).to.throw(Error, "EncodingError U+C2B4");
expect(() => {ms932Encoder.encode("\uC2B5")}).to.throw(Error, "EncodingError U+C2B5");
expect(() => {ms932Encoder.encode("\uC2B6")}).to.throw(Error, "EncodingError U+C2B6");
expect(() => {ms932Encoder.encode("\uC2B7")}).to.throw(Error, "EncodingError U+C2B7");
expect(() => {ms932Encoder.encode("\uC2B8")}).to.throw(Error, "EncodingError U+C2B8");
expect(() => {ms932Encoder.encode("\uC2B9")}).to.throw(Error, "EncodingError U+C2B9");
expect(() => {ms932Encoder.encode("\uC2BA")}).to.throw(Error, "EncodingError U+C2BA");
expect(() => {ms932Encoder.encode("\uC2BB")}).to.throw(Error, "EncodingError U+C2BB");
expect(() => {ms932Encoder.encode("\uC2BC")}).to.throw(Error, "EncodingError U+C2BC");
expect(() => {ms932Encoder.encode("\uC2BD")}).to.throw(Error, "EncodingError U+C2BD");
expect(() => {ms932Encoder.encode("\uC2BE")}).to.throw(Error, "EncodingError U+C2BE");
expect(() => {ms932Encoder.encode("\uC2BF")}).to.throw(Error, "EncodingError U+C2BF");
expect(() => {ms932Encoder.encode("\uC2C0")}).to.throw(Error, "EncodingError U+C2C0");
expect(() => {ms932Encoder.encode("\uC2C1")}).to.throw(Error, "EncodingError U+C2C1");
expect(() => {ms932Encoder.encode("\uC2C2")}).to.throw(Error, "EncodingError U+C2C2");
expect(() => {ms932Encoder.encode("\uC2C3")}).to.throw(Error, "EncodingError U+C2C3");
expect(() => {ms932Encoder.encode("\uC2C4")}).to.throw(Error, "EncodingError U+C2C4");
expect(() => {ms932Encoder.encode("\uC2C5")}).to.throw(Error, "EncodingError U+C2C5");
expect(() => {ms932Encoder.encode("\uC2C6")}).to.throw(Error, "EncodingError U+C2C6");
expect(() => {ms932Encoder.encode("\uC2C7")}).to.throw(Error, "EncodingError U+C2C7");
expect(() => {ms932Encoder.encode("\uC2C8")}).to.throw(Error, "EncodingError U+C2C8");
expect(() => {ms932Encoder.encode("\uC2C9")}).to.throw(Error, "EncodingError U+C2C9");
expect(() => {ms932Encoder.encode("\uC2CA")}).to.throw(Error, "EncodingError U+C2CA");
expect(() => {ms932Encoder.encode("\uC2CB")}).to.throw(Error, "EncodingError U+C2CB");
expect(() => {ms932Encoder.encode("\uC2CC")}).to.throw(Error, "EncodingError U+C2CC");
expect(() => {ms932Encoder.encode("\uC2CD")}).to.throw(Error, "EncodingError U+C2CD");
expect(() => {ms932Encoder.encode("\uC2CE")}).to.throw(Error, "EncodingError U+C2CE");
expect(() => {ms932Encoder.encode("\uC2CF")}).to.throw(Error, "EncodingError U+C2CF");
expect(() => {ms932Encoder.encode("\uC2D0")}).to.throw(Error, "EncodingError U+C2D0");
expect(() => {ms932Encoder.encode("\uC2D1")}).to.throw(Error, "EncodingError U+C2D1");
expect(() => {ms932Encoder.encode("\uC2D2")}).to.throw(Error, "EncodingError U+C2D2");
expect(() => {ms932Encoder.encode("\uC2D3")}).to.throw(Error, "EncodingError U+C2D3");
expect(() => {ms932Encoder.encode("\uC2D4")}).to.throw(Error, "EncodingError U+C2D4");
expect(() => {ms932Encoder.encode("\uC2D5")}).to.throw(Error, "EncodingError U+C2D5");
expect(() => {ms932Encoder.encode("\uC2D6")}).to.throw(Error, "EncodingError U+C2D6");
expect(() => {ms932Encoder.encode("\uC2D7")}).to.throw(Error, "EncodingError U+C2D7");
expect(() => {ms932Encoder.encode("\uC2D8")}).to.throw(Error, "EncodingError U+C2D8");
expect(() => {ms932Encoder.encode("\uC2D9")}).to.throw(Error, "EncodingError U+C2D9");
expect(() => {ms932Encoder.encode("\uC2DA")}).to.throw(Error, "EncodingError U+C2DA");
expect(() => {ms932Encoder.encode("\uC2DB")}).to.throw(Error, "EncodingError U+C2DB");
expect(() => {ms932Encoder.encode("\uC2DC")}).to.throw(Error, "EncodingError U+C2DC");
expect(() => {ms932Encoder.encode("\uC2DD")}).to.throw(Error, "EncodingError U+C2DD");
expect(() => {ms932Encoder.encode("\uC2DE")}).to.throw(Error, "EncodingError U+C2DE");
expect(() => {ms932Encoder.encode("\uC2DF")}).to.throw(Error, "EncodingError U+C2DF");
expect(() => {ms932Encoder.encode("\uC2E0")}).to.throw(Error, "EncodingError U+C2E0");
expect(() => {ms932Encoder.encode("\uC2E1")}).to.throw(Error, "EncodingError U+C2E1");
expect(() => {ms932Encoder.encode("\uC2E2")}).to.throw(Error, "EncodingError U+C2E2");
expect(() => {ms932Encoder.encode("\uC2E3")}).to.throw(Error, "EncodingError U+C2E3");
expect(() => {ms932Encoder.encode("\uC2E4")}).to.throw(Error, "EncodingError U+C2E4");
expect(() => {ms932Encoder.encode("\uC2E5")}).to.throw(Error, "EncodingError U+C2E5");
expect(() => {ms932Encoder.encode("\uC2E6")}).to.throw(Error, "EncodingError U+C2E6");
expect(() => {ms932Encoder.encode("\uC2E7")}).to.throw(Error, "EncodingError U+C2E7");
expect(() => {ms932Encoder.encode("\uC2E8")}).to.throw(Error, "EncodingError U+C2E8");
expect(() => {ms932Encoder.encode("\uC2E9")}).to.throw(Error, "EncodingError U+C2E9");
expect(() => {ms932Encoder.encode("\uC2EA")}).to.throw(Error, "EncodingError U+C2EA");
expect(() => {ms932Encoder.encode("\uC2EB")}).to.throw(Error, "EncodingError U+C2EB");
expect(() => {ms932Encoder.encode("\uC2EC")}).to.throw(Error, "EncodingError U+C2EC");
expect(() => {ms932Encoder.encode("\uC2ED")}).to.throw(Error, "EncodingError U+C2ED");
expect(() => {ms932Encoder.encode("\uC2EE")}).to.throw(Error, "EncodingError U+C2EE");
expect(() => {ms932Encoder.encode("\uC2EF")}).to.throw(Error, "EncodingError U+C2EF");
expect(() => {ms932Encoder.encode("\uC2F0")}).to.throw(Error, "EncodingError U+C2F0");
expect(() => {ms932Encoder.encode("\uC2F1")}).to.throw(Error, "EncodingError U+C2F1");
expect(() => {ms932Encoder.encode("\uC2F2")}).to.throw(Error, "EncodingError U+C2F2");
expect(() => {ms932Encoder.encode("\uC2F3")}).to.throw(Error, "EncodingError U+C2F3");
expect(() => {ms932Encoder.encode("\uC2F4")}).to.throw(Error, "EncodingError U+C2F4");
expect(() => {ms932Encoder.encode("\uC2F5")}).to.throw(Error, "EncodingError U+C2F5");
expect(() => {ms932Encoder.encode("\uC2F6")}).to.throw(Error, "EncodingError U+C2F6");
expect(() => {ms932Encoder.encode("\uC2F7")}).to.throw(Error, "EncodingError U+C2F7");
expect(() => {ms932Encoder.encode("\uC2F8")}).to.throw(Error, "EncodingError U+C2F8");
expect(() => {ms932Encoder.encode("\uC2F9")}).to.throw(Error, "EncodingError U+C2F9");
expect(() => {ms932Encoder.encode("\uC2FA")}).to.throw(Error, "EncodingError U+C2FA");
expect(() => {ms932Encoder.encode("\uC2FB")}).to.throw(Error, "EncodingError U+C2FB");
expect(() => {ms932Encoder.encode("\uC2FC")}).to.throw(Error, "EncodingError U+C2FC");
expect(() => {ms932Encoder.encode("\uC2FD")}).to.throw(Error, "EncodingError U+C2FD");
expect(() => {ms932Encoder.encode("\uC2FE")}).to.throw(Error, "EncodingError U+C2FE");
expect(() => {ms932Encoder.encode("\uC2FF")}).to.throw(Error, "EncodingError U+C2FF");
expect(() => {ms932Encoder.encode("\uC300")}).to.throw(Error, "EncodingError U+C300");
expect(() => {ms932Encoder.encode("\uC301")}).to.throw(Error, "EncodingError U+C301");
expect(() => {ms932Encoder.encode("\uC302")}).to.throw(Error, "EncodingError U+C302");
expect(() => {ms932Encoder.encode("\uC303")}).to.throw(Error, "EncodingError U+C303");
expect(() => {ms932Encoder.encode("\uC304")}).to.throw(Error, "EncodingError U+C304");
expect(() => {ms932Encoder.encode("\uC305")}).to.throw(Error, "EncodingError U+C305");
expect(() => {ms932Encoder.encode("\uC306")}).to.throw(Error, "EncodingError U+C306");
expect(() => {ms932Encoder.encode("\uC307")}).to.throw(Error, "EncodingError U+C307");
expect(() => {ms932Encoder.encode("\uC308")}).to.throw(Error, "EncodingError U+C308");
expect(() => {ms932Encoder.encode("\uC309")}).to.throw(Error, "EncodingError U+C309");
expect(() => {ms932Encoder.encode("\uC30A")}).to.throw(Error, "EncodingError U+C30A");
expect(() => {ms932Encoder.encode("\uC30B")}).to.throw(Error, "EncodingError U+C30B");
expect(() => {ms932Encoder.encode("\uC30C")}).to.throw(Error, "EncodingError U+C30C");
expect(() => {ms932Encoder.encode("\uC30D")}).to.throw(Error, "EncodingError U+C30D");
expect(() => {ms932Encoder.encode("\uC30E")}).to.throw(Error, "EncodingError U+C30E");
expect(() => {ms932Encoder.encode("\uC30F")}).to.throw(Error, "EncodingError U+C30F");
expect(() => {ms932Encoder.encode("\uC310")}).to.throw(Error, "EncodingError U+C310");
expect(() => {ms932Encoder.encode("\uC311")}).to.throw(Error, "EncodingError U+C311");
expect(() => {ms932Encoder.encode("\uC312")}).to.throw(Error, "EncodingError U+C312");
expect(() => {ms932Encoder.encode("\uC313")}).to.throw(Error, "EncodingError U+C313");
expect(() => {ms932Encoder.encode("\uC314")}).to.throw(Error, "EncodingError U+C314");
expect(() => {ms932Encoder.encode("\uC315")}).to.throw(Error, "EncodingError U+C315");
expect(() => {ms932Encoder.encode("\uC316")}).to.throw(Error, "EncodingError U+C316");
expect(() => {ms932Encoder.encode("\uC317")}).to.throw(Error, "EncodingError U+C317");
expect(() => {ms932Encoder.encode("\uC318")}).to.throw(Error, "EncodingError U+C318");
expect(() => {ms932Encoder.encode("\uC319")}).to.throw(Error, "EncodingError U+C319");
expect(() => {ms932Encoder.encode("\uC31A")}).to.throw(Error, "EncodingError U+C31A");
expect(() => {ms932Encoder.encode("\uC31B")}).to.throw(Error, "EncodingError U+C31B");
expect(() => {ms932Encoder.encode("\uC31C")}).to.throw(Error, "EncodingError U+C31C");
expect(() => {ms932Encoder.encode("\uC31D")}).to.throw(Error, "EncodingError U+C31D");
expect(() => {ms932Encoder.encode("\uC31E")}).to.throw(Error, "EncodingError U+C31E");
expect(() => {ms932Encoder.encode("\uC31F")}).to.throw(Error, "EncodingError U+C31F");
expect(() => {ms932Encoder.encode("\uC320")}).to.throw(Error, "EncodingError U+C320");
expect(() => {ms932Encoder.encode("\uC321")}).to.throw(Error, "EncodingError U+C321");
expect(() => {ms932Encoder.encode("\uC322")}).to.throw(Error, "EncodingError U+C322");
expect(() => {ms932Encoder.encode("\uC323")}).to.throw(Error, "EncodingError U+C323");
expect(() => {ms932Encoder.encode("\uC324")}).to.throw(Error, "EncodingError U+C324");
expect(() => {ms932Encoder.encode("\uC325")}).to.throw(Error, "EncodingError U+C325");
expect(() => {ms932Encoder.encode("\uC326")}).to.throw(Error, "EncodingError U+C326");
expect(() => {ms932Encoder.encode("\uC327")}).to.throw(Error, "EncodingError U+C327");
expect(() => {ms932Encoder.encode("\uC328")}).to.throw(Error, "EncodingError U+C328");
expect(() => {ms932Encoder.encode("\uC329")}).to.throw(Error, "EncodingError U+C329");
expect(() => {ms932Encoder.encode("\uC32A")}).to.throw(Error, "EncodingError U+C32A");
expect(() => {ms932Encoder.encode("\uC32B")}).to.throw(Error, "EncodingError U+C32B");
expect(() => {ms932Encoder.encode("\uC32C")}).to.throw(Error, "EncodingError U+C32C");
expect(() => {ms932Encoder.encode("\uC32D")}).to.throw(Error, "EncodingError U+C32D");
expect(() => {ms932Encoder.encode("\uC32E")}).to.throw(Error, "EncodingError U+C32E");
expect(() => {ms932Encoder.encode("\uC32F")}).to.throw(Error, "EncodingError U+C32F");
expect(() => {ms932Encoder.encode("\uC330")}).to.throw(Error, "EncodingError U+C330");
expect(() => {ms932Encoder.encode("\uC331")}).to.throw(Error, "EncodingError U+C331");
expect(() => {ms932Encoder.encode("\uC332")}).to.throw(Error, "EncodingError U+C332");
expect(() => {ms932Encoder.encode("\uC333")}).to.throw(Error, "EncodingError U+C333");
expect(() => {ms932Encoder.encode("\uC334")}).to.throw(Error, "EncodingError U+C334");
expect(() => {ms932Encoder.encode("\uC335")}).to.throw(Error, "EncodingError U+C335");
expect(() => {ms932Encoder.encode("\uC336")}).to.throw(Error, "EncodingError U+C336");
expect(() => {ms932Encoder.encode("\uC337")}).to.throw(Error, "EncodingError U+C337");
expect(() => {ms932Encoder.encode("\uC338")}).to.throw(Error, "EncodingError U+C338");
expect(() => {ms932Encoder.encode("\uC339")}).to.throw(Error, "EncodingError U+C339");
expect(() => {ms932Encoder.encode("\uC33A")}).to.throw(Error, "EncodingError U+C33A");
expect(() => {ms932Encoder.encode("\uC33B")}).to.throw(Error, "EncodingError U+C33B");
expect(() => {ms932Encoder.encode("\uC33C")}).to.throw(Error, "EncodingError U+C33C");
expect(() => {ms932Encoder.encode("\uC33D")}).to.throw(Error, "EncodingError U+C33D");
expect(() => {ms932Encoder.encode("\uC33E")}).to.throw(Error, "EncodingError U+C33E");
expect(() => {ms932Encoder.encode("\uC33F")}).to.throw(Error, "EncodingError U+C33F");
expect(() => {ms932Encoder.encode("\uC340")}).to.throw(Error, "EncodingError U+C340");
expect(() => {ms932Encoder.encode("\uC341")}).to.throw(Error, "EncodingError U+C341");
expect(() => {ms932Encoder.encode("\uC342")}).to.throw(Error, "EncodingError U+C342");
expect(() => {ms932Encoder.encode("\uC343")}).to.throw(Error, "EncodingError U+C343");
expect(() => {ms932Encoder.encode("\uC344")}).to.throw(Error, "EncodingError U+C344");
expect(() => {ms932Encoder.encode("\uC345")}).to.throw(Error, "EncodingError U+C345");
expect(() => {ms932Encoder.encode("\uC346")}).to.throw(Error, "EncodingError U+C346");
expect(() => {ms932Encoder.encode("\uC347")}).to.throw(Error, "EncodingError U+C347");
expect(() => {ms932Encoder.encode("\uC348")}).to.throw(Error, "EncodingError U+C348");
expect(() => {ms932Encoder.encode("\uC349")}).to.throw(Error, "EncodingError U+C349");
expect(() => {ms932Encoder.encode("\uC34A")}).to.throw(Error, "EncodingError U+C34A");
expect(() => {ms932Encoder.encode("\uC34B")}).to.throw(Error, "EncodingError U+C34B");
expect(() => {ms932Encoder.encode("\uC34C")}).to.throw(Error, "EncodingError U+C34C");
expect(() => {ms932Encoder.encode("\uC34D")}).to.throw(Error, "EncodingError U+C34D");
expect(() => {ms932Encoder.encode("\uC34E")}).to.throw(Error, "EncodingError U+C34E");
expect(() => {ms932Encoder.encode("\uC34F")}).to.throw(Error, "EncodingError U+C34F");
expect(() => {ms932Encoder.encode("\uC350")}).to.throw(Error, "EncodingError U+C350");
expect(() => {ms932Encoder.encode("\uC351")}).to.throw(Error, "EncodingError U+C351");
expect(() => {ms932Encoder.encode("\uC352")}).to.throw(Error, "EncodingError U+C352");
expect(() => {ms932Encoder.encode("\uC353")}).to.throw(Error, "EncodingError U+C353");
expect(() => {ms932Encoder.encode("\uC354")}).to.throw(Error, "EncodingError U+C354");
expect(() => {ms932Encoder.encode("\uC355")}).to.throw(Error, "EncodingError U+C355");
expect(() => {ms932Encoder.encode("\uC356")}).to.throw(Error, "EncodingError U+C356");
expect(() => {ms932Encoder.encode("\uC357")}).to.throw(Error, "EncodingError U+C357");
expect(() => {ms932Encoder.encode("\uC358")}).to.throw(Error, "EncodingError U+C358");
expect(() => {ms932Encoder.encode("\uC359")}).to.throw(Error, "EncodingError U+C359");
expect(() => {ms932Encoder.encode("\uC35A")}).to.throw(Error, "EncodingError U+C35A");
expect(() => {ms932Encoder.encode("\uC35B")}).to.throw(Error, "EncodingError U+C35B");
expect(() => {ms932Encoder.encode("\uC35C")}).to.throw(Error, "EncodingError U+C35C");
expect(() => {ms932Encoder.encode("\uC35D")}).to.throw(Error, "EncodingError U+C35D");
expect(() => {ms932Encoder.encode("\uC35E")}).to.throw(Error, "EncodingError U+C35E");
expect(() => {ms932Encoder.encode("\uC35F")}).to.throw(Error, "EncodingError U+C35F");
expect(() => {ms932Encoder.encode("\uC360")}).to.throw(Error, "EncodingError U+C360");
expect(() => {ms932Encoder.encode("\uC361")}).to.throw(Error, "EncodingError U+C361");
expect(() => {ms932Encoder.encode("\uC362")}).to.throw(Error, "EncodingError U+C362");
expect(() => {ms932Encoder.encode("\uC363")}).to.throw(Error, "EncodingError U+C363");
expect(() => {ms932Encoder.encode("\uC364")}).to.throw(Error, "EncodingError U+C364");
expect(() => {ms932Encoder.encode("\uC365")}).to.throw(Error, "EncodingError U+C365");
expect(() => {ms932Encoder.encode("\uC366")}).to.throw(Error, "EncodingError U+C366");
expect(() => {ms932Encoder.encode("\uC367")}).to.throw(Error, "EncodingError U+C367");
expect(() => {ms932Encoder.encode("\uC368")}).to.throw(Error, "EncodingError U+C368");
expect(() => {ms932Encoder.encode("\uC369")}).to.throw(Error, "EncodingError U+C369");
expect(() => {ms932Encoder.encode("\uC36A")}).to.throw(Error, "EncodingError U+C36A");
expect(() => {ms932Encoder.encode("\uC36B")}).to.throw(Error, "EncodingError U+C36B");
expect(() => {ms932Encoder.encode("\uC36C")}).to.throw(Error, "EncodingError U+C36C");
expect(() => {ms932Encoder.encode("\uC36D")}).to.throw(Error, "EncodingError U+C36D");
expect(() => {ms932Encoder.encode("\uC36E")}).to.throw(Error, "EncodingError U+C36E");
expect(() => {ms932Encoder.encode("\uC36F")}).to.throw(Error, "EncodingError U+C36F");
expect(() => {ms932Encoder.encode("\uC370")}).to.throw(Error, "EncodingError U+C370");
expect(() => {ms932Encoder.encode("\uC371")}).to.throw(Error, "EncodingError U+C371");
expect(() => {ms932Encoder.encode("\uC372")}).to.throw(Error, "EncodingError U+C372");
expect(() => {ms932Encoder.encode("\uC373")}).to.throw(Error, "EncodingError U+C373");
expect(() => {ms932Encoder.encode("\uC374")}).to.throw(Error, "EncodingError U+C374");
expect(() => {ms932Encoder.encode("\uC375")}).to.throw(Error, "EncodingError U+C375");
expect(() => {ms932Encoder.encode("\uC376")}).to.throw(Error, "EncodingError U+C376");
expect(() => {ms932Encoder.encode("\uC377")}).to.throw(Error, "EncodingError U+C377");
expect(() => {ms932Encoder.encode("\uC378")}).to.throw(Error, "EncodingError U+C378");
expect(() => {ms932Encoder.encode("\uC379")}).to.throw(Error, "EncodingError U+C379");
expect(() => {ms932Encoder.encode("\uC37A")}).to.throw(Error, "EncodingError U+C37A");
expect(() => {ms932Encoder.encode("\uC37B")}).to.throw(Error, "EncodingError U+C37B");
expect(() => {ms932Encoder.encode("\uC37C")}).to.throw(Error, "EncodingError U+C37C");
expect(() => {ms932Encoder.encode("\uC37D")}).to.throw(Error, "EncodingError U+C37D");
expect(() => {ms932Encoder.encode("\uC37E")}).to.throw(Error, "EncodingError U+C37E");
expect(() => {ms932Encoder.encode("\uC37F")}).to.throw(Error, "EncodingError U+C37F");
expect(() => {ms932Encoder.encode("\uC380")}).to.throw(Error, "EncodingError U+C380");
expect(() => {ms932Encoder.encode("\uC381")}).to.throw(Error, "EncodingError U+C381");
expect(() => {ms932Encoder.encode("\uC382")}).to.throw(Error, "EncodingError U+C382");
expect(() => {ms932Encoder.encode("\uC383")}).to.throw(Error, "EncodingError U+C383");
expect(() => {ms932Encoder.encode("\uC384")}).to.throw(Error, "EncodingError U+C384");
expect(() => {ms932Encoder.encode("\uC385")}).to.throw(Error, "EncodingError U+C385");
expect(() => {ms932Encoder.encode("\uC386")}).to.throw(Error, "EncodingError U+C386");
expect(() => {ms932Encoder.encode("\uC387")}).to.throw(Error, "EncodingError U+C387");
expect(() => {ms932Encoder.encode("\uC388")}).to.throw(Error, "EncodingError U+C388");
expect(() => {ms932Encoder.encode("\uC389")}).to.throw(Error, "EncodingError U+C389");
expect(() => {ms932Encoder.encode("\uC38A")}).to.throw(Error, "EncodingError U+C38A");
expect(() => {ms932Encoder.encode("\uC38B")}).to.throw(Error, "EncodingError U+C38B");
expect(() => {ms932Encoder.encode("\uC38C")}).to.throw(Error, "EncodingError U+C38C");
expect(() => {ms932Encoder.encode("\uC38D")}).to.throw(Error, "EncodingError U+C38D");
expect(() => {ms932Encoder.encode("\uC38E")}).to.throw(Error, "EncodingError U+C38E");
expect(() => {ms932Encoder.encode("\uC38F")}).to.throw(Error, "EncodingError U+C38F");
expect(() => {ms932Encoder.encode("\uC390")}).to.throw(Error, "EncodingError U+C390");
expect(() => {ms932Encoder.encode("\uC391")}).to.throw(Error, "EncodingError U+C391");
expect(() => {ms932Encoder.encode("\uC392")}).to.throw(Error, "EncodingError U+C392");
expect(() => {ms932Encoder.encode("\uC393")}).to.throw(Error, "EncodingError U+C393");
expect(() => {ms932Encoder.encode("\uC394")}).to.throw(Error, "EncodingError U+C394");
expect(() => {ms932Encoder.encode("\uC395")}).to.throw(Error, "EncodingError U+C395");
expect(() => {ms932Encoder.encode("\uC396")}).to.throw(Error, "EncodingError U+C396");
expect(() => {ms932Encoder.encode("\uC397")}).to.throw(Error, "EncodingError U+C397");
expect(() => {ms932Encoder.encode("\uC398")}).to.throw(Error, "EncodingError U+C398");
expect(() => {ms932Encoder.encode("\uC399")}).to.throw(Error, "EncodingError U+C399");
expect(() => {ms932Encoder.encode("\uC39A")}).to.throw(Error, "EncodingError U+C39A");
expect(() => {ms932Encoder.encode("\uC39B")}).to.throw(Error, "EncodingError U+C39B");
expect(() => {ms932Encoder.encode("\uC39C")}).to.throw(Error, "EncodingError U+C39C");
expect(() => {ms932Encoder.encode("\uC39D")}).to.throw(Error, "EncodingError U+C39D");
expect(() => {ms932Encoder.encode("\uC39E")}).to.throw(Error, "EncodingError U+C39E");
expect(() => {ms932Encoder.encode("\uC39F")}).to.throw(Error, "EncodingError U+C39F");
expect(() => {ms932Encoder.encode("\uC3A0")}).to.throw(Error, "EncodingError U+C3A0");
expect(() => {ms932Encoder.encode("\uC3A1")}).to.throw(Error, "EncodingError U+C3A1");
expect(() => {ms932Encoder.encode("\uC3A2")}).to.throw(Error, "EncodingError U+C3A2");
expect(() => {ms932Encoder.encode("\uC3A3")}).to.throw(Error, "EncodingError U+C3A3");
expect(() => {ms932Encoder.encode("\uC3A4")}).to.throw(Error, "EncodingError U+C3A4");
expect(() => {ms932Encoder.encode("\uC3A5")}).to.throw(Error, "EncodingError U+C3A5");
expect(() => {ms932Encoder.encode("\uC3A6")}).to.throw(Error, "EncodingError U+C3A6");
expect(() => {ms932Encoder.encode("\uC3A7")}).to.throw(Error, "EncodingError U+C3A7");
expect(() => {ms932Encoder.encode("\uC3A8")}).to.throw(Error, "EncodingError U+C3A8");
expect(() => {ms932Encoder.encode("\uC3A9")}).to.throw(Error, "EncodingError U+C3A9");
expect(() => {ms932Encoder.encode("\uC3AA")}).to.throw(Error, "EncodingError U+C3AA");
expect(() => {ms932Encoder.encode("\uC3AB")}).to.throw(Error, "EncodingError U+C3AB");
expect(() => {ms932Encoder.encode("\uC3AC")}).to.throw(Error, "EncodingError U+C3AC");
expect(() => {ms932Encoder.encode("\uC3AD")}).to.throw(Error, "EncodingError U+C3AD");
expect(() => {ms932Encoder.encode("\uC3AE")}).to.throw(Error, "EncodingError U+C3AE");
expect(() => {ms932Encoder.encode("\uC3AF")}).to.throw(Error, "EncodingError U+C3AF");
expect(() => {ms932Encoder.encode("\uC3B0")}).to.throw(Error, "EncodingError U+C3B0");
expect(() => {ms932Encoder.encode("\uC3B1")}).to.throw(Error, "EncodingError U+C3B1");
expect(() => {ms932Encoder.encode("\uC3B2")}).to.throw(Error, "EncodingError U+C3B2");
expect(() => {ms932Encoder.encode("\uC3B3")}).to.throw(Error, "EncodingError U+C3B3");
expect(() => {ms932Encoder.encode("\uC3B4")}).to.throw(Error, "EncodingError U+C3B4");
expect(() => {ms932Encoder.encode("\uC3B5")}).to.throw(Error, "EncodingError U+C3B5");
expect(() => {ms932Encoder.encode("\uC3B6")}).to.throw(Error, "EncodingError U+C3B6");
expect(() => {ms932Encoder.encode("\uC3B7")}).to.throw(Error, "EncodingError U+C3B7");
expect(() => {ms932Encoder.encode("\uC3B8")}).to.throw(Error, "EncodingError U+C3B8");
expect(() => {ms932Encoder.encode("\uC3B9")}).to.throw(Error, "EncodingError U+C3B9");
expect(() => {ms932Encoder.encode("\uC3BA")}).to.throw(Error, "EncodingError U+C3BA");
expect(() => {ms932Encoder.encode("\uC3BB")}).to.throw(Error, "EncodingError U+C3BB");
expect(() => {ms932Encoder.encode("\uC3BC")}).to.throw(Error, "EncodingError U+C3BC");
expect(() => {ms932Encoder.encode("\uC3BD")}).to.throw(Error, "EncodingError U+C3BD");
expect(() => {ms932Encoder.encode("\uC3BE")}).to.throw(Error, "EncodingError U+C3BE");
expect(() => {ms932Encoder.encode("\uC3BF")}).to.throw(Error, "EncodingError U+C3BF");
expect(() => {ms932Encoder.encode("\uC3C0")}).to.throw(Error, "EncodingError U+C3C0");
expect(() => {ms932Encoder.encode("\uC3C1")}).to.throw(Error, "EncodingError U+C3C1");
expect(() => {ms932Encoder.encode("\uC3C2")}).to.throw(Error, "EncodingError U+C3C2");
expect(() => {ms932Encoder.encode("\uC3C3")}).to.throw(Error, "EncodingError U+C3C3");
expect(() => {ms932Encoder.encode("\uC3C4")}).to.throw(Error, "EncodingError U+C3C4");
expect(() => {ms932Encoder.encode("\uC3C5")}).to.throw(Error, "EncodingError U+C3C5");
expect(() => {ms932Encoder.encode("\uC3C6")}).to.throw(Error, "EncodingError U+C3C6");
expect(() => {ms932Encoder.encode("\uC3C7")}).to.throw(Error, "EncodingError U+C3C7");
expect(() => {ms932Encoder.encode("\uC3C8")}).to.throw(Error, "EncodingError U+C3C8");
expect(() => {ms932Encoder.encode("\uC3C9")}).to.throw(Error, "EncodingError U+C3C9");
expect(() => {ms932Encoder.encode("\uC3CA")}).to.throw(Error, "EncodingError U+C3CA");
expect(() => {ms932Encoder.encode("\uC3CB")}).to.throw(Error, "EncodingError U+C3CB");
expect(() => {ms932Encoder.encode("\uC3CC")}).to.throw(Error, "EncodingError U+C3CC");
expect(() => {ms932Encoder.encode("\uC3CD")}).to.throw(Error, "EncodingError U+C3CD");
expect(() => {ms932Encoder.encode("\uC3CE")}).to.throw(Error, "EncodingError U+C3CE");
expect(() => {ms932Encoder.encode("\uC3CF")}).to.throw(Error, "EncodingError U+C3CF");
expect(() => {ms932Encoder.encode("\uC3D0")}).to.throw(Error, "EncodingError U+C3D0");
expect(() => {ms932Encoder.encode("\uC3D1")}).to.throw(Error, "EncodingError U+C3D1");
expect(() => {ms932Encoder.encode("\uC3D2")}).to.throw(Error, "EncodingError U+C3D2");
expect(() => {ms932Encoder.encode("\uC3D3")}).to.throw(Error, "EncodingError U+C3D3");
expect(() => {ms932Encoder.encode("\uC3D4")}).to.throw(Error, "EncodingError U+C3D4");
expect(() => {ms932Encoder.encode("\uC3D5")}).to.throw(Error, "EncodingError U+C3D5");
expect(() => {ms932Encoder.encode("\uC3D6")}).to.throw(Error, "EncodingError U+C3D6");
expect(() => {ms932Encoder.encode("\uC3D7")}).to.throw(Error, "EncodingError U+C3D7");
expect(() => {ms932Encoder.encode("\uC3D8")}).to.throw(Error, "EncodingError U+C3D8");
expect(() => {ms932Encoder.encode("\uC3D9")}).to.throw(Error, "EncodingError U+C3D9");
expect(() => {ms932Encoder.encode("\uC3DA")}).to.throw(Error, "EncodingError U+C3DA");
expect(() => {ms932Encoder.encode("\uC3DB")}).to.throw(Error, "EncodingError U+C3DB");
expect(() => {ms932Encoder.encode("\uC3DC")}).to.throw(Error, "EncodingError U+C3DC");
expect(() => {ms932Encoder.encode("\uC3DD")}).to.throw(Error, "EncodingError U+C3DD");
expect(() => {ms932Encoder.encode("\uC3DE")}).to.throw(Error, "EncodingError U+C3DE");
expect(() => {ms932Encoder.encode("\uC3DF")}).to.throw(Error, "EncodingError U+C3DF");
expect(() => {ms932Encoder.encode("\uC3E0")}).to.throw(Error, "EncodingError U+C3E0");
expect(() => {ms932Encoder.encode("\uC3E1")}).to.throw(Error, "EncodingError U+C3E1");
expect(() => {ms932Encoder.encode("\uC3E2")}).to.throw(Error, "EncodingError U+C3E2");
expect(() => {ms932Encoder.encode("\uC3E3")}).to.throw(Error, "EncodingError U+C3E3");
expect(() => {ms932Encoder.encode("\uC3E4")}).to.throw(Error, "EncodingError U+C3E4");
expect(() => {ms932Encoder.encode("\uC3E5")}).to.throw(Error, "EncodingError U+C3E5");
expect(() => {ms932Encoder.encode("\uC3E6")}).to.throw(Error, "EncodingError U+C3E6");
expect(() => {ms932Encoder.encode("\uC3E7")}).to.throw(Error, "EncodingError U+C3E7");
expect(() => {ms932Encoder.encode("\uC3E8")}).to.throw(Error, "EncodingError U+C3E8");
expect(() => {ms932Encoder.encode("\uC3E9")}).to.throw(Error, "EncodingError U+C3E9");
expect(() => {ms932Encoder.encode("\uC3EA")}).to.throw(Error, "EncodingError U+C3EA");
expect(() => {ms932Encoder.encode("\uC3EB")}).to.throw(Error, "EncodingError U+C3EB");
expect(() => {ms932Encoder.encode("\uC3EC")}).to.throw(Error, "EncodingError U+C3EC");
expect(() => {ms932Encoder.encode("\uC3ED")}).to.throw(Error, "EncodingError U+C3ED");
expect(() => {ms932Encoder.encode("\uC3EE")}).to.throw(Error, "EncodingError U+C3EE");
expect(() => {ms932Encoder.encode("\uC3EF")}).to.throw(Error, "EncodingError U+C3EF");
expect(() => {ms932Encoder.encode("\uC3F0")}).to.throw(Error, "EncodingError U+C3F0");
expect(() => {ms932Encoder.encode("\uC3F1")}).to.throw(Error, "EncodingError U+C3F1");
expect(() => {ms932Encoder.encode("\uC3F2")}).to.throw(Error, "EncodingError U+C3F2");
expect(() => {ms932Encoder.encode("\uC3F3")}).to.throw(Error, "EncodingError U+C3F3");
expect(() => {ms932Encoder.encode("\uC3F4")}).to.throw(Error, "EncodingError U+C3F4");
expect(() => {ms932Encoder.encode("\uC3F5")}).to.throw(Error, "EncodingError U+C3F5");
expect(() => {ms932Encoder.encode("\uC3F6")}).to.throw(Error, "EncodingError U+C3F6");
expect(() => {ms932Encoder.encode("\uC3F7")}).to.throw(Error, "EncodingError U+C3F7");
expect(() => {ms932Encoder.encode("\uC3F8")}).to.throw(Error, "EncodingError U+C3F8");
expect(() => {ms932Encoder.encode("\uC3F9")}).to.throw(Error, "EncodingError U+C3F9");
expect(() => {ms932Encoder.encode("\uC3FA")}).to.throw(Error, "EncodingError U+C3FA");
expect(() => {ms932Encoder.encode("\uC3FB")}).to.throw(Error, "EncodingError U+C3FB");
expect(() => {ms932Encoder.encode("\uC3FC")}).to.throw(Error, "EncodingError U+C3FC");
expect(() => {ms932Encoder.encode("\uC3FD")}).to.throw(Error, "EncodingError U+C3FD");
expect(() => {ms932Encoder.encode("\uC3FE")}).to.throw(Error, "EncodingError U+C3FE");
expect(() => {ms932Encoder.encode("\uC3FF")}).to.throw(Error, "EncodingError U+C3FF");
expect(() => {ms932Encoder.encode("\uC400")}).to.throw(Error, "EncodingError U+C400");
expect(() => {ms932Encoder.encode("\uC401")}).to.throw(Error, "EncodingError U+C401");
expect(() => {ms932Encoder.encode("\uC402")}).to.throw(Error, "EncodingError U+C402");
expect(() => {ms932Encoder.encode("\uC403")}).to.throw(Error, "EncodingError U+C403");
expect(() => {ms932Encoder.encode("\uC404")}).to.throw(Error, "EncodingError U+C404");
expect(() => {ms932Encoder.encode("\uC405")}).to.throw(Error, "EncodingError U+C405");
expect(() => {ms932Encoder.encode("\uC406")}).to.throw(Error, "EncodingError U+C406");
expect(() => {ms932Encoder.encode("\uC407")}).to.throw(Error, "EncodingError U+C407");
expect(() => {ms932Encoder.encode("\uC408")}).to.throw(Error, "EncodingError U+C408");
expect(() => {ms932Encoder.encode("\uC409")}).to.throw(Error, "EncodingError U+C409");
expect(() => {ms932Encoder.encode("\uC40A")}).to.throw(Error, "EncodingError U+C40A");
expect(() => {ms932Encoder.encode("\uC40B")}).to.throw(Error, "EncodingError U+C40B");
expect(() => {ms932Encoder.encode("\uC40C")}).to.throw(Error, "EncodingError U+C40C");
expect(() => {ms932Encoder.encode("\uC40D")}).to.throw(Error, "EncodingError U+C40D");
expect(() => {ms932Encoder.encode("\uC40E")}).to.throw(Error, "EncodingError U+C40E");
expect(() => {ms932Encoder.encode("\uC40F")}).to.throw(Error, "EncodingError U+C40F");
expect(() => {ms932Encoder.encode("\uC410")}).to.throw(Error, "EncodingError U+C410");
expect(() => {ms932Encoder.encode("\uC411")}).to.throw(Error, "EncodingError U+C411");
expect(() => {ms932Encoder.encode("\uC412")}).to.throw(Error, "EncodingError U+C412");
expect(() => {ms932Encoder.encode("\uC413")}).to.throw(Error, "EncodingError U+C413");
expect(() => {ms932Encoder.encode("\uC414")}).to.throw(Error, "EncodingError U+C414");
expect(() => {ms932Encoder.encode("\uC415")}).to.throw(Error, "EncodingError U+C415");
expect(() => {ms932Encoder.encode("\uC416")}).to.throw(Error, "EncodingError U+C416");
expect(() => {ms932Encoder.encode("\uC417")}).to.throw(Error, "EncodingError U+C417");
expect(() => {ms932Encoder.encode("\uC418")}).to.throw(Error, "EncodingError U+C418");
expect(() => {ms932Encoder.encode("\uC419")}).to.throw(Error, "EncodingError U+C419");
expect(() => {ms932Encoder.encode("\uC41A")}).to.throw(Error, "EncodingError U+C41A");
expect(() => {ms932Encoder.encode("\uC41B")}).to.throw(Error, "EncodingError U+C41B");
expect(() => {ms932Encoder.encode("\uC41C")}).to.throw(Error, "EncodingError U+C41C");
expect(() => {ms932Encoder.encode("\uC41D")}).to.throw(Error, "EncodingError U+C41D");
expect(() => {ms932Encoder.encode("\uC41E")}).to.throw(Error, "EncodingError U+C41E");
expect(() => {ms932Encoder.encode("\uC41F")}).to.throw(Error, "EncodingError U+C41F");
expect(() => {ms932Encoder.encode("\uC420")}).to.throw(Error, "EncodingError U+C420");
expect(() => {ms932Encoder.encode("\uC421")}).to.throw(Error, "EncodingError U+C421");
expect(() => {ms932Encoder.encode("\uC422")}).to.throw(Error, "EncodingError U+C422");
expect(() => {ms932Encoder.encode("\uC423")}).to.throw(Error, "EncodingError U+C423");
expect(() => {ms932Encoder.encode("\uC424")}).to.throw(Error, "EncodingError U+C424");
expect(() => {ms932Encoder.encode("\uC425")}).to.throw(Error, "EncodingError U+C425");
expect(() => {ms932Encoder.encode("\uC426")}).to.throw(Error, "EncodingError U+C426");
expect(() => {ms932Encoder.encode("\uC427")}).to.throw(Error, "EncodingError U+C427");
expect(() => {ms932Encoder.encode("\uC428")}).to.throw(Error, "EncodingError U+C428");
expect(() => {ms932Encoder.encode("\uC429")}).to.throw(Error, "EncodingError U+C429");
expect(() => {ms932Encoder.encode("\uC42A")}).to.throw(Error, "EncodingError U+C42A");
expect(() => {ms932Encoder.encode("\uC42B")}).to.throw(Error, "EncodingError U+C42B");
expect(() => {ms932Encoder.encode("\uC42C")}).to.throw(Error, "EncodingError U+C42C");
expect(() => {ms932Encoder.encode("\uC42D")}).to.throw(Error, "EncodingError U+C42D");
expect(() => {ms932Encoder.encode("\uC42E")}).to.throw(Error, "EncodingError U+C42E");
expect(() => {ms932Encoder.encode("\uC42F")}).to.throw(Error, "EncodingError U+C42F");
expect(() => {ms932Encoder.encode("\uC430")}).to.throw(Error, "EncodingError U+C430");
expect(() => {ms932Encoder.encode("\uC431")}).to.throw(Error, "EncodingError U+C431");
expect(() => {ms932Encoder.encode("\uC432")}).to.throw(Error, "EncodingError U+C432");
expect(() => {ms932Encoder.encode("\uC433")}).to.throw(Error, "EncodingError U+C433");
expect(() => {ms932Encoder.encode("\uC434")}).to.throw(Error, "EncodingError U+C434");
expect(() => {ms932Encoder.encode("\uC435")}).to.throw(Error, "EncodingError U+C435");
expect(() => {ms932Encoder.encode("\uC436")}).to.throw(Error, "EncodingError U+C436");
expect(() => {ms932Encoder.encode("\uC437")}).to.throw(Error, "EncodingError U+C437");
expect(() => {ms932Encoder.encode("\uC438")}).to.throw(Error, "EncodingError U+C438");
expect(() => {ms932Encoder.encode("\uC439")}).to.throw(Error, "EncodingError U+C439");
expect(() => {ms932Encoder.encode("\uC43A")}).to.throw(Error, "EncodingError U+C43A");
expect(() => {ms932Encoder.encode("\uC43B")}).to.throw(Error, "EncodingError U+C43B");
expect(() => {ms932Encoder.encode("\uC43C")}).to.throw(Error, "EncodingError U+C43C");
expect(() => {ms932Encoder.encode("\uC43D")}).to.throw(Error, "EncodingError U+C43D");
expect(() => {ms932Encoder.encode("\uC43E")}).to.throw(Error, "EncodingError U+C43E");
expect(() => {ms932Encoder.encode("\uC43F")}).to.throw(Error, "EncodingError U+C43F");
expect(() => {ms932Encoder.encode("\uC440")}).to.throw(Error, "EncodingError U+C440");
expect(() => {ms932Encoder.encode("\uC441")}).to.throw(Error, "EncodingError U+C441");
expect(() => {ms932Encoder.encode("\uC442")}).to.throw(Error, "EncodingError U+C442");
expect(() => {ms932Encoder.encode("\uC443")}).to.throw(Error, "EncodingError U+C443");
expect(() => {ms932Encoder.encode("\uC444")}).to.throw(Error, "EncodingError U+C444");
expect(() => {ms932Encoder.encode("\uC445")}).to.throw(Error, "EncodingError U+C445");
expect(() => {ms932Encoder.encode("\uC446")}).to.throw(Error, "EncodingError U+C446");
expect(() => {ms932Encoder.encode("\uC447")}).to.throw(Error, "EncodingError U+C447");
expect(() => {ms932Encoder.encode("\uC448")}).to.throw(Error, "EncodingError U+C448");
expect(() => {ms932Encoder.encode("\uC449")}).to.throw(Error, "EncodingError U+C449");
expect(() => {ms932Encoder.encode("\uC44A")}).to.throw(Error, "EncodingError U+C44A");
expect(() => {ms932Encoder.encode("\uC44B")}).to.throw(Error, "EncodingError U+C44B");
expect(() => {ms932Encoder.encode("\uC44C")}).to.throw(Error, "EncodingError U+C44C");
expect(() => {ms932Encoder.encode("\uC44D")}).to.throw(Error, "EncodingError U+C44D");
expect(() => {ms932Encoder.encode("\uC44E")}).to.throw(Error, "EncodingError U+C44E");
expect(() => {ms932Encoder.encode("\uC44F")}).to.throw(Error, "EncodingError U+C44F");
expect(() => {ms932Encoder.encode("\uC450")}).to.throw(Error, "EncodingError U+C450");
expect(() => {ms932Encoder.encode("\uC451")}).to.throw(Error, "EncodingError U+C451");
expect(() => {ms932Encoder.encode("\uC452")}).to.throw(Error, "EncodingError U+C452");
expect(() => {ms932Encoder.encode("\uC453")}).to.throw(Error, "EncodingError U+C453");
expect(() => {ms932Encoder.encode("\uC454")}).to.throw(Error, "EncodingError U+C454");
expect(() => {ms932Encoder.encode("\uC455")}).to.throw(Error, "EncodingError U+C455");
expect(() => {ms932Encoder.encode("\uC456")}).to.throw(Error, "EncodingError U+C456");
expect(() => {ms932Encoder.encode("\uC457")}).to.throw(Error, "EncodingError U+C457");
expect(() => {ms932Encoder.encode("\uC458")}).to.throw(Error, "EncodingError U+C458");
expect(() => {ms932Encoder.encode("\uC459")}).to.throw(Error, "EncodingError U+C459");
expect(() => {ms932Encoder.encode("\uC45A")}).to.throw(Error, "EncodingError U+C45A");
expect(() => {ms932Encoder.encode("\uC45B")}).to.throw(Error, "EncodingError U+C45B");
expect(() => {ms932Encoder.encode("\uC45C")}).to.throw(Error, "EncodingError U+C45C");
expect(() => {ms932Encoder.encode("\uC45D")}).to.throw(Error, "EncodingError U+C45D");
expect(() => {ms932Encoder.encode("\uC45E")}).to.throw(Error, "EncodingError U+C45E");
expect(() => {ms932Encoder.encode("\uC45F")}).to.throw(Error, "EncodingError U+C45F");
expect(() => {ms932Encoder.encode("\uC460")}).to.throw(Error, "EncodingError U+C460");
expect(() => {ms932Encoder.encode("\uC461")}).to.throw(Error, "EncodingError U+C461");
expect(() => {ms932Encoder.encode("\uC462")}).to.throw(Error, "EncodingError U+C462");
expect(() => {ms932Encoder.encode("\uC463")}).to.throw(Error, "EncodingError U+C463");
expect(() => {ms932Encoder.encode("\uC464")}).to.throw(Error, "EncodingError U+C464");
expect(() => {ms932Encoder.encode("\uC465")}).to.throw(Error, "EncodingError U+C465");
expect(() => {ms932Encoder.encode("\uC466")}).to.throw(Error, "EncodingError U+C466");
expect(() => {ms932Encoder.encode("\uC467")}).to.throw(Error, "EncodingError U+C467");
expect(() => {ms932Encoder.encode("\uC468")}).to.throw(Error, "EncodingError U+C468");
expect(() => {ms932Encoder.encode("\uC469")}).to.throw(Error, "EncodingError U+C469");
expect(() => {ms932Encoder.encode("\uC46A")}).to.throw(Error, "EncodingError U+C46A");
expect(() => {ms932Encoder.encode("\uC46B")}).to.throw(Error, "EncodingError U+C46B");
expect(() => {ms932Encoder.encode("\uC46C")}).to.throw(Error, "EncodingError U+C46C");
expect(() => {ms932Encoder.encode("\uC46D")}).to.throw(Error, "EncodingError U+C46D");
expect(() => {ms932Encoder.encode("\uC46E")}).to.throw(Error, "EncodingError U+C46E");
expect(() => {ms932Encoder.encode("\uC46F")}).to.throw(Error, "EncodingError U+C46F");
expect(() => {ms932Encoder.encode("\uC470")}).to.throw(Error, "EncodingError U+C470");
expect(() => {ms932Encoder.encode("\uC471")}).to.throw(Error, "EncodingError U+C471");
expect(() => {ms932Encoder.encode("\uC472")}).to.throw(Error, "EncodingError U+C472");
expect(() => {ms932Encoder.encode("\uC473")}).to.throw(Error, "EncodingError U+C473");
expect(() => {ms932Encoder.encode("\uC474")}).to.throw(Error, "EncodingError U+C474");
expect(() => {ms932Encoder.encode("\uC475")}).to.throw(Error, "EncodingError U+C475");
expect(() => {ms932Encoder.encode("\uC476")}).to.throw(Error, "EncodingError U+C476");
expect(() => {ms932Encoder.encode("\uC477")}).to.throw(Error, "EncodingError U+C477");
expect(() => {ms932Encoder.encode("\uC478")}).to.throw(Error, "EncodingError U+C478");
expect(() => {ms932Encoder.encode("\uC479")}).to.throw(Error, "EncodingError U+C479");
expect(() => {ms932Encoder.encode("\uC47A")}).to.throw(Error, "EncodingError U+C47A");
expect(() => {ms932Encoder.encode("\uC47B")}).to.throw(Error, "EncodingError U+C47B");
expect(() => {ms932Encoder.encode("\uC47C")}).to.throw(Error, "EncodingError U+C47C");
expect(() => {ms932Encoder.encode("\uC47D")}).to.throw(Error, "EncodingError U+C47D");
expect(() => {ms932Encoder.encode("\uC47E")}).to.throw(Error, "EncodingError U+C47E");
expect(() => {ms932Encoder.encode("\uC47F")}).to.throw(Error, "EncodingError U+C47F");
expect(() => {ms932Encoder.encode("\uC480")}).to.throw(Error, "EncodingError U+C480");
expect(() => {ms932Encoder.encode("\uC481")}).to.throw(Error, "EncodingError U+C481");
expect(() => {ms932Encoder.encode("\uC482")}).to.throw(Error, "EncodingError U+C482");
expect(() => {ms932Encoder.encode("\uC483")}).to.throw(Error, "EncodingError U+C483");
expect(() => {ms932Encoder.encode("\uC484")}).to.throw(Error, "EncodingError U+C484");
expect(() => {ms932Encoder.encode("\uC485")}).to.throw(Error, "EncodingError U+C485");
expect(() => {ms932Encoder.encode("\uC486")}).to.throw(Error, "EncodingError U+C486");
expect(() => {ms932Encoder.encode("\uC487")}).to.throw(Error, "EncodingError U+C487");
expect(() => {ms932Encoder.encode("\uC488")}).to.throw(Error, "EncodingError U+C488");
expect(() => {ms932Encoder.encode("\uC489")}).to.throw(Error, "EncodingError U+C489");
expect(() => {ms932Encoder.encode("\uC48A")}).to.throw(Error, "EncodingError U+C48A");
expect(() => {ms932Encoder.encode("\uC48B")}).to.throw(Error, "EncodingError U+C48B");
expect(() => {ms932Encoder.encode("\uC48C")}).to.throw(Error, "EncodingError U+C48C");
expect(() => {ms932Encoder.encode("\uC48D")}).to.throw(Error, "EncodingError U+C48D");
expect(() => {ms932Encoder.encode("\uC48E")}).to.throw(Error, "EncodingError U+C48E");
expect(() => {ms932Encoder.encode("\uC48F")}).to.throw(Error, "EncodingError U+C48F");
expect(() => {ms932Encoder.encode("\uC490")}).to.throw(Error, "EncodingError U+C490");
expect(() => {ms932Encoder.encode("\uC491")}).to.throw(Error, "EncodingError U+C491");
expect(() => {ms932Encoder.encode("\uC492")}).to.throw(Error, "EncodingError U+C492");
expect(() => {ms932Encoder.encode("\uC493")}).to.throw(Error, "EncodingError U+C493");
expect(() => {ms932Encoder.encode("\uC494")}).to.throw(Error, "EncodingError U+C494");
expect(() => {ms932Encoder.encode("\uC495")}).to.throw(Error, "EncodingError U+C495");
expect(() => {ms932Encoder.encode("\uC496")}).to.throw(Error, "EncodingError U+C496");
expect(() => {ms932Encoder.encode("\uC497")}).to.throw(Error, "EncodingError U+C497");
expect(() => {ms932Encoder.encode("\uC498")}).to.throw(Error, "EncodingError U+C498");
expect(() => {ms932Encoder.encode("\uC499")}).to.throw(Error, "EncodingError U+C499");
expect(() => {ms932Encoder.encode("\uC49A")}).to.throw(Error, "EncodingError U+C49A");
expect(() => {ms932Encoder.encode("\uC49B")}).to.throw(Error, "EncodingError U+C49B");
expect(() => {ms932Encoder.encode("\uC49C")}).to.throw(Error, "EncodingError U+C49C");
expect(() => {ms932Encoder.encode("\uC49D")}).to.throw(Error, "EncodingError U+C49D");
expect(() => {ms932Encoder.encode("\uC49E")}).to.throw(Error, "EncodingError U+C49E");
expect(() => {ms932Encoder.encode("\uC49F")}).to.throw(Error, "EncodingError U+C49F");
expect(() => {ms932Encoder.encode("\uC4A0")}).to.throw(Error, "EncodingError U+C4A0");
expect(() => {ms932Encoder.encode("\uC4A1")}).to.throw(Error, "EncodingError U+C4A1");
expect(() => {ms932Encoder.encode("\uC4A2")}).to.throw(Error, "EncodingError U+C4A2");
expect(() => {ms932Encoder.encode("\uC4A3")}).to.throw(Error, "EncodingError U+C4A3");
expect(() => {ms932Encoder.encode("\uC4A4")}).to.throw(Error, "EncodingError U+C4A4");
expect(() => {ms932Encoder.encode("\uC4A5")}).to.throw(Error, "EncodingError U+C4A5");
expect(() => {ms932Encoder.encode("\uC4A6")}).to.throw(Error, "EncodingError U+C4A6");
expect(() => {ms932Encoder.encode("\uC4A7")}).to.throw(Error, "EncodingError U+C4A7");
expect(() => {ms932Encoder.encode("\uC4A8")}).to.throw(Error, "EncodingError U+C4A8");
expect(() => {ms932Encoder.encode("\uC4A9")}).to.throw(Error, "EncodingError U+C4A9");
expect(() => {ms932Encoder.encode("\uC4AA")}).to.throw(Error, "EncodingError U+C4AA");
expect(() => {ms932Encoder.encode("\uC4AB")}).to.throw(Error, "EncodingError U+C4AB");
expect(() => {ms932Encoder.encode("\uC4AC")}).to.throw(Error, "EncodingError U+C4AC");
expect(() => {ms932Encoder.encode("\uC4AD")}).to.throw(Error, "EncodingError U+C4AD");
expect(() => {ms932Encoder.encode("\uC4AE")}).to.throw(Error, "EncodingError U+C4AE");
expect(() => {ms932Encoder.encode("\uC4AF")}).to.throw(Error, "EncodingError U+C4AF");
expect(() => {ms932Encoder.encode("\uC4B0")}).to.throw(Error, "EncodingError U+C4B0");
expect(() => {ms932Encoder.encode("\uC4B1")}).to.throw(Error, "EncodingError U+C4B1");
expect(() => {ms932Encoder.encode("\uC4B2")}).to.throw(Error, "EncodingError U+C4B2");
expect(() => {ms932Encoder.encode("\uC4B3")}).to.throw(Error, "EncodingError U+C4B3");
expect(() => {ms932Encoder.encode("\uC4B4")}).to.throw(Error, "EncodingError U+C4B4");
expect(() => {ms932Encoder.encode("\uC4B5")}).to.throw(Error, "EncodingError U+C4B5");
expect(() => {ms932Encoder.encode("\uC4B6")}).to.throw(Error, "EncodingError U+C4B6");
expect(() => {ms932Encoder.encode("\uC4B7")}).to.throw(Error, "EncodingError U+C4B7");
expect(() => {ms932Encoder.encode("\uC4B8")}).to.throw(Error, "EncodingError U+C4B8");
expect(() => {ms932Encoder.encode("\uC4B9")}).to.throw(Error, "EncodingError U+C4B9");
expect(() => {ms932Encoder.encode("\uC4BA")}).to.throw(Error, "EncodingError U+C4BA");
expect(() => {ms932Encoder.encode("\uC4BB")}).to.throw(Error, "EncodingError U+C4BB");
expect(() => {ms932Encoder.encode("\uC4BC")}).to.throw(Error, "EncodingError U+C4BC");
expect(() => {ms932Encoder.encode("\uC4BD")}).to.throw(Error, "EncodingError U+C4BD");
expect(() => {ms932Encoder.encode("\uC4BE")}).to.throw(Error, "EncodingError U+C4BE");
expect(() => {ms932Encoder.encode("\uC4BF")}).to.throw(Error, "EncodingError U+C4BF");
expect(() => {ms932Encoder.encode("\uC4C0")}).to.throw(Error, "EncodingError U+C4C0");
expect(() => {ms932Encoder.encode("\uC4C1")}).to.throw(Error, "EncodingError U+C4C1");
expect(() => {ms932Encoder.encode("\uC4C2")}).to.throw(Error, "EncodingError U+C4C2");
expect(() => {ms932Encoder.encode("\uC4C3")}).to.throw(Error, "EncodingError U+C4C3");
expect(() => {ms932Encoder.encode("\uC4C4")}).to.throw(Error, "EncodingError U+C4C4");
expect(() => {ms932Encoder.encode("\uC4C5")}).to.throw(Error, "EncodingError U+C4C5");
expect(() => {ms932Encoder.encode("\uC4C6")}).to.throw(Error, "EncodingError U+C4C6");
expect(() => {ms932Encoder.encode("\uC4C7")}).to.throw(Error, "EncodingError U+C4C7");
expect(() => {ms932Encoder.encode("\uC4C8")}).to.throw(Error, "EncodingError U+C4C8");
expect(() => {ms932Encoder.encode("\uC4C9")}).to.throw(Error, "EncodingError U+C4C9");
expect(() => {ms932Encoder.encode("\uC4CA")}).to.throw(Error, "EncodingError U+C4CA");
expect(() => {ms932Encoder.encode("\uC4CB")}).to.throw(Error, "EncodingError U+C4CB");
expect(() => {ms932Encoder.encode("\uC4CC")}).to.throw(Error, "EncodingError U+C4CC");
expect(() => {ms932Encoder.encode("\uC4CD")}).to.throw(Error, "EncodingError U+C4CD");
expect(() => {ms932Encoder.encode("\uC4CE")}).to.throw(Error, "EncodingError U+C4CE");
expect(() => {ms932Encoder.encode("\uC4CF")}).to.throw(Error, "EncodingError U+C4CF");
expect(() => {ms932Encoder.encode("\uC4D0")}).to.throw(Error, "EncodingError U+C4D0");
expect(() => {ms932Encoder.encode("\uC4D1")}).to.throw(Error, "EncodingError U+C4D1");
expect(() => {ms932Encoder.encode("\uC4D2")}).to.throw(Error, "EncodingError U+C4D2");
expect(() => {ms932Encoder.encode("\uC4D3")}).to.throw(Error, "EncodingError U+C4D3");
expect(() => {ms932Encoder.encode("\uC4D4")}).to.throw(Error, "EncodingError U+C4D4");
expect(() => {ms932Encoder.encode("\uC4D5")}).to.throw(Error, "EncodingError U+C4D5");
expect(() => {ms932Encoder.encode("\uC4D6")}).to.throw(Error, "EncodingError U+C4D6");
expect(() => {ms932Encoder.encode("\uC4D7")}).to.throw(Error, "EncodingError U+C4D7");
expect(() => {ms932Encoder.encode("\uC4D8")}).to.throw(Error, "EncodingError U+C4D8");
expect(() => {ms932Encoder.encode("\uC4D9")}).to.throw(Error, "EncodingError U+C4D9");
expect(() => {ms932Encoder.encode("\uC4DA")}).to.throw(Error, "EncodingError U+C4DA");
expect(() => {ms932Encoder.encode("\uC4DB")}).to.throw(Error, "EncodingError U+C4DB");
expect(() => {ms932Encoder.encode("\uC4DC")}).to.throw(Error, "EncodingError U+C4DC");
expect(() => {ms932Encoder.encode("\uC4DD")}).to.throw(Error, "EncodingError U+C4DD");
expect(() => {ms932Encoder.encode("\uC4DE")}).to.throw(Error, "EncodingError U+C4DE");
expect(() => {ms932Encoder.encode("\uC4DF")}).to.throw(Error, "EncodingError U+C4DF");
expect(() => {ms932Encoder.encode("\uC4E0")}).to.throw(Error, "EncodingError U+C4E0");
expect(() => {ms932Encoder.encode("\uC4E1")}).to.throw(Error, "EncodingError U+C4E1");
expect(() => {ms932Encoder.encode("\uC4E2")}).to.throw(Error, "EncodingError U+C4E2");
expect(() => {ms932Encoder.encode("\uC4E3")}).to.throw(Error, "EncodingError U+C4E3");
expect(() => {ms932Encoder.encode("\uC4E4")}).to.throw(Error, "EncodingError U+C4E4");
expect(() => {ms932Encoder.encode("\uC4E5")}).to.throw(Error, "EncodingError U+C4E5");
expect(() => {ms932Encoder.encode("\uC4E6")}).to.throw(Error, "EncodingError U+C4E6");
expect(() => {ms932Encoder.encode("\uC4E7")}).to.throw(Error, "EncodingError U+C4E7");
expect(() => {ms932Encoder.encode("\uC4E8")}).to.throw(Error, "EncodingError U+C4E8");
expect(() => {ms932Encoder.encode("\uC4E9")}).to.throw(Error, "EncodingError U+C4E9");
expect(() => {ms932Encoder.encode("\uC4EA")}).to.throw(Error, "EncodingError U+C4EA");
expect(() => {ms932Encoder.encode("\uC4EB")}).to.throw(Error, "EncodingError U+C4EB");
expect(() => {ms932Encoder.encode("\uC4EC")}).to.throw(Error, "EncodingError U+C4EC");
expect(() => {ms932Encoder.encode("\uC4ED")}).to.throw(Error, "EncodingError U+C4ED");
expect(() => {ms932Encoder.encode("\uC4EE")}).to.throw(Error, "EncodingError U+C4EE");
expect(() => {ms932Encoder.encode("\uC4EF")}).to.throw(Error, "EncodingError U+C4EF");
expect(() => {ms932Encoder.encode("\uC4F0")}).to.throw(Error, "EncodingError U+C4F0");
expect(() => {ms932Encoder.encode("\uC4F1")}).to.throw(Error, "EncodingError U+C4F1");
expect(() => {ms932Encoder.encode("\uC4F2")}).to.throw(Error, "EncodingError U+C4F2");
expect(() => {ms932Encoder.encode("\uC4F3")}).to.throw(Error, "EncodingError U+C4F3");
expect(() => {ms932Encoder.encode("\uC4F4")}).to.throw(Error, "EncodingError U+C4F4");
expect(() => {ms932Encoder.encode("\uC4F5")}).to.throw(Error, "EncodingError U+C4F5");
expect(() => {ms932Encoder.encode("\uC4F6")}).to.throw(Error, "EncodingError U+C4F6");
expect(() => {ms932Encoder.encode("\uC4F7")}).to.throw(Error, "EncodingError U+C4F7");
expect(() => {ms932Encoder.encode("\uC4F8")}).to.throw(Error, "EncodingError U+C4F8");
expect(() => {ms932Encoder.encode("\uC4F9")}).to.throw(Error, "EncodingError U+C4F9");
expect(() => {ms932Encoder.encode("\uC4FA")}).to.throw(Error, "EncodingError U+C4FA");
expect(() => {ms932Encoder.encode("\uC4FB")}).to.throw(Error, "EncodingError U+C4FB");
expect(() => {ms932Encoder.encode("\uC4FC")}).to.throw(Error, "EncodingError U+C4FC");
expect(() => {ms932Encoder.encode("\uC4FD")}).to.throw(Error, "EncodingError U+C4FD");
expect(() => {ms932Encoder.encode("\uC4FE")}).to.throw(Error, "EncodingError U+C4FE");
expect(() => {ms932Encoder.encode("\uC4FF")}).to.throw(Error, "EncodingError U+C4FF");
expect(() => {ms932Encoder.encode("\uC500")}).to.throw(Error, "EncodingError U+C500");
expect(() => {ms932Encoder.encode("\uC501")}).to.throw(Error, "EncodingError U+C501");
expect(() => {ms932Encoder.encode("\uC502")}).to.throw(Error, "EncodingError U+C502");
expect(() => {ms932Encoder.encode("\uC503")}).to.throw(Error, "EncodingError U+C503");
expect(() => {ms932Encoder.encode("\uC504")}).to.throw(Error, "EncodingError U+C504");
expect(() => {ms932Encoder.encode("\uC505")}).to.throw(Error, "EncodingError U+C505");
expect(() => {ms932Encoder.encode("\uC506")}).to.throw(Error, "EncodingError U+C506");
expect(() => {ms932Encoder.encode("\uC507")}).to.throw(Error, "EncodingError U+C507");
expect(() => {ms932Encoder.encode("\uC508")}).to.throw(Error, "EncodingError U+C508");
expect(() => {ms932Encoder.encode("\uC509")}).to.throw(Error, "EncodingError U+C509");
expect(() => {ms932Encoder.encode("\uC50A")}).to.throw(Error, "EncodingError U+C50A");
expect(() => {ms932Encoder.encode("\uC50B")}).to.throw(Error, "EncodingError U+C50B");
expect(() => {ms932Encoder.encode("\uC50C")}).to.throw(Error, "EncodingError U+C50C");
expect(() => {ms932Encoder.encode("\uC50D")}).to.throw(Error, "EncodingError U+C50D");
expect(() => {ms932Encoder.encode("\uC50E")}).to.throw(Error, "EncodingError U+C50E");
expect(() => {ms932Encoder.encode("\uC50F")}).to.throw(Error, "EncodingError U+C50F");
expect(() => {ms932Encoder.encode("\uC510")}).to.throw(Error, "EncodingError U+C510");
expect(() => {ms932Encoder.encode("\uC511")}).to.throw(Error, "EncodingError U+C511");
expect(() => {ms932Encoder.encode("\uC512")}).to.throw(Error, "EncodingError U+C512");
expect(() => {ms932Encoder.encode("\uC513")}).to.throw(Error, "EncodingError U+C513");
expect(() => {ms932Encoder.encode("\uC514")}).to.throw(Error, "EncodingError U+C514");
expect(() => {ms932Encoder.encode("\uC515")}).to.throw(Error, "EncodingError U+C515");
expect(() => {ms932Encoder.encode("\uC516")}).to.throw(Error, "EncodingError U+C516");
expect(() => {ms932Encoder.encode("\uC517")}).to.throw(Error, "EncodingError U+C517");
expect(() => {ms932Encoder.encode("\uC518")}).to.throw(Error, "EncodingError U+C518");
expect(() => {ms932Encoder.encode("\uC519")}).to.throw(Error, "EncodingError U+C519");
expect(() => {ms932Encoder.encode("\uC51A")}).to.throw(Error, "EncodingError U+C51A");
expect(() => {ms932Encoder.encode("\uC51B")}).to.throw(Error, "EncodingError U+C51B");
expect(() => {ms932Encoder.encode("\uC51C")}).to.throw(Error, "EncodingError U+C51C");
expect(() => {ms932Encoder.encode("\uC51D")}).to.throw(Error, "EncodingError U+C51D");
expect(() => {ms932Encoder.encode("\uC51E")}).to.throw(Error, "EncodingError U+C51E");
expect(() => {ms932Encoder.encode("\uC51F")}).to.throw(Error, "EncodingError U+C51F");
expect(() => {ms932Encoder.encode("\uC520")}).to.throw(Error, "EncodingError U+C520");
expect(() => {ms932Encoder.encode("\uC521")}).to.throw(Error, "EncodingError U+C521");
expect(() => {ms932Encoder.encode("\uC522")}).to.throw(Error, "EncodingError U+C522");
expect(() => {ms932Encoder.encode("\uC523")}).to.throw(Error, "EncodingError U+C523");
expect(() => {ms932Encoder.encode("\uC524")}).to.throw(Error, "EncodingError U+C524");
expect(() => {ms932Encoder.encode("\uC525")}).to.throw(Error, "EncodingError U+C525");
expect(() => {ms932Encoder.encode("\uC526")}).to.throw(Error, "EncodingError U+C526");
expect(() => {ms932Encoder.encode("\uC527")}).to.throw(Error, "EncodingError U+C527");
expect(() => {ms932Encoder.encode("\uC528")}).to.throw(Error, "EncodingError U+C528");
expect(() => {ms932Encoder.encode("\uC529")}).to.throw(Error, "EncodingError U+C529");
expect(() => {ms932Encoder.encode("\uC52A")}).to.throw(Error, "EncodingError U+C52A");
expect(() => {ms932Encoder.encode("\uC52B")}).to.throw(Error, "EncodingError U+C52B");
expect(() => {ms932Encoder.encode("\uC52C")}).to.throw(Error, "EncodingError U+C52C");
expect(() => {ms932Encoder.encode("\uC52D")}).to.throw(Error, "EncodingError U+C52D");
expect(() => {ms932Encoder.encode("\uC52E")}).to.throw(Error, "EncodingError U+C52E");
expect(() => {ms932Encoder.encode("\uC52F")}).to.throw(Error, "EncodingError U+C52F");
expect(() => {ms932Encoder.encode("\uC530")}).to.throw(Error, "EncodingError U+C530");
expect(() => {ms932Encoder.encode("\uC531")}).to.throw(Error, "EncodingError U+C531");
expect(() => {ms932Encoder.encode("\uC532")}).to.throw(Error, "EncodingError U+C532");
expect(() => {ms932Encoder.encode("\uC533")}).to.throw(Error, "EncodingError U+C533");
expect(() => {ms932Encoder.encode("\uC534")}).to.throw(Error, "EncodingError U+C534");
expect(() => {ms932Encoder.encode("\uC535")}).to.throw(Error, "EncodingError U+C535");
expect(() => {ms932Encoder.encode("\uC536")}).to.throw(Error, "EncodingError U+C536");
expect(() => {ms932Encoder.encode("\uC537")}).to.throw(Error, "EncodingError U+C537");
expect(() => {ms932Encoder.encode("\uC538")}).to.throw(Error, "EncodingError U+C538");
expect(() => {ms932Encoder.encode("\uC539")}).to.throw(Error, "EncodingError U+C539");
expect(() => {ms932Encoder.encode("\uC53A")}).to.throw(Error, "EncodingError U+C53A");
expect(() => {ms932Encoder.encode("\uC53B")}).to.throw(Error, "EncodingError U+C53B");
expect(() => {ms932Encoder.encode("\uC53C")}).to.throw(Error, "EncodingError U+C53C");
expect(() => {ms932Encoder.encode("\uC53D")}).to.throw(Error, "EncodingError U+C53D");
expect(() => {ms932Encoder.encode("\uC53E")}).to.throw(Error, "EncodingError U+C53E");
expect(() => {ms932Encoder.encode("\uC53F")}).to.throw(Error, "EncodingError U+C53F");
expect(() => {ms932Encoder.encode("\uC540")}).to.throw(Error, "EncodingError U+C540");
expect(() => {ms932Encoder.encode("\uC541")}).to.throw(Error, "EncodingError U+C541");
expect(() => {ms932Encoder.encode("\uC542")}).to.throw(Error, "EncodingError U+C542");
expect(() => {ms932Encoder.encode("\uC543")}).to.throw(Error, "EncodingError U+C543");
expect(() => {ms932Encoder.encode("\uC544")}).to.throw(Error, "EncodingError U+C544");
expect(() => {ms932Encoder.encode("\uC545")}).to.throw(Error, "EncodingError U+C545");
expect(() => {ms932Encoder.encode("\uC546")}).to.throw(Error, "EncodingError U+C546");
expect(() => {ms932Encoder.encode("\uC547")}).to.throw(Error, "EncodingError U+C547");
expect(() => {ms932Encoder.encode("\uC548")}).to.throw(Error, "EncodingError U+C548");
expect(() => {ms932Encoder.encode("\uC549")}).to.throw(Error, "EncodingError U+C549");
expect(() => {ms932Encoder.encode("\uC54A")}).to.throw(Error, "EncodingError U+C54A");
expect(() => {ms932Encoder.encode("\uC54B")}).to.throw(Error, "EncodingError U+C54B");
expect(() => {ms932Encoder.encode("\uC54C")}).to.throw(Error, "EncodingError U+C54C");
expect(() => {ms932Encoder.encode("\uC54D")}).to.throw(Error, "EncodingError U+C54D");
expect(() => {ms932Encoder.encode("\uC54E")}).to.throw(Error, "EncodingError U+C54E");
expect(() => {ms932Encoder.encode("\uC54F")}).to.throw(Error, "EncodingError U+C54F");
expect(() => {ms932Encoder.encode("\uC550")}).to.throw(Error, "EncodingError U+C550");
expect(() => {ms932Encoder.encode("\uC551")}).to.throw(Error, "EncodingError U+C551");
expect(() => {ms932Encoder.encode("\uC552")}).to.throw(Error, "EncodingError U+C552");
expect(() => {ms932Encoder.encode("\uC553")}).to.throw(Error, "EncodingError U+C553");
expect(() => {ms932Encoder.encode("\uC554")}).to.throw(Error, "EncodingError U+C554");
expect(() => {ms932Encoder.encode("\uC555")}).to.throw(Error, "EncodingError U+C555");
expect(() => {ms932Encoder.encode("\uC556")}).to.throw(Error, "EncodingError U+C556");
expect(() => {ms932Encoder.encode("\uC557")}).to.throw(Error, "EncodingError U+C557");
expect(() => {ms932Encoder.encode("\uC558")}).to.throw(Error, "EncodingError U+C558");
expect(() => {ms932Encoder.encode("\uC559")}).to.throw(Error, "EncodingError U+C559");
expect(() => {ms932Encoder.encode("\uC55A")}).to.throw(Error, "EncodingError U+C55A");
expect(() => {ms932Encoder.encode("\uC55B")}).to.throw(Error, "EncodingError U+C55B");
expect(() => {ms932Encoder.encode("\uC55C")}).to.throw(Error, "EncodingError U+C55C");
expect(() => {ms932Encoder.encode("\uC55D")}).to.throw(Error, "EncodingError U+C55D");
expect(() => {ms932Encoder.encode("\uC55E")}).to.throw(Error, "EncodingError U+C55E");
expect(() => {ms932Encoder.encode("\uC55F")}).to.throw(Error, "EncodingError U+C55F");
expect(() => {ms932Encoder.encode("\uC560")}).to.throw(Error, "EncodingError U+C560");
expect(() => {ms932Encoder.encode("\uC561")}).to.throw(Error, "EncodingError U+C561");
expect(() => {ms932Encoder.encode("\uC562")}).to.throw(Error, "EncodingError U+C562");
expect(() => {ms932Encoder.encode("\uC563")}).to.throw(Error, "EncodingError U+C563");
expect(() => {ms932Encoder.encode("\uC564")}).to.throw(Error, "EncodingError U+C564");
expect(() => {ms932Encoder.encode("\uC565")}).to.throw(Error, "EncodingError U+C565");
expect(() => {ms932Encoder.encode("\uC566")}).to.throw(Error, "EncodingError U+C566");
expect(() => {ms932Encoder.encode("\uC567")}).to.throw(Error, "EncodingError U+C567");
expect(() => {ms932Encoder.encode("\uC568")}).to.throw(Error, "EncodingError U+C568");
expect(() => {ms932Encoder.encode("\uC569")}).to.throw(Error, "EncodingError U+C569");
expect(() => {ms932Encoder.encode("\uC56A")}).to.throw(Error, "EncodingError U+C56A");
expect(() => {ms932Encoder.encode("\uC56B")}).to.throw(Error, "EncodingError U+C56B");
expect(() => {ms932Encoder.encode("\uC56C")}).to.throw(Error, "EncodingError U+C56C");
expect(() => {ms932Encoder.encode("\uC56D")}).to.throw(Error, "EncodingError U+C56D");
expect(() => {ms932Encoder.encode("\uC56E")}).to.throw(Error, "EncodingError U+C56E");
expect(() => {ms932Encoder.encode("\uC56F")}).to.throw(Error, "EncodingError U+C56F");
expect(() => {ms932Encoder.encode("\uC570")}).to.throw(Error, "EncodingError U+C570");
expect(() => {ms932Encoder.encode("\uC571")}).to.throw(Error, "EncodingError U+C571");
expect(() => {ms932Encoder.encode("\uC572")}).to.throw(Error, "EncodingError U+C572");
expect(() => {ms932Encoder.encode("\uC573")}).to.throw(Error, "EncodingError U+C573");
expect(() => {ms932Encoder.encode("\uC574")}).to.throw(Error, "EncodingError U+C574");
expect(() => {ms932Encoder.encode("\uC575")}).to.throw(Error, "EncodingError U+C575");
expect(() => {ms932Encoder.encode("\uC576")}).to.throw(Error, "EncodingError U+C576");
expect(() => {ms932Encoder.encode("\uC577")}).to.throw(Error, "EncodingError U+C577");
expect(() => {ms932Encoder.encode("\uC578")}).to.throw(Error, "EncodingError U+C578");
expect(() => {ms932Encoder.encode("\uC579")}).to.throw(Error, "EncodingError U+C579");
expect(() => {ms932Encoder.encode("\uC57A")}).to.throw(Error, "EncodingError U+C57A");
expect(() => {ms932Encoder.encode("\uC57B")}).to.throw(Error, "EncodingError U+C57B");
expect(() => {ms932Encoder.encode("\uC57C")}).to.throw(Error, "EncodingError U+C57C");
expect(() => {ms932Encoder.encode("\uC57D")}).to.throw(Error, "EncodingError U+C57D");
expect(() => {ms932Encoder.encode("\uC57E")}).to.throw(Error, "EncodingError U+C57E");
expect(() => {ms932Encoder.encode("\uC57F")}).to.throw(Error, "EncodingError U+C57F");
expect(() => {ms932Encoder.encode("\uC580")}).to.throw(Error, "EncodingError U+C580");
expect(() => {ms932Encoder.encode("\uC581")}).to.throw(Error, "EncodingError U+C581");
expect(() => {ms932Encoder.encode("\uC582")}).to.throw(Error, "EncodingError U+C582");
expect(() => {ms932Encoder.encode("\uC583")}).to.throw(Error, "EncodingError U+C583");
expect(() => {ms932Encoder.encode("\uC584")}).to.throw(Error, "EncodingError U+C584");
expect(() => {ms932Encoder.encode("\uC585")}).to.throw(Error, "EncodingError U+C585");
expect(() => {ms932Encoder.encode("\uC586")}).to.throw(Error, "EncodingError U+C586");
expect(() => {ms932Encoder.encode("\uC587")}).to.throw(Error, "EncodingError U+C587");
expect(() => {ms932Encoder.encode("\uC588")}).to.throw(Error, "EncodingError U+C588");
expect(() => {ms932Encoder.encode("\uC589")}).to.throw(Error, "EncodingError U+C589");
expect(() => {ms932Encoder.encode("\uC58A")}).to.throw(Error, "EncodingError U+C58A");
expect(() => {ms932Encoder.encode("\uC58B")}).to.throw(Error, "EncodingError U+C58B");
expect(() => {ms932Encoder.encode("\uC58C")}).to.throw(Error, "EncodingError U+C58C");
expect(() => {ms932Encoder.encode("\uC58D")}).to.throw(Error, "EncodingError U+C58D");
expect(() => {ms932Encoder.encode("\uC58E")}).to.throw(Error, "EncodingError U+C58E");
expect(() => {ms932Encoder.encode("\uC58F")}).to.throw(Error, "EncodingError U+C58F");
expect(() => {ms932Encoder.encode("\uC590")}).to.throw(Error, "EncodingError U+C590");
expect(() => {ms932Encoder.encode("\uC591")}).to.throw(Error, "EncodingError U+C591");
expect(() => {ms932Encoder.encode("\uC592")}).to.throw(Error, "EncodingError U+C592");
expect(() => {ms932Encoder.encode("\uC593")}).to.throw(Error, "EncodingError U+C593");
expect(() => {ms932Encoder.encode("\uC594")}).to.throw(Error, "EncodingError U+C594");
expect(() => {ms932Encoder.encode("\uC595")}).to.throw(Error, "EncodingError U+C595");
expect(() => {ms932Encoder.encode("\uC596")}).to.throw(Error, "EncodingError U+C596");
expect(() => {ms932Encoder.encode("\uC597")}).to.throw(Error, "EncodingError U+C597");
expect(() => {ms932Encoder.encode("\uC598")}).to.throw(Error, "EncodingError U+C598");
expect(() => {ms932Encoder.encode("\uC599")}).to.throw(Error, "EncodingError U+C599");
expect(() => {ms932Encoder.encode("\uC59A")}).to.throw(Error, "EncodingError U+C59A");
expect(() => {ms932Encoder.encode("\uC59B")}).to.throw(Error, "EncodingError U+C59B");
expect(() => {ms932Encoder.encode("\uC59C")}).to.throw(Error, "EncodingError U+C59C");
expect(() => {ms932Encoder.encode("\uC59D")}).to.throw(Error, "EncodingError U+C59D");
expect(() => {ms932Encoder.encode("\uC59E")}).to.throw(Error, "EncodingError U+C59E");
expect(() => {ms932Encoder.encode("\uC59F")}).to.throw(Error, "EncodingError U+C59F");
expect(() => {ms932Encoder.encode("\uC5A0")}).to.throw(Error, "EncodingError U+C5A0");
expect(() => {ms932Encoder.encode("\uC5A1")}).to.throw(Error, "EncodingError U+C5A1");
expect(() => {ms932Encoder.encode("\uC5A2")}).to.throw(Error, "EncodingError U+C5A2");
expect(() => {ms932Encoder.encode("\uC5A3")}).to.throw(Error, "EncodingError U+C5A3");
expect(() => {ms932Encoder.encode("\uC5A4")}).to.throw(Error, "EncodingError U+C5A4");
expect(() => {ms932Encoder.encode("\uC5A5")}).to.throw(Error, "EncodingError U+C5A5");
expect(() => {ms932Encoder.encode("\uC5A6")}).to.throw(Error, "EncodingError U+C5A6");
expect(() => {ms932Encoder.encode("\uC5A7")}).to.throw(Error, "EncodingError U+C5A7");
expect(() => {ms932Encoder.encode("\uC5A8")}).to.throw(Error, "EncodingError U+C5A8");
expect(() => {ms932Encoder.encode("\uC5A9")}).to.throw(Error, "EncodingError U+C5A9");
expect(() => {ms932Encoder.encode("\uC5AA")}).to.throw(Error, "EncodingError U+C5AA");
expect(() => {ms932Encoder.encode("\uC5AB")}).to.throw(Error, "EncodingError U+C5AB");
expect(() => {ms932Encoder.encode("\uC5AC")}).to.throw(Error, "EncodingError U+C5AC");
expect(() => {ms932Encoder.encode("\uC5AD")}).to.throw(Error, "EncodingError U+C5AD");
expect(() => {ms932Encoder.encode("\uC5AE")}).to.throw(Error, "EncodingError U+C5AE");
expect(() => {ms932Encoder.encode("\uC5AF")}).to.throw(Error, "EncodingError U+C5AF");
expect(() => {ms932Encoder.encode("\uC5B0")}).to.throw(Error, "EncodingError U+C5B0");
expect(() => {ms932Encoder.encode("\uC5B1")}).to.throw(Error, "EncodingError U+C5B1");
expect(() => {ms932Encoder.encode("\uC5B2")}).to.throw(Error, "EncodingError U+C5B2");
expect(() => {ms932Encoder.encode("\uC5B3")}).to.throw(Error, "EncodingError U+C5B3");
expect(() => {ms932Encoder.encode("\uC5B4")}).to.throw(Error, "EncodingError U+C5B4");
expect(() => {ms932Encoder.encode("\uC5B5")}).to.throw(Error, "EncodingError U+C5B5");
expect(() => {ms932Encoder.encode("\uC5B6")}).to.throw(Error, "EncodingError U+C5B6");
expect(() => {ms932Encoder.encode("\uC5B7")}).to.throw(Error, "EncodingError U+C5B7");
expect(() => {ms932Encoder.encode("\uC5B8")}).to.throw(Error, "EncodingError U+C5B8");
expect(() => {ms932Encoder.encode("\uC5B9")}).to.throw(Error, "EncodingError U+C5B9");
expect(() => {ms932Encoder.encode("\uC5BA")}).to.throw(Error, "EncodingError U+C5BA");
expect(() => {ms932Encoder.encode("\uC5BB")}).to.throw(Error, "EncodingError U+C5BB");
expect(() => {ms932Encoder.encode("\uC5BC")}).to.throw(Error, "EncodingError U+C5BC");
expect(() => {ms932Encoder.encode("\uC5BD")}).to.throw(Error, "EncodingError U+C5BD");
expect(() => {ms932Encoder.encode("\uC5BE")}).to.throw(Error, "EncodingError U+C5BE");
expect(() => {ms932Encoder.encode("\uC5BF")}).to.throw(Error, "EncodingError U+C5BF");
expect(() => {ms932Encoder.encode("\uC5C0")}).to.throw(Error, "EncodingError U+C5C0");
expect(() => {ms932Encoder.encode("\uC5C1")}).to.throw(Error, "EncodingError U+C5C1");
expect(() => {ms932Encoder.encode("\uC5C2")}).to.throw(Error, "EncodingError U+C5C2");
expect(() => {ms932Encoder.encode("\uC5C3")}).to.throw(Error, "EncodingError U+C5C3");
expect(() => {ms932Encoder.encode("\uC5C4")}).to.throw(Error, "EncodingError U+C5C4");
expect(() => {ms932Encoder.encode("\uC5C5")}).to.throw(Error, "EncodingError U+C5C5");
expect(() => {ms932Encoder.encode("\uC5C6")}).to.throw(Error, "EncodingError U+C5C6");
expect(() => {ms932Encoder.encode("\uC5C7")}).to.throw(Error, "EncodingError U+C5C7");
expect(() => {ms932Encoder.encode("\uC5C8")}).to.throw(Error, "EncodingError U+C5C8");
expect(() => {ms932Encoder.encode("\uC5C9")}).to.throw(Error, "EncodingError U+C5C9");
expect(() => {ms932Encoder.encode("\uC5CA")}).to.throw(Error, "EncodingError U+C5CA");
expect(() => {ms932Encoder.encode("\uC5CB")}).to.throw(Error, "EncodingError U+C5CB");
expect(() => {ms932Encoder.encode("\uC5CC")}).to.throw(Error, "EncodingError U+C5CC");
expect(() => {ms932Encoder.encode("\uC5CD")}).to.throw(Error, "EncodingError U+C5CD");
expect(() => {ms932Encoder.encode("\uC5CE")}).to.throw(Error, "EncodingError U+C5CE");
expect(() => {ms932Encoder.encode("\uC5CF")}).to.throw(Error, "EncodingError U+C5CF");
expect(() => {ms932Encoder.encode("\uC5D0")}).to.throw(Error, "EncodingError U+C5D0");
expect(() => {ms932Encoder.encode("\uC5D1")}).to.throw(Error, "EncodingError U+C5D1");
expect(() => {ms932Encoder.encode("\uC5D2")}).to.throw(Error, "EncodingError U+C5D2");
expect(() => {ms932Encoder.encode("\uC5D3")}).to.throw(Error, "EncodingError U+C5D3");
expect(() => {ms932Encoder.encode("\uC5D4")}).to.throw(Error, "EncodingError U+C5D4");
expect(() => {ms932Encoder.encode("\uC5D5")}).to.throw(Error, "EncodingError U+C5D5");
expect(() => {ms932Encoder.encode("\uC5D6")}).to.throw(Error, "EncodingError U+C5D6");
expect(() => {ms932Encoder.encode("\uC5D7")}).to.throw(Error, "EncodingError U+C5D7");
expect(() => {ms932Encoder.encode("\uC5D8")}).to.throw(Error, "EncodingError U+C5D8");
expect(() => {ms932Encoder.encode("\uC5D9")}).to.throw(Error, "EncodingError U+C5D9");
expect(() => {ms932Encoder.encode("\uC5DA")}).to.throw(Error, "EncodingError U+C5DA");
expect(() => {ms932Encoder.encode("\uC5DB")}).to.throw(Error, "EncodingError U+C5DB");
expect(() => {ms932Encoder.encode("\uC5DC")}).to.throw(Error, "EncodingError U+C5DC");
expect(() => {ms932Encoder.encode("\uC5DD")}).to.throw(Error, "EncodingError U+C5DD");
expect(() => {ms932Encoder.encode("\uC5DE")}).to.throw(Error, "EncodingError U+C5DE");
expect(() => {ms932Encoder.encode("\uC5DF")}).to.throw(Error, "EncodingError U+C5DF");
expect(() => {ms932Encoder.encode("\uC5E0")}).to.throw(Error, "EncodingError U+C5E0");
expect(() => {ms932Encoder.encode("\uC5E1")}).to.throw(Error, "EncodingError U+C5E1");
expect(() => {ms932Encoder.encode("\uC5E2")}).to.throw(Error, "EncodingError U+C5E2");
expect(() => {ms932Encoder.encode("\uC5E3")}).to.throw(Error, "EncodingError U+C5E3");
expect(() => {ms932Encoder.encode("\uC5E4")}).to.throw(Error, "EncodingError U+C5E4");
expect(() => {ms932Encoder.encode("\uC5E5")}).to.throw(Error, "EncodingError U+C5E5");
expect(() => {ms932Encoder.encode("\uC5E6")}).to.throw(Error, "EncodingError U+C5E6");
expect(() => {ms932Encoder.encode("\uC5E7")}).to.throw(Error, "EncodingError U+C5E7");
expect(() => {ms932Encoder.encode("\uC5E8")}).to.throw(Error, "EncodingError U+C5E8");
expect(() => {ms932Encoder.encode("\uC5E9")}).to.throw(Error, "EncodingError U+C5E9");
expect(() => {ms932Encoder.encode("\uC5EA")}).to.throw(Error, "EncodingError U+C5EA");
expect(() => {ms932Encoder.encode("\uC5EB")}).to.throw(Error, "EncodingError U+C5EB");
expect(() => {ms932Encoder.encode("\uC5EC")}).to.throw(Error, "EncodingError U+C5EC");
expect(() => {ms932Encoder.encode("\uC5ED")}).to.throw(Error, "EncodingError U+C5ED");
expect(() => {ms932Encoder.encode("\uC5EE")}).to.throw(Error, "EncodingError U+C5EE");
expect(() => {ms932Encoder.encode("\uC5EF")}).to.throw(Error, "EncodingError U+C5EF");
expect(() => {ms932Encoder.encode("\uC5F0")}).to.throw(Error, "EncodingError U+C5F0");
expect(() => {ms932Encoder.encode("\uC5F1")}).to.throw(Error, "EncodingError U+C5F1");
expect(() => {ms932Encoder.encode("\uC5F2")}).to.throw(Error, "EncodingError U+C5F2");
expect(() => {ms932Encoder.encode("\uC5F3")}).to.throw(Error, "EncodingError U+C5F3");
expect(() => {ms932Encoder.encode("\uC5F4")}).to.throw(Error, "EncodingError U+C5F4");
expect(() => {ms932Encoder.encode("\uC5F5")}).to.throw(Error, "EncodingError U+C5F5");
expect(() => {ms932Encoder.encode("\uC5F6")}).to.throw(Error, "EncodingError U+C5F6");
expect(() => {ms932Encoder.encode("\uC5F7")}).to.throw(Error, "EncodingError U+C5F7");
expect(() => {ms932Encoder.encode("\uC5F8")}).to.throw(Error, "EncodingError U+C5F8");
expect(() => {ms932Encoder.encode("\uC5F9")}).to.throw(Error, "EncodingError U+C5F9");
expect(() => {ms932Encoder.encode("\uC5FA")}).to.throw(Error, "EncodingError U+C5FA");
expect(() => {ms932Encoder.encode("\uC5FB")}).to.throw(Error, "EncodingError U+C5FB");
expect(() => {ms932Encoder.encode("\uC5FC")}).to.throw(Error, "EncodingError U+C5FC");
expect(() => {ms932Encoder.encode("\uC5FD")}).to.throw(Error, "EncodingError U+C5FD");
expect(() => {ms932Encoder.encode("\uC5FE")}).to.throw(Error, "EncodingError U+C5FE");
expect(() => {ms932Encoder.encode("\uC5FF")}).to.throw(Error, "EncodingError U+C5FF");
expect(() => {ms932Encoder.encode("\uC600")}).to.throw(Error, "EncodingError U+C600");
expect(() => {ms932Encoder.encode("\uC601")}).to.throw(Error, "EncodingError U+C601");
expect(() => {ms932Encoder.encode("\uC602")}).to.throw(Error, "EncodingError U+C602");
expect(() => {ms932Encoder.encode("\uC603")}).to.throw(Error, "EncodingError U+C603");
expect(() => {ms932Encoder.encode("\uC604")}).to.throw(Error, "EncodingError U+C604");
expect(() => {ms932Encoder.encode("\uC605")}).to.throw(Error, "EncodingError U+C605");
expect(() => {ms932Encoder.encode("\uC606")}).to.throw(Error, "EncodingError U+C606");
expect(() => {ms932Encoder.encode("\uC607")}).to.throw(Error, "EncodingError U+C607");
expect(() => {ms932Encoder.encode("\uC608")}).to.throw(Error, "EncodingError U+C608");
expect(() => {ms932Encoder.encode("\uC609")}).to.throw(Error, "EncodingError U+C609");
expect(() => {ms932Encoder.encode("\uC60A")}).to.throw(Error, "EncodingError U+C60A");
expect(() => {ms932Encoder.encode("\uC60B")}).to.throw(Error, "EncodingError U+C60B");
expect(() => {ms932Encoder.encode("\uC60C")}).to.throw(Error, "EncodingError U+C60C");
expect(() => {ms932Encoder.encode("\uC60D")}).to.throw(Error, "EncodingError U+C60D");
expect(() => {ms932Encoder.encode("\uC60E")}).to.throw(Error, "EncodingError U+C60E");
expect(() => {ms932Encoder.encode("\uC60F")}).to.throw(Error, "EncodingError U+C60F");
expect(() => {ms932Encoder.encode("\uC610")}).to.throw(Error, "EncodingError U+C610");
expect(() => {ms932Encoder.encode("\uC611")}).to.throw(Error, "EncodingError U+C611");
expect(() => {ms932Encoder.encode("\uC612")}).to.throw(Error, "EncodingError U+C612");
expect(() => {ms932Encoder.encode("\uC613")}).to.throw(Error, "EncodingError U+C613");
expect(() => {ms932Encoder.encode("\uC614")}).to.throw(Error, "EncodingError U+C614");
expect(() => {ms932Encoder.encode("\uC615")}).to.throw(Error, "EncodingError U+C615");
expect(() => {ms932Encoder.encode("\uC616")}).to.throw(Error, "EncodingError U+C616");
expect(() => {ms932Encoder.encode("\uC617")}).to.throw(Error, "EncodingError U+C617");
expect(() => {ms932Encoder.encode("\uC618")}).to.throw(Error, "EncodingError U+C618");
expect(() => {ms932Encoder.encode("\uC619")}).to.throw(Error, "EncodingError U+C619");
expect(() => {ms932Encoder.encode("\uC61A")}).to.throw(Error, "EncodingError U+C61A");
expect(() => {ms932Encoder.encode("\uC61B")}).to.throw(Error, "EncodingError U+C61B");
expect(() => {ms932Encoder.encode("\uC61C")}).to.throw(Error, "EncodingError U+C61C");
expect(() => {ms932Encoder.encode("\uC61D")}).to.throw(Error, "EncodingError U+C61D");
expect(() => {ms932Encoder.encode("\uC61E")}).to.throw(Error, "EncodingError U+C61E");
expect(() => {ms932Encoder.encode("\uC61F")}).to.throw(Error, "EncodingError U+C61F");
expect(() => {ms932Encoder.encode("\uC620")}).to.throw(Error, "EncodingError U+C620");
expect(() => {ms932Encoder.encode("\uC621")}).to.throw(Error, "EncodingError U+C621");
expect(() => {ms932Encoder.encode("\uC622")}).to.throw(Error, "EncodingError U+C622");
expect(() => {ms932Encoder.encode("\uC623")}).to.throw(Error, "EncodingError U+C623");
expect(() => {ms932Encoder.encode("\uC624")}).to.throw(Error, "EncodingError U+C624");
expect(() => {ms932Encoder.encode("\uC625")}).to.throw(Error, "EncodingError U+C625");
expect(() => {ms932Encoder.encode("\uC626")}).to.throw(Error, "EncodingError U+C626");
expect(() => {ms932Encoder.encode("\uC627")}).to.throw(Error, "EncodingError U+C627");
expect(() => {ms932Encoder.encode("\uC628")}).to.throw(Error, "EncodingError U+C628");
expect(() => {ms932Encoder.encode("\uC629")}).to.throw(Error, "EncodingError U+C629");
expect(() => {ms932Encoder.encode("\uC62A")}).to.throw(Error, "EncodingError U+C62A");
expect(() => {ms932Encoder.encode("\uC62B")}).to.throw(Error, "EncodingError U+C62B");
expect(() => {ms932Encoder.encode("\uC62C")}).to.throw(Error, "EncodingError U+C62C");
expect(() => {ms932Encoder.encode("\uC62D")}).to.throw(Error, "EncodingError U+C62D");
expect(() => {ms932Encoder.encode("\uC62E")}).to.throw(Error, "EncodingError U+C62E");
expect(() => {ms932Encoder.encode("\uC62F")}).to.throw(Error, "EncodingError U+C62F");
expect(() => {ms932Encoder.encode("\uC630")}).to.throw(Error, "EncodingError U+C630");
expect(() => {ms932Encoder.encode("\uC631")}).to.throw(Error, "EncodingError U+C631");
expect(() => {ms932Encoder.encode("\uC632")}).to.throw(Error, "EncodingError U+C632");
expect(() => {ms932Encoder.encode("\uC633")}).to.throw(Error, "EncodingError U+C633");
expect(() => {ms932Encoder.encode("\uC634")}).to.throw(Error, "EncodingError U+C634");
expect(() => {ms932Encoder.encode("\uC635")}).to.throw(Error, "EncodingError U+C635");
expect(() => {ms932Encoder.encode("\uC636")}).to.throw(Error, "EncodingError U+C636");
expect(() => {ms932Encoder.encode("\uC637")}).to.throw(Error, "EncodingError U+C637");
expect(() => {ms932Encoder.encode("\uC638")}).to.throw(Error, "EncodingError U+C638");
expect(() => {ms932Encoder.encode("\uC639")}).to.throw(Error, "EncodingError U+C639");
expect(() => {ms932Encoder.encode("\uC63A")}).to.throw(Error, "EncodingError U+C63A");
expect(() => {ms932Encoder.encode("\uC63B")}).to.throw(Error, "EncodingError U+C63B");
expect(() => {ms932Encoder.encode("\uC63C")}).to.throw(Error, "EncodingError U+C63C");
expect(() => {ms932Encoder.encode("\uC63D")}).to.throw(Error, "EncodingError U+C63D");
expect(() => {ms932Encoder.encode("\uC63E")}).to.throw(Error, "EncodingError U+C63E");
expect(() => {ms932Encoder.encode("\uC63F")}).to.throw(Error, "EncodingError U+C63F");
expect(() => {ms932Encoder.encode("\uC640")}).to.throw(Error, "EncodingError U+C640");
expect(() => {ms932Encoder.encode("\uC641")}).to.throw(Error, "EncodingError U+C641");
expect(() => {ms932Encoder.encode("\uC642")}).to.throw(Error, "EncodingError U+C642");
expect(() => {ms932Encoder.encode("\uC643")}).to.throw(Error, "EncodingError U+C643");
expect(() => {ms932Encoder.encode("\uC644")}).to.throw(Error, "EncodingError U+C644");
expect(() => {ms932Encoder.encode("\uC645")}).to.throw(Error, "EncodingError U+C645");
expect(() => {ms932Encoder.encode("\uC646")}).to.throw(Error, "EncodingError U+C646");
expect(() => {ms932Encoder.encode("\uC647")}).to.throw(Error, "EncodingError U+C647");
expect(() => {ms932Encoder.encode("\uC648")}).to.throw(Error, "EncodingError U+C648");
expect(() => {ms932Encoder.encode("\uC649")}).to.throw(Error, "EncodingError U+C649");
expect(() => {ms932Encoder.encode("\uC64A")}).to.throw(Error, "EncodingError U+C64A");
expect(() => {ms932Encoder.encode("\uC64B")}).to.throw(Error, "EncodingError U+C64B");
expect(() => {ms932Encoder.encode("\uC64C")}).to.throw(Error, "EncodingError U+C64C");
expect(() => {ms932Encoder.encode("\uC64D")}).to.throw(Error, "EncodingError U+C64D");
expect(() => {ms932Encoder.encode("\uC64E")}).to.throw(Error, "EncodingError U+C64E");
expect(() => {ms932Encoder.encode("\uC64F")}).to.throw(Error, "EncodingError U+C64F");
expect(() => {ms932Encoder.encode("\uC650")}).to.throw(Error, "EncodingError U+C650");
expect(() => {ms932Encoder.encode("\uC651")}).to.throw(Error, "EncodingError U+C651");
expect(() => {ms932Encoder.encode("\uC652")}).to.throw(Error, "EncodingError U+C652");
expect(() => {ms932Encoder.encode("\uC653")}).to.throw(Error, "EncodingError U+C653");
expect(() => {ms932Encoder.encode("\uC654")}).to.throw(Error, "EncodingError U+C654");
expect(() => {ms932Encoder.encode("\uC655")}).to.throw(Error, "EncodingError U+C655");
expect(() => {ms932Encoder.encode("\uC656")}).to.throw(Error, "EncodingError U+C656");
expect(() => {ms932Encoder.encode("\uC657")}).to.throw(Error, "EncodingError U+C657");
expect(() => {ms932Encoder.encode("\uC658")}).to.throw(Error, "EncodingError U+C658");
expect(() => {ms932Encoder.encode("\uC659")}).to.throw(Error, "EncodingError U+C659");
expect(() => {ms932Encoder.encode("\uC65A")}).to.throw(Error, "EncodingError U+C65A");
expect(() => {ms932Encoder.encode("\uC65B")}).to.throw(Error, "EncodingError U+C65B");
expect(() => {ms932Encoder.encode("\uC65C")}).to.throw(Error, "EncodingError U+C65C");
expect(() => {ms932Encoder.encode("\uC65D")}).to.throw(Error, "EncodingError U+C65D");
expect(() => {ms932Encoder.encode("\uC65E")}).to.throw(Error, "EncodingError U+C65E");
expect(() => {ms932Encoder.encode("\uC65F")}).to.throw(Error, "EncodingError U+C65F");
expect(() => {ms932Encoder.encode("\uC660")}).to.throw(Error, "EncodingError U+C660");
expect(() => {ms932Encoder.encode("\uC661")}).to.throw(Error, "EncodingError U+C661");
expect(() => {ms932Encoder.encode("\uC662")}).to.throw(Error, "EncodingError U+C662");
expect(() => {ms932Encoder.encode("\uC663")}).to.throw(Error, "EncodingError U+C663");
expect(() => {ms932Encoder.encode("\uC664")}).to.throw(Error, "EncodingError U+C664");
expect(() => {ms932Encoder.encode("\uC665")}).to.throw(Error, "EncodingError U+C665");
expect(() => {ms932Encoder.encode("\uC666")}).to.throw(Error, "EncodingError U+C666");
expect(() => {ms932Encoder.encode("\uC667")}).to.throw(Error, "EncodingError U+C667");
expect(() => {ms932Encoder.encode("\uC668")}).to.throw(Error, "EncodingError U+C668");
expect(() => {ms932Encoder.encode("\uC669")}).to.throw(Error, "EncodingError U+C669");
expect(() => {ms932Encoder.encode("\uC66A")}).to.throw(Error, "EncodingError U+C66A");
expect(() => {ms932Encoder.encode("\uC66B")}).to.throw(Error, "EncodingError U+C66B");
expect(() => {ms932Encoder.encode("\uC66C")}).to.throw(Error, "EncodingError U+C66C");
expect(() => {ms932Encoder.encode("\uC66D")}).to.throw(Error, "EncodingError U+C66D");
expect(() => {ms932Encoder.encode("\uC66E")}).to.throw(Error, "EncodingError U+C66E");
expect(() => {ms932Encoder.encode("\uC66F")}).to.throw(Error, "EncodingError U+C66F");
expect(() => {ms932Encoder.encode("\uC670")}).to.throw(Error, "EncodingError U+C670");
expect(() => {ms932Encoder.encode("\uC671")}).to.throw(Error, "EncodingError U+C671");
expect(() => {ms932Encoder.encode("\uC672")}).to.throw(Error, "EncodingError U+C672");
expect(() => {ms932Encoder.encode("\uC673")}).to.throw(Error, "EncodingError U+C673");
expect(() => {ms932Encoder.encode("\uC674")}).to.throw(Error, "EncodingError U+C674");
expect(() => {ms932Encoder.encode("\uC675")}).to.throw(Error, "EncodingError U+C675");
expect(() => {ms932Encoder.encode("\uC676")}).to.throw(Error, "EncodingError U+C676");
expect(() => {ms932Encoder.encode("\uC677")}).to.throw(Error, "EncodingError U+C677");
expect(() => {ms932Encoder.encode("\uC678")}).to.throw(Error, "EncodingError U+C678");
expect(() => {ms932Encoder.encode("\uC679")}).to.throw(Error, "EncodingError U+C679");
expect(() => {ms932Encoder.encode("\uC67A")}).to.throw(Error, "EncodingError U+C67A");
expect(() => {ms932Encoder.encode("\uC67B")}).to.throw(Error, "EncodingError U+C67B");
expect(() => {ms932Encoder.encode("\uC67C")}).to.throw(Error, "EncodingError U+C67C");
expect(() => {ms932Encoder.encode("\uC67D")}).to.throw(Error, "EncodingError U+C67D");
expect(() => {ms932Encoder.encode("\uC67E")}).to.throw(Error, "EncodingError U+C67E");
expect(() => {ms932Encoder.encode("\uC67F")}).to.throw(Error, "EncodingError U+C67F");
expect(() => {ms932Encoder.encode("\uC680")}).to.throw(Error, "EncodingError U+C680");
expect(() => {ms932Encoder.encode("\uC681")}).to.throw(Error, "EncodingError U+C681");
expect(() => {ms932Encoder.encode("\uC682")}).to.throw(Error, "EncodingError U+C682");
expect(() => {ms932Encoder.encode("\uC683")}).to.throw(Error, "EncodingError U+C683");
expect(() => {ms932Encoder.encode("\uC684")}).to.throw(Error, "EncodingError U+C684");
expect(() => {ms932Encoder.encode("\uC685")}).to.throw(Error, "EncodingError U+C685");
expect(() => {ms932Encoder.encode("\uC686")}).to.throw(Error, "EncodingError U+C686");
expect(() => {ms932Encoder.encode("\uC687")}).to.throw(Error, "EncodingError U+C687");
expect(() => {ms932Encoder.encode("\uC688")}).to.throw(Error, "EncodingError U+C688");
expect(() => {ms932Encoder.encode("\uC689")}).to.throw(Error, "EncodingError U+C689");
expect(() => {ms932Encoder.encode("\uC68A")}).to.throw(Error, "EncodingError U+C68A");
expect(() => {ms932Encoder.encode("\uC68B")}).to.throw(Error, "EncodingError U+C68B");
expect(() => {ms932Encoder.encode("\uC68C")}).to.throw(Error, "EncodingError U+C68C");
expect(() => {ms932Encoder.encode("\uC68D")}).to.throw(Error, "EncodingError U+C68D");
expect(() => {ms932Encoder.encode("\uC68E")}).to.throw(Error, "EncodingError U+C68E");
expect(() => {ms932Encoder.encode("\uC68F")}).to.throw(Error, "EncodingError U+C68F");
expect(() => {ms932Encoder.encode("\uC690")}).to.throw(Error, "EncodingError U+C690");
expect(() => {ms932Encoder.encode("\uC691")}).to.throw(Error, "EncodingError U+C691");
expect(() => {ms932Encoder.encode("\uC692")}).to.throw(Error, "EncodingError U+C692");
expect(() => {ms932Encoder.encode("\uC693")}).to.throw(Error, "EncodingError U+C693");
expect(() => {ms932Encoder.encode("\uC694")}).to.throw(Error, "EncodingError U+C694");
expect(() => {ms932Encoder.encode("\uC695")}).to.throw(Error, "EncodingError U+C695");
expect(() => {ms932Encoder.encode("\uC696")}).to.throw(Error, "EncodingError U+C696");
expect(() => {ms932Encoder.encode("\uC697")}).to.throw(Error, "EncodingError U+C697");
expect(() => {ms932Encoder.encode("\uC698")}).to.throw(Error, "EncodingError U+C698");
expect(() => {ms932Encoder.encode("\uC699")}).to.throw(Error, "EncodingError U+C699");
expect(() => {ms932Encoder.encode("\uC69A")}).to.throw(Error, "EncodingError U+C69A");
expect(() => {ms932Encoder.encode("\uC69B")}).to.throw(Error, "EncodingError U+C69B");
expect(() => {ms932Encoder.encode("\uC69C")}).to.throw(Error, "EncodingError U+C69C");
expect(() => {ms932Encoder.encode("\uC69D")}).to.throw(Error, "EncodingError U+C69D");
expect(() => {ms932Encoder.encode("\uC69E")}).to.throw(Error, "EncodingError U+C69E");
expect(() => {ms932Encoder.encode("\uC69F")}).to.throw(Error, "EncodingError U+C69F");
expect(() => {ms932Encoder.encode("\uC6A0")}).to.throw(Error, "EncodingError U+C6A0");
expect(() => {ms932Encoder.encode("\uC6A1")}).to.throw(Error, "EncodingError U+C6A1");
expect(() => {ms932Encoder.encode("\uC6A2")}).to.throw(Error, "EncodingError U+C6A2");
expect(() => {ms932Encoder.encode("\uC6A3")}).to.throw(Error, "EncodingError U+C6A3");
expect(() => {ms932Encoder.encode("\uC6A4")}).to.throw(Error, "EncodingError U+C6A4");
expect(() => {ms932Encoder.encode("\uC6A5")}).to.throw(Error, "EncodingError U+C6A5");
expect(() => {ms932Encoder.encode("\uC6A6")}).to.throw(Error, "EncodingError U+C6A6");
expect(() => {ms932Encoder.encode("\uC6A7")}).to.throw(Error, "EncodingError U+C6A7");
expect(() => {ms932Encoder.encode("\uC6A8")}).to.throw(Error, "EncodingError U+C6A8");
expect(() => {ms932Encoder.encode("\uC6A9")}).to.throw(Error, "EncodingError U+C6A9");
expect(() => {ms932Encoder.encode("\uC6AA")}).to.throw(Error, "EncodingError U+C6AA");
expect(() => {ms932Encoder.encode("\uC6AB")}).to.throw(Error, "EncodingError U+C6AB");
expect(() => {ms932Encoder.encode("\uC6AC")}).to.throw(Error, "EncodingError U+C6AC");
expect(() => {ms932Encoder.encode("\uC6AD")}).to.throw(Error, "EncodingError U+C6AD");
expect(() => {ms932Encoder.encode("\uC6AE")}).to.throw(Error, "EncodingError U+C6AE");
expect(() => {ms932Encoder.encode("\uC6AF")}).to.throw(Error, "EncodingError U+C6AF");
expect(() => {ms932Encoder.encode("\uC6B0")}).to.throw(Error, "EncodingError U+C6B0");
expect(() => {ms932Encoder.encode("\uC6B1")}).to.throw(Error, "EncodingError U+C6B1");
expect(() => {ms932Encoder.encode("\uC6B2")}).to.throw(Error, "EncodingError U+C6B2");
expect(() => {ms932Encoder.encode("\uC6B3")}).to.throw(Error, "EncodingError U+C6B3");
expect(() => {ms932Encoder.encode("\uC6B4")}).to.throw(Error, "EncodingError U+C6B4");
expect(() => {ms932Encoder.encode("\uC6B5")}).to.throw(Error, "EncodingError U+C6B5");
expect(() => {ms932Encoder.encode("\uC6B6")}).to.throw(Error, "EncodingError U+C6B6");
expect(() => {ms932Encoder.encode("\uC6B7")}).to.throw(Error, "EncodingError U+C6B7");
expect(() => {ms932Encoder.encode("\uC6B8")}).to.throw(Error, "EncodingError U+C6B8");
expect(() => {ms932Encoder.encode("\uC6B9")}).to.throw(Error, "EncodingError U+C6B9");
expect(() => {ms932Encoder.encode("\uC6BA")}).to.throw(Error, "EncodingError U+C6BA");
expect(() => {ms932Encoder.encode("\uC6BB")}).to.throw(Error, "EncodingError U+C6BB");
expect(() => {ms932Encoder.encode("\uC6BC")}).to.throw(Error, "EncodingError U+C6BC");
expect(() => {ms932Encoder.encode("\uC6BD")}).to.throw(Error, "EncodingError U+C6BD");
expect(() => {ms932Encoder.encode("\uC6BE")}).to.throw(Error, "EncodingError U+C6BE");
expect(() => {ms932Encoder.encode("\uC6BF")}).to.throw(Error, "EncodingError U+C6BF");
expect(() => {ms932Encoder.encode("\uC6C0")}).to.throw(Error, "EncodingError U+C6C0");
expect(() => {ms932Encoder.encode("\uC6C1")}).to.throw(Error, "EncodingError U+C6C1");
expect(() => {ms932Encoder.encode("\uC6C2")}).to.throw(Error, "EncodingError U+C6C2");
expect(() => {ms932Encoder.encode("\uC6C3")}).to.throw(Error, "EncodingError U+C6C3");
expect(() => {ms932Encoder.encode("\uC6C4")}).to.throw(Error, "EncodingError U+C6C4");
expect(() => {ms932Encoder.encode("\uC6C5")}).to.throw(Error, "EncodingError U+C6C5");
expect(() => {ms932Encoder.encode("\uC6C6")}).to.throw(Error, "EncodingError U+C6C6");
expect(() => {ms932Encoder.encode("\uC6C7")}).to.throw(Error, "EncodingError U+C6C7");
expect(() => {ms932Encoder.encode("\uC6C8")}).to.throw(Error, "EncodingError U+C6C8");
expect(() => {ms932Encoder.encode("\uC6C9")}).to.throw(Error, "EncodingError U+C6C9");
expect(() => {ms932Encoder.encode("\uC6CA")}).to.throw(Error, "EncodingError U+C6CA");
expect(() => {ms932Encoder.encode("\uC6CB")}).to.throw(Error, "EncodingError U+C6CB");
expect(() => {ms932Encoder.encode("\uC6CC")}).to.throw(Error, "EncodingError U+C6CC");
expect(() => {ms932Encoder.encode("\uC6CD")}).to.throw(Error, "EncodingError U+C6CD");
expect(() => {ms932Encoder.encode("\uC6CE")}).to.throw(Error, "EncodingError U+C6CE");
expect(() => {ms932Encoder.encode("\uC6CF")}).to.throw(Error, "EncodingError U+C6CF");
expect(() => {ms932Encoder.encode("\uC6D0")}).to.throw(Error, "EncodingError U+C6D0");
expect(() => {ms932Encoder.encode("\uC6D1")}).to.throw(Error, "EncodingError U+C6D1");
expect(() => {ms932Encoder.encode("\uC6D2")}).to.throw(Error, "EncodingError U+C6D2");
expect(() => {ms932Encoder.encode("\uC6D3")}).to.throw(Error, "EncodingError U+C6D3");
expect(() => {ms932Encoder.encode("\uC6D4")}).to.throw(Error, "EncodingError U+C6D4");
expect(() => {ms932Encoder.encode("\uC6D5")}).to.throw(Error, "EncodingError U+C6D5");
expect(() => {ms932Encoder.encode("\uC6D6")}).to.throw(Error, "EncodingError U+C6D6");
expect(() => {ms932Encoder.encode("\uC6D7")}).to.throw(Error, "EncodingError U+C6D7");
expect(() => {ms932Encoder.encode("\uC6D8")}).to.throw(Error, "EncodingError U+C6D8");
expect(() => {ms932Encoder.encode("\uC6D9")}).to.throw(Error, "EncodingError U+C6D9");
expect(() => {ms932Encoder.encode("\uC6DA")}).to.throw(Error, "EncodingError U+C6DA");
expect(() => {ms932Encoder.encode("\uC6DB")}).to.throw(Error, "EncodingError U+C6DB");
expect(() => {ms932Encoder.encode("\uC6DC")}).to.throw(Error, "EncodingError U+C6DC");
expect(() => {ms932Encoder.encode("\uC6DD")}).to.throw(Error, "EncodingError U+C6DD");
expect(() => {ms932Encoder.encode("\uC6DE")}).to.throw(Error, "EncodingError U+C6DE");
expect(() => {ms932Encoder.encode("\uC6DF")}).to.throw(Error, "EncodingError U+C6DF");
expect(() => {ms932Encoder.encode("\uC6E0")}).to.throw(Error, "EncodingError U+C6E0");
expect(() => {ms932Encoder.encode("\uC6E1")}).to.throw(Error, "EncodingError U+C6E1");
expect(() => {ms932Encoder.encode("\uC6E2")}).to.throw(Error, "EncodingError U+C6E2");
expect(() => {ms932Encoder.encode("\uC6E3")}).to.throw(Error, "EncodingError U+C6E3");
expect(() => {ms932Encoder.encode("\uC6E4")}).to.throw(Error, "EncodingError U+C6E4");
expect(() => {ms932Encoder.encode("\uC6E5")}).to.throw(Error, "EncodingError U+C6E5");
expect(() => {ms932Encoder.encode("\uC6E6")}).to.throw(Error, "EncodingError U+C6E6");
expect(() => {ms932Encoder.encode("\uC6E7")}).to.throw(Error, "EncodingError U+C6E7");
expect(() => {ms932Encoder.encode("\uC6E8")}).to.throw(Error, "EncodingError U+C6E8");
expect(() => {ms932Encoder.encode("\uC6E9")}).to.throw(Error, "EncodingError U+C6E9");
expect(() => {ms932Encoder.encode("\uC6EA")}).to.throw(Error, "EncodingError U+C6EA");
expect(() => {ms932Encoder.encode("\uC6EB")}).to.throw(Error, "EncodingError U+C6EB");
expect(() => {ms932Encoder.encode("\uC6EC")}).to.throw(Error, "EncodingError U+C6EC");
expect(() => {ms932Encoder.encode("\uC6ED")}).to.throw(Error, "EncodingError U+C6ED");
expect(() => {ms932Encoder.encode("\uC6EE")}).to.throw(Error, "EncodingError U+C6EE");
expect(() => {ms932Encoder.encode("\uC6EF")}).to.throw(Error, "EncodingError U+C6EF");
expect(() => {ms932Encoder.encode("\uC6F0")}).to.throw(Error, "EncodingError U+C6F0");
expect(() => {ms932Encoder.encode("\uC6F1")}).to.throw(Error, "EncodingError U+C6F1");
expect(() => {ms932Encoder.encode("\uC6F2")}).to.throw(Error, "EncodingError U+C6F2");
expect(() => {ms932Encoder.encode("\uC6F3")}).to.throw(Error, "EncodingError U+C6F3");
expect(() => {ms932Encoder.encode("\uC6F4")}).to.throw(Error, "EncodingError U+C6F4");
expect(() => {ms932Encoder.encode("\uC6F5")}).to.throw(Error, "EncodingError U+C6F5");
expect(() => {ms932Encoder.encode("\uC6F6")}).to.throw(Error, "EncodingError U+C6F6");
expect(() => {ms932Encoder.encode("\uC6F7")}).to.throw(Error, "EncodingError U+C6F7");
expect(() => {ms932Encoder.encode("\uC6F8")}).to.throw(Error, "EncodingError U+C6F8");
expect(() => {ms932Encoder.encode("\uC6F9")}).to.throw(Error, "EncodingError U+C6F9");
expect(() => {ms932Encoder.encode("\uC6FA")}).to.throw(Error, "EncodingError U+C6FA");
expect(() => {ms932Encoder.encode("\uC6FB")}).to.throw(Error, "EncodingError U+C6FB");
expect(() => {ms932Encoder.encode("\uC6FC")}).to.throw(Error, "EncodingError U+C6FC");
expect(() => {ms932Encoder.encode("\uC6FD")}).to.throw(Error, "EncodingError U+C6FD");
expect(() => {ms932Encoder.encode("\uC6FE")}).to.throw(Error, "EncodingError U+C6FE");
expect(() => {ms932Encoder.encode("\uC6FF")}).to.throw(Error, "EncodingError U+C6FF");
expect(() => {ms932Encoder.encode("\uC700")}).to.throw(Error, "EncodingError U+C700");
expect(() => {ms932Encoder.encode("\uC701")}).to.throw(Error, "EncodingError U+C701");
expect(() => {ms932Encoder.encode("\uC702")}).to.throw(Error, "EncodingError U+C702");
expect(() => {ms932Encoder.encode("\uC703")}).to.throw(Error, "EncodingError U+C703");
expect(() => {ms932Encoder.encode("\uC704")}).to.throw(Error, "EncodingError U+C704");
expect(() => {ms932Encoder.encode("\uC705")}).to.throw(Error, "EncodingError U+C705");
expect(() => {ms932Encoder.encode("\uC706")}).to.throw(Error, "EncodingError U+C706");
expect(() => {ms932Encoder.encode("\uC707")}).to.throw(Error, "EncodingError U+C707");
expect(() => {ms932Encoder.encode("\uC708")}).to.throw(Error, "EncodingError U+C708");
expect(() => {ms932Encoder.encode("\uC709")}).to.throw(Error, "EncodingError U+C709");
expect(() => {ms932Encoder.encode("\uC70A")}).to.throw(Error, "EncodingError U+C70A");
expect(() => {ms932Encoder.encode("\uC70B")}).to.throw(Error, "EncodingError U+C70B");
expect(() => {ms932Encoder.encode("\uC70C")}).to.throw(Error, "EncodingError U+C70C");
expect(() => {ms932Encoder.encode("\uC70D")}).to.throw(Error, "EncodingError U+C70D");
expect(() => {ms932Encoder.encode("\uC70E")}).to.throw(Error, "EncodingError U+C70E");
expect(() => {ms932Encoder.encode("\uC70F")}).to.throw(Error, "EncodingError U+C70F");
expect(() => {ms932Encoder.encode("\uC710")}).to.throw(Error, "EncodingError U+C710");
expect(() => {ms932Encoder.encode("\uC711")}).to.throw(Error, "EncodingError U+C711");
expect(() => {ms932Encoder.encode("\uC712")}).to.throw(Error, "EncodingError U+C712");
expect(() => {ms932Encoder.encode("\uC713")}).to.throw(Error, "EncodingError U+C713");
expect(() => {ms932Encoder.encode("\uC714")}).to.throw(Error, "EncodingError U+C714");
expect(() => {ms932Encoder.encode("\uC715")}).to.throw(Error, "EncodingError U+C715");
expect(() => {ms932Encoder.encode("\uC716")}).to.throw(Error, "EncodingError U+C716");
expect(() => {ms932Encoder.encode("\uC717")}).to.throw(Error, "EncodingError U+C717");
expect(() => {ms932Encoder.encode("\uC718")}).to.throw(Error, "EncodingError U+C718");
expect(() => {ms932Encoder.encode("\uC719")}).to.throw(Error, "EncodingError U+C719");
expect(() => {ms932Encoder.encode("\uC71A")}).to.throw(Error, "EncodingError U+C71A");
expect(() => {ms932Encoder.encode("\uC71B")}).to.throw(Error, "EncodingError U+C71B");
expect(() => {ms932Encoder.encode("\uC71C")}).to.throw(Error, "EncodingError U+C71C");
expect(() => {ms932Encoder.encode("\uC71D")}).to.throw(Error, "EncodingError U+C71D");
expect(() => {ms932Encoder.encode("\uC71E")}).to.throw(Error, "EncodingError U+C71E");
expect(() => {ms932Encoder.encode("\uC71F")}).to.throw(Error, "EncodingError U+C71F");
expect(() => {ms932Encoder.encode("\uC720")}).to.throw(Error, "EncodingError U+C720");
expect(() => {ms932Encoder.encode("\uC721")}).to.throw(Error, "EncodingError U+C721");
expect(() => {ms932Encoder.encode("\uC722")}).to.throw(Error, "EncodingError U+C722");
expect(() => {ms932Encoder.encode("\uC723")}).to.throw(Error, "EncodingError U+C723");
expect(() => {ms932Encoder.encode("\uC724")}).to.throw(Error, "EncodingError U+C724");
expect(() => {ms932Encoder.encode("\uC725")}).to.throw(Error, "EncodingError U+C725");
expect(() => {ms932Encoder.encode("\uC726")}).to.throw(Error, "EncodingError U+C726");
expect(() => {ms932Encoder.encode("\uC727")}).to.throw(Error, "EncodingError U+C727");
expect(() => {ms932Encoder.encode("\uC728")}).to.throw(Error, "EncodingError U+C728");
expect(() => {ms932Encoder.encode("\uC729")}).to.throw(Error, "EncodingError U+C729");
expect(() => {ms932Encoder.encode("\uC72A")}).to.throw(Error, "EncodingError U+C72A");
expect(() => {ms932Encoder.encode("\uC72B")}).to.throw(Error, "EncodingError U+C72B");
expect(() => {ms932Encoder.encode("\uC72C")}).to.throw(Error, "EncodingError U+C72C");
expect(() => {ms932Encoder.encode("\uC72D")}).to.throw(Error, "EncodingError U+C72D");
expect(() => {ms932Encoder.encode("\uC72E")}).to.throw(Error, "EncodingError U+C72E");
expect(() => {ms932Encoder.encode("\uC72F")}).to.throw(Error, "EncodingError U+C72F");
expect(() => {ms932Encoder.encode("\uC730")}).to.throw(Error, "EncodingError U+C730");
expect(() => {ms932Encoder.encode("\uC731")}).to.throw(Error, "EncodingError U+C731");
expect(() => {ms932Encoder.encode("\uC732")}).to.throw(Error, "EncodingError U+C732");
expect(() => {ms932Encoder.encode("\uC733")}).to.throw(Error, "EncodingError U+C733");
expect(() => {ms932Encoder.encode("\uC734")}).to.throw(Error, "EncodingError U+C734");
expect(() => {ms932Encoder.encode("\uC735")}).to.throw(Error, "EncodingError U+C735");
expect(() => {ms932Encoder.encode("\uC736")}).to.throw(Error, "EncodingError U+C736");
expect(() => {ms932Encoder.encode("\uC737")}).to.throw(Error, "EncodingError U+C737");
expect(() => {ms932Encoder.encode("\uC738")}).to.throw(Error, "EncodingError U+C738");
expect(() => {ms932Encoder.encode("\uC739")}).to.throw(Error, "EncodingError U+C739");
expect(() => {ms932Encoder.encode("\uC73A")}).to.throw(Error, "EncodingError U+C73A");
expect(() => {ms932Encoder.encode("\uC73B")}).to.throw(Error, "EncodingError U+C73B");
expect(() => {ms932Encoder.encode("\uC73C")}).to.throw(Error, "EncodingError U+C73C");
expect(() => {ms932Encoder.encode("\uC73D")}).to.throw(Error, "EncodingError U+C73D");
expect(() => {ms932Encoder.encode("\uC73E")}).to.throw(Error, "EncodingError U+C73E");
expect(() => {ms932Encoder.encode("\uC73F")}).to.throw(Error, "EncodingError U+C73F");
expect(() => {ms932Encoder.encode("\uC740")}).to.throw(Error, "EncodingError U+C740");
expect(() => {ms932Encoder.encode("\uC741")}).to.throw(Error, "EncodingError U+C741");
expect(() => {ms932Encoder.encode("\uC742")}).to.throw(Error, "EncodingError U+C742");
expect(() => {ms932Encoder.encode("\uC743")}).to.throw(Error, "EncodingError U+C743");
expect(() => {ms932Encoder.encode("\uC744")}).to.throw(Error, "EncodingError U+C744");
expect(() => {ms932Encoder.encode("\uC745")}).to.throw(Error, "EncodingError U+C745");
expect(() => {ms932Encoder.encode("\uC746")}).to.throw(Error, "EncodingError U+C746");
expect(() => {ms932Encoder.encode("\uC747")}).to.throw(Error, "EncodingError U+C747");
expect(() => {ms932Encoder.encode("\uC748")}).to.throw(Error, "EncodingError U+C748");
expect(() => {ms932Encoder.encode("\uC749")}).to.throw(Error, "EncodingError U+C749");
expect(() => {ms932Encoder.encode("\uC74A")}).to.throw(Error, "EncodingError U+C74A");
expect(() => {ms932Encoder.encode("\uC74B")}).to.throw(Error, "EncodingError U+C74B");
expect(() => {ms932Encoder.encode("\uC74C")}).to.throw(Error, "EncodingError U+C74C");
expect(() => {ms932Encoder.encode("\uC74D")}).to.throw(Error, "EncodingError U+C74D");
expect(() => {ms932Encoder.encode("\uC74E")}).to.throw(Error, "EncodingError U+C74E");
expect(() => {ms932Encoder.encode("\uC74F")}).to.throw(Error, "EncodingError U+C74F");
expect(() => {ms932Encoder.encode("\uC750")}).to.throw(Error, "EncodingError U+C750");
expect(() => {ms932Encoder.encode("\uC751")}).to.throw(Error, "EncodingError U+C751");
expect(() => {ms932Encoder.encode("\uC752")}).to.throw(Error, "EncodingError U+C752");
expect(() => {ms932Encoder.encode("\uC753")}).to.throw(Error, "EncodingError U+C753");
expect(() => {ms932Encoder.encode("\uC754")}).to.throw(Error, "EncodingError U+C754");
expect(() => {ms932Encoder.encode("\uC755")}).to.throw(Error, "EncodingError U+C755");
expect(() => {ms932Encoder.encode("\uC756")}).to.throw(Error, "EncodingError U+C756");
expect(() => {ms932Encoder.encode("\uC757")}).to.throw(Error, "EncodingError U+C757");
expect(() => {ms932Encoder.encode("\uC758")}).to.throw(Error, "EncodingError U+C758");
expect(() => {ms932Encoder.encode("\uC759")}).to.throw(Error, "EncodingError U+C759");
expect(() => {ms932Encoder.encode("\uC75A")}).to.throw(Error, "EncodingError U+C75A");
expect(() => {ms932Encoder.encode("\uC75B")}).to.throw(Error, "EncodingError U+C75B");
expect(() => {ms932Encoder.encode("\uC75C")}).to.throw(Error, "EncodingError U+C75C");
expect(() => {ms932Encoder.encode("\uC75D")}).to.throw(Error, "EncodingError U+C75D");
expect(() => {ms932Encoder.encode("\uC75E")}).to.throw(Error, "EncodingError U+C75E");
expect(() => {ms932Encoder.encode("\uC75F")}).to.throw(Error, "EncodingError U+C75F");
expect(() => {ms932Encoder.encode("\uC760")}).to.throw(Error, "EncodingError U+C760");
expect(() => {ms932Encoder.encode("\uC761")}).to.throw(Error, "EncodingError U+C761");
expect(() => {ms932Encoder.encode("\uC762")}).to.throw(Error, "EncodingError U+C762");
expect(() => {ms932Encoder.encode("\uC763")}).to.throw(Error, "EncodingError U+C763");
expect(() => {ms932Encoder.encode("\uC764")}).to.throw(Error, "EncodingError U+C764");
expect(() => {ms932Encoder.encode("\uC765")}).to.throw(Error, "EncodingError U+C765");
expect(() => {ms932Encoder.encode("\uC766")}).to.throw(Error, "EncodingError U+C766");
expect(() => {ms932Encoder.encode("\uC767")}).to.throw(Error, "EncodingError U+C767");
expect(() => {ms932Encoder.encode("\uC768")}).to.throw(Error, "EncodingError U+C768");
expect(() => {ms932Encoder.encode("\uC769")}).to.throw(Error, "EncodingError U+C769");
expect(() => {ms932Encoder.encode("\uC76A")}).to.throw(Error, "EncodingError U+C76A");
expect(() => {ms932Encoder.encode("\uC76B")}).to.throw(Error, "EncodingError U+C76B");
expect(() => {ms932Encoder.encode("\uC76C")}).to.throw(Error, "EncodingError U+C76C");
expect(() => {ms932Encoder.encode("\uC76D")}).to.throw(Error, "EncodingError U+C76D");
expect(() => {ms932Encoder.encode("\uC76E")}).to.throw(Error, "EncodingError U+C76E");
expect(() => {ms932Encoder.encode("\uC76F")}).to.throw(Error, "EncodingError U+C76F");
expect(() => {ms932Encoder.encode("\uC770")}).to.throw(Error, "EncodingError U+C770");
expect(() => {ms932Encoder.encode("\uC771")}).to.throw(Error, "EncodingError U+C771");
expect(() => {ms932Encoder.encode("\uC772")}).to.throw(Error, "EncodingError U+C772");
expect(() => {ms932Encoder.encode("\uC773")}).to.throw(Error, "EncodingError U+C773");
expect(() => {ms932Encoder.encode("\uC774")}).to.throw(Error, "EncodingError U+C774");
expect(() => {ms932Encoder.encode("\uC775")}).to.throw(Error, "EncodingError U+C775");
expect(() => {ms932Encoder.encode("\uC776")}).to.throw(Error, "EncodingError U+C776");
expect(() => {ms932Encoder.encode("\uC777")}).to.throw(Error, "EncodingError U+C777");
expect(() => {ms932Encoder.encode("\uC778")}).to.throw(Error, "EncodingError U+C778");
expect(() => {ms932Encoder.encode("\uC779")}).to.throw(Error, "EncodingError U+C779");
expect(() => {ms932Encoder.encode("\uC77A")}).to.throw(Error, "EncodingError U+C77A");
expect(() => {ms932Encoder.encode("\uC77B")}).to.throw(Error, "EncodingError U+C77B");
expect(() => {ms932Encoder.encode("\uC77C")}).to.throw(Error, "EncodingError U+C77C");
expect(() => {ms932Encoder.encode("\uC77D")}).to.throw(Error, "EncodingError U+C77D");
expect(() => {ms932Encoder.encode("\uC77E")}).to.throw(Error, "EncodingError U+C77E");
expect(() => {ms932Encoder.encode("\uC77F")}).to.throw(Error, "EncodingError U+C77F");
expect(() => {ms932Encoder.encode("\uC780")}).to.throw(Error, "EncodingError U+C780");
expect(() => {ms932Encoder.encode("\uC781")}).to.throw(Error, "EncodingError U+C781");
expect(() => {ms932Encoder.encode("\uC782")}).to.throw(Error, "EncodingError U+C782");
expect(() => {ms932Encoder.encode("\uC783")}).to.throw(Error, "EncodingError U+C783");
expect(() => {ms932Encoder.encode("\uC784")}).to.throw(Error, "EncodingError U+C784");
expect(() => {ms932Encoder.encode("\uC785")}).to.throw(Error, "EncodingError U+C785");
expect(() => {ms932Encoder.encode("\uC786")}).to.throw(Error, "EncodingError U+C786");
expect(() => {ms932Encoder.encode("\uC787")}).to.throw(Error, "EncodingError U+C787");
expect(() => {ms932Encoder.encode("\uC788")}).to.throw(Error, "EncodingError U+C788");
expect(() => {ms932Encoder.encode("\uC789")}).to.throw(Error, "EncodingError U+C789");
expect(() => {ms932Encoder.encode("\uC78A")}).to.throw(Error, "EncodingError U+C78A");
expect(() => {ms932Encoder.encode("\uC78B")}).to.throw(Error, "EncodingError U+C78B");
expect(() => {ms932Encoder.encode("\uC78C")}).to.throw(Error, "EncodingError U+C78C");
expect(() => {ms932Encoder.encode("\uC78D")}).to.throw(Error, "EncodingError U+C78D");
expect(() => {ms932Encoder.encode("\uC78E")}).to.throw(Error, "EncodingError U+C78E");
expect(() => {ms932Encoder.encode("\uC78F")}).to.throw(Error, "EncodingError U+C78F");
expect(() => {ms932Encoder.encode("\uC790")}).to.throw(Error, "EncodingError U+C790");
expect(() => {ms932Encoder.encode("\uC791")}).to.throw(Error, "EncodingError U+C791");
expect(() => {ms932Encoder.encode("\uC792")}).to.throw(Error, "EncodingError U+C792");
expect(() => {ms932Encoder.encode("\uC793")}).to.throw(Error, "EncodingError U+C793");
expect(() => {ms932Encoder.encode("\uC794")}).to.throw(Error, "EncodingError U+C794");
expect(() => {ms932Encoder.encode("\uC795")}).to.throw(Error, "EncodingError U+C795");
expect(() => {ms932Encoder.encode("\uC796")}).to.throw(Error, "EncodingError U+C796");
expect(() => {ms932Encoder.encode("\uC797")}).to.throw(Error, "EncodingError U+C797");
expect(() => {ms932Encoder.encode("\uC798")}).to.throw(Error, "EncodingError U+C798");
expect(() => {ms932Encoder.encode("\uC799")}).to.throw(Error, "EncodingError U+C799");
expect(() => {ms932Encoder.encode("\uC79A")}).to.throw(Error, "EncodingError U+C79A");
expect(() => {ms932Encoder.encode("\uC79B")}).to.throw(Error, "EncodingError U+C79B");
expect(() => {ms932Encoder.encode("\uC79C")}).to.throw(Error, "EncodingError U+C79C");
expect(() => {ms932Encoder.encode("\uC79D")}).to.throw(Error, "EncodingError U+C79D");
expect(() => {ms932Encoder.encode("\uC79E")}).to.throw(Error, "EncodingError U+C79E");
expect(() => {ms932Encoder.encode("\uC79F")}).to.throw(Error, "EncodingError U+C79F");
expect(() => {ms932Encoder.encode("\uC7A0")}).to.throw(Error, "EncodingError U+C7A0");
expect(() => {ms932Encoder.encode("\uC7A1")}).to.throw(Error, "EncodingError U+C7A1");
expect(() => {ms932Encoder.encode("\uC7A2")}).to.throw(Error, "EncodingError U+C7A2");
expect(() => {ms932Encoder.encode("\uC7A3")}).to.throw(Error, "EncodingError U+C7A3");
expect(() => {ms932Encoder.encode("\uC7A4")}).to.throw(Error, "EncodingError U+C7A4");
expect(() => {ms932Encoder.encode("\uC7A5")}).to.throw(Error, "EncodingError U+C7A5");
expect(() => {ms932Encoder.encode("\uC7A6")}).to.throw(Error, "EncodingError U+C7A6");
expect(() => {ms932Encoder.encode("\uC7A7")}).to.throw(Error, "EncodingError U+C7A7");
expect(() => {ms932Encoder.encode("\uC7A8")}).to.throw(Error, "EncodingError U+C7A8");
expect(() => {ms932Encoder.encode("\uC7A9")}).to.throw(Error, "EncodingError U+C7A9");
expect(() => {ms932Encoder.encode("\uC7AA")}).to.throw(Error, "EncodingError U+C7AA");
expect(() => {ms932Encoder.encode("\uC7AB")}).to.throw(Error, "EncodingError U+C7AB");
expect(() => {ms932Encoder.encode("\uC7AC")}).to.throw(Error, "EncodingError U+C7AC");
expect(() => {ms932Encoder.encode("\uC7AD")}).to.throw(Error, "EncodingError U+C7AD");
expect(() => {ms932Encoder.encode("\uC7AE")}).to.throw(Error, "EncodingError U+C7AE");
expect(() => {ms932Encoder.encode("\uC7AF")}).to.throw(Error, "EncodingError U+C7AF");
expect(() => {ms932Encoder.encode("\uC7B0")}).to.throw(Error, "EncodingError U+C7B0");
expect(() => {ms932Encoder.encode("\uC7B1")}).to.throw(Error, "EncodingError U+C7B1");
expect(() => {ms932Encoder.encode("\uC7B2")}).to.throw(Error, "EncodingError U+C7B2");
expect(() => {ms932Encoder.encode("\uC7B3")}).to.throw(Error, "EncodingError U+C7B3");
expect(() => {ms932Encoder.encode("\uC7B4")}).to.throw(Error, "EncodingError U+C7B4");
expect(() => {ms932Encoder.encode("\uC7B5")}).to.throw(Error, "EncodingError U+C7B5");
expect(() => {ms932Encoder.encode("\uC7B6")}).to.throw(Error, "EncodingError U+C7B6");
expect(() => {ms932Encoder.encode("\uC7B7")}).to.throw(Error, "EncodingError U+C7B7");
expect(() => {ms932Encoder.encode("\uC7B8")}).to.throw(Error, "EncodingError U+C7B8");
expect(() => {ms932Encoder.encode("\uC7B9")}).to.throw(Error, "EncodingError U+C7B9");
expect(() => {ms932Encoder.encode("\uC7BA")}).to.throw(Error, "EncodingError U+C7BA");
expect(() => {ms932Encoder.encode("\uC7BB")}).to.throw(Error, "EncodingError U+C7BB");
expect(() => {ms932Encoder.encode("\uC7BC")}).to.throw(Error, "EncodingError U+C7BC");
expect(() => {ms932Encoder.encode("\uC7BD")}).to.throw(Error, "EncodingError U+C7BD");
expect(() => {ms932Encoder.encode("\uC7BE")}).to.throw(Error, "EncodingError U+C7BE");
expect(() => {ms932Encoder.encode("\uC7BF")}).to.throw(Error, "EncodingError U+C7BF");
expect(() => {ms932Encoder.encode("\uC7C0")}).to.throw(Error, "EncodingError U+C7C0");
expect(() => {ms932Encoder.encode("\uC7C1")}).to.throw(Error, "EncodingError U+C7C1");
expect(() => {ms932Encoder.encode("\uC7C2")}).to.throw(Error, "EncodingError U+C7C2");
expect(() => {ms932Encoder.encode("\uC7C3")}).to.throw(Error, "EncodingError U+C7C3");
expect(() => {ms932Encoder.encode("\uC7C4")}).to.throw(Error, "EncodingError U+C7C4");
expect(() => {ms932Encoder.encode("\uC7C5")}).to.throw(Error, "EncodingError U+C7C5");
expect(() => {ms932Encoder.encode("\uC7C6")}).to.throw(Error, "EncodingError U+C7C6");
expect(() => {ms932Encoder.encode("\uC7C7")}).to.throw(Error, "EncodingError U+C7C7");
expect(() => {ms932Encoder.encode("\uC7C8")}).to.throw(Error, "EncodingError U+C7C8");
expect(() => {ms932Encoder.encode("\uC7C9")}).to.throw(Error, "EncodingError U+C7C9");
expect(() => {ms932Encoder.encode("\uC7CA")}).to.throw(Error, "EncodingError U+C7CA");
expect(() => {ms932Encoder.encode("\uC7CB")}).to.throw(Error, "EncodingError U+C7CB");
expect(() => {ms932Encoder.encode("\uC7CC")}).to.throw(Error, "EncodingError U+C7CC");
expect(() => {ms932Encoder.encode("\uC7CD")}).to.throw(Error, "EncodingError U+C7CD");
expect(() => {ms932Encoder.encode("\uC7CE")}).to.throw(Error, "EncodingError U+C7CE");
expect(() => {ms932Encoder.encode("\uC7CF")}).to.throw(Error, "EncodingError U+C7CF");
expect(() => {ms932Encoder.encode("\uC7D0")}).to.throw(Error, "EncodingError U+C7D0");
expect(() => {ms932Encoder.encode("\uC7D1")}).to.throw(Error, "EncodingError U+C7D1");
expect(() => {ms932Encoder.encode("\uC7D2")}).to.throw(Error, "EncodingError U+C7D2");
expect(() => {ms932Encoder.encode("\uC7D3")}).to.throw(Error, "EncodingError U+C7D3");
expect(() => {ms932Encoder.encode("\uC7D4")}).to.throw(Error, "EncodingError U+C7D4");
expect(() => {ms932Encoder.encode("\uC7D5")}).to.throw(Error, "EncodingError U+C7D5");
expect(() => {ms932Encoder.encode("\uC7D6")}).to.throw(Error, "EncodingError U+C7D6");
expect(() => {ms932Encoder.encode("\uC7D7")}).to.throw(Error, "EncodingError U+C7D7");
expect(() => {ms932Encoder.encode("\uC7D8")}).to.throw(Error, "EncodingError U+C7D8");
expect(() => {ms932Encoder.encode("\uC7D9")}).to.throw(Error, "EncodingError U+C7D9");
expect(() => {ms932Encoder.encode("\uC7DA")}).to.throw(Error, "EncodingError U+C7DA");
expect(() => {ms932Encoder.encode("\uC7DB")}).to.throw(Error, "EncodingError U+C7DB");
expect(() => {ms932Encoder.encode("\uC7DC")}).to.throw(Error, "EncodingError U+C7DC");
expect(() => {ms932Encoder.encode("\uC7DD")}).to.throw(Error, "EncodingError U+C7DD");
expect(() => {ms932Encoder.encode("\uC7DE")}).to.throw(Error, "EncodingError U+C7DE");
expect(() => {ms932Encoder.encode("\uC7DF")}).to.throw(Error, "EncodingError U+C7DF");
expect(() => {ms932Encoder.encode("\uC7E0")}).to.throw(Error, "EncodingError U+C7E0");
expect(() => {ms932Encoder.encode("\uC7E1")}).to.throw(Error, "EncodingError U+C7E1");
expect(() => {ms932Encoder.encode("\uC7E2")}).to.throw(Error, "EncodingError U+C7E2");
expect(() => {ms932Encoder.encode("\uC7E3")}).to.throw(Error, "EncodingError U+C7E3");
expect(() => {ms932Encoder.encode("\uC7E4")}).to.throw(Error, "EncodingError U+C7E4");
expect(() => {ms932Encoder.encode("\uC7E5")}).to.throw(Error, "EncodingError U+C7E5");
expect(() => {ms932Encoder.encode("\uC7E6")}).to.throw(Error, "EncodingError U+C7E6");
expect(() => {ms932Encoder.encode("\uC7E7")}).to.throw(Error, "EncodingError U+C7E7");
expect(() => {ms932Encoder.encode("\uC7E8")}).to.throw(Error, "EncodingError U+C7E8");
expect(() => {ms932Encoder.encode("\uC7E9")}).to.throw(Error, "EncodingError U+C7E9");
expect(() => {ms932Encoder.encode("\uC7EA")}).to.throw(Error, "EncodingError U+C7EA");
expect(() => {ms932Encoder.encode("\uC7EB")}).to.throw(Error, "EncodingError U+C7EB");
expect(() => {ms932Encoder.encode("\uC7EC")}).to.throw(Error, "EncodingError U+C7EC");
expect(() => {ms932Encoder.encode("\uC7ED")}).to.throw(Error, "EncodingError U+C7ED");
expect(() => {ms932Encoder.encode("\uC7EE")}).to.throw(Error, "EncodingError U+C7EE");
expect(() => {ms932Encoder.encode("\uC7EF")}).to.throw(Error, "EncodingError U+C7EF");
expect(() => {ms932Encoder.encode("\uC7F0")}).to.throw(Error, "EncodingError U+C7F0");
expect(() => {ms932Encoder.encode("\uC7F1")}).to.throw(Error, "EncodingError U+C7F1");
expect(() => {ms932Encoder.encode("\uC7F2")}).to.throw(Error, "EncodingError U+C7F2");
expect(() => {ms932Encoder.encode("\uC7F3")}).to.throw(Error, "EncodingError U+C7F3");
expect(() => {ms932Encoder.encode("\uC7F4")}).to.throw(Error, "EncodingError U+C7F4");
expect(() => {ms932Encoder.encode("\uC7F5")}).to.throw(Error, "EncodingError U+C7F5");
expect(() => {ms932Encoder.encode("\uC7F6")}).to.throw(Error, "EncodingError U+C7F6");
expect(() => {ms932Encoder.encode("\uC7F7")}).to.throw(Error, "EncodingError U+C7F7");
expect(() => {ms932Encoder.encode("\uC7F8")}).to.throw(Error, "EncodingError U+C7F8");
expect(() => {ms932Encoder.encode("\uC7F9")}).to.throw(Error, "EncodingError U+C7F9");
expect(() => {ms932Encoder.encode("\uC7FA")}).to.throw(Error, "EncodingError U+C7FA");
expect(() => {ms932Encoder.encode("\uC7FB")}).to.throw(Error, "EncodingError U+C7FB");
expect(() => {ms932Encoder.encode("\uC7FC")}).to.throw(Error, "EncodingError U+C7FC");
expect(() => {ms932Encoder.encode("\uC7FD")}).to.throw(Error, "EncodingError U+C7FD");
expect(() => {ms932Encoder.encode("\uC7FE")}).to.throw(Error, "EncodingError U+C7FE");
expect(() => {ms932Encoder.encode("\uC7FF")}).to.throw(Error, "EncodingError U+C7FF");
expect(() => {ms932Encoder.encode("\uC800")}).to.throw(Error, "EncodingError U+C800");
expect(() => {ms932Encoder.encode("\uC801")}).to.throw(Error, "EncodingError U+C801");
expect(() => {ms932Encoder.encode("\uC802")}).to.throw(Error, "EncodingError U+C802");
expect(() => {ms932Encoder.encode("\uC803")}).to.throw(Error, "EncodingError U+C803");
expect(() => {ms932Encoder.encode("\uC804")}).to.throw(Error, "EncodingError U+C804");
expect(() => {ms932Encoder.encode("\uC805")}).to.throw(Error, "EncodingError U+C805");
expect(() => {ms932Encoder.encode("\uC806")}).to.throw(Error, "EncodingError U+C806");
expect(() => {ms932Encoder.encode("\uC807")}).to.throw(Error, "EncodingError U+C807");
expect(() => {ms932Encoder.encode("\uC808")}).to.throw(Error, "EncodingError U+C808");
expect(() => {ms932Encoder.encode("\uC809")}).to.throw(Error, "EncodingError U+C809");
expect(() => {ms932Encoder.encode("\uC80A")}).to.throw(Error, "EncodingError U+C80A");
expect(() => {ms932Encoder.encode("\uC80B")}).to.throw(Error, "EncodingError U+C80B");
expect(() => {ms932Encoder.encode("\uC80C")}).to.throw(Error, "EncodingError U+C80C");
expect(() => {ms932Encoder.encode("\uC80D")}).to.throw(Error, "EncodingError U+C80D");
expect(() => {ms932Encoder.encode("\uC80E")}).to.throw(Error, "EncodingError U+C80E");
expect(() => {ms932Encoder.encode("\uC80F")}).to.throw(Error, "EncodingError U+C80F");
expect(() => {ms932Encoder.encode("\uC810")}).to.throw(Error, "EncodingError U+C810");
expect(() => {ms932Encoder.encode("\uC811")}).to.throw(Error, "EncodingError U+C811");
expect(() => {ms932Encoder.encode("\uC812")}).to.throw(Error, "EncodingError U+C812");
expect(() => {ms932Encoder.encode("\uC813")}).to.throw(Error, "EncodingError U+C813");
expect(() => {ms932Encoder.encode("\uC814")}).to.throw(Error, "EncodingError U+C814");
expect(() => {ms932Encoder.encode("\uC815")}).to.throw(Error, "EncodingError U+C815");
expect(() => {ms932Encoder.encode("\uC816")}).to.throw(Error, "EncodingError U+C816");
expect(() => {ms932Encoder.encode("\uC817")}).to.throw(Error, "EncodingError U+C817");
expect(() => {ms932Encoder.encode("\uC818")}).to.throw(Error, "EncodingError U+C818");
expect(() => {ms932Encoder.encode("\uC819")}).to.throw(Error, "EncodingError U+C819");
expect(() => {ms932Encoder.encode("\uC81A")}).to.throw(Error, "EncodingError U+C81A");
expect(() => {ms932Encoder.encode("\uC81B")}).to.throw(Error, "EncodingError U+C81B");
expect(() => {ms932Encoder.encode("\uC81C")}).to.throw(Error, "EncodingError U+C81C");
expect(() => {ms932Encoder.encode("\uC81D")}).to.throw(Error, "EncodingError U+C81D");
expect(() => {ms932Encoder.encode("\uC81E")}).to.throw(Error, "EncodingError U+C81E");
expect(() => {ms932Encoder.encode("\uC81F")}).to.throw(Error, "EncodingError U+C81F");
expect(() => {ms932Encoder.encode("\uC820")}).to.throw(Error, "EncodingError U+C820");
expect(() => {ms932Encoder.encode("\uC821")}).to.throw(Error, "EncodingError U+C821");
expect(() => {ms932Encoder.encode("\uC822")}).to.throw(Error, "EncodingError U+C822");
expect(() => {ms932Encoder.encode("\uC823")}).to.throw(Error, "EncodingError U+C823");
expect(() => {ms932Encoder.encode("\uC824")}).to.throw(Error, "EncodingError U+C824");
expect(() => {ms932Encoder.encode("\uC825")}).to.throw(Error, "EncodingError U+C825");
expect(() => {ms932Encoder.encode("\uC826")}).to.throw(Error, "EncodingError U+C826");
expect(() => {ms932Encoder.encode("\uC827")}).to.throw(Error, "EncodingError U+C827");
expect(() => {ms932Encoder.encode("\uC828")}).to.throw(Error, "EncodingError U+C828");
expect(() => {ms932Encoder.encode("\uC829")}).to.throw(Error, "EncodingError U+C829");
expect(() => {ms932Encoder.encode("\uC82A")}).to.throw(Error, "EncodingError U+C82A");
expect(() => {ms932Encoder.encode("\uC82B")}).to.throw(Error, "EncodingError U+C82B");
expect(() => {ms932Encoder.encode("\uC82C")}).to.throw(Error, "EncodingError U+C82C");
expect(() => {ms932Encoder.encode("\uC82D")}).to.throw(Error, "EncodingError U+C82D");
expect(() => {ms932Encoder.encode("\uC82E")}).to.throw(Error, "EncodingError U+C82E");
expect(() => {ms932Encoder.encode("\uC82F")}).to.throw(Error, "EncodingError U+C82F");
expect(() => {ms932Encoder.encode("\uC830")}).to.throw(Error, "EncodingError U+C830");
expect(() => {ms932Encoder.encode("\uC831")}).to.throw(Error, "EncodingError U+C831");
expect(() => {ms932Encoder.encode("\uC832")}).to.throw(Error, "EncodingError U+C832");
expect(() => {ms932Encoder.encode("\uC833")}).to.throw(Error, "EncodingError U+C833");
expect(() => {ms932Encoder.encode("\uC834")}).to.throw(Error, "EncodingError U+C834");
expect(() => {ms932Encoder.encode("\uC835")}).to.throw(Error, "EncodingError U+C835");
expect(() => {ms932Encoder.encode("\uC836")}).to.throw(Error, "EncodingError U+C836");
expect(() => {ms932Encoder.encode("\uC837")}).to.throw(Error, "EncodingError U+C837");
expect(() => {ms932Encoder.encode("\uC838")}).to.throw(Error, "EncodingError U+C838");
expect(() => {ms932Encoder.encode("\uC839")}).to.throw(Error, "EncodingError U+C839");
expect(() => {ms932Encoder.encode("\uC83A")}).to.throw(Error, "EncodingError U+C83A");
expect(() => {ms932Encoder.encode("\uC83B")}).to.throw(Error, "EncodingError U+C83B");
expect(() => {ms932Encoder.encode("\uC83C")}).to.throw(Error, "EncodingError U+C83C");
expect(() => {ms932Encoder.encode("\uC83D")}).to.throw(Error, "EncodingError U+C83D");
expect(() => {ms932Encoder.encode("\uC83E")}).to.throw(Error, "EncodingError U+C83E");
expect(() => {ms932Encoder.encode("\uC83F")}).to.throw(Error, "EncodingError U+C83F");
expect(() => {ms932Encoder.encode("\uC840")}).to.throw(Error, "EncodingError U+C840");
expect(() => {ms932Encoder.encode("\uC841")}).to.throw(Error, "EncodingError U+C841");
expect(() => {ms932Encoder.encode("\uC842")}).to.throw(Error, "EncodingError U+C842");
expect(() => {ms932Encoder.encode("\uC843")}).to.throw(Error, "EncodingError U+C843");
expect(() => {ms932Encoder.encode("\uC844")}).to.throw(Error, "EncodingError U+C844");
expect(() => {ms932Encoder.encode("\uC845")}).to.throw(Error, "EncodingError U+C845");
expect(() => {ms932Encoder.encode("\uC846")}).to.throw(Error, "EncodingError U+C846");
expect(() => {ms932Encoder.encode("\uC847")}).to.throw(Error, "EncodingError U+C847");
expect(() => {ms932Encoder.encode("\uC848")}).to.throw(Error, "EncodingError U+C848");
expect(() => {ms932Encoder.encode("\uC849")}).to.throw(Error, "EncodingError U+C849");
expect(() => {ms932Encoder.encode("\uC84A")}).to.throw(Error, "EncodingError U+C84A");
expect(() => {ms932Encoder.encode("\uC84B")}).to.throw(Error, "EncodingError U+C84B");
expect(() => {ms932Encoder.encode("\uC84C")}).to.throw(Error, "EncodingError U+C84C");
expect(() => {ms932Encoder.encode("\uC84D")}).to.throw(Error, "EncodingError U+C84D");
expect(() => {ms932Encoder.encode("\uC84E")}).to.throw(Error, "EncodingError U+C84E");
expect(() => {ms932Encoder.encode("\uC84F")}).to.throw(Error, "EncodingError U+C84F");
expect(() => {ms932Encoder.encode("\uC850")}).to.throw(Error, "EncodingError U+C850");
expect(() => {ms932Encoder.encode("\uC851")}).to.throw(Error, "EncodingError U+C851");
expect(() => {ms932Encoder.encode("\uC852")}).to.throw(Error, "EncodingError U+C852");
expect(() => {ms932Encoder.encode("\uC853")}).to.throw(Error, "EncodingError U+C853");
expect(() => {ms932Encoder.encode("\uC854")}).to.throw(Error, "EncodingError U+C854");
expect(() => {ms932Encoder.encode("\uC855")}).to.throw(Error, "EncodingError U+C855");
expect(() => {ms932Encoder.encode("\uC856")}).to.throw(Error, "EncodingError U+C856");
expect(() => {ms932Encoder.encode("\uC857")}).to.throw(Error, "EncodingError U+C857");
expect(() => {ms932Encoder.encode("\uC858")}).to.throw(Error, "EncodingError U+C858");
expect(() => {ms932Encoder.encode("\uC859")}).to.throw(Error, "EncodingError U+C859");
expect(() => {ms932Encoder.encode("\uC85A")}).to.throw(Error, "EncodingError U+C85A");
expect(() => {ms932Encoder.encode("\uC85B")}).to.throw(Error, "EncodingError U+C85B");
expect(() => {ms932Encoder.encode("\uC85C")}).to.throw(Error, "EncodingError U+C85C");
expect(() => {ms932Encoder.encode("\uC85D")}).to.throw(Error, "EncodingError U+C85D");
expect(() => {ms932Encoder.encode("\uC85E")}).to.throw(Error, "EncodingError U+C85E");
expect(() => {ms932Encoder.encode("\uC85F")}).to.throw(Error, "EncodingError U+C85F");
expect(() => {ms932Encoder.encode("\uC860")}).to.throw(Error, "EncodingError U+C860");
expect(() => {ms932Encoder.encode("\uC861")}).to.throw(Error, "EncodingError U+C861");
expect(() => {ms932Encoder.encode("\uC862")}).to.throw(Error, "EncodingError U+C862");
expect(() => {ms932Encoder.encode("\uC863")}).to.throw(Error, "EncodingError U+C863");
expect(() => {ms932Encoder.encode("\uC864")}).to.throw(Error, "EncodingError U+C864");
expect(() => {ms932Encoder.encode("\uC865")}).to.throw(Error, "EncodingError U+C865");
expect(() => {ms932Encoder.encode("\uC866")}).to.throw(Error, "EncodingError U+C866");
expect(() => {ms932Encoder.encode("\uC867")}).to.throw(Error, "EncodingError U+C867");
expect(() => {ms932Encoder.encode("\uC868")}).to.throw(Error, "EncodingError U+C868");
expect(() => {ms932Encoder.encode("\uC869")}).to.throw(Error, "EncodingError U+C869");
expect(() => {ms932Encoder.encode("\uC86A")}).to.throw(Error, "EncodingError U+C86A");
expect(() => {ms932Encoder.encode("\uC86B")}).to.throw(Error, "EncodingError U+C86B");
expect(() => {ms932Encoder.encode("\uC86C")}).to.throw(Error, "EncodingError U+C86C");
expect(() => {ms932Encoder.encode("\uC86D")}).to.throw(Error, "EncodingError U+C86D");
expect(() => {ms932Encoder.encode("\uC86E")}).to.throw(Error, "EncodingError U+C86E");
expect(() => {ms932Encoder.encode("\uC86F")}).to.throw(Error, "EncodingError U+C86F");
expect(() => {ms932Encoder.encode("\uC870")}).to.throw(Error, "EncodingError U+C870");
expect(() => {ms932Encoder.encode("\uC871")}).to.throw(Error, "EncodingError U+C871");
expect(() => {ms932Encoder.encode("\uC872")}).to.throw(Error, "EncodingError U+C872");
expect(() => {ms932Encoder.encode("\uC873")}).to.throw(Error, "EncodingError U+C873");
expect(() => {ms932Encoder.encode("\uC874")}).to.throw(Error, "EncodingError U+C874");
expect(() => {ms932Encoder.encode("\uC875")}).to.throw(Error, "EncodingError U+C875");
expect(() => {ms932Encoder.encode("\uC876")}).to.throw(Error, "EncodingError U+C876");
expect(() => {ms932Encoder.encode("\uC877")}).to.throw(Error, "EncodingError U+C877");
expect(() => {ms932Encoder.encode("\uC878")}).to.throw(Error, "EncodingError U+C878");
expect(() => {ms932Encoder.encode("\uC879")}).to.throw(Error, "EncodingError U+C879");
expect(() => {ms932Encoder.encode("\uC87A")}).to.throw(Error, "EncodingError U+C87A");
expect(() => {ms932Encoder.encode("\uC87B")}).to.throw(Error, "EncodingError U+C87B");
expect(() => {ms932Encoder.encode("\uC87C")}).to.throw(Error, "EncodingError U+C87C");
expect(() => {ms932Encoder.encode("\uC87D")}).to.throw(Error, "EncodingError U+C87D");
expect(() => {ms932Encoder.encode("\uC87E")}).to.throw(Error, "EncodingError U+C87E");
expect(() => {ms932Encoder.encode("\uC87F")}).to.throw(Error, "EncodingError U+C87F");
expect(() => {ms932Encoder.encode("\uC880")}).to.throw(Error, "EncodingError U+C880");
expect(() => {ms932Encoder.encode("\uC881")}).to.throw(Error, "EncodingError U+C881");
expect(() => {ms932Encoder.encode("\uC882")}).to.throw(Error, "EncodingError U+C882");
expect(() => {ms932Encoder.encode("\uC883")}).to.throw(Error, "EncodingError U+C883");
expect(() => {ms932Encoder.encode("\uC884")}).to.throw(Error, "EncodingError U+C884");
expect(() => {ms932Encoder.encode("\uC885")}).to.throw(Error, "EncodingError U+C885");
expect(() => {ms932Encoder.encode("\uC886")}).to.throw(Error, "EncodingError U+C886");
expect(() => {ms932Encoder.encode("\uC887")}).to.throw(Error, "EncodingError U+C887");
expect(() => {ms932Encoder.encode("\uC888")}).to.throw(Error, "EncodingError U+C888");
expect(() => {ms932Encoder.encode("\uC889")}).to.throw(Error, "EncodingError U+C889");
expect(() => {ms932Encoder.encode("\uC88A")}).to.throw(Error, "EncodingError U+C88A");
expect(() => {ms932Encoder.encode("\uC88B")}).to.throw(Error, "EncodingError U+C88B");
expect(() => {ms932Encoder.encode("\uC88C")}).to.throw(Error, "EncodingError U+C88C");
expect(() => {ms932Encoder.encode("\uC88D")}).to.throw(Error, "EncodingError U+C88D");
expect(() => {ms932Encoder.encode("\uC88E")}).to.throw(Error, "EncodingError U+C88E");
expect(() => {ms932Encoder.encode("\uC88F")}).to.throw(Error, "EncodingError U+C88F");
expect(() => {ms932Encoder.encode("\uC890")}).to.throw(Error, "EncodingError U+C890");
expect(() => {ms932Encoder.encode("\uC891")}).to.throw(Error, "EncodingError U+C891");
expect(() => {ms932Encoder.encode("\uC892")}).to.throw(Error, "EncodingError U+C892");
expect(() => {ms932Encoder.encode("\uC893")}).to.throw(Error, "EncodingError U+C893");
expect(() => {ms932Encoder.encode("\uC894")}).to.throw(Error, "EncodingError U+C894");
expect(() => {ms932Encoder.encode("\uC895")}).to.throw(Error, "EncodingError U+C895");
expect(() => {ms932Encoder.encode("\uC896")}).to.throw(Error, "EncodingError U+C896");
expect(() => {ms932Encoder.encode("\uC897")}).to.throw(Error, "EncodingError U+C897");
expect(() => {ms932Encoder.encode("\uC898")}).to.throw(Error, "EncodingError U+C898");
expect(() => {ms932Encoder.encode("\uC899")}).to.throw(Error, "EncodingError U+C899");
expect(() => {ms932Encoder.encode("\uC89A")}).to.throw(Error, "EncodingError U+C89A");
expect(() => {ms932Encoder.encode("\uC89B")}).to.throw(Error, "EncodingError U+C89B");
expect(() => {ms932Encoder.encode("\uC89C")}).to.throw(Error, "EncodingError U+C89C");
expect(() => {ms932Encoder.encode("\uC89D")}).to.throw(Error, "EncodingError U+C89D");
expect(() => {ms932Encoder.encode("\uC89E")}).to.throw(Error, "EncodingError U+C89E");
expect(() => {ms932Encoder.encode("\uC89F")}).to.throw(Error, "EncodingError U+C89F");
expect(() => {ms932Encoder.encode("\uC8A0")}).to.throw(Error, "EncodingError U+C8A0");
expect(() => {ms932Encoder.encode("\uC8A1")}).to.throw(Error, "EncodingError U+C8A1");
expect(() => {ms932Encoder.encode("\uC8A2")}).to.throw(Error, "EncodingError U+C8A2");
expect(() => {ms932Encoder.encode("\uC8A3")}).to.throw(Error, "EncodingError U+C8A3");
expect(() => {ms932Encoder.encode("\uC8A4")}).to.throw(Error, "EncodingError U+C8A4");
expect(() => {ms932Encoder.encode("\uC8A5")}).to.throw(Error, "EncodingError U+C8A5");
expect(() => {ms932Encoder.encode("\uC8A6")}).to.throw(Error, "EncodingError U+C8A6");
expect(() => {ms932Encoder.encode("\uC8A7")}).to.throw(Error, "EncodingError U+C8A7");
expect(() => {ms932Encoder.encode("\uC8A8")}).to.throw(Error, "EncodingError U+C8A8");
expect(() => {ms932Encoder.encode("\uC8A9")}).to.throw(Error, "EncodingError U+C8A9");
expect(() => {ms932Encoder.encode("\uC8AA")}).to.throw(Error, "EncodingError U+C8AA");
expect(() => {ms932Encoder.encode("\uC8AB")}).to.throw(Error, "EncodingError U+C8AB");
expect(() => {ms932Encoder.encode("\uC8AC")}).to.throw(Error, "EncodingError U+C8AC");
expect(() => {ms932Encoder.encode("\uC8AD")}).to.throw(Error, "EncodingError U+C8AD");
expect(() => {ms932Encoder.encode("\uC8AE")}).to.throw(Error, "EncodingError U+C8AE");
expect(() => {ms932Encoder.encode("\uC8AF")}).to.throw(Error, "EncodingError U+C8AF");
expect(() => {ms932Encoder.encode("\uC8B0")}).to.throw(Error, "EncodingError U+C8B0");
expect(() => {ms932Encoder.encode("\uC8B1")}).to.throw(Error, "EncodingError U+C8B1");
expect(() => {ms932Encoder.encode("\uC8B2")}).to.throw(Error, "EncodingError U+C8B2");
expect(() => {ms932Encoder.encode("\uC8B3")}).to.throw(Error, "EncodingError U+C8B3");
expect(() => {ms932Encoder.encode("\uC8B4")}).to.throw(Error, "EncodingError U+C8B4");
expect(() => {ms932Encoder.encode("\uC8B5")}).to.throw(Error, "EncodingError U+C8B5");
expect(() => {ms932Encoder.encode("\uC8B6")}).to.throw(Error, "EncodingError U+C8B6");
expect(() => {ms932Encoder.encode("\uC8B7")}).to.throw(Error, "EncodingError U+C8B7");
expect(() => {ms932Encoder.encode("\uC8B8")}).to.throw(Error, "EncodingError U+C8B8");
expect(() => {ms932Encoder.encode("\uC8B9")}).to.throw(Error, "EncodingError U+C8B9");
expect(() => {ms932Encoder.encode("\uC8BA")}).to.throw(Error, "EncodingError U+C8BA");
expect(() => {ms932Encoder.encode("\uC8BB")}).to.throw(Error, "EncodingError U+C8BB");
expect(() => {ms932Encoder.encode("\uC8BC")}).to.throw(Error, "EncodingError U+C8BC");
expect(() => {ms932Encoder.encode("\uC8BD")}).to.throw(Error, "EncodingError U+C8BD");
expect(() => {ms932Encoder.encode("\uC8BE")}).to.throw(Error, "EncodingError U+C8BE");
expect(() => {ms932Encoder.encode("\uC8BF")}).to.throw(Error, "EncodingError U+C8BF");
expect(() => {ms932Encoder.encode("\uC8C0")}).to.throw(Error, "EncodingError U+C8C0");
expect(() => {ms932Encoder.encode("\uC8C1")}).to.throw(Error, "EncodingError U+C8C1");
expect(() => {ms932Encoder.encode("\uC8C2")}).to.throw(Error, "EncodingError U+C8C2");
expect(() => {ms932Encoder.encode("\uC8C3")}).to.throw(Error, "EncodingError U+C8C3");
expect(() => {ms932Encoder.encode("\uC8C4")}).to.throw(Error, "EncodingError U+C8C4");
expect(() => {ms932Encoder.encode("\uC8C5")}).to.throw(Error, "EncodingError U+C8C5");
expect(() => {ms932Encoder.encode("\uC8C6")}).to.throw(Error, "EncodingError U+C8C6");
expect(() => {ms932Encoder.encode("\uC8C7")}).to.throw(Error, "EncodingError U+C8C7");
expect(() => {ms932Encoder.encode("\uC8C8")}).to.throw(Error, "EncodingError U+C8C8");
expect(() => {ms932Encoder.encode("\uC8C9")}).to.throw(Error, "EncodingError U+C8C9");
expect(() => {ms932Encoder.encode("\uC8CA")}).to.throw(Error, "EncodingError U+C8CA");
expect(() => {ms932Encoder.encode("\uC8CB")}).to.throw(Error, "EncodingError U+C8CB");
expect(() => {ms932Encoder.encode("\uC8CC")}).to.throw(Error, "EncodingError U+C8CC");
expect(() => {ms932Encoder.encode("\uC8CD")}).to.throw(Error, "EncodingError U+C8CD");
expect(() => {ms932Encoder.encode("\uC8CE")}).to.throw(Error, "EncodingError U+C8CE");
expect(() => {ms932Encoder.encode("\uC8CF")}).to.throw(Error, "EncodingError U+C8CF");
expect(() => {ms932Encoder.encode("\uC8D0")}).to.throw(Error, "EncodingError U+C8D0");
expect(() => {ms932Encoder.encode("\uC8D1")}).to.throw(Error, "EncodingError U+C8D1");
expect(() => {ms932Encoder.encode("\uC8D2")}).to.throw(Error, "EncodingError U+C8D2");
expect(() => {ms932Encoder.encode("\uC8D3")}).to.throw(Error, "EncodingError U+C8D3");
expect(() => {ms932Encoder.encode("\uC8D4")}).to.throw(Error, "EncodingError U+C8D4");
expect(() => {ms932Encoder.encode("\uC8D5")}).to.throw(Error, "EncodingError U+C8D5");
expect(() => {ms932Encoder.encode("\uC8D6")}).to.throw(Error, "EncodingError U+C8D6");
expect(() => {ms932Encoder.encode("\uC8D7")}).to.throw(Error, "EncodingError U+C8D7");
expect(() => {ms932Encoder.encode("\uC8D8")}).to.throw(Error, "EncodingError U+C8D8");
expect(() => {ms932Encoder.encode("\uC8D9")}).to.throw(Error, "EncodingError U+C8D9");
expect(() => {ms932Encoder.encode("\uC8DA")}).to.throw(Error, "EncodingError U+C8DA");
expect(() => {ms932Encoder.encode("\uC8DB")}).to.throw(Error, "EncodingError U+C8DB");
expect(() => {ms932Encoder.encode("\uC8DC")}).to.throw(Error, "EncodingError U+C8DC");
expect(() => {ms932Encoder.encode("\uC8DD")}).to.throw(Error, "EncodingError U+C8DD");
expect(() => {ms932Encoder.encode("\uC8DE")}).to.throw(Error, "EncodingError U+C8DE");
expect(() => {ms932Encoder.encode("\uC8DF")}).to.throw(Error, "EncodingError U+C8DF");
expect(() => {ms932Encoder.encode("\uC8E0")}).to.throw(Error, "EncodingError U+C8E0");
expect(() => {ms932Encoder.encode("\uC8E1")}).to.throw(Error, "EncodingError U+C8E1");
expect(() => {ms932Encoder.encode("\uC8E2")}).to.throw(Error, "EncodingError U+C8E2");
expect(() => {ms932Encoder.encode("\uC8E3")}).to.throw(Error, "EncodingError U+C8E3");
expect(() => {ms932Encoder.encode("\uC8E4")}).to.throw(Error, "EncodingError U+C8E4");
expect(() => {ms932Encoder.encode("\uC8E5")}).to.throw(Error, "EncodingError U+C8E5");
expect(() => {ms932Encoder.encode("\uC8E6")}).to.throw(Error, "EncodingError U+C8E6");
expect(() => {ms932Encoder.encode("\uC8E7")}).to.throw(Error, "EncodingError U+C8E7");
expect(() => {ms932Encoder.encode("\uC8E8")}).to.throw(Error, "EncodingError U+C8E8");
expect(() => {ms932Encoder.encode("\uC8E9")}).to.throw(Error, "EncodingError U+C8E9");
expect(() => {ms932Encoder.encode("\uC8EA")}).to.throw(Error, "EncodingError U+C8EA");
expect(() => {ms932Encoder.encode("\uC8EB")}).to.throw(Error, "EncodingError U+C8EB");
expect(() => {ms932Encoder.encode("\uC8EC")}).to.throw(Error, "EncodingError U+C8EC");
expect(() => {ms932Encoder.encode("\uC8ED")}).to.throw(Error, "EncodingError U+C8ED");
expect(() => {ms932Encoder.encode("\uC8EE")}).to.throw(Error, "EncodingError U+C8EE");
expect(() => {ms932Encoder.encode("\uC8EF")}).to.throw(Error, "EncodingError U+C8EF");
expect(() => {ms932Encoder.encode("\uC8F0")}).to.throw(Error, "EncodingError U+C8F0");
expect(() => {ms932Encoder.encode("\uC8F1")}).to.throw(Error, "EncodingError U+C8F1");
expect(() => {ms932Encoder.encode("\uC8F2")}).to.throw(Error, "EncodingError U+C8F2");
expect(() => {ms932Encoder.encode("\uC8F3")}).to.throw(Error, "EncodingError U+C8F3");
expect(() => {ms932Encoder.encode("\uC8F4")}).to.throw(Error, "EncodingError U+C8F4");
expect(() => {ms932Encoder.encode("\uC8F5")}).to.throw(Error, "EncodingError U+C8F5");
expect(() => {ms932Encoder.encode("\uC8F6")}).to.throw(Error, "EncodingError U+C8F6");
expect(() => {ms932Encoder.encode("\uC8F7")}).to.throw(Error, "EncodingError U+C8F7");
expect(() => {ms932Encoder.encode("\uC8F8")}).to.throw(Error, "EncodingError U+C8F8");
expect(() => {ms932Encoder.encode("\uC8F9")}).to.throw(Error, "EncodingError U+C8F9");
expect(() => {ms932Encoder.encode("\uC8FA")}).to.throw(Error, "EncodingError U+C8FA");
expect(() => {ms932Encoder.encode("\uC8FB")}).to.throw(Error, "EncodingError U+C8FB");
expect(() => {ms932Encoder.encode("\uC8FC")}).to.throw(Error, "EncodingError U+C8FC");
expect(() => {ms932Encoder.encode("\uC8FD")}).to.throw(Error, "EncodingError U+C8FD");
expect(() => {ms932Encoder.encode("\uC8FE")}).to.throw(Error, "EncodingError U+C8FE");
expect(() => {ms932Encoder.encode("\uC8FF")}).to.throw(Error, "EncodingError U+C8FF");
expect(() => {ms932Encoder.encode("\uC900")}).to.throw(Error, "EncodingError U+C900");
expect(() => {ms932Encoder.encode("\uC901")}).to.throw(Error, "EncodingError U+C901");
expect(() => {ms932Encoder.encode("\uC902")}).to.throw(Error, "EncodingError U+C902");
expect(() => {ms932Encoder.encode("\uC903")}).to.throw(Error, "EncodingError U+C903");
expect(() => {ms932Encoder.encode("\uC904")}).to.throw(Error, "EncodingError U+C904");
expect(() => {ms932Encoder.encode("\uC905")}).to.throw(Error, "EncodingError U+C905");
expect(() => {ms932Encoder.encode("\uC906")}).to.throw(Error, "EncodingError U+C906");
expect(() => {ms932Encoder.encode("\uC907")}).to.throw(Error, "EncodingError U+C907");
expect(() => {ms932Encoder.encode("\uC908")}).to.throw(Error, "EncodingError U+C908");
expect(() => {ms932Encoder.encode("\uC909")}).to.throw(Error, "EncodingError U+C909");
expect(() => {ms932Encoder.encode("\uC90A")}).to.throw(Error, "EncodingError U+C90A");
expect(() => {ms932Encoder.encode("\uC90B")}).to.throw(Error, "EncodingError U+C90B");
expect(() => {ms932Encoder.encode("\uC90C")}).to.throw(Error, "EncodingError U+C90C");
expect(() => {ms932Encoder.encode("\uC90D")}).to.throw(Error, "EncodingError U+C90D");
expect(() => {ms932Encoder.encode("\uC90E")}).to.throw(Error, "EncodingError U+C90E");
expect(() => {ms932Encoder.encode("\uC90F")}).to.throw(Error, "EncodingError U+C90F");
expect(() => {ms932Encoder.encode("\uC910")}).to.throw(Error, "EncodingError U+C910");
expect(() => {ms932Encoder.encode("\uC911")}).to.throw(Error, "EncodingError U+C911");
expect(() => {ms932Encoder.encode("\uC912")}).to.throw(Error, "EncodingError U+C912");
expect(() => {ms932Encoder.encode("\uC913")}).to.throw(Error, "EncodingError U+C913");
expect(() => {ms932Encoder.encode("\uC914")}).to.throw(Error, "EncodingError U+C914");
expect(() => {ms932Encoder.encode("\uC915")}).to.throw(Error, "EncodingError U+C915");
expect(() => {ms932Encoder.encode("\uC916")}).to.throw(Error, "EncodingError U+C916");
expect(() => {ms932Encoder.encode("\uC917")}).to.throw(Error, "EncodingError U+C917");
expect(() => {ms932Encoder.encode("\uC918")}).to.throw(Error, "EncodingError U+C918");
expect(() => {ms932Encoder.encode("\uC919")}).to.throw(Error, "EncodingError U+C919");
expect(() => {ms932Encoder.encode("\uC91A")}).to.throw(Error, "EncodingError U+C91A");
expect(() => {ms932Encoder.encode("\uC91B")}).to.throw(Error, "EncodingError U+C91B");
expect(() => {ms932Encoder.encode("\uC91C")}).to.throw(Error, "EncodingError U+C91C");
expect(() => {ms932Encoder.encode("\uC91D")}).to.throw(Error, "EncodingError U+C91D");
expect(() => {ms932Encoder.encode("\uC91E")}).to.throw(Error, "EncodingError U+C91E");
expect(() => {ms932Encoder.encode("\uC91F")}).to.throw(Error, "EncodingError U+C91F");
expect(() => {ms932Encoder.encode("\uC920")}).to.throw(Error, "EncodingError U+C920");
expect(() => {ms932Encoder.encode("\uC921")}).to.throw(Error, "EncodingError U+C921");
expect(() => {ms932Encoder.encode("\uC922")}).to.throw(Error, "EncodingError U+C922");
expect(() => {ms932Encoder.encode("\uC923")}).to.throw(Error, "EncodingError U+C923");
expect(() => {ms932Encoder.encode("\uC924")}).to.throw(Error, "EncodingError U+C924");
expect(() => {ms932Encoder.encode("\uC925")}).to.throw(Error, "EncodingError U+C925");
expect(() => {ms932Encoder.encode("\uC926")}).to.throw(Error, "EncodingError U+C926");
expect(() => {ms932Encoder.encode("\uC927")}).to.throw(Error, "EncodingError U+C927");
expect(() => {ms932Encoder.encode("\uC928")}).to.throw(Error, "EncodingError U+C928");
expect(() => {ms932Encoder.encode("\uC929")}).to.throw(Error, "EncodingError U+C929");
expect(() => {ms932Encoder.encode("\uC92A")}).to.throw(Error, "EncodingError U+C92A");
expect(() => {ms932Encoder.encode("\uC92B")}).to.throw(Error, "EncodingError U+C92B");
expect(() => {ms932Encoder.encode("\uC92C")}).to.throw(Error, "EncodingError U+C92C");
expect(() => {ms932Encoder.encode("\uC92D")}).to.throw(Error, "EncodingError U+C92D");
expect(() => {ms932Encoder.encode("\uC92E")}).to.throw(Error, "EncodingError U+C92E");
expect(() => {ms932Encoder.encode("\uC92F")}).to.throw(Error, "EncodingError U+C92F");
expect(() => {ms932Encoder.encode("\uC930")}).to.throw(Error, "EncodingError U+C930");
expect(() => {ms932Encoder.encode("\uC931")}).to.throw(Error, "EncodingError U+C931");
expect(() => {ms932Encoder.encode("\uC932")}).to.throw(Error, "EncodingError U+C932");
expect(() => {ms932Encoder.encode("\uC933")}).to.throw(Error, "EncodingError U+C933");
expect(() => {ms932Encoder.encode("\uC934")}).to.throw(Error, "EncodingError U+C934");
expect(() => {ms932Encoder.encode("\uC935")}).to.throw(Error, "EncodingError U+C935");
expect(() => {ms932Encoder.encode("\uC936")}).to.throw(Error, "EncodingError U+C936");
expect(() => {ms932Encoder.encode("\uC937")}).to.throw(Error, "EncodingError U+C937");
expect(() => {ms932Encoder.encode("\uC938")}).to.throw(Error, "EncodingError U+C938");
expect(() => {ms932Encoder.encode("\uC939")}).to.throw(Error, "EncodingError U+C939");
expect(() => {ms932Encoder.encode("\uC93A")}).to.throw(Error, "EncodingError U+C93A");
expect(() => {ms932Encoder.encode("\uC93B")}).to.throw(Error, "EncodingError U+C93B");
expect(() => {ms932Encoder.encode("\uC93C")}).to.throw(Error, "EncodingError U+C93C");
expect(() => {ms932Encoder.encode("\uC93D")}).to.throw(Error, "EncodingError U+C93D");
expect(() => {ms932Encoder.encode("\uC93E")}).to.throw(Error, "EncodingError U+C93E");
expect(() => {ms932Encoder.encode("\uC93F")}).to.throw(Error, "EncodingError U+C93F");
expect(() => {ms932Encoder.encode("\uC940")}).to.throw(Error, "EncodingError U+C940");
expect(() => {ms932Encoder.encode("\uC941")}).to.throw(Error, "EncodingError U+C941");
expect(() => {ms932Encoder.encode("\uC942")}).to.throw(Error, "EncodingError U+C942");
expect(() => {ms932Encoder.encode("\uC943")}).to.throw(Error, "EncodingError U+C943");
expect(() => {ms932Encoder.encode("\uC944")}).to.throw(Error, "EncodingError U+C944");
expect(() => {ms932Encoder.encode("\uC945")}).to.throw(Error, "EncodingError U+C945");
expect(() => {ms932Encoder.encode("\uC946")}).to.throw(Error, "EncodingError U+C946");
expect(() => {ms932Encoder.encode("\uC947")}).to.throw(Error, "EncodingError U+C947");
expect(() => {ms932Encoder.encode("\uC948")}).to.throw(Error, "EncodingError U+C948");
expect(() => {ms932Encoder.encode("\uC949")}).to.throw(Error, "EncodingError U+C949");
expect(() => {ms932Encoder.encode("\uC94A")}).to.throw(Error, "EncodingError U+C94A");
expect(() => {ms932Encoder.encode("\uC94B")}).to.throw(Error, "EncodingError U+C94B");
expect(() => {ms932Encoder.encode("\uC94C")}).to.throw(Error, "EncodingError U+C94C");
expect(() => {ms932Encoder.encode("\uC94D")}).to.throw(Error, "EncodingError U+C94D");
expect(() => {ms932Encoder.encode("\uC94E")}).to.throw(Error, "EncodingError U+C94E");
expect(() => {ms932Encoder.encode("\uC94F")}).to.throw(Error, "EncodingError U+C94F");
expect(() => {ms932Encoder.encode("\uC950")}).to.throw(Error, "EncodingError U+C950");
expect(() => {ms932Encoder.encode("\uC951")}).to.throw(Error, "EncodingError U+C951");
expect(() => {ms932Encoder.encode("\uC952")}).to.throw(Error, "EncodingError U+C952");
expect(() => {ms932Encoder.encode("\uC953")}).to.throw(Error, "EncodingError U+C953");
expect(() => {ms932Encoder.encode("\uC954")}).to.throw(Error, "EncodingError U+C954");
expect(() => {ms932Encoder.encode("\uC955")}).to.throw(Error, "EncodingError U+C955");
expect(() => {ms932Encoder.encode("\uC956")}).to.throw(Error, "EncodingError U+C956");
expect(() => {ms932Encoder.encode("\uC957")}).to.throw(Error, "EncodingError U+C957");
expect(() => {ms932Encoder.encode("\uC958")}).to.throw(Error, "EncodingError U+C958");
expect(() => {ms932Encoder.encode("\uC959")}).to.throw(Error, "EncodingError U+C959");
expect(() => {ms932Encoder.encode("\uC95A")}).to.throw(Error, "EncodingError U+C95A");
expect(() => {ms932Encoder.encode("\uC95B")}).to.throw(Error, "EncodingError U+C95B");
expect(() => {ms932Encoder.encode("\uC95C")}).to.throw(Error, "EncodingError U+C95C");
expect(() => {ms932Encoder.encode("\uC95D")}).to.throw(Error, "EncodingError U+C95D");
expect(() => {ms932Encoder.encode("\uC95E")}).to.throw(Error, "EncodingError U+C95E");
expect(() => {ms932Encoder.encode("\uC95F")}).to.throw(Error, "EncodingError U+C95F");
expect(() => {ms932Encoder.encode("\uC960")}).to.throw(Error, "EncodingError U+C960");
expect(() => {ms932Encoder.encode("\uC961")}).to.throw(Error, "EncodingError U+C961");
expect(() => {ms932Encoder.encode("\uC962")}).to.throw(Error, "EncodingError U+C962");
expect(() => {ms932Encoder.encode("\uC963")}).to.throw(Error, "EncodingError U+C963");
expect(() => {ms932Encoder.encode("\uC964")}).to.throw(Error, "EncodingError U+C964");
expect(() => {ms932Encoder.encode("\uC965")}).to.throw(Error, "EncodingError U+C965");
expect(() => {ms932Encoder.encode("\uC966")}).to.throw(Error, "EncodingError U+C966");
expect(() => {ms932Encoder.encode("\uC967")}).to.throw(Error, "EncodingError U+C967");
expect(() => {ms932Encoder.encode("\uC968")}).to.throw(Error, "EncodingError U+C968");
expect(() => {ms932Encoder.encode("\uC969")}).to.throw(Error, "EncodingError U+C969");
expect(() => {ms932Encoder.encode("\uC96A")}).to.throw(Error, "EncodingError U+C96A");
expect(() => {ms932Encoder.encode("\uC96B")}).to.throw(Error, "EncodingError U+C96B");
expect(() => {ms932Encoder.encode("\uC96C")}).to.throw(Error, "EncodingError U+C96C");
expect(() => {ms932Encoder.encode("\uC96D")}).to.throw(Error, "EncodingError U+C96D");
expect(() => {ms932Encoder.encode("\uC96E")}).to.throw(Error, "EncodingError U+C96E");
expect(() => {ms932Encoder.encode("\uC96F")}).to.throw(Error, "EncodingError U+C96F");
expect(() => {ms932Encoder.encode("\uC970")}).to.throw(Error, "EncodingError U+C970");
expect(() => {ms932Encoder.encode("\uC971")}).to.throw(Error, "EncodingError U+C971");
expect(() => {ms932Encoder.encode("\uC972")}).to.throw(Error, "EncodingError U+C972");
expect(() => {ms932Encoder.encode("\uC973")}).to.throw(Error, "EncodingError U+C973");
expect(() => {ms932Encoder.encode("\uC974")}).to.throw(Error, "EncodingError U+C974");
expect(() => {ms932Encoder.encode("\uC975")}).to.throw(Error, "EncodingError U+C975");
expect(() => {ms932Encoder.encode("\uC976")}).to.throw(Error, "EncodingError U+C976");
expect(() => {ms932Encoder.encode("\uC977")}).to.throw(Error, "EncodingError U+C977");
expect(() => {ms932Encoder.encode("\uC978")}).to.throw(Error, "EncodingError U+C978");
expect(() => {ms932Encoder.encode("\uC979")}).to.throw(Error, "EncodingError U+C979");
expect(() => {ms932Encoder.encode("\uC97A")}).to.throw(Error, "EncodingError U+C97A");
expect(() => {ms932Encoder.encode("\uC97B")}).to.throw(Error, "EncodingError U+C97B");
expect(() => {ms932Encoder.encode("\uC97C")}).to.throw(Error, "EncodingError U+C97C");
expect(() => {ms932Encoder.encode("\uC97D")}).to.throw(Error, "EncodingError U+C97D");
expect(() => {ms932Encoder.encode("\uC97E")}).to.throw(Error, "EncodingError U+C97E");
expect(() => {ms932Encoder.encode("\uC97F")}).to.throw(Error, "EncodingError U+C97F");
expect(() => {ms932Encoder.encode("\uC980")}).to.throw(Error, "EncodingError U+C980");
expect(() => {ms932Encoder.encode("\uC981")}).to.throw(Error, "EncodingError U+C981");
expect(() => {ms932Encoder.encode("\uC982")}).to.throw(Error, "EncodingError U+C982");
expect(() => {ms932Encoder.encode("\uC983")}).to.throw(Error, "EncodingError U+C983");
expect(() => {ms932Encoder.encode("\uC984")}).to.throw(Error, "EncodingError U+C984");
expect(() => {ms932Encoder.encode("\uC985")}).to.throw(Error, "EncodingError U+C985");
expect(() => {ms932Encoder.encode("\uC986")}).to.throw(Error, "EncodingError U+C986");
expect(() => {ms932Encoder.encode("\uC987")}).to.throw(Error, "EncodingError U+C987");
expect(() => {ms932Encoder.encode("\uC988")}).to.throw(Error, "EncodingError U+C988");
expect(() => {ms932Encoder.encode("\uC989")}).to.throw(Error, "EncodingError U+C989");
expect(() => {ms932Encoder.encode("\uC98A")}).to.throw(Error, "EncodingError U+C98A");
expect(() => {ms932Encoder.encode("\uC98B")}).to.throw(Error, "EncodingError U+C98B");
expect(() => {ms932Encoder.encode("\uC98C")}).to.throw(Error, "EncodingError U+C98C");
expect(() => {ms932Encoder.encode("\uC98D")}).to.throw(Error, "EncodingError U+C98D");
expect(() => {ms932Encoder.encode("\uC98E")}).to.throw(Error, "EncodingError U+C98E");
expect(() => {ms932Encoder.encode("\uC98F")}).to.throw(Error, "EncodingError U+C98F");
expect(() => {ms932Encoder.encode("\uC990")}).to.throw(Error, "EncodingError U+C990");
expect(() => {ms932Encoder.encode("\uC991")}).to.throw(Error, "EncodingError U+C991");
expect(() => {ms932Encoder.encode("\uC992")}).to.throw(Error, "EncodingError U+C992");
expect(() => {ms932Encoder.encode("\uC993")}).to.throw(Error, "EncodingError U+C993");
expect(() => {ms932Encoder.encode("\uC994")}).to.throw(Error, "EncodingError U+C994");
expect(() => {ms932Encoder.encode("\uC995")}).to.throw(Error, "EncodingError U+C995");
expect(() => {ms932Encoder.encode("\uC996")}).to.throw(Error, "EncodingError U+C996");
expect(() => {ms932Encoder.encode("\uC997")}).to.throw(Error, "EncodingError U+C997");
expect(() => {ms932Encoder.encode("\uC998")}).to.throw(Error, "EncodingError U+C998");
expect(() => {ms932Encoder.encode("\uC999")}).to.throw(Error, "EncodingError U+C999");
expect(() => {ms932Encoder.encode("\uC99A")}).to.throw(Error, "EncodingError U+C99A");
expect(() => {ms932Encoder.encode("\uC99B")}).to.throw(Error, "EncodingError U+C99B");
expect(() => {ms932Encoder.encode("\uC99C")}).to.throw(Error, "EncodingError U+C99C");
expect(() => {ms932Encoder.encode("\uC99D")}).to.throw(Error, "EncodingError U+C99D");
expect(() => {ms932Encoder.encode("\uC99E")}).to.throw(Error, "EncodingError U+C99E");
expect(() => {ms932Encoder.encode("\uC99F")}).to.throw(Error, "EncodingError U+C99F");
expect(() => {ms932Encoder.encode("\uC9A0")}).to.throw(Error, "EncodingError U+C9A0");
expect(() => {ms932Encoder.encode("\uC9A1")}).to.throw(Error, "EncodingError U+C9A1");
expect(() => {ms932Encoder.encode("\uC9A2")}).to.throw(Error, "EncodingError U+C9A2");
expect(() => {ms932Encoder.encode("\uC9A3")}).to.throw(Error, "EncodingError U+C9A3");
expect(() => {ms932Encoder.encode("\uC9A4")}).to.throw(Error, "EncodingError U+C9A4");
expect(() => {ms932Encoder.encode("\uC9A5")}).to.throw(Error, "EncodingError U+C9A5");
expect(() => {ms932Encoder.encode("\uC9A6")}).to.throw(Error, "EncodingError U+C9A6");
expect(() => {ms932Encoder.encode("\uC9A7")}).to.throw(Error, "EncodingError U+C9A7");
expect(() => {ms932Encoder.encode("\uC9A8")}).to.throw(Error, "EncodingError U+C9A8");
expect(() => {ms932Encoder.encode("\uC9A9")}).to.throw(Error, "EncodingError U+C9A9");
expect(() => {ms932Encoder.encode("\uC9AA")}).to.throw(Error, "EncodingError U+C9AA");
expect(() => {ms932Encoder.encode("\uC9AB")}).to.throw(Error, "EncodingError U+C9AB");
expect(() => {ms932Encoder.encode("\uC9AC")}).to.throw(Error, "EncodingError U+C9AC");
expect(() => {ms932Encoder.encode("\uC9AD")}).to.throw(Error, "EncodingError U+C9AD");
expect(() => {ms932Encoder.encode("\uC9AE")}).to.throw(Error, "EncodingError U+C9AE");
expect(() => {ms932Encoder.encode("\uC9AF")}).to.throw(Error, "EncodingError U+C9AF");
expect(() => {ms932Encoder.encode("\uC9B0")}).to.throw(Error, "EncodingError U+C9B0");
expect(() => {ms932Encoder.encode("\uC9B1")}).to.throw(Error, "EncodingError U+C9B1");
expect(() => {ms932Encoder.encode("\uC9B2")}).to.throw(Error, "EncodingError U+C9B2");
expect(() => {ms932Encoder.encode("\uC9B3")}).to.throw(Error, "EncodingError U+C9B3");
expect(() => {ms932Encoder.encode("\uC9B4")}).to.throw(Error, "EncodingError U+C9B4");
expect(() => {ms932Encoder.encode("\uC9B5")}).to.throw(Error, "EncodingError U+C9B5");
expect(() => {ms932Encoder.encode("\uC9B6")}).to.throw(Error, "EncodingError U+C9B6");
expect(() => {ms932Encoder.encode("\uC9B7")}).to.throw(Error, "EncodingError U+C9B7");
expect(() => {ms932Encoder.encode("\uC9B8")}).to.throw(Error, "EncodingError U+C9B8");
expect(() => {ms932Encoder.encode("\uC9B9")}).to.throw(Error, "EncodingError U+C9B9");
expect(() => {ms932Encoder.encode("\uC9BA")}).to.throw(Error, "EncodingError U+C9BA");
expect(() => {ms932Encoder.encode("\uC9BB")}).to.throw(Error, "EncodingError U+C9BB");
expect(() => {ms932Encoder.encode("\uC9BC")}).to.throw(Error, "EncodingError U+C9BC");
expect(() => {ms932Encoder.encode("\uC9BD")}).to.throw(Error, "EncodingError U+C9BD");
expect(() => {ms932Encoder.encode("\uC9BE")}).to.throw(Error, "EncodingError U+C9BE");
expect(() => {ms932Encoder.encode("\uC9BF")}).to.throw(Error, "EncodingError U+C9BF");
expect(() => {ms932Encoder.encode("\uC9C0")}).to.throw(Error, "EncodingError U+C9C0");
expect(() => {ms932Encoder.encode("\uC9C1")}).to.throw(Error, "EncodingError U+C9C1");
expect(() => {ms932Encoder.encode("\uC9C2")}).to.throw(Error, "EncodingError U+C9C2");
expect(() => {ms932Encoder.encode("\uC9C3")}).to.throw(Error, "EncodingError U+C9C3");
expect(() => {ms932Encoder.encode("\uC9C4")}).to.throw(Error, "EncodingError U+C9C4");
expect(() => {ms932Encoder.encode("\uC9C5")}).to.throw(Error, "EncodingError U+C9C5");
expect(() => {ms932Encoder.encode("\uC9C6")}).to.throw(Error, "EncodingError U+C9C6");
expect(() => {ms932Encoder.encode("\uC9C7")}).to.throw(Error, "EncodingError U+C9C7");
expect(() => {ms932Encoder.encode("\uC9C8")}).to.throw(Error, "EncodingError U+C9C8");
expect(() => {ms932Encoder.encode("\uC9C9")}).to.throw(Error, "EncodingError U+C9C9");
expect(() => {ms932Encoder.encode("\uC9CA")}).to.throw(Error, "EncodingError U+C9CA");
expect(() => {ms932Encoder.encode("\uC9CB")}).to.throw(Error, "EncodingError U+C9CB");
expect(() => {ms932Encoder.encode("\uC9CC")}).to.throw(Error, "EncodingError U+C9CC");
expect(() => {ms932Encoder.encode("\uC9CD")}).to.throw(Error, "EncodingError U+C9CD");
expect(() => {ms932Encoder.encode("\uC9CE")}).to.throw(Error, "EncodingError U+C9CE");
expect(() => {ms932Encoder.encode("\uC9CF")}).to.throw(Error, "EncodingError U+C9CF");
expect(() => {ms932Encoder.encode("\uC9D0")}).to.throw(Error, "EncodingError U+C9D0");
expect(() => {ms932Encoder.encode("\uC9D1")}).to.throw(Error, "EncodingError U+C9D1");
expect(() => {ms932Encoder.encode("\uC9D2")}).to.throw(Error, "EncodingError U+C9D2");
expect(() => {ms932Encoder.encode("\uC9D3")}).to.throw(Error, "EncodingError U+C9D3");
expect(() => {ms932Encoder.encode("\uC9D4")}).to.throw(Error, "EncodingError U+C9D4");
expect(() => {ms932Encoder.encode("\uC9D5")}).to.throw(Error, "EncodingError U+C9D5");
expect(() => {ms932Encoder.encode("\uC9D6")}).to.throw(Error, "EncodingError U+C9D6");
expect(() => {ms932Encoder.encode("\uC9D7")}).to.throw(Error, "EncodingError U+C9D7");
expect(() => {ms932Encoder.encode("\uC9D8")}).to.throw(Error, "EncodingError U+C9D8");
expect(() => {ms932Encoder.encode("\uC9D9")}).to.throw(Error, "EncodingError U+C9D9");
expect(() => {ms932Encoder.encode("\uC9DA")}).to.throw(Error, "EncodingError U+C9DA");
expect(() => {ms932Encoder.encode("\uC9DB")}).to.throw(Error, "EncodingError U+C9DB");
expect(() => {ms932Encoder.encode("\uC9DC")}).to.throw(Error, "EncodingError U+C9DC");
expect(() => {ms932Encoder.encode("\uC9DD")}).to.throw(Error, "EncodingError U+C9DD");
expect(() => {ms932Encoder.encode("\uC9DE")}).to.throw(Error, "EncodingError U+C9DE");
expect(() => {ms932Encoder.encode("\uC9DF")}).to.throw(Error, "EncodingError U+C9DF");
expect(() => {ms932Encoder.encode("\uC9E0")}).to.throw(Error, "EncodingError U+C9E0");
expect(() => {ms932Encoder.encode("\uC9E1")}).to.throw(Error, "EncodingError U+C9E1");
expect(() => {ms932Encoder.encode("\uC9E2")}).to.throw(Error, "EncodingError U+C9E2");
expect(() => {ms932Encoder.encode("\uC9E3")}).to.throw(Error, "EncodingError U+C9E3");
expect(() => {ms932Encoder.encode("\uC9E4")}).to.throw(Error, "EncodingError U+C9E4");
expect(() => {ms932Encoder.encode("\uC9E5")}).to.throw(Error, "EncodingError U+C9E5");
expect(() => {ms932Encoder.encode("\uC9E6")}).to.throw(Error, "EncodingError U+C9E6");
expect(() => {ms932Encoder.encode("\uC9E7")}).to.throw(Error, "EncodingError U+C9E7");
expect(() => {ms932Encoder.encode("\uC9E8")}).to.throw(Error, "EncodingError U+C9E8");
expect(() => {ms932Encoder.encode("\uC9E9")}).to.throw(Error, "EncodingError U+C9E9");
expect(() => {ms932Encoder.encode("\uC9EA")}).to.throw(Error, "EncodingError U+C9EA");
expect(() => {ms932Encoder.encode("\uC9EB")}).to.throw(Error, "EncodingError U+C9EB");
expect(() => {ms932Encoder.encode("\uC9EC")}).to.throw(Error, "EncodingError U+C9EC");
expect(() => {ms932Encoder.encode("\uC9ED")}).to.throw(Error, "EncodingError U+C9ED");
expect(() => {ms932Encoder.encode("\uC9EE")}).to.throw(Error, "EncodingError U+C9EE");
expect(() => {ms932Encoder.encode("\uC9EF")}).to.throw(Error, "EncodingError U+C9EF");
expect(() => {ms932Encoder.encode("\uC9F0")}).to.throw(Error, "EncodingError U+C9F0");
expect(() => {ms932Encoder.encode("\uC9F1")}).to.throw(Error, "EncodingError U+C9F1");
expect(() => {ms932Encoder.encode("\uC9F2")}).to.throw(Error, "EncodingError U+C9F2");
expect(() => {ms932Encoder.encode("\uC9F3")}).to.throw(Error, "EncodingError U+C9F3");
expect(() => {ms932Encoder.encode("\uC9F4")}).to.throw(Error, "EncodingError U+C9F4");
expect(() => {ms932Encoder.encode("\uC9F5")}).to.throw(Error, "EncodingError U+C9F5");
expect(() => {ms932Encoder.encode("\uC9F6")}).to.throw(Error, "EncodingError U+C9F6");
expect(() => {ms932Encoder.encode("\uC9F7")}).to.throw(Error, "EncodingError U+C9F7");
expect(() => {ms932Encoder.encode("\uC9F8")}).to.throw(Error, "EncodingError U+C9F8");
expect(() => {ms932Encoder.encode("\uC9F9")}).to.throw(Error, "EncodingError U+C9F9");
expect(() => {ms932Encoder.encode("\uC9FA")}).to.throw(Error, "EncodingError U+C9FA");
expect(() => {ms932Encoder.encode("\uC9FB")}).to.throw(Error, "EncodingError U+C9FB");
expect(() => {ms932Encoder.encode("\uC9FC")}).to.throw(Error, "EncodingError U+C9FC");
expect(() => {ms932Encoder.encode("\uC9FD")}).to.throw(Error, "EncodingError U+C9FD");
expect(() => {ms932Encoder.encode("\uC9FE")}).to.throw(Error, "EncodingError U+C9FE");
expect(() => {ms932Encoder.encode("\uC9FF")}).to.throw(Error, "EncodingError U+C9FF");
expect(() => {ms932Encoder.encode("\uCA00")}).to.throw(Error, "EncodingError U+CA00");
expect(() => {ms932Encoder.encode("\uCA01")}).to.throw(Error, "EncodingError U+CA01");
expect(() => {ms932Encoder.encode("\uCA02")}).to.throw(Error, "EncodingError U+CA02");
expect(() => {ms932Encoder.encode("\uCA03")}).to.throw(Error, "EncodingError U+CA03");
expect(() => {ms932Encoder.encode("\uCA04")}).to.throw(Error, "EncodingError U+CA04");
expect(() => {ms932Encoder.encode("\uCA05")}).to.throw(Error, "EncodingError U+CA05");
expect(() => {ms932Encoder.encode("\uCA06")}).to.throw(Error, "EncodingError U+CA06");
expect(() => {ms932Encoder.encode("\uCA07")}).to.throw(Error, "EncodingError U+CA07");
expect(() => {ms932Encoder.encode("\uCA08")}).to.throw(Error, "EncodingError U+CA08");
expect(() => {ms932Encoder.encode("\uCA09")}).to.throw(Error, "EncodingError U+CA09");
expect(() => {ms932Encoder.encode("\uCA0A")}).to.throw(Error, "EncodingError U+CA0A");
expect(() => {ms932Encoder.encode("\uCA0B")}).to.throw(Error, "EncodingError U+CA0B");
expect(() => {ms932Encoder.encode("\uCA0C")}).to.throw(Error, "EncodingError U+CA0C");
expect(() => {ms932Encoder.encode("\uCA0D")}).to.throw(Error, "EncodingError U+CA0D");
expect(() => {ms932Encoder.encode("\uCA0E")}).to.throw(Error, "EncodingError U+CA0E");
expect(() => {ms932Encoder.encode("\uCA0F")}).to.throw(Error, "EncodingError U+CA0F");
expect(() => {ms932Encoder.encode("\uCA10")}).to.throw(Error, "EncodingError U+CA10");
expect(() => {ms932Encoder.encode("\uCA11")}).to.throw(Error, "EncodingError U+CA11");
expect(() => {ms932Encoder.encode("\uCA12")}).to.throw(Error, "EncodingError U+CA12");
expect(() => {ms932Encoder.encode("\uCA13")}).to.throw(Error, "EncodingError U+CA13");
expect(() => {ms932Encoder.encode("\uCA14")}).to.throw(Error, "EncodingError U+CA14");
expect(() => {ms932Encoder.encode("\uCA15")}).to.throw(Error, "EncodingError U+CA15");
expect(() => {ms932Encoder.encode("\uCA16")}).to.throw(Error, "EncodingError U+CA16");
expect(() => {ms932Encoder.encode("\uCA17")}).to.throw(Error, "EncodingError U+CA17");
expect(() => {ms932Encoder.encode("\uCA18")}).to.throw(Error, "EncodingError U+CA18");
expect(() => {ms932Encoder.encode("\uCA19")}).to.throw(Error, "EncodingError U+CA19");
expect(() => {ms932Encoder.encode("\uCA1A")}).to.throw(Error, "EncodingError U+CA1A");
expect(() => {ms932Encoder.encode("\uCA1B")}).to.throw(Error, "EncodingError U+CA1B");
expect(() => {ms932Encoder.encode("\uCA1C")}).to.throw(Error, "EncodingError U+CA1C");
expect(() => {ms932Encoder.encode("\uCA1D")}).to.throw(Error, "EncodingError U+CA1D");
expect(() => {ms932Encoder.encode("\uCA1E")}).to.throw(Error, "EncodingError U+CA1E");
expect(() => {ms932Encoder.encode("\uCA1F")}).to.throw(Error, "EncodingError U+CA1F");
expect(() => {ms932Encoder.encode("\uCA20")}).to.throw(Error, "EncodingError U+CA20");
expect(() => {ms932Encoder.encode("\uCA21")}).to.throw(Error, "EncodingError U+CA21");
expect(() => {ms932Encoder.encode("\uCA22")}).to.throw(Error, "EncodingError U+CA22");
expect(() => {ms932Encoder.encode("\uCA23")}).to.throw(Error, "EncodingError U+CA23");
expect(() => {ms932Encoder.encode("\uCA24")}).to.throw(Error, "EncodingError U+CA24");
expect(() => {ms932Encoder.encode("\uCA25")}).to.throw(Error, "EncodingError U+CA25");
expect(() => {ms932Encoder.encode("\uCA26")}).to.throw(Error, "EncodingError U+CA26");
expect(() => {ms932Encoder.encode("\uCA27")}).to.throw(Error, "EncodingError U+CA27");
expect(() => {ms932Encoder.encode("\uCA28")}).to.throw(Error, "EncodingError U+CA28");
expect(() => {ms932Encoder.encode("\uCA29")}).to.throw(Error, "EncodingError U+CA29");
expect(() => {ms932Encoder.encode("\uCA2A")}).to.throw(Error, "EncodingError U+CA2A");
expect(() => {ms932Encoder.encode("\uCA2B")}).to.throw(Error, "EncodingError U+CA2B");
expect(() => {ms932Encoder.encode("\uCA2C")}).to.throw(Error, "EncodingError U+CA2C");
expect(() => {ms932Encoder.encode("\uCA2D")}).to.throw(Error, "EncodingError U+CA2D");
expect(() => {ms932Encoder.encode("\uCA2E")}).to.throw(Error, "EncodingError U+CA2E");
expect(() => {ms932Encoder.encode("\uCA2F")}).to.throw(Error, "EncodingError U+CA2F");
expect(() => {ms932Encoder.encode("\uCA30")}).to.throw(Error, "EncodingError U+CA30");
expect(() => {ms932Encoder.encode("\uCA31")}).to.throw(Error, "EncodingError U+CA31");
expect(() => {ms932Encoder.encode("\uCA32")}).to.throw(Error, "EncodingError U+CA32");
expect(() => {ms932Encoder.encode("\uCA33")}).to.throw(Error, "EncodingError U+CA33");
expect(() => {ms932Encoder.encode("\uCA34")}).to.throw(Error, "EncodingError U+CA34");
expect(() => {ms932Encoder.encode("\uCA35")}).to.throw(Error, "EncodingError U+CA35");
expect(() => {ms932Encoder.encode("\uCA36")}).to.throw(Error, "EncodingError U+CA36");
expect(() => {ms932Encoder.encode("\uCA37")}).to.throw(Error, "EncodingError U+CA37");
expect(() => {ms932Encoder.encode("\uCA38")}).to.throw(Error, "EncodingError U+CA38");
expect(() => {ms932Encoder.encode("\uCA39")}).to.throw(Error, "EncodingError U+CA39");
expect(() => {ms932Encoder.encode("\uCA3A")}).to.throw(Error, "EncodingError U+CA3A");
expect(() => {ms932Encoder.encode("\uCA3B")}).to.throw(Error, "EncodingError U+CA3B");
expect(() => {ms932Encoder.encode("\uCA3C")}).to.throw(Error, "EncodingError U+CA3C");
expect(() => {ms932Encoder.encode("\uCA3D")}).to.throw(Error, "EncodingError U+CA3D");
expect(() => {ms932Encoder.encode("\uCA3E")}).to.throw(Error, "EncodingError U+CA3E");
expect(() => {ms932Encoder.encode("\uCA3F")}).to.throw(Error, "EncodingError U+CA3F");
expect(() => {ms932Encoder.encode("\uCA40")}).to.throw(Error, "EncodingError U+CA40");
expect(() => {ms932Encoder.encode("\uCA41")}).to.throw(Error, "EncodingError U+CA41");
expect(() => {ms932Encoder.encode("\uCA42")}).to.throw(Error, "EncodingError U+CA42");
expect(() => {ms932Encoder.encode("\uCA43")}).to.throw(Error, "EncodingError U+CA43");
expect(() => {ms932Encoder.encode("\uCA44")}).to.throw(Error, "EncodingError U+CA44");
expect(() => {ms932Encoder.encode("\uCA45")}).to.throw(Error, "EncodingError U+CA45");
expect(() => {ms932Encoder.encode("\uCA46")}).to.throw(Error, "EncodingError U+CA46");
expect(() => {ms932Encoder.encode("\uCA47")}).to.throw(Error, "EncodingError U+CA47");
expect(() => {ms932Encoder.encode("\uCA48")}).to.throw(Error, "EncodingError U+CA48");
expect(() => {ms932Encoder.encode("\uCA49")}).to.throw(Error, "EncodingError U+CA49");
expect(() => {ms932Encoder.encode("\uCA4A")}).to.throw(Error, "EncodingError U+CA4A");
expect(() => {ms932Encoder.encode("\uCA4B")}).to.throw(Error, "EncodingError U+CA4B");
expect(() => {ms932Encoder.encode("\uCA4C")}).to.throw(Error, "EncodingError U+CA4C");
expect(() => {ms932Encoder.encode("\uCA4D")}).to.throw(Error, "EncodingError U+CA4D");
expect(() => {ms932Encoder.encode("\uCA4E")}).to.throw(Error, "EncodingError U+CA4E");
expect(() => {ms932Encoder.encode("\uCA4F")}).to.throw(Error, "EncodingError U+CA4F");
expect(() => {ms932Encoder.encode("\uCA50")}).to.throw(Error, "EncodingError U+CA50");
expect(() => {ms932Encoder.encode("\uCA51")}).to.throw(Error, "EncodingError U+CA51");
expect(() => {ms932Encoder.encode("\uCA52")}).to.throw(Error, "EncodingError U+CA52");
expect(() => {ms932Encoder.encode("\uCA53")}).to.throw(Error, "EncodingError U+CA53");
expect(() => {ms932Encoder.encode("\uCA54")}).to.throw(Error, "EncodingError U+CA54");
expect(() => {ms932Encoder.encode("\uCA55")}).to.throw(Error, "EncodingError U+CA55");
expect(() => {ms932Encoder.encode("\uCA56")}).to.throw(Error, "EncodingError U+CA56");
expect(() => {ms932Encoder.encode("\uCA57")}).to.throw(Error, "EncodingError U+CA57");
expect(() => {ms932Encoder.encode("\uCA58")}).to.throw(Error, "EncodingError U+CA58");
expect(() => {ms932Encoder.encode("\uCA59")}).to.throw(Error, "EncodingError U+CA59");
expect(() => {ms932Encoder.encode("\uCA5A")}).to.throw(Error, "EncodingError U+CA5A");
expect(() => {ms932Encoder.encode("\uCA5B")}).to.throw(Error, "EncodingError U+CA5B");
expect(() => {ms932Encoder.encode("\uCA5C")}).to.throw(Error, "EncodingError U+CA5C");
expect(() => {ms932Encoder.encode("\uCA5D")}).to.throw(Error, "EncodingError U+CA5D");
expect(() => {ms932Encoder.encode("\uCA5E")}).to.throw(Error, "EncodingError U+CA5E");
expect(() => {ms932Encoder.encode("\uCA5F")}).to.throw(Error, "EncodingError U+CA5F");
expect(() => {ms932Encoder.encode("\uCA60")}).to.throw(Error, "EncodingError U+CA60");
expect(() => {ms932Encoder.encode("\uCA61")}).to.throw(Error, "EncodingError U+CA61");
expect(() => {ms932Encoder.encode("\uCA62")}).to.throw(Error, "EncodingError U+CA62");
expect(() => {ms932Encoder.encode("\uCA63")}).to.throw(Error, "EncodingError U+CA63");
expect(() => {ms932Encoder.encode("\uCA64")}).to.throw(Error, "EncodingError U+CA64");
expect(() => {ms932Encoder.encode("\uCA65")}).to.throw(Error, "EncodingError U+CA65");
expect(() => {ms932Encoder.encode("\uCA66")}).to.throw(Error, "EncodingError U+CA66");
expect(() => {ms932Encoder.encode("\uCA67")}).to.throw(Error, "EncodingError U+CA67");
expect(() => {ms932Encoder.encode("\uCA68")}).to.throw(Error, "EncodingError U+CA68");
expect(() => {ms932Encoder.encode("\uCA69")}).to.throw(Error, "EncodingError U+CA69");
expect(() => {ms932Encoder.encode("\uCA6A")}).to.throw(Error, "EncodingError U+CA6A");
expect(() => {ms932Encoder.encode("\uCA6B")}).to.throw(Error, "EncodingError U+CA6B");
expect(() => {ms932Encoder.encode("\uCA6C")}).to.throw(Error, "EncodingError U+CA6C");
expect(() => {ms932Encoder.encode("\uCA6D")}).to.throw(Error, "EncodingError U+CA6D");
expect(() => {ms932Encoder.encode("\uCA6E")}).to.throw(Error, "EncodingError U+CA6E");
expect(() => {ms932Encoder.encode("\uCA6F")}).to.throw(Error, "EncodingError U+CA6F");
expect(() => {ms932Encoder.encode("\uCA70")}).to.throw(Error, "EncodingError U+CA70");
expect(() => {ms932Encoder.encode("\uCA71")}).to.throw(Error, "EncodingError U+CA71");
expect(() => {ms932Encoder.encode("\uCA72")}).to.throw(Error, "EncodingError U+CA72");
expect(() => {ms932Encoder.encode("\uCA73")}).to.throw(Error, "EncodingError U+CA73");
expect(() => {ms932Encoder.encode("\uCA74")}).to.throw(Error, "EncodingError U+CA74");
expect(() => {ms932Encoder.encode("\uCA75")}).to.throw(Error, "EncodingError U+CA75");
expect(() => {ms932Encoder.encode("\uCA76")}).to.throw(Error, "EncodingError U+CA76");
expect(() => {ms932Encoder.encode("\uCA77")}).to.throw(Error, "EncodingError U+CA77");
expect(() => {ms932Encoder.encode("\uCA78")}).to.throw(Error, "EncodingError U+CA78");
expect(() => {ms932Encoder.encode("\uCA79")}).to.throw(Error, "EncodingError U+CA79");
expect(() => {ms932Encoder.encode("\uCA7A")}).to.throw(Error, "EncodingError U+CA7A");
expect(() => {ms932Encoder.encode("\uCA7B")}).to.throw(Error, "EncodingError U+CA7B");
expect(() => {ms932Encoder.encode("\uCA7C")}).to.throw(Error, "EncodingError U+CA7C");
expect(() => {ms932Encoder.encode("\uCA7D")}).to.throw(Error, "EncodingError U+CA7D");
expect(() => {ms932Encoder.encode("\uCA7E")}).to.throw(Error, "EncodingError U+CA7E");
expect(() => {ms932Encoder.encode("\uCA7F")}).to.throw(Error, "EncodingError U+CA7F");
expect(() => {ms932Encoder.encode("\uCA80")}).to.throw(Error, "EncodingError U+CA80");
expect(() => {ms932Encoder.encode("\uCA81")}).to.throw(Error, "EncodingError U+CA81");
expect(() => {ms932Encoder.encode("\uCA82")}).to.throw(Error, "EncodingError U+CA82");
expect(() => {ms932Encoder.encode("\uCA83")}).to.throw(Error, "EncodingError U+CA83");
expect(() => {ms932Encoder.encode("\uCA84")}).to.throw(Error, "EncodingError U+CA84");
expect(() => {ms932Encoder.encode("\uCA85")}).to.throw(Error, "EncodingError U+CA85");
expect(() => {ms932Encoder.encode("\uCA86")}).to.throw(Error, "EncodingError U+CA86");
expect(() => {ms932Encoder.encode("\uCA87")}).to.throw(Error, "EncodingError U+CA87");
expect(() => {ms932Encoder.encode("\uCA88")}).to.throw(Error, "EncodingError U+CA88");
expect(() => {ms932Encoder.encode("\uCA89")}).to.throw(Error, "EncodingError U+CA89");
expect(() => {ms932Encoder.encode("\uCA8A")}).to.throw(Error, "EncodingError U+CA8A");
expect(() => {ms932Encoder.encode("\uCA8B")}).to.throw(Error, "EncodingError U+CA8B");
expect(() => {ms932Encoder.encode("\uCA8C")}).to.throw(Error, "EncodingError U+CA8C");
expect(() => {ms932Encoder.encode("\uCA8D")}).to.throw(Error, "EncodingError U+CA8D");
expect(() => {ms932Encoder.encode("\uCA8E")}).to.throw(Error, "EncodingError U+CA8E");
expect(() => {ms932Encoder.encode("\uCA8F")}).to.throw(Error, "EncodingError U+CA8F");
expect(() => {ms932Encoder.encode("\uCA90")}).to.throw(Error, "EncodingError U+CA90");
expect(() => {ms932Encoder.encode("\uCA91")}).to.throw(Error, "EncodingError U+CA91");
expect(() => {ms932Encoder.encode("\uCA92")}).to.throw(Error, "EncodingError U+CA92");
expect(() => {ms932Encoder.encode("\uCA93")}).to.throw(Error, "EncodingError U+CA93");
expect(() => {ms932Encoder.encode("\uCA94")}).to.throw(Error, "EncodingError U+CA94");
expect(() => {ms932Encoder.encode("\uCA95")}).to.throw(Error, "EncodingError U+CA95");
expect(() => {ms932Encoder.encode("\uCA96")}).to.throw(Error, "EncodingError U+CA96");
expect(() => {ms932Encoder.encode("\uCA97")}).to.throw(Error, "EncodingError U+CA97");
expect(() => {ms932Encoder.encode("\uCA98")}).to.throw(Error, "EncodingError U+CA98");
expect(() => {ms932Encoder.encode("\uCA99")}).to.throw(Error, "EncodingError U+CA99");
expect(() => {ms932Encoder.encode("\uCA9A")}).to.throw(Error, "EncodingError U+CA9A");
expect(() => {ms932Encoder.encode("\uCA9B")}).to.throw(Error, "EncodingError U+CA9B");
expect(() => {ms932Encoder.encode("\uCA9C")}).to.throw(Error, "EncodingError U+CA9C");
expect(() => {ms932Encoder.encode("\uCA9D")}).to.throw(Error, "EncodingError U+CA9D");
expect(() => {ms932Encoder.encode("\uCA9E")}).to.throw(Error, "EncodingError U+CA9E");
expect(() => {ms932Encoder.encode("\uCA9F")}).to.throw(Error, "EncodingError U+CA9F");
expect(() => {ms932Encoder.encode("\uCAA0")}).to.throw(Error, "EncodingError U+CAA0");
expect(() => {ms932Encoder.encode("\uCAA1")}).to.throw(Error, "EncodingError U+CAA1");
expect(() => {ms932Encoder.encode("\uCAA2")}).to.throw(Error, "EncodingError U+CAA2");
expect(() => {ms932Encoder.encode("\uCAA3")}).to.throw(Error, "EncodingError U+CAA3");
expect(() => {ms932Encoder.encode("\uCAA4")}).to.throw(Error, "EncodingError U+CAA4");
expect(() => {ms932Encoder.encode("\uCAA5")}).to.throw(Error, "EncodingError U+CAA5");
expect(() => {ms932Encoder.encode("\uCAA6")}).to.throw(Error, "EncodingError U+CAA6");
expect(() => {ms932Encoder.encode("\uCAA7")}).to.throw(Error, "EncodingError U+CAA7");
expect(() => {ms932Encoder.encode("\uCAA8")}).to.throw(Error, "EncodingError U+CAA8");
expect(() => {ms932Encoder.encode("\uCAA9")}).to.throw(Error, "EncodingError U+CAA9");
expect(() => {ms932Encoder.encode("\uCAAA")}).to.throw(Error, "EncodingError U+CAAA");
expect(() => {ms932Encoder.encode("\uCAAB")}).to.throw(Error, "EncodingError U+CAAB");
expect(() => {ms932Encoder.encode("\uCAAC")}).to.throw(Error, "EncodingError U+CAAC");
expect(() => {ms932Encoder.encode("\uCAAD")}).to.throw(Error, "EncodingError U+CAAD");
expect(() => {ms932Encoder.encode("\uCAAE")}).to.throw(Error, "EncodingError U+CAAE");
expect(() => {ms932Encoder.encode("\uCAAF")}).to.throw(Error, "EncodingError U+CAAF");
expect(() => {ms932Encoder.encode("\uCAB0")}).to.throw(Error, "EncodingError U+CAB0");
expect(() => {ms932Encoder.encode("\uCAB1")}).to.throw(Error, "EncodingError U+CAB1");
expect(() => {ms932Encoder.encode("\uCAB2")}).to.throw(Error, "EncodingError U+CAB2");
expect(() => {ms932Encoder.encode("\uCAB3")}).to.throw(Error, "EncodingError U+CAB3");
expect(() => {ms932Encoder.encode("\uCAB4")}).to.throw(Error, "EncodingError U+CAB4");
expect(() => {ms932Encoder.encode("\uCAB5")}).to.throw(Error, "EncodingError U+CAB5");
expect(() => {ms932Encoder.encode("\uCAB6")}).to.throw(Error, "EncodingError U+CAB6");
expect(() => {ms932Encoder.encode("\uCAB7")}).to.throw(Error, "EncodingError U+CAB7");
expect(() => {ms932Encoder.encode("\uCAB8")}).to.throw(Error, "EncodingError U+CAB8");
expect(() => {ms932Encoder.encode("\uCAB9")}).to.throw(Error, "EncodingError U+CAB9");
expect(() => {ms932Encoder.encode("\uCABA")}).to.throw(Error, "EncodingError U+CABA");
expect(() => {ms932Encoder.encode("\uCABB")}).to.throw(Error, "EncodingError U+CABB");
expect(() => {ms932Encoder.encode("\uCABC")}).to.throw(Error, "EncodingError U+CABC");
expect(() => {ms932Encoder.encode("\uCABD")}).to.throw(Error, "EncodingError U+CABD");
expect(() => {ms932Encoder.encode("\uCABE")}).to.throw(Error, "EncodingError U+CABE");
expect(() => {ms932Encoder.encode("\uCABF")}).to.throw(Error, "EncodingError U+CABF");
expect(() => {ms932Encoder.encode("\uCAC0")}).to.throw(Error, "EncodingError U+CAC0");
expect(() => {ms932Encoder.encode("\uCAC1")}).to.throw(Error, "EncodingError U+CAC1");
expect(() => {ms932Encoder.encode("\uCAC2")}).to.throw(Error, "EncodingError U+CAC2");
expect(() => {ms932Encoder.encode("\uCAC3")}).to.throw(Error, "EncodingError U+CAC3");
expect(() => {ms932Encoder.encode("\uCAC4")}).to.throw(Error, "EncodingError U+CAC4");
expect(() => {ms932Encoder.encode("\uCAC5")}).to.throw(Error, "EncodingError U+CAC5");
expect(() => {ms932Encoder.encode("\uCAC6")}).to.throw(Error, "EncodingError U+CAC6");
expect(() => {ms932Encoder.encode("\uCAC7")}).to.throw(Error, "EncodingError U+CAC7");
expect(() => {ms932Encoder.encode("\uCAC8")}).to.throw(Error, "EncodingError U+CAC8");
expect(() => {ms932Encoder.encode("\uCAC9")}).to.throw(Error, "EncodingError U+CAC9");
expect(() => {ms932Encoder.encode("\uCACA")}).to.throw(Error, "EncodingError U+CACA");
expect(() => {ms932Encoder.encode("\uCACB")}).to.throw(Error, "EncodingError U+CACB");
expect(() => {ms932Encoder.encode("\uCACC")}).to.throw(Error, "EncodingError U+CACC");
expect(() => {ms932Encoder.encode("\uCACD")}).to.throw(Error, "EncodingError U+CACD");
expect(() => {ms932Encoder.encode("\uCACE")}).to.throw(Error, "EncodingError U+CACE");
expect(() => {ms932Encoder.encode("\uCACF")}).to.throw(Error, "EncodingError U+CACF");
expect(() => {ms932Encoder.encode("\uCAD0")}).to.throw(Error, "EncodingError U+CAD0");
expect(() => {ms932Encoder.encode("\uCAD1")}).to.throw(Error, "EncodingError U+CAD1");
expect(() => {ms932Encoder.encode("\uCAD2")}).to.throw(Error, "EncodingError U+CAD2");
expect(() => {ms932Encoder.encode("\uCAD3")}).to.throw(Error, "EncodingError U+CAD3");
expect(() => {ms932Encoder.encode("\uCAD4")}).to.throw(Error, "EncodingError U+CAD4");
expect(() => {ms932Encoder.encode("\uCAD5")}).to.throw(Error, "EncodingError U+CAD5");
expect(() => {ms932Encoder.encode("\uCAD6")}).to.throw(Error, "EncodingError U+CAD6");
expect(() => {ms932Encoder.encode("\uCAD7")}).to.throw(Error, "EncodingError U+CAD7");
expect(() => {ms932Encoder.encode("\uCAD8")}).to.throw(Error, "EncodingError U+CAD8");
expect(() => {ms932Encoder.encode("\uCAD9")}).to.throw(Error, "EncodingError U+CAD9");
expect(() => {ms932Encoder.encode("\uCADA")}).to.throw(Error, "EncodingError U+CADA");
expect(() => {ms932Encoder.encode("\uCADB")}).to.throw(Error, "EncodingError U+CADB");
expect(() => {ms932Encoder.encode("\uCADC")}).to.throw(Error, "EncodingError U+CADC");
expect(() => {ms932Encoder.encode("\uCADD")}).to.throw(Error, "EncodingError U+CADD");
expect(() => {ms932Encoder.encode("\uCADE")}).to.throw(Error, "EncodingError U+CADE");
expect(() => {ms932Encoder.encode("\uCADF")}).to.throw(Error, "EncodingError U+CADF");
expect(() => {ms932Encoder.encode("\uCAE0")}).to.throw(Error, "EncodingError U+CAE0");
expect(() => {ms932Encoder.encode("\uCAE1")}).to.throw(Error, "EncodingError U+CAE1");
expect(() => {ms932Encoder.encode("\uCAE2")}).to.throw(Error, "EncodingError U+CAE2");
expect(() => {ms932Encoder.encode("\uCAE3")}).to.throw(Error, "EncodingError U+CAE3");
expect(() => {ms932Encoder.encode("\uCAE4")}).to.throw(Error, "EncodingError U+CAE4");
expect(() => {ms932Encoder.encode("\uCAE5")}).to.throw(Error, "EncodingError U+CAE5");
expect(() => {ms932Encoder.encode("\uCAE6")}).to.throw(Error, "EncodingError U+CAE6");
expect(() => {ms932Encoder.encode("\uCAE7")}).to.throw(Error, "EncodingError U+CAE7");
expect(() => {ms932Encoder.encode("\uCAE8")}).to.throw(Error, "EncodingError U+CAE8");
expect(() => {ms932Encoder.encode("\uCAE9")}).to.throw(Error, "EncodingError U+CAE9");
expect(() => {ms932Encoder.encode("\uCAEA")}).to.throw(Error, "EncodingError U+CAEA");
expect(() => {ms932Encoder.encode("\uCAEB")}).to.throw(Error, "EncodingError U+CAEB");
expect(() => {ms932Encoder.encode("\uCAEC")}).to.throw(Error, "EncodingError U+CAEC");
expect(() => {ms932Encoder.encode("\uCAED")}).to.throw(Error, "EncodingError U+CAED");
expect(() => {ms932Encoder.encode("\uCAEE")}).to.throw(Error, "EncodingError U+CAEE");
expect(() => {ms932Encoder.encode("\uCAEF")}).to.throw(Error, "EncodingError U+CAEF");
expect(() => {ms932Encoder.encode("\uCAF0")}).to.throw(Error, "EncodingError U+CAF0");
expect(() => {ms932Encoder.encode("\uCAF1")}).to.throw(Error, "EncodingError U+CAF1");
expect(() => {ms932Encoder.encode("\uCAF2")}).to.throw(Error, "EncodingError U+CAF2");
expect(() => {ms932Encoder.encode("\uCAF3")}).to.throw(Error, "EncodingError U+CAF3");
expect(() => {ms932Encoder.encode("\uCAF4")}).to.throw(Error, "EncodingError U+CAF4");
expect(() => {ms932Encoder.encode("\uCAF5")}).to.throw(Error, "EncodingError U+CAF5");
expect(() => {ms932Encoder.encode("\uCAF6")}).to.throw(Error, "EncodingError U+CAF6");
expect(() => {ms932Encoder.encode("\uCAF7")}).to.throw(Error, "EncodingError U+CAF7");
expect(() => {ms932Encoder.encode("\uCAF8")}).to.throw(Error, "EncodingError U+CAF8");
expect(() => {ms932Encoder.encode("\uCAF9")}).to.throw(Error, "EncodingError U+CAF9");
expect(() => {ms932Encoder.encode("\uCAFA")}).to.throw(Error, "EncodingError U+CAFA");
expect(() => {ms932Encoder.encode("\uCAFB")}).to.throw(Error, "EncodingError U+CAFB");
expect(() => {ms932Encoder.encode("\uCAFC")}).to.throw(Error, "EncodingError U+CAFC");
expect(() => {ms932Encoder.encode("\uCAFD")}).to.throw(Error, "EncodingError U+CAFD");
expect(() => {ms932Encoder.encode("\uCAFE")}).to.throw(Error, "EncodingError U+CAFE");
expect(() => {ms932Encoder.encode("\uCAFF")}).to.throw(Error, "EncodingError U+CAFF");
expect(() => {ms932Encoder.encode("\uCB00")}).to.throw(Error, "EncodingError U+CB00");
expect(() => {ms932Encoder.encode("\uCB01")}).to.throw(Error, "EncodingError U+CB01");
expect(() => {ms932Encoder.encode("\uCB02")}).to.throw(Error, "EncodingError U+CB02");
expect(() => {ms932Encoder.encode("\uCB03")}).to.throw(Error, "EncodingError U+CB03");
expect(() => {ms932Encoder.encode("\uCB04")}).to.throw(Error, "EncodingError U+CB04");
expect(() => {ms932Encoder.encode("\uCB05")}).to.throw(Error, "EncodingError U+CB05");
expect(() => {ms932Encoder.encode("\uCB06")}).to.throw(Error, "EncodingError U+CB06");
expect(() => {ms932Encoder.encode("\uCB07")}).to.throw(Error, "EncodingError U+CB07");
expect(() => {ms932Encoder.encode("\uCB08")}).to.throw(Error, "EncodingError U+CB08");
expect(() => {ms932Encoder.encode("\uCB09")}).to.throw(Error, "EncodingError U+CB09");
expect(() => {ms932Encoder.encode("\uCB0A")}).to.throw(Error, "EncodingError U+CB0A");
expect(() => {ms932Encoder.encode("\uCB0B")}).to.throw(Error, "EncodingError U+CB0B");
expect(() => {ms932Encoder.encode("\uCB0C")}).to.throw(Error, "EncodingError U+CB0C");
expect(() => {ms932Encoder.encode("\uCB0D")}).to.throw(Error, "EncodingError U+CB0D");
expect(() => {ms932Encoder.encode("\uCB0E")}).to.throw(Error, "EncodingError U+CB0E");
expect(() => {ms932Encoder.encode("\uCB0F")}).to.throw(Error, "EncodingError U+CB0F");
expect(() => {ms932Encoder.encode("\uCB10")}).to.throw(Error, "EncodingError U+CB10");
expect(() => {ms932Encoder.encode("\uCB11")}).to.throw(Error, "EncodingError U+CB11");
expect(() => {ms932Encoder.encode("\uCB12")}).to.throw(Error, "EncodingError U+CB12");
expect(() => {ms932Encoder.encode("\uCB13")}).to.throw(Error, "EncodingError U+CB13");
expect(() => {ms932Encoder.encode("\uCB14")}).to.throw(Error, "EncodingError U+CB14");
expect(() => {ms932Encoder.encode("\uCB15")}).to.throw(Error, "EncodingError U+CB15");
expect(() => {ms932Encoder.encode("\uCB16")}).to.throw(Error, "EncodingError U+CB16");
expect(() => {ms932Encoder.encode("\uCB17")}).to.throw(Error, "EncodingError U+CB17");
expect(() => {ms932Encoder.encode("\uCB18")}).to.throw(Error, "EncodingError U+CB18");
expect(() => {ms932Encoder.encode("\uCB19")}).to.throw(Error, "EncodingError U+CB19");
expect(() => {ms932Encoder.encode("\uCB1A")}).to.throw(Error, "EncodingError U+CB1A");
expect(() => {ms932Encoder.encode("\uCB1B")}).to.throw(Error, "EncodingError U+CB1B");
expect(() => {ms932Encoder.encode("\uCB1C")}).to.throw(Error, "EncodingError U+CB1C");
expect(() => {ms932Encoder.encode("\uCB1D")}).to.throw(Error, "EncodingError U+CB1D");
expect(() => {ms932Encoder.encode("\uCB1E")}).to.throw(Error, "EncodingError U+CB1E");
expect(() => {ms932Encoder.encode("\uCB1F")}).to.throw(Error, "EncodingError U+CB1F");
expect(() => {ms932Encoder.encode("\uCB20")}).to.throw(Error, "EncodingError U+CB20");
expect(() => {ms932Encoder.encode("\uCB21")}).to.throw(Error, "EncodingError U+CB21");
expect(() => {ms932Encoder.encode("\uCB22")}).to.throw(Error, "EncodingError U+CB22");
expect(() => {ms932Encoder.encode("\uCB23")}).to.throw(Error, "EncodingError U+CB23");
expect(() => {ms932Encoder.encode("\uCB24")}).to.throw(Error, "EncodingError U+CB24");
expect(() => {ms932Encoder.encode("\uCB25")}).to.throw(Error, "EncodingError U+CB25");
expect(() => {ms932Encoder.encode("\uCB26")}).to.throw(Error, "EncodingError U+CB26");
expect(() => {ms932Encoder.encode("\uCB27")}).to.throw(Error, "EncodingError U+CB27");
expect(() => {ms932Encoder.encode("\uCB28")}).to.throw(Error, "EncodingError U+CB28");
expect(() => {ms932Encoder.encode("\uCB29")}).to.throw(Error, "EncodingError U+CB29");
expect(() => {ms932Encoder.encode("\uCB2A")}).to.throw(Error, "EncodingError U+CB2A");
expect(() => {ms932Encoder.encode("\uCB2B")}).to.throw(Error, "EncodingError U+CB2B");
expect(() => {ms932Encoder.encode("\uCB2C")}).to.throw(Error, "EncodingError U+CB2C");
expect(() => {ms932Encoder.encode("\uCB2D")}).to.throw(Error, "EncodingError U+CB2D");
expect(() => {ms932Encoder.encode("\uCB2E")}).to.throw(Error, "EncodingError U+CB2E");
expect(() => {ms932Encoder.encode("\uCB2F")}).to.throw(Error, "EncodingError U+CB2F");
expect(() => {ms932Encoder.encode("\uCB30")}).to.throw(Error, "EncodingError U+CB30");
expect(() => {ms932Encoder.encode("\uCB31")}).to.throw(Error, "EncodingError U+CB31");
expect(() => {ms932Encoder.encode("\uCB32")}).to.throw(Error, "EncodingError U+CB32");
expect(() => {ms932Encoder.encode("\uCB33")}).to.throw(Error, "EncodingError U+CB33");
expect(() => {ms932Encoder.encode("\uCB34")}).to.throw(Error, "EncodingError U+CB34");
expect(() => {ms932Encoder.encode("\uCB35")}).to.throw(Error, "EncodingError U+CB35");
expect(() => {ms932Encoder.encode("\uCB36")}).to.throw(Error, "EncodingError U+CB36");
expect(() => {ms932Encoder.encode("\uCB37")}).to.throw(Error, "EncodingError U+CB37");
expect(() => {ms932Encoder.encode("\uCB38")}).to.throw(Error, "EncodingError U+CB38");
expect(() => {ms932Encoder.encode("\uCB39")}).to.throw(Error, "EncodingError U+CB39");
expect(() => {ms932Encoder.encode("\uCB3A")}).to.throw(Error, "EncodingError U+CB3A");
expect(() => {ms932Encoder.encode("\uCB3B")}).to.throw(Error, "EncodingError U+CB3B");
expect(() => {ms932Encoder.encode("\uCB3C")}).to.throw(Error, "EncodingError U+CB3C");
expect(() => {ms932Encoder.encode("\uCB3D")}).to.throw(Error, "EncodingError U+CB3D");
expect(() => {ms932Encoder.encode("\uCB3E")}).to.throw(Error, "EncodingError U+CB3E");
expect(() => {ms932Encoder.encode("\uCB3F")}).to.throw(Error, "EncodingError U+CB3F");
expect(() => {ms932Encoder.encode("\uCB40")}).to.throw(Error, "EncodingError U+CB40");
expect(() => {ms932Encoder.encode("\uCB41")}).to.throw(Error, "EncodingError U+CB41");
expect(() => {ms932Encoder.encode("\uCB42")}).to.throw(Error, "EncodingError U+CB42");
expect(() => {ms932Encoder.encode("\uCB43")}).to.throw(Error, "EncodingError U+CB43");
expect(() => {ms932Encoder.encode("\uCB44")}).to.throw(Error, "EncodingError U+CB44");
expect(() => {ms932Encoder.encode("\uCB45")}).to.throw(Error, "EncodingError U+CB45");
expect(() => {ms932Encoder.encode("\uCB46")}).to.throw(Error, "EncodingError U+CB46");
expect(() => {ms932Encoder.encode("\uCB47")}).to.throw(Error, "EncodingError U+CB47");
expect(() => {ms932Encoder.encode("\uCB48")}).to.throw(Error, "EncodingError U+CB48");
expect(() => {ms932Encoder.encode("\uCB49")}).to.throw(Error, "EncodingError U+CB49");
expect(() => {ms932Encoder.encode("\uCB4A")}).to.throw(Error, "EncodingError U+CB4A");
expect(() => {ms932Encoder.encode("\uCB4B")}).to.throw(Error, "EncodingError U+CB4B");
expect(() => {ms932Encoder.encode("\uCB4C")}).to.throw(Error, "EncodingError U+CB4C");
expect(() => {ms932Encoder.encode("\uCB4D")}).to.throw(Error, "EncodingError U+CB4D");
expect(() => {ms932Encoder.encode("\uCB4E")}).to.throw(Error, "EncodingError U+CB4E");
expect(() => {ms932Encoder.encode("\uCB4F")}).to.throw(Error, "EncodingError U+CB4F");
expect(() => {ms932Encoder.encode("\uCB50")}).to.throw(Error, "EncodingError U+CB50");
expect(() => {ms932Encoder.encode("\uCB51")}).to.throw(Error, "EncodingError U+CB51");
expect(() => {ms932Encoder.encode("\uCB52")}).to.throw(Error, "EncodingError U+CB52");
expect(() => {ms932Encoder.encode("\uCB53")}).to.throw(Error, "EncodingError U+CB53");
expect(() => {ms932Encoder.encode("\uCB54")}).to.throw(Error, "EncodingError U+CB54");
expect(() => {ms932Encoder.encode("\uCB55")}).to.throw(Error, "EncodingError U+CB55");
expect(() => {ms932Encoder.encode("\uCB56")}).to.throw(Error, "EncodingError U+CB56");
expect(() => {ms932Encoder.encode("\uCB57")}).to.throw(Error, "EncodingError U+CB57");
expect(() => {ms932Encoder.encode("\uCB58")}).to.throw(Error, "EncodingError U+CB58");
expect(() => {ms932Encoder.encode("\uCB59")}).to.throw(Error, "EncodingError U+CB59");
expect(() => {ms932Encoder.encode("\uCB5A")}).to.throw(Error, "EncodingError U+CB5A");
expect(() => {ms932Encoder.encode("\uCB5B")}).to.throw(Error, "EncodingError U+CB5B");
expect(() => {ms932Encoder.encode("\uCB5C")}).to.throw(Error, "EncodingError U+CB5C");
expect(() => {ms932Encoder.encode("\uCB5D")}).to.throw(Error, "EncodingError U+CB5D");
expect(() => {ms932Encoder.encode("\uCB5E")}).to.throw(Error, "EncodingError U+CB5E");
expect(() => {ms932Encoder.encode("\uCB5F")}).to.throw(Error, "EncodingError U+CB5F");
expect(() => {ms932Encoder.encode("\uCB60")}).to.throw(Error, "EncodingError U+CB60");
expect(() => {ms932Encoder.encode("\uCB61")}).to.throw(Error, "EncodingError U+CB61");
expect(() => {ms932Encoder.encode("\uCB62")}).to.throw(Error, "EncodingError U+CB62");
expect(() => {ms932Encoder.encode("\uCB63")}).to.throw(Error, "EncodingError U+CB63");
expect(() => {ms932Encoder.encode("\uCB64")}).to.throw(Error, "EncodingError U+CB64");
expect(() => {ms932Encoder.encode("\uCB65")}).to.throw(Error, "EncodingError U+CB65");
expect(() => {ms932Encoder.encode("\uCB66")}).to.throw(Error, "EncodingError U+CB66");
expect(() => {ms932Encoder.encode("\uCB67")}).to.throw(Error, "EncodingError U+CB67");
expect(() => {ms932Encoder.encode("\uCB68")}).to.throw(Error, "EncodingError U+CB68");
expect(() => {ms932Encoder.encode("\uCB69")}).to.throw(Error, "EncodingError U+CB69");
expect(() => {ms932Encoder.encode("\uCB6A")}).to.throw(Error, "EncodingError U+CB6A");
expect(() => {ms932Encoder.encode("\uCB6B")}).to.throw(Error, "EncodingError U+CB6B");
expect(() => {ms932Encoder.encode("\uCB6C")}).to.throw(Error, "EncodingError U+CB6C");
expect(() => {ms932Encoder.encode("\uCB6D")}).to.throw(Error, "EncodingError U+CB6D");
expect(() => {ms932Encoder.encode("\uCB6E")}).to.throw(Error, "EncodingError U+CB6E");
expect(() => {ms932Encoder.encode("\uCB6F")}).to.throw(Error, "EncodingError U+CB6F");
expect(() => {ms932Encoder.encode("\uCB70")}).to.throw(Error, "EncodingError U+CB70");
expect(() => {ms932Encoder.encode("\uCB71")}).to.throw(Error, "EncodingError U+CB71");
expect(() => {ms932Encoder.encode("\uCB72")}).to.throw(Error, "EncodingError U+CB72");
expect(() => {ms932Encoder.encode("\uCB73")}).to.throw(Error, "EncodingError U+CB73");
expect(() => {ms932Encoder.encode("\uCB74")}).to.throw(Error, "EncodingError U+CB74");
expect(() => {ms932Encoder.encode("\uCB75")}).to.throw(Error, "EncodingError U+CB75");
expect(() => {ms932Encoder.encode("\uCB76")}).to.throw(Error, "EncodingError U+CB76");
expect(() => {ms932Encoder.encode("\uCB77")}).to.throw(Error, "EncodingError U+CB77");
expect(() => {ms932Encoder.encode("\uCB78")}).to.throw(Error, "EncodingError U+CB78");
expect(() => {ms932Encoder.encode("\uCB79")}).to.throw(Error, "EncodingError U+CB79");
expect(() => {ms932Encoder.encode("\uCB7A")}).to.throw(Error, "EncodingError U+CB7A");
expect(() => {ms932Encoder.encode("\uCB7B")}).to.throw(Error, "EncodingError U+CB7B");
expect(() => {ms932Encoder.encode("\uCB7C")}).to.throw(Error, "EncodingError U+CB7C");
expect(() => {ms932Encoder.encode("\uCB7D")}).to.throw(Error, "EncodingError U+CB7D");
expect(() => {ms932Encoder.encode("\uCB7E")}).to.throw(Error, "EncodingError U+CB7E");
expect(() => {ms932Encoder.encode("\uCB7F")}).to.throw(Error, "EncodingError U+CB7F");
expect(() => {ms932Encoder.encode("\uCB80")}).to.throw(Error, "EncodingError U+CB80");
expect(() => {ms932Encoder.encode("\uCB81")}).to.throw(Error, "EncodingError U+CB81");
expect(() => {ms932Encoder.encode("\uCB82")}).to.throw(Error, "EncodingError U+CB82");
expect(() => {ms932Encoder.encode("\uCB83")}).to.throw(Error, "EncodingError U+CB83");
expect(() => {ms932Encoder.encode("\uCB84")}).to.throw(Error, "EncodingError U+CB84");
expect(() => {ms932Encoder.encode("\uCB85")}).to.throw(Error, "EncodingError U+CB85");
expect(() => {ms932Encoder.encode("\uCB86")}).to.throw(Error, "EncodingError U+CB86");
expect(() => {ms932Encoder.encode("\uCB87")}).to.throw(Error, "EncodingError U+CB87");
expect(() => {ms932Encoder.encode("\uCB88")}).to.throw(Error, "EncodingError U+CB88");
expect(() => {ms932Encoder.encode("\uCB89")}).to.throw(Error, "EncodingError U+CB89");
expect(() => {ms932Encoder.encode("\uCB8A")}).to.throw(Error, "EncodingError U+CB8A");
expect(() => {ms932Encoder.encode("\uCB8B")}).to.throw(Error, "EncodingError U+CB8B");
expect(() => {ms932Encoder.encode("\uCB8C")}).to.throw(Error, "EncodingError U+CB8C");
expect(() => {ms932Encoder.encode("\uCB8D")}).to.throw(Error, "EncodingError U+CB8D");
expect(() => {ms932Encoder.encode("\uCB8E")}).to.throw(Error, "EncodingError U+CB8E");
expect(() => {ms932Encoder.encode("\uCB8F")}).to.throw(Error, "EncodingError U+CB8F");
expect(() => {ms932Encoder.encode("\uCB90")}).to.throw(Error, "EncodingError U+CB90");
expect(() => {ms932Encoder.encode("\uCB91")}).to.throw(Error, "EncodingError U+CB91");
expect(() => {ms932Encoder.encode("\uCB92")}).to.throw(Error, "EncodingError U+CB92");
expect(() => {ms932Encoder.encode("\uCB93")}).to.throw(Error, "EncodingError U+CB93");
expect(() => {ms932Encoder.encode("\uCB94")}).to.throw(Error, "EncodingError U+CB94");
expect(() => {ms932Encoder.encode("\uCB95")}).to.throw(Error, "EncodingError U+CB95");
expect(() => {ms932Encoder.encode("\uCB96")}).to.throw(Error, "EncodingError U+CB96");
expect(() => {ms932Encoder.encode("\uCB97")}).to.throw(Error, "EncodingError U+CB97");
expect(() => {ms932Encoder.encode("\uCB98")}).to.throw(Error, "EncodingError U+CB98");
expect(() => {ms932Encoder.encode("\uCB99")}).to.throw(Error, "EncodingError U+CB99");
expect(() => {ms932Encoder.encode("\uCB9A")}).to.throw(Error, "EncodingError U+CB9A");
expect(() => {ms932Encoder.encode("\uCB9B")}).to.throw(Error, "EncodingError U+CB9B");
expect(() => {ms932Encoder.encode("\uCB9C")}).to.throw(Error, "EncodingError U+CB9C");
expect(() => {ms932Encoder.encode("\uCB9D")}).to.throw(Error, "EncodingError U+CB9D");
expect(() => {ms932Encoder.encode("\uCB9E")}).to.throw(Error, "EncodingError U+CB9E");
expect(() => {ms932Encoder.encode("\uCB9F")}).to.throw(Error, "EncodingError U+CB9F");
expect(() => {ms932Encoder.encode("\uCBA0")}).to.throw(Error, "EncodingError U+CBA0");
expect(() => {ms932Encoder.encode("\uCBA1")}).to.throw(Error, "EncodingError U+CBA1");
expect(() => {ms932Encoder.encode("\uCBA2")}).to.throw(Error, "EncodingError U+CBA2");
expect(() => {ms932Encoder.encode("\uCBA3")}).to.throw(Error, "EncodingError U+CBA3");
expect(() => {ms932Encoder.encode("\uCBA4")}).to.throw(Error, "EncodingError U+CBA4");
expect(() => {ms932Encoder.encode("\uCBA5")}).to.throw(Error, "EncodingError U+CBA5");
expect(() => {ms932Encoder.encode("\uCBA6")}).to.throw(Error, "EncodingError U+CBA6");
expect(() => {ms932Encoder.encode("\uCBA7")}).to.throw(Error, "EncodingError U+CBA7");
expect(() => {ms932Encoder.encode("\uCBA8")}).to.throw(Error, "EncodingError U+CBA8");
expect(() => {ms932Encoder.encode("\uCBA9")}).to.throw(Error, "EncodingError U+CBA9");
expect(() => {ms932Encoder.encode("\uCBAA")}).to.throw(Error, "EncodingError U+CBAA");
expect(() => {ms932Encoder.encode("\uCBAB")}).to.throw(Error, "EncodingError U+CBAB");
expect(() => {ms932Encoder.encode("\uCBAC")}).to.throw(Error, "EncodingError U+CBAC");
expect(() => {ms932Encoder.encode("\uCBAD")}).to.throw(Error, "EncodingError U+CBAD");
expect(() => {ms932Encoder.encode("\uCBAE")}).to.throw(Error, "EncodingError U+CBAE");
expect(() => {ms932Encoder.encode("\uCBAF")}).to.throw(Error, "EncodingError U+CBAF");
expect(() => {ms932Encoder.encode("\uCBB0")}).to.throw(Error, "EncodingError U+CBB0");
expect(() => {ms932Encoder.encode("\uCBB1")}).to.throw(Error, "EncodingError U+CBB1");
expect(() => {ms932Encoder.encode("\uCBB2")}).to.throw(Error, "EncodingError U+CBB2");
expect(() => {ms932Encoder.encode("\uCBB3")}).to.throw(Error, "EncodingError U+CBB3");
expect(() => {ms932Encoder.encode("\uCBB4")}).to.throw(Error, "EncodingError U+CBB4");
expect(() => {ms932Encoder.encode("\uCBB5")}).to.throw(Error, "EncodingError U+CBB5");
expect(() => {ms932Encoder.encode("\uCBB6")}).to.throw(Error, "EncodingError U+CBB6");
expect(() => {ms932Encoder.encode("\uCBB7")}).to.throw(Error, "EncodingError U+CBB7");
expect(() => {ms932Encoder.encode("\uCBB8")}).to.throw(Error, "EncodingError U+CBB8");
expect(() => {ms932Encoder.encode("\uCBB9")}).to.throw(Error, "EncodingError U+CBB9");
expect(() => {ms932Encoder.encode("\uCBBA")}).to.throw(Error, "EncodingError U+CBBA");
expect(() => {ms932Encoder.encode("\uCBBB")}).to.throw(Error, "EncodingError U+CBBB");
expect(() => {ms932Encoder.encode("\uCBBC")}).to.throw(Error, "EncodingError U+CBBC");
expect(() => {ms932Encoder.encode("\uCBBD")}).to.throw(Error, "EncodingError U+CBBD");
expect(() => {ms932Encoder.encode("\uCBBE")}).to.throw(Error, "EncodingError U+CBBE");
expect(() => {ms932Encoder.encode("\uCBBF")}).to.throw(Error, "EncodingError U+CBBF");
expect(() => {ms932Encoder.encode("\uCBC0")}).to.throw(Error, "EncodingError U+CBC0");
expect(() => {ms932Encoder.encode("\uCBC1")}).to.throw(Error, "EncodingError U+CBC1");
expect(() => {ms932Encoder.encode("\uCBC2")}).to.throw(Error, "EncodingError U+CBC2");
expect(() => {ms932Encoder.encode("\uCBC3")}).to.throw(Error, "EncodingError U+CBC3");
expect(() => {ms932Encoder.encode("\uCBC4")}).to.throw(Error, "EncodingError U+CBC4");
expect(() => {ms932Encoder.encode("\uCBC5")}).to.throw(Error, "EncodingError U+CBC5");
expect(() => {ms932Encoder.encode("\uCBC6")}).to.throw(Error, "EncodingError U+CBC6");
expect(() => {ms932Encoder.encode("\uCBC7")}).to.throw(Error, "EncodingError U+CBC7");
expect(() => {ms932Encoder.encode("\uCBC8")}).to.throw(Error, "EncodingError U+CBC8");
expect(() => {ms932Encoder.encode("\uCBC9")}).to.throw(Error, "EncodingError U+CBC9");
expect(() => {ms932Encoder.encode("\uCBCA")}).to.throw(Error, "EncodingError U+CBCA");
expect(() => {ms932Encoder.encode("\uCBCB")}).to.throw(Error, "EncodingError U+CBCB");
expect(() => {ms932Encoder.encode("\uCBCC")}).to.throw(Error, "EncodingError U+CBCC");
expect(() => {ms932Encoder.encode("\uCBCD")}).to.throw(Error, "EncodingError U+CBCD");
expect(() => {ms932Encoder.encode("\uCBCE")}).to.throw(Error, "EncodingError U+CBCE");
expect(() => {ms932Encoder.encode("\uCBCF")}).to.throw(Error, "EncodingError U+CBCF");
expect(() => {ms932Encoder.encode("\uCBD0")}).to.throw(Error, "EncodingError U+CBD0");
expect(() => {ms932Encoder.encode("\uCBD1")}).to.throw(Error, "EncodingError U+CBD1");
expect(() => {ms932Encoder.encode("\uCBD2")}).to.throw(Error, "EncodingError U+CBD2");
expect(() => {ms932Encoder.encode("\uCBD3")}).to.throw(Error, "EncodingError U+CBD3");
expect(() => {ms932Encoder.encode("\uCBD4")}).to.throw(Error, "EncodingError U+CBD4");
expect(() => {ms932Encoder.encode("\uCBD5")}).to.throw(Error, "EncodingError U+CBD5");
expect(() => {ms932Encoder.encode("\uCBD6")}).to.throw(Error, "EncodingError U+CBD6");
expect(() => {ms932Encoder.encode("\uCBD7")}).to.throw(Error, "EncodingError U+CBD7");
expect(() => {ms932Encoder.encode("\uCBD8")}).to.throw(Error, "EncodingError U+CBD8");
expect(() => {ms932Encoder.encode("\uCBD9")}).to.throw(Error, "EncodingError U+CBD9");
expect(() => {ms932Encoder.encode("\uCBDA")}).to.throw(Error, "EncodingError U+CBDA");
expect(() => {ms932Encoder.encode("\uCBDB")}).to.throw(Error, "EncodingError U+CBDB");
expect(() => {ms932Encoder.encode("\uCBDC")}).to.throw(Error, "EncodingError U+CBDC");
expect(() => {ms932Encoder.encode("\uCBDD")}).to.throw(Error, "EncodingError U+CBDD");
expect(() => {ms932Encoder.encode("\uCBDE")}).to.throw(Error, "EncodingError U+CBDE");
expect(() => {ms932Encoder.encode("\uCBDF")}).to.throw(Error, "EncodingError U+CBDF");
expect(() => {ms932Encoder.encode("\uCBE0")}).to.throw(Error, "EncodingError U+CBE0");
expect(() => {ms932Encoder.encode("\uCBE1")}).to.throw(Error, "EncodingError U+CBE1");
expect(() => {ms932Encoder.encode("\uCBE2")}).to.throw(Error, "EncodingError U+CBE2");
expect(() => {ms932Encoder.encode("\uCBE3")}).to.throw(Error, "EncodingError U+CBE3");
expect(() => {ms932Encoder.encode("\uCBE4")}).to.throw(Error, "EncodingError U+CBE4");
expect(() => {ms932Encoder.encode("\uCBE5")}).to.throw(Error, "EncodingError U+CBE5");
expect(() => {ms932Encoder.encode("\uCBE6")}).to.throw(Error, "EncodingError U+CBE6");
expect(() => {ms932Encoder.encode("\uCBE7")}).to.throw(Error, "EncodingError U+CBE7");
expect(() => {ms932Encoder.encode("\uCBE8")}).to.throw(Error, "EncodingError U+CBE8");
expect(() => {ms932Encoder.encode("\uCBE9")}).to.throw(Error, "EncodingError U+CBE9");
expect(() => {ms932Encoder.encode("\uCBEA")}).to.throw(Error, "EncodingError U+CBEA");
expect(() => {ms932Encoder.encode("\uCBEB")}).to.throw(Error, "EncodingError U+CBEB");
expect(() => {ms932Encoder.encode("\uCBEC")}).to.throw(Error, "EncodingError U+CBEC");
expect(() => {ms932Encoder.encode("\uCBED")}).to.throw(Error, "EncodingError U+CBED");
expect(() => {ms932Encoder.encode("\uCBEE")}).to.throw(Error, "EncodingError U+CBEE");
expect(() => {ms932Encoder.encode("\uCBEF")}).to.throw(Error, "EncodingError U+CBEF");
expect(() => {ms932Encoder.encode("\uCBF0")}).to.throw(Error, "EncodingError U+CBF0");
expect(() => {ms932Encoder.encode("\uCBF1")}).to.throw(Error, "EncodingError U+CBF1");
expect(() => {ms932Encoder.encode("\uCBF2")}).to.throw(Error, "EncodingError U+CBF2");
expect(() => {ms932Encoder.encode("\uCBF3")}).to.throw(Error, "EncodingError U+CBF3");
expect(() => {ms932Encoder.encode("\uCBF4")}).to.throw(Error, "EncodingError U+CBF4");
expect(() => {ms932Encoder.encode("\uCBF5")}).to.throw(Error, "EncodingError U+CBF5");
expect(() => {ms932Encoder.encode("\uCBF6")}).to.throw(Error, "EncodingError U+CBF6");
expect(() => {ms932Encoder.encode("\uCBF7")}).to.throw(Error, "EncodingError U+CBF7");
expect(() => {ms932Encoder.encode("\uCBF8")}).to.throw(Error, "EncodingError U+CBF8");
expect(() => {ms932Encoder.encode("\uCBF9")}).to.throw(Error, "EncodingError U+CBF9");
expect(() => {ms932Encoder.encode("\uCBFA")}).to.throw(Error, "EncodingError U+CBFA");
expect(() => {ms932Encoder.encode("\uCBFB")}).to.throw(Error, "EncodingError U+CBFB");
expect(() => {ms932Encoder.encode("\uCBFC")}).to.throw(Error, "EncodingError U+CBFC");
expect(() => {ms932Encoder.encode("\uCBFD")}).to.throw(Error, "EncodingError U+CBFD");
expect(() => {ms932Encoder.encode("\uCBFE")}).to.throw(Error, "EncodingError U+CBFE");
expect(() => {ms932Encoder.encode("\uCBFF")}).to.throw(Error, "EncodingError U+CBFF");
expect(() => {ms932Encoder.encode("\uCC00")}).to.throw(Error, "EncodingError U+CC00");
expect(() => {ms932Encoder.encode("\uCC01")}).to.throw(Error, "EncodingError U+CC01");
expect(() => {ms932Encoder.encode("\uCC02")}).to.throw(Error, "EncodingError U+CC02");
expect(() => {ms932Encoder.encode("\uCC03")}).to.throw(Error, "EncodingError U+CC03");
expect(() => {ms932Encoder.encode("\uCC04")}).to.throw(Error, "EncodingError U+CC04");
expect(() => {ms932Encoder.encode("\uCC05")}).to.throw(Error, "EncodingError U+CC05");
expect(() => {ms932Encoder.encode("\uCC06")}).to.throw(Error, "EncodingError U+CC06");
expect(() => {ms932Encoder.encode("\uCC07")}).to.throw(Error, "EncodingError U+CC07");
expect(() => {ms932Encoder.encode("\uCC08")}).to.throw(Error, "EncodingError U+CC08");
expect(() => {ms932Encoder.encode("\uCC09")}).to.throw(Error, "EncodingError U+CC09");
expect(() => {ms932Encoder.encode("\uCC0A")}).to.throw(Error, "EncodingError U+CC0A");
expect(() => {ms932Encoder.encode("\uCC0B")}).to.throw(Error, "EncodingError U+CC0B");
expect(() => {ms932Encoder.encode("\uCC0C")}).to.throw(Error, "EncodingError U+CC0C");
expect(() => {ms932Encoder.encode("\uCC0D")}).to.throw(Error, "EncodingError U+CC0D");
expect(() => {ms932Encoder.encode("\uCC0E")}).to.throw(Error, "EncodingError U+CC0E");
expect(() => {ms932Encoder.encode("\uCC0F")}).to.throw(Error, "EncodingError U+CC0F");
expect(() => {ms932Encoder.encode("\uCC10")}).to.throw(Error, "EncodingError U+CC10");
expect(() => {ms932Encoder.encode("\uCC11")}).to.throw(Error, "EncodingError U+CC11");
expect(() => {ms932Encoder.encode("\uCC12")}).to.throw(Error, "EncodingError U+CC12");
expect(() => {ms932Encoder.encode("\uCC13")}).to.throw(Error, "EncodingError U+CC13");
expect(() => {ms932Encoder.encode("\uCC14")}).to.throw(Error, "EncodingError U+CC14");
expect(() => {ms932Encoder.encode("\uCC15")}).to.throw(Error, "EncodingError U+CC15");
expect(() => {ms932Encoder.encode("\uCC16")}).to.throw(Error, "EncodingError U+CC16");
expect(() => {ms932Encoder.encode("\uCC17")}).to.throw(Error, "EncodingError U+CC17");
expect(() => {ms932Encoder.encode("\uCC18")}).to.throw(Error, "EncodingError U+CC18");
expect(() => {ms932Encoder.encode("\uCC19")}).to.throw(Error, "EncodingError U+CC19");
expect(() => {ms932Encoder.encode("\uCC1A")}).to.throw(Error, "EncodingError U+CC1A");
expect(() => {ms932Encoder.encode("\uCC1B")}).to.throw(Error, "EncodingError U+CC1B");
expect(() => {ms932Encoder.encode("\uCC1C")}).to.throw(Error, "EncodingError U+CC1C");
expect(() => {ms932Encoder.encode("\uCC1D")}).to.throw(Error, "EncodingError U+CC1D");
expect(() => {ms932Encoder.encode("\uCC1E")}).to.throw(Error, "EncodingError U+CC1E");
expect(() => {ms932Encoder.encode("\uCC1F")}).to.throw(Error, "EncodingError U+CC1F");
expect(() => {ms932Encoder.encode("\uCC20")}).to.throw(Error, "EncodingError U+CC20");
expect(() => {ms932Encoder.encode("\uCC21")}).to.throw(Error, "EncodingError U+CC21");
expect(() => {ms932Encoder.encode("\uCC22")}).to.throw(Error, "EncodingError U+CC22");
expect(() => {ms932Encoder.encode("\uCC23")}).to.throw(Error, "EncodingError U+CC23");
expect(() => {ms932Encoder.encode("\uCC24")}).to.throw(Error, "EncodingError U+CC24");
expect(() => {ms932Encoder.encode("\uCC25")}).to.throw(Error, "EncodingError U+CC25");
expect(() => {ms932Encoder.encode("\uCC26")}).to.throw(Error, "EncodingError U+CC26");
expect(() => {ms932Encoder.encode("\uCC27")}).to.throw(Error, "EncodingError U+CC27");
expect(() => {ms932Encoder.encode("\uCC28")}).to.throw(Error, "EncodingError U+CC28");
expect(() => {ms932Encoder.encode("\uCC29")}).to.throw(Error, "EncodingError U+CC29");
expect(() => {ms932Encoder.encode("\uCC2A")}).to.throw(Error, "EncodingError U+CC2A");
expect(() => {ms932Encoder.encode("\uCC2B")}).to.throw(Error, "EncodingError U+CC2B");
expect(() => {ms932Encoder.encode("\uCC2C")}).to.throw(Error, "EncodingError U+CC2C");
expect(() => {ms932Encoder.encode("\uCC2D")}).to.throw(Error, "EncodingError U+CC2D");
expect(() => {ms932Encoder.encode("\uCC2E")}).to.throw(Error, "EncodingError U+CC2E");
expect(() => {ms932Encoder.encode("\uCC2F")}).to.throw(Error, "EncodingError U+CC2F");
expect(() => {ms932Encoder.encode("\uCC30")}).to.throw(Error, "EncodingError U+CC30");
expect(() => {ms932Encoder.encode("\uCC31")}).to.throw(Error, "EncodingError U+CC31");
expect(() => {ms932Encoder.encode("\uCC32")}).to.throw(Error, "EncodingError U+CC32");
expect(() => {ms932Encoder.encode("\uCC33")}).to.throw(Error, "EncodingError U+CC33");
expect(() => {ms932Encoder.encode("\uCC34")}).to.throw(Error, "EncodingError U+CC34");
expect(() => {ms932Encoder.encode("\uCC35")}).to.throw(Error, "EncodingError U+CC35");
expect(() => {ms932Encoder.encode("\uCC36")}).to.throw(Error, "EncodingError U+CC36");
expect(() => {ms932Encoder.encode("\uCC37")}).to.throw(Error, "EncodingError U+CC37");
expect(() => {ms932Encoder.encode("\uCC38")}).to.throw(Error, "EncodingError U+CC38");
expect(() => {ms932Encoder.encode("\uCC39")}).to.throw(Error, "EncodingError U+CC39");
expect(() => {ms932Encoder.encode("\uCC3A")}).to.throw(Error, "EncodingError U+CC3A");
expect(() => {ms932Encoder.encode("\uCC3B")}).to.throw(Error, "EncodingError U+CC3B");
expect(() => {ms932Encoder.encode("\uCC3C")}).to.throw(Error, "EncodingError U+CC3C");
expect(() => {ms932Encoder.encode("\uCC3D")}).to.throw(Error, "EncodingError U+CC3D");
expect(() => {ms932Encoder.encode("\uCC3E")}).to.throw(Error, "EncodingError U+CC3E");
expect(() => {ms932Encoder.encode("\uCC3F")}).to.throw(Error, "EncodingError U+CC3F");
expect(() => {ms932Encoder.encode("\uCC40")}).to.throw(Error, "EncodingError U+CC40");
expect(() => {ms932Encoder.encode("\uCC41")}).to.throw(Error, "EncodingError U+CC41");
expect(() => {ms932Encoder.encode("\uCC42")}).to.throw(Error, "EncodingError U+CC42");
expect(() => {ms932Encoder.encode("\uCC43")}).to.throw(Error, "EncodingError U+CC43");
expect(() => {ms932Encoder.encode("\uCC44")}).to.throw(Error, "EncodingError U+CC44");
expect(() => {ms932Encoder.encode("\uCC45")}).to.throw(Error, "EncodingError U+CC45");
expect(() => {ms932Encoder.encode("\uCC46")}).to.throw(Error, "EncodingError U+CC46");
expect(() => {ms932Encoder.encode("\uCC47")}).to.throw(Error, "EncodingError U+CC47");
expect(() => {ms932Encoder.encode("\uCC48")}).to.throw(Error, "EncodingError U+CC48");
expect(() => {ms932Encoder.encode("\uCC49")}).to.throw(Error, "EncodingError U+CC49");
expect(() => {ms932Encoder.encode("\uCC4A")}).to.throw(Error, "EncodingError U+CC4A");
expect(() => {ms932Encoder.encode("\uCC4B")}).to.throw(Error, "EncodingError U+CC4B");
expect(() => {ms932Encoder.encode("\uCC4C")}).to.throw(Error, "EncodingError U+CC4C");
expect(() => {ms932Encoder.encode("\uCC4D")}).to.throw(Error, "EncodingError U+CC4D");
expect(() => {ms932Encoder.encode("\uCC4E")}).to.throw(Error, "EncodingError U+CC4E");
expect(() => {ms932Encoder.encode("\uCC4F")}).to.throw(Error, "EncodingError U+CC4F");
expect(() => {ms932Encoder.encode("\uCC50")}).to.throw(Error, "EncodingError U+CC50");
expect(() => {ms932Encoder.encode("\uCC51")}).to.throw(Error, "EncodingError U+CC51");
expect(() => {ms932Encoder.encode("\uCC52")}).to.throw(Error, "EncodingError U+CC52");
expect(() => {ms932Encoder.encode("\uCC53")}).to.throw(Error, "EncodingError U+CC53");
expect(() => {ms932Encoder.encode("\uCC54")}).to.throw(Error, "EncodingError U+CC54");
expect(() => {ms932Encoder.encode("\uCC55")}).to.throw(Error, "EncodingError U+CC55");
expect(() => {ms932Encoder.encode("\uCC56")}).to.throw(Error, "EncodingError U+CC56");
expect(() => {ms932Encoder.encode("\uCC57")}).to.throw(Error, "EncodingError U+CC57");
expect(() => {ms932Encoder.encode("\uCC58")}).to.throw(Error, "EncodingError U+CC58");
expect(() => {ms932Encoder.encode("\uCC59")}).to.throw(Error, "EncodingError U+CC59");
expect(() => {ms932Encoder.encode("\uCC5A")}).to.throw(Error, "EncodingError U+CC5A");
expect(() => {ms932Encoder.encode("\uCC5B")}).to.throw(Error, "EncodingError U+CC5B");
expect(() => {ms932Encoder.encode("\uCC5C")}).to.throw(Error, "EncodingError U+CC5C");
expect(() => {ms932Encoder.encode("\uCC5D")}).to.throw(Error, "EncodingError U+CC5D");
expect(() => {ms932Encoder.encode("\uCC5E")}).to.throw(Error, "EncodingError U+CC5E");
expect(() => {ms932Encoder.encode("\uCC5F")}).to.throw(Error, "EncodingError U+CC5F");
expect(() => {ms932Encoder.encode("\uCC60")}).to.throw(Error, "EncodingError U+CC60");
expect(() => {ms932Encoder.encode("\uCC61")}).to.throw(Error, "EncodingError U+CC61");
expect(() => {ms932Encoder.encode("\uCC62")}).to.throw(Error, "EncodingError U+CC62");
expect(() => {ms932Encoder.encode("\uCC63")}).to.throw(Error, "EncodingError U+CC63");
expect(() => {ms932Encoder.encode("\uCC64")}).to.throw(Error, "EncodingError U+CC64");
expect(() => {ms932Encoder.encode("\uCC65")}).to.throw(Error, "EncodingError U+CC65");
expect(() => {ms932Encoder.encode("\uCC66")}).to.throw(Error, "EncodingError U+CC66");
expect(() => {ms932Encoder.encode("\uCC67")}).to.throw(Error, "EncodingError U+CC67");
expect(() => {ms932Encoder.encode("\uCC68")}).to.throw(Error, "EncodingError U+CC68");
expect(() => {ms932Encoder.encode("\uCC69")}).to.throw(Error, "EncodingError U+CC69");
expect(() => {ms932Encoder.encode("\uCC6A")}).to.throw(Error, "EncodingError U+CC6A");
expect(() => {ms932Encoder.encode("\uCC6B")}).to.throw(Error, "EncodingError U+CC6B");
expect(() => {ms932Encoder.encode("\uCC6C")}).to.throw(Error, "EncodingError U+CC6C");
expect(() => {ms932Encoder.encode("\uCC6D")}).to.throw(Error, "EncodingError U+CC6D");
expect(() => {ms932Encoder.encode("\uCC6E")}).to.throw(Error, "EncodingError U+CC6E");
expect(() => {ms932Encoder.encode("\uCC6F")}).to.throw(Error, "EncodingError U+CC6F");
expect(() => {ms932Encoder.encode("\uCC70")}).to.throw(Error, "EncodingError U+CC70");
expect(() => {ms932Encoder.encode("\uCC71")}).to.throw(Error, "EncodingError U+CC71");
expect(() => {ms932Encoder.encode("\uCC72")}).to.throw(Error, "EncodingError U+CC72");
expect(() => {ms932Encoder.encode("\uCC73")}).to.throw(Error, "EncodingError U+CC73");
expect(() => {ms932Encoder.encode("\uCC74")}).to.throw(Error, "EncodingError U+CC74");
expect(() => {ms932Encoder.encode("\uCC75")}).to.throw(Error, "EncodingError U+CC75");
expect(() => {ms932Encoder.encode("\uCC76")}).to.throw(Error, "EncodingError U+CC76");
expect(() => {ms932Encoder.encode("\uCC77")}).to.throw(Error, "EncodingError U+CC77");
expect(() => {ms932Encoder.encode("\uCC78")}).to.throw(Error, "EncodingError U+CC78");
expect(() => {ms932Encoder.encode("\uCC79")}).to.throw(Error, "EncodingError U+CC79");
expect(() => {ms932Encoder.encode("\uCC7A")}).to.throw(Error, "EncodingError U+CC7A");
expect(() => {ms932Encoder.encode("\uCC7B")}).to.throw(Error, "EncodingError U+CC7B");
expect(() => {ms932Encoder.encode("\uCC7C")}).to.throw(Error, "EncodingError U+CC7C");
expect(() => {ms932Encoder.encode("\uCC7D")}).to.throw(Error, "EncodingError U+CC7D");
expect(() => {ms932Encoder.encode("\uCC7E")}).to.throw(Error, "EncodingError U+CC7E");
expect(() => {ms932Encoder.encode("\uCC7F")}).to.throw(Error, "EncodingError U+CC7F");
expect(() => {ms932Encoder.encode("\uCC80")}).to.throw(Error, "EncodingError U+CC80");
expect(() => {ms932Encoder.encode("\uCC81")}).to.throw(Error, "EncodingError U+CC81");
expect(() => {ms932Encoder.encode("\uCC82")}).to.throw(Error, "EncodingError U+CC82");
expect(() => {ms932Encoder.encode("\uCC83")}).to.throw(Error, "EncodingError U+CC83");
expect(() => {ms932Encoder.encode("\uCC84")}).to.throw(Error, "EncodingError U+CC84");
expect(() => {ms932Encoder.encode("\uCC85")}).to.throw(Error, "EncodingError U+CC85");
expect(() => {ms932Encoder.encode("\uCC86")}).to.throw(Error, "EncodingError U+CC86");
expect(() => {ms932Encoder.encode("\uCC87")}).to.throw(Error, "EncodingError U+CC87");
expect(() => {ms932Encoder.encode("\uCC88")}).to.throw(Error, "EncodingError U+CC88");
expect(() => {ms932Encoder.encode("\uCC89")}).to.throw(Error, "EncodingError U+CC89");
expect(() => {ms932Encoder.encode("\uCC8A")}).to.throw(Error, "EncodingError U+CC8A");
expect(() => {ms932Encoder.encode("\uCC8B")}).to.throw(Error, "EncodingError U+CC8B");
expect(() => {ms932Encoder.encode("\uCC8C")}).to.throw(Error, "EncodingError U+CC8C");
expect(() => {ms932Encoder.encode("\uCC8D")}).to.throw(Error, "EncodingError U+CC8D");
expect(() => {ms932Encoder.encode("\uCC8E")}).to.throw(Error, "EncodingError U+CC8E");
expect(() => {ms932Encoder.encode("\uCC8F")}).to.throw(Error, "EncodingError U+CC8F");
expect(() => {ms932Encoder.encode("\uCC90")}).to.throw(Error, "EncodingError U+CC90");
expect(() => {ms932Encoder.encode("\uCC91")}).to.throw(Error, "EncodingError U+CC91");
expect(() => {ms932Encoder.encode("\uCC92")}).to.throw(Error, "EncodingError U+CC92");
expect(() => {ms932Encoder.encode("\uCC93")}).to.throw(Error, "EncodingError U+CC93");
expect(() => {ms932Encoder.encode("\uCC94")}).to.throw(Error, "EncodingError U+CC94");
expect(() => {ms932Encoder.encode("\uCC95")}).to.throw(Error, "EncodingError U+CC95");
expect(() => {ms932Encoder.encode("\uCC96")}).to.throw(Error, "EncodingError U+CC96");
expect(() => {ms932Encoder.encode("\uCC97")}).to.throw(Error, "EncodingError U+CC97");
expect(() => {ms932Encoder.encode("\uCC98")}).to.throw(Error, "EncodingError U+CC98");
expect(() => {ms932Encoder.encode("\uCC99")}).to.throw(Error, "EncodingError U+CC99");
expect(() => {ms932Encoder.encode("\uCC9A")}).to.throw(Error, "EncodingError U+CC9A");
expect(() => {ms932Encoder.encode("\uCC9B")}).to.throw(Error, "EncodingError U+CC9B");
expect(() => {ms932Encoder.encode("\uCC9C")}).to.throw(Error, "EncodingError U+CC9C");
expect(() => {ms932Encoder.encode("\uCC9D")}).to.throw(Error, "EncodingError U+CC9D");
expect(() => {ms932Encoder.encode("\uCC9E")}).to.throw(Error, "EncodingError U+CC9E");
expect(() => {ms932Encoder.encode("\uCC9F")}).to.throw(Error, "EncodingError U+CC9F");
expect(() => {ms932Encoder.encode("\uCCA0")}).to.throw(Error, "EncodingError U+CCA0");
expect(() => {ms932Encoder.encode("\uCCA1")}).to.throw(Error, "EncodingError U+CCA1");
expect(() => {ms932Encoder.encode("\uCCA2")}).to.throw(Error, "EncodingError U+CCA2");
expect(() => {ms932Encoder.encode("\uCCA3")}).to.throw(Error, "EncodingError U+CCA3");
expect(() => {ms932Encoder.encode("\uCCA4")}).to.throw(Error, "EncodingError U+CCA4");
expect(() => {ms932Encoder.encode("\uCCA5")}).to.throw(Error, "EncodingError U+CCA5");
expect(() => {ms932Encoder.encode("\uCCA6")}).to.throw(Error, "EncodingError U+CCA6");
expect(() => {ms932Encoder.encode("\uCCA7")}).to.throw(Error, "EncodingError U+CCA7");
expect(() => {ms932Encoder.encode("\uCCA8")}).to.throw(Error, "EncodingError U+CCA8");
expect(() => {ms932Encoder.encode("\uCCA9")}).to.throw(Error, "EncodingError U+CCA9");
expect(() => {ms932Encoder.encode("\uCCAA")}).to.throw(Error, "EncodingError U+CCAA");
expect(() => {ms932Encoder.encode("\uCCAB")}).to.throw(Error, "EncodingError U+CCAB");
expect(() => {ms932Encoder.encode("\uCCAC")}).to.throw(Error, "EncodingError U+CCAC");
expect(() => {ms932Encoder.encode("\uCCAD")}).to.throw(Error, "EncodingError U+CCAD");
expect(() => {ms932Encoder.encode("\uCCAE")}).to.throw(Error, "EncodingError U+CCAE");
expect(() => {ms932Encoder.encode("\uCCAF")}).to.throw(Error, "EncodingError U+CCAF");
expect(() => {ms932Encoder.encode("\uCCB0")}).to.throw(Error, "EncodingError U+CCB0");
expect(() => {ms932Encoder.encode("\uCCB1")}).to.throw(Error, "EncodingError U+CCB1");
expect(() => {ms932Encoder.encode("\uCCB2")}).to.throw(Error, "EncodingError U+CCB2");
expect(() => {ms932Encoder.encode("\uCCB3")}).to.throw(Error, "EncodingError U+CCB3");
expect(() => {ms932Encoder.encode("\uCCB4")}).to.throw(Error, "EncodingError U+CCB4");
expect(() => {ms932Encoder.encode("\uCCB5")}).to.throw(Error, "EncodingError U+CCB5");
expect(() => {ms932Encoder.encode("\uCCB6")}).to.throw(Error, "EncodingError U+CCB6");
expect(() => {ms932Encoder.encode("\uCCB7")}).to.throw(Error, "EncodingError U+CCB7");
expect(() => {ms932Encoder.encode("\uCCB8")}).to.throw(Error, "EncodingError U+CCB8");
expect(() => {ms932Encoder.encode("\uCCB9")}).to.throw(Error, "EncodingError U+CCB9");
expect(() => {ms932Encoder.encode("\uCCBA")}).to.throw(Error, "EncodingError U+CCBA");
expect(() => {ms932Encoder.encode("\uCCBB")}).to.throw(Error, "EncodingError U+CCBB");
expect(() => {ms932Encoder.encode("\uCCBC")}).to.throw(Error, "EncodingError U+CCBC");
expect(() => {ms932Encoder.encode("\uCCBD")}).to.throw(Error, "EncodingError U+CCBD");
expect(() => {ms932Encoder.encode("\uCCBE")}).to.throw(Error, "EncodingError U+CCBE");
expect(() => {ms932Encoder.encode("\uCCBF")}).to.throw(Error, "EncodingError U+CCBF");
expect(() => {ms932Encoder.encode("\uCCC0")}).to.throw(Error, "EncodingError U+CCC0");
expect(() => {ms932Encoder.encode("\uCCC1")}).to.throw(Error, "EncodingError U+CCC1");
expect(() => {ms932Encoder.encode("\uCCC2")}).to.throw(Error, "EncodingError U+CCC2");
expect(() => {ms932Encoder.encode("\uCCC3")}).to.throw(Error, "EncodingError U+CCC3");
expect(() => {ms932Encoder.encode("\uCCC4")}).to.throw(Error, "EncodingError U+CCC4");
expect(() => {ms932Encoder.encode("\uCCC5")}).to.throw(Error, "EncodingError U+CCC5");
expect(() => {ms932Encoder.encode("\uCCC6")}).to.throw(Error, "EncodingError U+CCC6");
expect(() => {ms932Encoder.encode("\uCCC7")}).to.throw(Error, "EncodingError U+CCC7");
expect(() => {ms932Encoder.encode("\uCCC8")}).to.throw(Error, "EncodingError U+CCC8");
expect(() => {ms932Encoder.encode("\uCCC9")}).to.throw(Error, "EncodingError U+CCC9");
expect(() => {ms932Encoder.encode("\uCCCA")}).to.throw(Error, "EncodingError U+CCCA");
expect(() => {ms932Encoder.encode("\uCCCB")}).to.throw(Error, "EncodingError U+CCCB");
expect(() => {ms932Encoder.encode("\uCCCC")}).to.throw(Error, "EncodingError U+CCCC");
expect(() => {ms932Encoder.encode("\uCCCD")}).to.throw(Error, "EncodingError U+CCCD");
expect(() => {ms932Encoder.encode("\uCCCE")}).to.throw(Error, "EncodingError U+CCCE");
expect(() => {ms932Encoder.encode("\uCCCF")}).to.throw(Error, "EncodingError U+CCCF");
expect(() => {ms932Encoder.encode("\uCCD0")}).to.throw(Error, "EncodingError U+CCD0");
expect(() => {ms932Encoder.encode("\uCCD1")}).to.throw(Error, "EncodingError U+CCD1");
expect(() => {ms932Encoder.encode("\uCCD2")}).to.throw(Error, "EncodingError U+CCD2");
expect(() => {ms932Encoder.encode("\uCCD3")}).to.throw(Error, "EncodingError U+CCD3");
expect(() => {ms932Encoder.encode("\uCCD4")}).to.throw(Error, "EncodingError U+CCD4");
expect(() => {ms932Encoder.encode("\uCCD5")}).to.throw(Error, "EncodingError U+CCD5");
expect(() => {ms932Encoder.encode("\uCCD6")}).to.throw(Error, "EncodingError U+CCD6");
expect(() => {ms932Encoder.encode("\uCCD7")}).to.throw(Error, "EncodingError U+CCD7");
expect(() => {ms932Encoder.encode("\uCCD8")}).to.throw(Error, "EncodingError U+CCD8");
expect(() => {ms932Encoder.encode("\uCCD9")}).to.throw(Error, "EncodingError U+CCD9");
expect(() => {ms932Encoder.encode("\uCCDA")}).to.throw(Error, "EncodingError U+CCDA");
expect(() => {ms932Encoder.encode("\uCCDB")}).to.throw(Error, "EncodingError U+CCDB");
expect(() => {ms932Encoder.encode("\uCCDC")}).to.throw(Error, "EncodingError U+CCDC");
expect(() => {ms932Encoder.encode("\uCCDD")}).to.throw(Error, "EncodingError U+CCDD");
expect(() => {ms932Encoder.encode("\uCCDE")}).to.throw(Error, "EncodingError U+CCDE");
expect(() => {ms932Encoder.encode("\uCCDF")}).to.throw(Error, "EncodingError U+CCDF");
expect(() => {ms932Encoder.encode("\uCCE0")}).to.throw(Error, "EncodingError U+CCE0");
expect(() => {ms932Encoder.encode("\uCCE1")}).to.throw(Error, "EncodingError U+CCE1");
expect(() => {ms932Encoder.encode("\uCCE2")}).to.throw(Error, "EncodingError U+CCE2");
expect(() => {ms932Encoder.encode("\uCCE3")}).to.throw(Error, "EncodingError U+CCE3");
expect(() => {ms932Encoder.encode("\uCCE4")}).to.throw(Error, "EncodingError U+CCE4");
expect(() => {ms932Encoder.encode("\uCCE5")}).to.throw(Error, "EncodingError U+CCE5");
expect(() => {ms932Encoder.encode("\uCCE6")}).to.throw(Error, "EncodingError U+CCE6");
expect(() => {ms932Encoder.encode("\uCCE7")}).to.throw(Error, "EncodingError U+CCE7");
expect(() => {ms932Encoder.encode("\uCCE8")}).to.throw(Error, "EncodingError U+CCE8");
expect(() => {ms932Encoder.encode("\uCCE9")}).to.throw(Error, "EncodingError U+CCE9");
expect(() => {ms932Encoder.encode("\uCCEA")}).to.throw(Error, "EncodingError U+CCEA");
expect(() => {ms932Encoder.encode("\uCCEB")}).to.throw(Error, "EncodingError U+CCEB");
expect(() => {ms932Encoder.encode("\uCCEC")}).to.throw(Error, "EncodingError U+CCEC");
expect(() => {ms932Encoder.encode("\uCCED")}).to.throw(Error, "EncodingError U+CCED");
expect(() => {ms932Encoder.encode("\uCCEE")}).to.throw(Error, "EncodingError U+CCEE");
expect(() => {ms932Encoder.encode("\uCCEF")}).to.throw(Error, "EncodingError U+CCEF");
expect(() => {ms932Encoder.encode("\uCCF0")}).to.throw(Error, "EncodingError U+CCF0");
expect(() => {ms932Encoder.encode("\uCCF1")}).to.throw(Error, "EncodingError U+CCF1");
expect(() => {ms932Encoder.encode("\uCCF2")}).to.throw(Error, "EncodingError U+CCF2");
expect(() => {ms932Encoder.encode("\uCCF3")}).to.throw(Error, "EncodingError U+CCF3");
expect(() => {ms932Encoder.encode("\uCCF4")}).to.throw(Error, "EncodingError U+CCF4");
expect(() => {ms932Encoder.encode("\uCCF5")}).to.throw(Error, "EncodingError U+CCF5");
expect(() => {ms932Encoder.encode("\uCCF6")}).to.throw(Error, "EncodingError U+CCF6");
expect(() => {ms932Encoder.encode("\uCCF7")}).to.throw(Error, "EncodingError U+CCF7");
expect(() => {ms932Encoder.encode("\uCCF8")}).to.throw(Error, "EncodingError U+CCF8");
expect(() => {ms932Encoder.encode("\uCCF9")}).to.throw(Error, "EncodingError U+CCF9");
expect(() => {ms932Encoder.encode("\uCCFA")}).to.throw(Error, "EncodingError U+CCFA");
expect(() => {ms932Encoder.encode("\uCCFB")}).to.throw(Error, "EncodingError U+CCFB");
expect(() => {ms932Encoder.encode("\uCCFC")}).to.throw(Error, "EncodingError U+CCFC");
expect(() => {ms932Encoder.encode("\uCCFD")}).to.throw(Error, "EncodingError U+CCFD");
expect(() => {ms932Encoder.encode("\uCCFE")}).to.throw(Error, "EncodingError U+CCFE");
expect(() => {ms932Encoder.encode("\uCCFF")}).to.throw(Error, "EncodingError U+CCFF");
expect(() => {ms932Encoder.encode("\uCD00")}).to.throw(Error, "EncodingError U+CD00");
expect(() => {ms932Encoder.encode("\uCD01")}).to.throw(Error, "EncodingError U+CD01");
expect(() => {ms932Encoder.encode("\uCD02")}).to.throw(Error, "EncodingError U+CD02");
expect(() => {ms932Encoder.encode("\uCD03")}).to.throw(Error, "EncodingError U+CD03");
expect(() => {ms932Encoder.encode("\uCD04")}).to.throw(Error, "EncodingError U+CD04");
expect(() => {ms932Encoder.encode("\uCD05")}).to.throw(Error, "EncodingError U+CD05");
expect(() => {ms932Encoder.encode("\uCD06")}).to.throw(Error, "EncodingError U+CD06");
expect(() => {ms932Encoder.encode("\uCD07")}).to.throw(Error, "EncodingError U+CD07");
expect(() => {ms932Encoder.encode("\uCD08")}).to.throw(Error, "EncodingError U+CD08");
expect(() => {ms932Encoder.encode("\uCD09")}).to.throw(Error, "EncodingError U+CD09");
expect(() => {ms932Encoder.encode("\uCD0A")}).to.throw(Error, "EncodingError U+CD0A");
expect(() => {ms932Encoder.encode("\uCD0B")}).to.throw(Error, "EncodingError U+CD0B");
expect(() => {ms932Encoder.encode("\uCD0C")}).to.throw(Error, "EncodingError U+CD0C");
expect(() => {ms932Encoder.encode("\uCD0D")}).to.throw(Error, "EncodingError U+CD0D");
expect(() => {ms932Encoder.encode("\uCD0E")}).to.throw(Error, "EncodingError U+CD0E");
expect(() => {ms932Encoder.encode("\uCD0F")}).to.throw(Error, "EncodingError U+CD0F");
expect(() => {ms932Encoder.encode("\uCD10")}).to.throw(Error, "EncodingError U+CD10");
expect(() => {ms932Encoder.encode("\uCD11")}).to.throw(Error, "EncodingError U+CD11");
expect(() => {ms932Encoder.encode("\uCD12")}).to.throw(Error, "EncodingError U+CD12");
expect(() => {ms932Encoder.encode("\uCD13")}).to.throw(Error, "EncodingError U+CD13");
expect(() => {ms932Encoder.encode("\uCD14")}).to.throw(Error, "EncodingError U+CD14");
expect(() => {ms932Encoder.encode("\uCD15")}).to.throw(Error, "EncodingError U+CD15");
expect(() => {ms932Encoder.encode("\uCD16")}).to.throw(Error, "EncodingError U+CD16");
expect(() => {ms932Encoder.encode("\uCD17")}).to.throw(Error, "EncodingError U+CD17");
expect(() => {ms932Encoder.encode("\uCD18")}).to.throw(Error, "EncodingError U+CD18");
expect(() => {ms932Encoder.encode("\uCD19")}).to.throw(Error, "EncodingError U+CD19");
expect(() => {ms932Encoder.encode("\uCD1A")}).to.throw(Error, "EncodingError U+CD1A");
expect(() => {ms932Encoder.encode("\uCD1B")}).to.throw(Error, "EncodingError U+CD1B");
expect(() => {ms932Encoder.encode("\uCD1C")}).to.throw(Error, "EncodingError U+CD1C");
expect(() => {ms932Encoder.encode("\uCD1D")}).to.throw(Error, "EncodingError U+CD1D");
expect(() => {ms932Encoder.encode("\uCD1E")}).to.throw(Error, "EncodingError U+CD1E");
expect(() => {ms932Encoder.encode("\uCD1F")}).to.throw(Error, "EncodingError U+CD1F");
expect(() => {ms932Encoder.encode("\uCD20")}).to.throw(Error, "EncodingError U+CD20");
expect(() => {ms932Encoder.encode("\uCD21")}).to.throw(Error, "EncodingError U+CD21");
expect(() => {ms932Encoder.encode("\uCD22")}).to.throw(Error, "EncodingError U+CD22");
expect(() => {ms932Encoder.encode("\uCD23")}).to.throw(Error, "EncodingError U+CD23");
expect(() => {ms932Encoder.encode("\uCD24")}).to.throw(Error, "EncodingError U+CD24");
expect(() => {ms932Encoder.encode("\uCD25")}).to.throw(Error, "EncodingError U+CD25");
expect(() => {ms932Encoder.encode("\uCD26")}).to.throw(Error, "EncodingError U+CD26");
expect(() => {ms932Encoder.encode("\uCD27")}).to.throw(Error, "EncodingError U+CD27");
expect(() => {ms932Encoder.encode("\uCD28")}).to.throw(Error, "EncodingError U+CD28");
expect(() => {ms932Encoder.encode("\uCD29")}).to.throw(Error, "EncodingError U+CD29");
expect(() => {ms932Encoder.encode("\uCD2A")}).to.throw(Error, "EncodingError U+CD2A");
expect(() => {ms932Encoder.encode("\uCD2B")}).to.throw(Error, "EncodingError U+CD2B");
expect(() => {ms932Encoder.encode("\uCD2C")}).to.throw(Error, "EncodingError U+CD2C");
expect(() => {ms932Encoder.encode("\uCD2D")}).to.throw(Error, "EncodingError U+CD2D");
expect(() => {ms932Encoder.encode("\uCD2E")}).to.throw(Error, "EncodingError U+CD2E");
expect(() => {ms932Encoder.encode("\uCD2F")}).to.throw(Error, "EncodingError U+CD2F");
expect(() => {ms932Encoder.encode("\uCD30")}).to.throw(Error, "EncodingError U+CD30");
expect(() => {ms932Encoder.encode("\uCD31")}).to.throw(Error, "EncodingError U+CD31");
expect(() => {ms932Encoder.encode("\uCD32")}).to.throw(Error, "EncodingError U+CD32");
expect(() => {ms932Encoder.encode("\uCD33")}).to.throw(Error, "EncodingError U+CD33");
expect(() => {ms932Encoder.encode("\uCD34")}).to.throw(Error, "EncodingError U+CD34");
expect(() => {ms932Encoder.encode("\uCD35")}).to.throw(Error, "EncodingError U+CD35");
expect(() => {ms932Encoder.encode("\uCD36")}).to.throw(Error, "EncodingError U+CD36");
expect(() => {ms932Encoder.encode("\uCD37")}).to.throw(Error, "EncodingError U+CD37");
expect(() => {ms932Encoder.encode("\uCD38")}).to.throw(Error, "EncodingError U+CD38");
expect(() => {ms932Encoder.encode("\uCD39")}).to.throw(Error, "EncodingError U+CD39");
expect(() => {ms932Encoder.encode("\uCD3A")}).to.throw(Error, "EncodingError U+CD3A");
expect(() => {ms932Encoder.encode("\uCD3B")}).to.throw(Error, "EncodingError U+CD3B");
expect(() => {ms932Encoder.encode("\uCD3C")}).to.throw(Error, "EncodingError U+CD3C");
expect(() => {ms932Encoder.encode("\uCD3D")}).to.throw(Error, "EncodingError U+CD3D");
expect(() => {ms932Encoder.encode("\uCD3E")}).to.throw(Error, "EncodingError U+CD3E");
expect(() => {ms932Encoder.encode("\uCD3F")}).to.throw(Error, "EncodingError U+CD3F");
expect(() => {ms932Encoder.encode("\uCD40")}).to.throw(Error, "EncodingError U+CD40");
expect(() => {ms932Encoder.encode("\uCD41")}).to.throw(Error, "EncodingError U+CD41");
expect(() => {ms932Encoder.encode("\uCD42")}).to.throw(Error, "EncodingError U+CD42");
expect(() => {ms932Encoder.encode("\uCD43")}).to.throw(Error, "EncodingError U+CD43");
expect(() => {ms932Encoder.encode("\uCD44")}).to.throw(Error, "EncodingError U+CD44");
expect(() => {ms932Encoder.encode("\uCD45")}).to.throw(Error, "EncodingError U+CD45");
expect(() => {ms932Encoder.encode("\uCD46")}).to.throw(Error, "EncodingError U+CD46");
expect(() => {ms932Encoder.encode("\uCD47")}).to.throw(Error, "EncodingError U+CD47");
expect(() => {ms932Encoder.encode("\uCD48")}).to.throw(Error, "EncodingError U+CD48");
expect(() => {ms932Encoder.encode("\uCD49")}).to.throw(Error, "EncodingError U+CD49");
expect(() => {ms932Encoder.encode("\uCD4A")}).to.throw(Error, "EncodingError U+CD4A");
expect(() => {ms932Encoder.encode("\uCD4B")}).to.throw(Error, "EncodingError U+CD4B");
expect(() => {ms932Encoder.encode("\uCD4C")}).to.throw(Error, "EncodingError U+CD4C");
expect(() => {ms932Encoder.encode("\uCD4D")}).to.throw(Error, "EncodingError U+CD4D");
expect(() => {ms932Encoder.encode("\uCD4E")}).to.throw(Error, "EncodingError U+CD4E");
expect(() => {ms932Encoder.encode("\uCD4F")}).to.throw(Error, "EncodingError U+CD4F");
expect(() => {ms932Encoder.encode("\uCD50")}).to.throw(Error, "EncodingError U+CD50");
expect(() => {ms932Encoder.encode("\uCD51")}).to.throw(Error, "EncodingError U+CD51");
expect(() => {ms932Encoder.encode("\uCD52")}).to.throw(Error, "EncodingError U+CD52");
expect(() => {ms932Encoder.encode("\uCD53")}).to.throw(Error, "EncodingError U+CD53");
expect(() => {ms932Encoder.encode("\uCD54")}).to.throw(Error, "EncodingError U+CD54");
expect(() => {ms932Encoder.encode("\uCD55")}).to.throw(Error, "EncodingError U+CD55");
expect(() => {ms932Encoder.encode("\uCD56")}).to.throw(Error, "EncodingError U+CD56");
expect(() => {ms932Encoder.encode("\uCD57")}).to.throw(Error, "EncodingError U+CD57");
expect(() => {ms932Encoder.encode("\uCD58")}).to.throw(Error, "EncodingError U+CD58");
expect(() => {ms932Encoder.encode("\uCD59")}).to.throw(Error, "EncodingError U+CD59");
expect(() => {ms932Encoder.encode("\uCD5A")}).to.throw(Error, "EncodingError U+CD5A");
expect(() => {ms932Encoder.encode("\uCD5B")}).to.throw(Error, "EncodingError U+CD5B");
expect(() => {ms932Encoder.encode("\uCD5C")}).to.throw(Error, "EncodingError U+CD5C");
expect(() => {ms932Encoder.encode("\uCD5D")}).to.throw(Error, "EncodingError U+CD5D");
expect(() => {ms932Encoder.encode("\uCD5E")}).to.throw(Error, "EncodingError U+CD5E");
expect(() => {ms932Encoder.encode("\uCD5F")}).to.throw(Error, "EncodingError U+CD5F");
expect(() => {ms932Encoder.encode("\uCD60")}).to.throw(Error, "EncodingError U+CD60");
expect(() => {ms932Encoder.encode("\uCD61")}).to.throw(Error, "EncodingError U+CD61");
expect(() => {ms932Encoder.encode("\uCD62")}).to.throw(Error, "EncodingError U+CD62");
expect(() => {ms932Encoder.encode("\uCD63")}).to.throw(Error, "EncodingError U+CD63");
expect(() => {ms932Encoder.encode("\uCD64")}).to.throw(Error, "EncodingError U+CD64");
expect(() => {ms932Encoder.encode("\uCD65")}).to.throw(Error, "EncodingError U+CD65");
expect(() => {ms932Encoder.encode("\uCD66")}).to.throw(Error, "EncodingError U+CD66");
expect(() => {ms932Encoder.encode("\uCD67")}).to.throw(Error, "EncodingError U+CD67");
expect(() => {ms932Encoder.encode("\uCD68")}).to.throw(Error, "EncodingError U+CD68");
expect(() => {ms932Encoder.encode("\uCD69")}).to.throw(Error, "EncodingError U+CD69");
expect(() => {ms932Encoder.encode("\uCD6A")}).to.throw(Error, "EncodingError U+CD6A");
expect(() => {ms932Encoder.encode("\uCD6B")}).to.throw(Error, "EncodingError U+CD6B");
expect(() => {ms932Encoder.encode("\uCD6C")}).to.throw(Error, "EncodingError U+CD6C");
expect(() => {ms932Encoder.encode("\uCD6D")}).to.throw(Error, "EncodingError U+CD6D");
expect(() => {ms932Encoder.encode("\uCD6E")}).to.throw(Error, "EncodingError U+CD6E");
expect(() => {ms932Encoder.encode("\uCD6F")}).to.throw(Error, "EncodingError U+CD6F");
expect(() => {ms932Encoder.encode("\uCD70")}).to.throw(Error, "EncodingError U+CD70");
expect(() => {ms932Encoder.encode("\uCD71")}).to.throw(Error, "EncodingError U+CD71");
expect(() => {ms932Encoder.encode("\uCD72")}).to.throw(Error, "EncodingError U+CD72");
expect(() => {ms932Encoder.encode("\uCD73")}).to.throw(Error, "EncodingError U+CD73");
expect(() => {ms932Encoder.encode("\uCD74")}).to.throw(Error, "EncodingError U+CD74");
expect(() => {ms932Encoder.encode("\uCD75")}).to.throw(Error, "EncodingError U+CD75");
expect(() => {ms932Encoder.encode("\uCD76")}).to.throw(Error, "EncodingError U+CD76");
expect(() => {ms932Encoder.encode("\uCD77")}).to.throw(Error, "EncodingError U+CD77");
expect(() => {ms932Encoder.encode("\uCD78")}).to.throw(Error, "EncodingError U+CD78");
expect(() => {ms932Encoder.encode("\uCD79")}).to.throw(Error, "EncodingError U+CD79");
expect(() => {ms932Encoder.encode("\uCD7A")}).to.throw(Error, "EncodingError U+CD7A");
expect(() => {ms932Encoder.encode("\uCD7B")}).to.throw(Error, "EncodingError U+CD7B");
expect(() => {ms932Encoder.encode("\uCD7C")}).to.throw(Error, "EncodingError U+CD7C");
expect(() => {ms932Encoder.encode("\uCD7D")}).to.throw(Error, "EncodingError U+CD7D");
expect(() => {ms932Encoder.encode("\uCD7E")}).to.throw(Error, "EncodingError U+CD7E");
expect(() => {ms932Encoder.encode("\uCD7F")}).to.throw(Error, "EncodingError U+CD7F");
expect(() => {ms932Encoder.encode("\uCD80")}).to.throw(Error, "EncodingError U+CD80");
expect(() => {ms932Encoder.encode("\uCD81")}).to.throw(Error, "EncodingError U+CD81");
expect(() => {ms932Encoder.encode("\uCD82")}).to.throw(Error, "EncodingError U+CD82");
expect(() => {ms932Encoder.encode("\uCD83")}).to.throw(Error, "EncodingError U+CD83");
expect(() => {ms932Encoder.encode("\uCD84")}).to.throw(Error, "EncodingError U+CD84");
expect(() => {ms932Encoder.encode("\uCD85")}).to.throw(Error, "EncodingError U+CD85");
expect(() => {ms932Encoder.encode("\uCD86")}).to.throw(Error, "EncodingError U+CD86");
expect(() => {ms932Encoder.encode("\uCD87")}).to.throw(Error, "EncodingError U+CD87");
expect(() => {ms932Encoder.encode("\uCD88")}).to.throw(Error, "EncodingError U+CD88");
expect(() => {ms932Encoder.encode("\uCD89")}).to.throw(Error, "EncodingError U+CD89");
expect(() => {ms932Encoder.encode("\uCD8A")}).to.throw(Error, "EncodingError U+CD8A");
expect(() => {ms932Encoder.encode("\uCD8B")}).to.throw(Error, "EncodingError U+CD8B");
expect(() => {ms932Encoder.encode("\uCD8C")}).to.throw(Error, "EncodingError U+CD8C");
expect(() => {ms932Encoder.encode("\uCD8D")}).to.throw(Error, "EncodingError U+CD8D");
expect(() => {ms932Encoder.encode("\uCD8E")}).to.throw(Error, "EncodingError U+CD8E");
expect(() => {ms932Encoder.encode("\uCD8F")}).to.throw(Error, "EncodingError U+CD8F");
expect(() => {ms932Encoder.encode("\uCD90")}).to.throw(Error, "EncodingError U+CD90");
expect(() => {ms932Encoder.encode("\uCD91")}).to.throw(Error, "EncodingError U+CD91");
expect(() => {ms932Encoder.encode("\uCD92")}).to.throw(Error, "EncodingError U+CD92");
expect(() => {ms932Encoder.encode("\uCD93")}).to.throw(Error, "EncodingError U+CD93");
expect(() => {ms932Encoder.encode("\uCD94")}).to.throw(Error, "EncodingError U+CD94");
expect(() => {ms932Encoder.encode("\uCD95")}).to.throw(Error, "EncodingError U+CD95");
expect(() => {ms932Encoder.encode("\uCD96")}).to.throw(Error, "EncodingError U+CD96");
expect(() => {ms932Encoder.encode("\uCD97")}).to.throw(Error, "EncodingError U+CD97");
expect(() => {ms932Encoder.encode("\uCD98")}).to.throw(Error, "EncodingError U+CD98");
expect(() => {ms932Encoder.encode("\uCD99")}).to.throw(Error, "EncodingError U+CD99");
expect(() => {ms932Encoder.encode("\uCD9A")}).to.throw(Error, "EncodingError U+CD9A");
expect(() => {ms932Encoder.encode("\uCD9B")}).to.throw(Error, "EncodingError U+CD9B");
expect(() => {ms932Encoder.encode("\uCD9C")}).to.throw(Error, "EncodingError U+CD9C");
expect(() => {ms932Encoder.encode("\uCD9D")}).to.throw(Error, "EncodingError U+CD9D");
expect(() => {ms932Encoder.encode("\uCD9E")}).to.throw(Error, "EncodingError U+CD9E");
expect(() => {ms932Encoder.encode("\uCD9F")}).to.throw(Error, "EncodingError U+CD9F");
expect(() => {ms932Encoder.encode("\uCDA0")}).to.throw(Error, "EncodingError U+CDA0");
expect(() => {ms932Encoder.encode("\uCDA1")}).to.throw(Error, "EncodingError U+CDA1");
expect(() => {ms932Encoder.encode("\uCDA2")}).to.throw(Error, "EncodingError U+CDA2");
expect(() => {ms932Encoder.encode("\uCDA3")}).to.throw(Error, "EncodingError U+CDA3");
expect(() => {ms932Encoder.encode("\uCDA4")}).to.throw(Error, "EncodingError U+CDA4");
expect(() => {ms932Encoder.encode("\uCDA5")}).to.throw(Error, "EncodingError U+CDA5");
expect(() => {ms932Encoder.encode("\uCDA6")}).to.throw(Error, "EncodingError U+CDA6");
expect(() => {ms932Encoder.encode("\uCDA7")}).to.throw(Error, "EncodingError U+CDA7");
expect(() => {ms932Encoder.encode("\uCDA8")}).to.throw(Error, "EncodingError U+CDA8");
expect(() => {ms932Encoder.encode("\uCDA9")}).to.throw(Error, "EncodingError U+CDA9");
expect(() => {ms932Encoder.encode("\uCDAA")}).to.throw(Error, "EncodingError U+CDAA");
expect(() => {ms932Encoder.encode("\uCDAB")}).to.throw(Error, "EncodingError U+CDAB");
expect(() => {ms932Encoder.encode("\uCDAC")}).to.throw(Error, "EncodingError U+CDAC");
expect(() => {ms932Encoder.encode("\uCDAD")}).to.throw(Error, "EncodingError U+CDAD");
expect(() => {ms932Encoder.encode("\uCDAE")}).to.throw(Error, "EncodingError U+CDAE");
expect(() => {ms932Encoder.encode("\uCDAF")}).to.throw(Error, "EncodingError U+CDAF");
expect(() => {ms932Encoder.encode("\uCDB0")}).to.throw(Error, "EncodingError U+CDB0");
expect(() => {ms932Encoder.encode("\uCDB1")}).to.throw(Error, "EncodingError U+CDB1");
expect(() => {ms932Encoder.encode("\uCDB2")}).to.throw(Error, "EncodingError U+CDB2");
expect(() => {ms932Encoder.encode("\uCDB3")}).to.throw(Error, "EncodingError U+CDB3");
expect(() => {ms932Encoder.encode("\uCDB4")}).to.throw(Error, "EncodingError U+CDB4");
expect(() => {ms932Encoder.encode("\uCDB5")}).to.throw(Error, "EncodingError U+CDB5");
expect(() => {ms932Encoder.encode("\uCDB6")}).to.throw(Error, "EncodingError U+CDB6");
expect(() => {ms932Encoder.encode("\uCDB7")}).to.throw(Error, "EncodingError U+CDB7");
expect(() => {ms932Encoder.encode("\uCDB8")}).to.throw(Error, "EncodingError U+CDB8");
expect(() => {ms932Encoder.encode("\uCDB9")}).to.throw(Error, "EncodingError U+CDB9");
expect(() => {ms932Encoder.encode("\uCDBA")}).to.throw(Error, "EncodingError U+CDBA");
expect(() => {ms932Encoder.encode("\uCDBB")}).to.throw(Error, "EncodingError U+CDBB");
expect(() => {ms932Encoder.encode("\uCDBC")}).to.throw(Error, "EncodingError U+CDBC");
expect(() => {ms932Encoder.encode("\uCDBD")}).to.throw(Error, "EncodingError U+CDBD");
expect(() => {ms932Encoder.encode("\uCDBE")}).to.throw(Error, "EncodingError U+CDBE");
expect(() => {ms932Encoder.encode("\uCDBF")}).to.throw(Error, "EncodingError U+CDBF");
expect(() => {ms932Encoder.encode("\uCDC0")}).to.throw(Error, "EncodingError U+CDC0");
expect(() => {ms932Encoder.encode("\uCDC1")}).to.throw(Error, "EncodingError U+CDC1");
expect(() => {ms932Encoder.encode("\uCDC2")}).to.throw(Error, "EncodingError U+CDC2");
expect(() => {ms932Encoder.encode("\uCDC3")}).to.throw(Error, "EncodingError U+CDC3");
expect(() => {ms932Encoder.encode("\uCDC4")}).to.throw(Error, "EncodingError U+CDC4");
expect(() => {ms932Encoder.encode("\uCDC5")}).to.throw(Error, "EncodingError U+CDC5");
expect(() => {ms932Encoder.encode("\uCDC6")}).to.throw(Error, "EncodingError U+CDC6");
expect(() => {ms932Encoder.encode("\uCDC7")}).to.throw(Error, "EncodingError U+CDC7");
expect(() => {ms932Encoder.encode("\uCDC8")}).to.throw(Error, "EncodingError U+CDC8");
expect(() => {ms932Encoder.encode("\uCDC9")}).to.throw(Error, "EncodingError U+CDC9");
expect(() => {ms932Encoder.encode("\uCDCA")}).to.throw(Error, "EncodingError U+CDCA");
expect(() => {ms932Encoder.encode("\uCDCB")}).to.throw(Error, "EncodingError U+CDCB");
expect(() => {ms932Encoder.encode("\uCDCC")}).to.throw(Error, "EncodingError U+CDCC");
expect(() => {ms932Encoder.encode("\uCDCD")}).to.throw(Error, "EncodingError U+CDCD");
expect(() => {ms932Encoder.encode("\uCDCE")}).to.throw(Error, "EncodingError U+CDCE");
expect(() => {ms932Encoder.encode("\uCDCF")}).to.throw(Error, "EncodingError U+CDCF");
expect(() => {ms932Encoder.encode("\uCDD0")}).to.throw(Error, "EncodingError U+CDD0");
expect(() => {ms932Encoder.encode("\uCDD1")}).to.throw(Error, "EncodingError U+CDD1");
expect(() => {ms932Encoder.encode("\uCDD2")}).to.throw(Error, "EncodingError U+CDD2");
expect(() => {ms932Encoder.encode("\uCDD3")}).to.throw(Error, "EncodingError U+CDD3");
expect(() => {ms932Encoder.encode("\uCDD4")}).to.throw(Error, "EncodingError U+CDD4");
expect(() => {ms932Encoder.encode("\uCDD5")}).to.throw(Error, "EncodingError U+CDD5");
expect(() => {ms932Encoder.encode("\uCDD6")}).to.throw(Error, "EncodingError U+CDD6");
expect(() => {ms932Encoder.encode("\uCDD7")}).to.throw(Error, "EncodingError U+CDD7");
expect(() => {ms932Encoder.encode("\uCDD8")}).to.throw(Error, "EncodingError U+CDD8");
expect(() => {ms932Encoder.encode("\uCDD9")}).to.throw(Error, "EncodingError U+CDD9");
expect(() => {ms932Encoder.encode("\uCDDA")}).to.throw(Error, "EncodingError U+CDDA");
expect(() => {ms932Encoder.encode("\uCDDB")}).to.throw(Error, "EncodingError U+CDDB");
expect(() => {ms932Encoder.encode("\uCDDC")}).to.throw(Error, "EncodingError U+CDDC");
expect(() => {ms932Encoder.encode("\uCDDD")}).to.throw(Error, "EncodingError U+CDDD");
expect(() => {ms932Encoder.encode("\uCDDE")}).to.throw(Error, "EncodingError U+CDDE");
expect(() => {ms932Encoder.encode("\uCDDF")}).to.throw(Error, "EncodingError U+CDDF");
expect(() => {ms932Encoder.encode("\uCDE0")}).to.throw(Error, "EncodingError U+CDE0");
expect(() => {ms932Encoder.encode("\uCDE1")}).to.throw(Error, "EncodingError U+CDE1");
expect(() => {ms932Encoder.encode("\uCDE2")}).to.throw(Error, "EncodingError U+CDE2");
expect(() => {ms932Encoder.encode("\uCDE3")}).to.throw(Error, "EncodingError U+CDE3");
expect(() => {ms932Encoder.encode("\uCDE4")}).to.throw(Error, "EncodingError U+CDE4");
expect(() => {ms932Encoder.encode("\uCDE5")}).to.throw(Error, "EncodingError U+CDE5");
expect(() => {ms932Encoder.encode("\uCDE6")}).to.throw(Error, "EncodingError U+CDE6");
expect(() => {ms932Encoder.encode("\uCDE7")}).to.throw(Error, "EncodingError U+CDE7");
expect(() => {ms932Encoder.encode("\uCDE8")}).to.throw(Error, "EncodingError U+CDE8");
expect(() => {ms932Encoder.encode("\uCDE9")}).to.throw(Error, "EncodingError U+CDE9");
expect(() => {ms932Encoder.encode("\uCDEA")}).to.throw(Error, "EncodingError U+CDEA");
expect(() => {ms932Encoder.encode("\uCDEB")}).to.throw(Error, "EncodingError U+CDEB");
expect(() => {ms932Encoder.encode("\uCDEC")}).to.throw(Error, "EncodingError U+CDEC");
expect(() => {ms932Encoder.encode("\uCDED")}).to.throw(Error, "EncodingError U+CDED");
expect(() => {ms932Encoder.encode("\uCDEE")}).to.throw(Error, "EncodingError U+CDEE");
expect(() => {ms932Encoder.encode("\uCDEF")}).to.throw(Error, "EncodingError U+CDEF");
expect(() => {ms932Encoder.encode("\uCDF0")}).to.throw(Error, "EncodingError U+CDF0");
expect(() => {ms932Encoder.encode("\uCDF1")}).to.throw(Error, "EncodingError U+CDF1");
expect(() => {ms932Encoder.encode("\uCDF2")}).to.throw(Error, "EncodingError U+CDF2");
expect(() => {ms932Encoder.encode("\uCDF3")}).to.throw(Error, "EncodingError U+CDF3");
expect(() => {ms932Encoder.encode("\uCDF4")}).to.throw(Error, "EncodingError U+CDF4");
expect(() => {ms932Encoder.encode("\uCDF5")}).to.throw(Error, "EncodingError U+CDF5");
expect(() => {ms932Encoder.encode("\uCDF6")}).to.throw(Error, "EncodingError U+CDF6");
expect(() => {ms932Encoder.encode("\uCDF7")}).to.throw(Error, "EncodingError U+CDF7");
expect(() => {ms932Encoder.encode("\uCDF8")}).to.throw(Error, "EncodingError U+CDF8");
expect(() => {ms932Encoder.encode("\uCDF9")}).to.throw(Error, "EncodingError U+CDF9");
expect(() => {ms932Encoder.encode("\uCDFA")}).to.throw(Error, "EncodingError U+CDFA");
expect(() => {ms932Encoder.encode("\uCDFB")}).to.throw(Error, "EncodingError U+CDFB");
expect(() => {ms932Encoder.encode("\uCDFC")}).to.throw(Error, "EncodingError U+CDFC");
expect(() => {ms932Encoder.encode("\uCDFD")}).to.throw(Error, "EncodingError U+CDFD");
expect(() => {ms932Encoder.encode("\uCDFE")}).to.throw(Error, "EncodingError U+CDFE");
expect(() => {ms932Encoder.encode("\uCDFF")}).to.throw(Error, "EncodingError U+CDFF");
expect(() => {ms932Encoder.encode("\uCE00")}).to.throw(Error, "EncodingError U+CE00");
expect(() => {ms932Encoder.encode("\uCE01")}).to.throw(Error, "EncodingError U+CE01");
expect(() => {ms932Encoder.encode("\uCE02")}).to.throw(Error, "EncodingError U+CE02");
expect(() => {ms932Encoder.encode("\uCE03")}).to.throw(Error, "EncodingError U+CE03");
expect(() => {ms932Encoder.encode("\uCE04")}).to.throw(Error, "EncodingError U+CE04");
expect(() => {ms932Encoder.encode("\uCE05")}).to.throw(Error, "EncodingError U+CE05");
expect(() => {ms932Encoder.encode("\uCE06")}).to.throw(Error, "EncodingError U+CE06");
expect(() => {ms932Encoder.encode("\uCE07")}).to.throw(Error, "EncodingError U+CE07");
expect(() => {ms932Encoder.encode("\uCE08")}).to.throw(Error, "EncodingError U+CE08");
expect(() => {ms932Encoder.encode("\uCE09")}).to.throw(Error, "EncodingError U+CE09");
expect(() => {ms932Encoder.encode("\uCE0A")}).to.throw(Error, "EncodingError U+CE0A");
expect(() => {ms932Encoder.encode("\uCE0B")}).to.throw(Error, "EncodingError U+CE0B");
expect(() => {ms932Encoder.encode("\uCE0C")}).to.throw(Error, "EncodingError U+CE0C");
expect(() => {ms932Encoder.encode("\uCE0D")}).to.throw(Error, "EncodingError U+CE0D");
expect(() => {ms932Encoder.encode("\uCE0E")}).to.throw(Error, "EncodingError U+CE0E");
expect(() => {ms932Encoder.encode("\uCE0F")}).to.throw(Error, "EncodingError U+CE0F");
expect(() => {ms932Encoder.encode("\uCE10")}).to.throw(Error, "EncodingError U+CE10");
expect(() => {ms932Encoder.encode("\uCE11")}).to.throw(Error, "EncodingError U+CE11");
expect(() => {ms932Encoder.encode("\uCE12")}).to.throw(Error, "EncodingError U+CE12");
expect(() => {ms932Encoder.encode("\uCE13")}).to.throw(Error, "EncodingError U+CE13");
expect(() => {ms932Encoder.encode("\uCE14")}).to.throw(Error, "EncodingError U+CE14");
expect(() => {ms932Encoder.encode("\uCE15")}).to.throw(Error, "EncodingError U+CE15");
expect(() => {ms932Encoder.encode("\uCE16")}).to.throw(Error, "EncodingError U+CE16");
expect(() => {ms932Encoder.encode("\uCE17")}).to.throw(Error, "EncodingError U+CE17");
expect(() => {ms932Encoder.encode("\uCE18")}).to.throw(Error, "EncodingError U+CE18");
expect(() => {ms932Encoder.encode("\uCE19")}).to.throw(Error, "EncodingError U+CE19");
expect(() => {ms932Encoder.encode("\uCE1A")}).to.throw(Error, "EncodingError U+CE1A");
expect(() => {ms932Encoder.encode("\uCE1B")}).to.throw(Error, "EncodingError U+CE1B");
expect(() => {ms932Encoder.encode("\uCE1C")}).to.throw(Error, "EncodingError U+CE1C");
expect(() => {ms932Encoder.encode("\uCE1D")}).to.throw(Error, "EncodingError U+CE1D");
expect(() => {ms932Encoder.encode("\uCE1E")}).to.throw(Error, "EncodingError U+CE1E");
expect(() => {ms932Encoder.encode("\uCE1F")}).to.throw(Error, "EncodingError U+CE1F");
expect(() => {ms932Encoder.encode("\uCE20")}).to.throw(Error, "EncodingError U+CE20");
expect(() => {ms932Encoder.encode("\uCE21")}).to.throw(Error, "EncodingError U+CE21");
expect(() => {ms932Encoder.encode("\uCE22")}).to.throw(Error, "EncodingError U+CE22");
expect(() => {ms932Encoder.encode("\uCE23")}).to.throw(Error, "EncodingError U+CE23");
expect(() => {ms932Encoder.encode("\uCE24")}).to.throw(Error, "EncodingError U+CE24");
expect(() => {ms932Encoder.encode("\uCE25")}).to.throw(Error, "EncodingError U+CE25");
expect(() => {ms932Encoder.encode("\uCE26")}).to.throw(Error, "EncodingError U+CE26");
expect(() => {ms932Encoder.encode("\uCE27")}).to.throw(Error, "EncodingError U+CE27");
expect(() => {ms932Encoder.encode("\uCE28")}).to.throw(Error, "EncodingError U+CE28");
expect(() => {ms932Encoder.encode("\uCE29")}).to.throw(Error, "EncodingError U+CE29");
expect(() => {ms932Encoder.encode("\uCE2A")}).to.throw(Error, "EncodingError U+CE2A");
expect(() => {ms932Encoder.encode("\uCE2B")}).to.throw(Error, "EncodingError U+CE2B");
expect(() => {ms932Encoder.encode("\uCE2C")}).to.throw(Error, "EncodingError U+CE2C");
expect(() => {ms932Encoder.encode("\uCE2D")}).to.throw(Error, "EncodingError U+CE2D");
expect(() => {ms932Encoder.encode("\uCE2E")}).to.throw(Error, "EncodingError U+CE2E");
expect(() => {ms932Encoder.encode("\uCE2F")}).to.throw(Error, "EncodingError U+CE2F");
expect(() => {ms932Encoder.encode("\uCE30")}).to.throw(Error, "EncodingError U+CE30");
expect(() => {ms932Encoder.encode("\uCE31")}).to.throw(Error, "EncodingError U+CE31");
expect(() => {ms932Encoder.encode("\uCE32")}).to.throw(Error, "EncodingError U+CE32");
expect(() => {ms932Encoder.encode("\uCE33")}).to.throw(Error, "EncodingError U+CE33");
expect(() => {ms932Encoder.encode("\uCE34")}).to.throw(Error, "EncodingError U+CE34");
expect(() => {ms932Encoder.encode("\uCE35")}).to.throw(Error, "EncodingError U+CE35");
expect(() => {ms932Encoder.encode("\uCE36")}).to.throw(Error, "EncodingError U+CE36");
expect(() => {ms932Encoder.encode("\uCE37")}).to.throw(Error, "EncodingError U+CE37");
expect(() => {ms932Encoder.encode("\uCE38")}).to.throw(Error, "EncodingError U+CE38");
expect(() => {ms932Encoder.encode("\uCE39")}).to.throw(Error, "EncodingError U+CE39");
expect(() => {ms932Encoder.encode("\uCE3A")}).to.throw(Error, "EncodingError U+CE3A");
expect(() => {ms932Encoder.encode("\uCE3B")}).to.throw(Error, "EncodingError U+CE3B");
expect(() => {ms932Encoder.encode("\uCE3C")}).to.throw(Error, "EncodingError U+CE3C");
expect(() => {ms932Encoder.encode("\uCE3D")}).to.throw(Error, "EncodingError U+CE3D");
expect(() => {ms932Encoder.encode("\uCE3E")}).to.throw(Error, "EncodingError U+CE3E");
expect(() => {ms932Encoder.encode("\uCE3F")}).to.throw(Error, "EncodingError U+CE3F");
expect(() => {ms932Encoder.encode("\uCE40")}).to.throw(Error, "EncodingError U+CE40");
expect(() => {ms932Encoder.encode("\uCE41")}).to.throw(Error, "EncodingError U+CE41");
expect(() => {ms932Encoder.encode("\uCE42")}).to.throw(Error, "EncodingError U+CE42");
expect(() => {ms932Encoder.encode("\uCE43")}).to.throw(Error, "EncodingError U+CE43");
expect(() => {ms932Encoder.encode("\uCE44")}).to.throw(Error, "EncodingError U+CE44");
expect(() => {ms932Encoder.encode("\uCE45")}).to.throw(Error, "EncodingError U+CE45");
expect(() => {ms932Encoder.encode("\uCE46")}).to.throw(Error, "EncodingError U+CE46");
expect(() => {ms932Encoder.encode("\uCE47")}).to.throw(Error, "EncodingError U+CE47");
expect(() => {ms932Encoder.encode("\uCE48")}).to.throw(Error, "EncodingError U+CE48");
expect(() => {ms932Encoder.encode("\uCE49")}).to.throw(Error, "EncodingError U+CE49");
expect(() => {ms932Encoder.encode("\uCE4A")}).to.throw(Error, "EncodingError U+CE4A");
expect(() => {ms932Encoder.encode("\uCE4B")}).to.throw(Error, "EncodingError U+CE4B");
expect(() => {ms932Encoder.encode("\uCE4C")}).to.throw(Error, "EncodingError U+CE4C");
expect(() => {ms932Encoder.encode("\uCE4D")}).to.throw(Error, "EncodingError U+CE4D");
expect(() => {ms932Encoder.encode("\uCE4E")}).to.throw(Error, "EncodingError U+CE4E");
expect(() => {ms932Encoder.encode("\uCE4F")}).to.throw(Error, "EncodingError U+CE4F");
expect(() => {ms932Encoder.encode("\uCE50")}).to.throw(Error, "EncodingError U+CE50");
expect(() => {ms932Encoder.encode("\uCE51")}).to.throw(Error, "EncodingError U+CE51");
expect(() => {ms932Encoder.encode("\uCE52")}).to.throw(Error, "EncodingError U+CE52");
expect(() => {ms932Encoder.encode("\uCE53")}).to.throw(Error, "EncodingError U+CE53");
expect(() => {ms932Encoder.encode("\uCE54")}).to.throw(Error, "EncodingError U+CE54");
expect(() => {ms932Encoder.encode("\uCE55")}).to.throw(Error, "EncodingError U+CE55");
expect(() => {ms932Encoder.encode("\uCE56")}).to.throw(Error, "EncodingError U+CE56");
expect(() => {ms932Encoder.encode("\uCE57")}).to.throw(Error, "EncodingError U+CE57");
expect(() => {ms932Encoder.encode("\uCE58")}).to.throw(Error, "EncodingError U+CE58");
expect(() => {ms932Encoder.encode("\uCE59")}).to.throw(Error, "EncodingError U+CE59");
expect(() => {ms932Encoder.encode("\uCE5A")}).to.throw(Error, "EncodingError U+CE5A");
expect(() => {ms932Encoder.encode("\uCE5B")}).to.throw(Error, "EncodingError U+CE5B");
expect(() => {ms932Encoder.encode("\uCE5C")}).to.throw(Error, "EncodingError U+CE5C");
expect(() => {ms932Encoder.encode("\uCE5D")}).to.throw(Error, "EncodingError U+CE5D");
expect(() => {ms932Encoder.encode("\uCE5E")}).to.throw(Error, "EncodingError U+CE5E");
expect(() => {ms932Encoder.encode("\uCE5F")}).to.throw(Error, "EncodingError U+CE5F");
expect(() => {ms932Encoder.encode("\uCE60")}).to.throw(Error, "EncodingError U+CE60");
expect(() => {ms932Encoder.encode("\uCE61")}).to.throw(Error, "EncodingError U+CE61");
expect(() => {ms932Encoder.encode("\uCE62")}).to.throw(Error, "EncodingError U+CE62");
expect(() => {ms932Encoder.encode("\uCE63")}).to.throw(Error, "EncodingError U+CE63");
expect(() => {ms932Encoder.encode("\uCE64")}).to.throw(Error, "EncodingError U+CE64");
expect(() => {ms932Encoder.encode("\uCE65")}).to.throw(Error, "EncodingError U+CE65");
expect(() => {ms932Encoder.encode("\uCE66")}).to.throw(Error, "EncodingError U+CE66");
expect(() => {ms932Encoder.encode("\uCE67")}).to.throw(Error, "EncodingError U+CE67");
expect(() => {ms932Encoder.encode("\uCE68")}).to.throw(Error, "EncodingError U+CE68");
expect(() => {ms932Encoder.encode("\uCE69")}).to.throw(Error, "EncodingError U+CE69");
expect(() => {ms932Encoder.encode("\uCE6A")}).to.throw(Error, "EncodingError U+CE6A");
expect(() => {ms932Encoder.encode("\uCE6B")}).to.throw(Error, "EncodingError U+CE6B");
expect(() => {ms932Encoder.encode("\uCE6C")}).to.throw(Error, "EncodingError U+CE6C");
expect(() => {ms932Encoder.encode("\uCE6D")}).to.throw(Error, "EncodingError U+CE6D");
expect(() => {ms932Encoder.encode("\uCE6E")}).to.throw(Error, "EncodingError U+CE6E");
expect(() => {ms932Encoder.encode("\uCE6F")}).to.throw(Error, "EncodingError U+CE6F");
expect(() => {ms932Encoder.encode("\uCE70")}).to.throw(Error, "EncodingError U+CE70");
expect(() => {ms932Encoder.encode("\uCE71")}).to.throw(Error, "EncodingError U+CE71");
expect(() => {ms932Encoder.encode("\uCE72")}).to.throw(Error, "EncodingError U+CE72");
expect(() => {ms932Encoder.encode("\uCE73")}).to.throw(Error, "EncodingError U+CE73");
expect(() => {ms932Encoder.encode("\uCE74")}).to.throw(Error, "EncodingError U+CE74");
expect(() => {ms932Encoder.encode("\uCE75")}).to.throw(Error, "EncodingError U+CE75");
expect(() => {ms932Encoder.encode("\uCE76")}).to.throw(Error, "EncodingError U+CE76");
expect(() => {ms932Encoder.encode("\uCE77")}).to.throw(Error, "EncodingError U+CE77");
expect(() => {ms932Encoder.encode("\uCE78")}).to.throw(Error, "EncodingError U+CE78");
expect(() => {ms932Encoder.encode("\uCE79")}).to.throw(Error, "EncodingError U+CE79");
expect(() => {ms932Encoder.encode("\uCE7A")}).to.throw(Error, "EncodingError U+CE7A");
expect(() => {ms932Encoder.encode("\uCE7B")}).to.throw(Error, "EncodingError U+CE7B");
expect(() => {ms932Encoder.encode("\uCE7C")}).to.throw(Error, "EncodingError U+CE7C");
expect(() => {ms932Encoder.encode("\uCE7D")}).to.throw(Error, "EncodingError U+CE7D");
expect(() => {ms932Encoder.encode("\uCE7E")}).to.throw(Error, "EncodingError U+CE7E");
expect(() => {ms932Encoder.encode("\uCE7F")}).to.throw(Error, "EncodingError U+CE7F");
expect(() => {ms932Encoder.encode("\uCE80")}).to.throw(Error, "EncodingError U+CE80");
expect(() => {ms932Encoder.encode("\uCE81")}).to.throw(Error, "EncodingError U+CE81");
expect(() => {ms932Encoder.encode("\uCE82")}).to.throw(Error, "EncodingError U+CE82");
expect(() => {ms932Encoder.encode("\uCE83")}).to.throw(Error, "EncodingError U+CE83");
expect(() => {ms932Encoder.encode("\uCE84")}).to.throw(Error, "EncodingError U+CE84");
expect(() => {ms932Encoder.encode("\uCE85")}).to.throw(Error, "EncodingError U+CE85");
expect(() => {ms932Encoder.encode("\uCE86")}).to.throw(Error, "EncodingError U+CE86");
expect(() => {ms932Encoder.encode("\uCE87")}).to.throw(Error, "EncodingError U+CE87");
expect(() => {ms932Encoder.encode("\uCE88")}).to.throw(Error, "EncodingError U+CE88");
expect(() => {ms932Encoder.encode("\uCE89")}).to.throw(Error, "EncodingError U+CE89");
expect(() => {ms932Encoder.encode("\uCE8A")}).to.throw(Error, "EncodingError U+CE8A");
expect(() => {ms932Encoder.encode("\uCE8B")}).to.throw(Error, "EncodingError U+CE8B");
expect(() => {ms932Encoder.encode("\uCE8C")}).to.throw(Error, "EncodingError U+CE8C");
expect(() => {ms932Encoder.encode("\uCE8D")}).to.throw(Error, "EncodingError U+CE8D");
expect(() => {ms932Encoder.encode("\uCE8E")}).to.throw(Error, "EncodingError U+CE8E");
expect(() => {ms932Encoder.encode("\uCE8F")}).to.throw(Error, "EncodingError U+CE8F");
expect(() => {ms932Encoder.encode("\uCE90")}).to.throw(Error, "EncodingError U+CE90");
expect(() => {ms932Encoder.encode("\uCE91")}).to.throw(Error, "EncodingError U+CE91");
expect(() => {ms932Encoder.encode("\uCE92")}).to.throw(Error, "EncodingError U+CE92");
expect(() => {ms932Encoder.encode("\uCE93")}).to.throw(Error, "EncodingError U+CE93");
expect(() => {ms932Encoder.encode("\uCE94")}).to.throw(Error, "EncodingError U+CE94");
expect(() => {ms932Encoder.encode("\uCE95")}).to.throw(Error, "EncodingError U+CE95");
expect(() => {ms932Encoder.encode("\uCE96")}).to.throw(Error, "EncodingError U+CE96");
expect(() => {ms932Encoder.encode("\uCE97")}).to.throw(Error, "EncodingError U+CE97");
expect(() => {ms932Encoder.encode("\uCE98")}).to.throw(Error, "EncodingError U+CE98");
expect(() => {ms932Encoder.encode("\uCE99")}).to.throw(Error, "EncodingError U+CE99");
expect(() => {ms932Encoder.encode("\uCE9A")}).to.throw(Error, "EncodingError U+CE9A");
expect(() => {ms932Encoder.encode("\uCE9B")}).to.throw(Error, "EncodingError U+CE9B");
expect(() => {ms932Encoder.encode("\uCE9C")}).to.throw(Error, "EncodingError U+CE9C");
expect(() => {ms932Encoder.encode("\uCE9D")}).to.throw(Error, "EncodingError U+CE9D");
expect(() => {ms932Encoder.encode("\uCE9E")}).to.throw(Error, "EncodingError U+CE9E");
expect(() => {ms932Encoder.encode("\uCE9F")}).to.throw(Error, "EncodingError U+CE9F");
expect(() => {ms932Encoder.encode("\uCEA0")}).to.throw(Error, "EncodingError U+CEA0");
expect(() => {ms932Encoder.encode("\uCEA1")}).to.throw(Error, "EncodingError U+CEA1");
expect(() => {ms932Encoder.encode("\uCEA2")}).to.throw(Error, "EncodingError U+CEA2");
expect(() => {ms932Encoder.encode("\uCEA3")}).to.throw(Error, "EncodingError U+CEA3");
expect(() => {ms932Encoder.encode("\uCEA4")}).to.throw(Error, "EncodingError U+CEA4");
expect(() => {ms932Encoder.encode("\uCEA5")}).to.throw(Error, "EncodingError U+CEA5");
expect(() => {ms932Encoder.encode("\uCEA6")}).to.throw(Error, "EncodingError U+CEA6");
expect(() => {ms932Encoder.encode("\uCEA7")}).to.throw(Error, "EncodingError U+CEA7");
expect(() => {ms932Encoder.encode("\uCEA8")}).to.throw(Error, "EncodingError U+CEA8");
expect(() => {ms932Encoder.encode("\uCEA9")}).to.throw(Error, "EncodingError U+CEA9");
expect(() => {ms932Encoder.encode("\uCEAA")}).to.throw(Error, "EncodingError U+CEAA");
expect(() => {ms932Encoder.encode("\uCEAB")}).to.throw(Error, "EncodingError U+CEAB");
expect(() => {ms932Encoder.encode("\uCEAC")}).to.throw(Error, "EncodingError U+CEAC");
expect(() => {ms932Encoder.encode("\uCEAD")}).to.throw(Error, "EncodingError U+CEAD");
expect(() => {ms932Encoder.encode("\uCEAE")}).to.throw(Error, "EncodingError U+CEAE");
expect(() => {ms932Encoder.encode("\uCEAF")}).to.throw(Error, "EncodingError U+CEAF");
expect(() => {ms932Encoder.encode("\uCEB0")}).to.throw(Error, "EncodingError U+CEB0");
expect(() => {ms932Encoder.encode("\uCEB1")}).to.throw(Error, "EncodingError U+CEB1");
expect(() => {ms932Encoder.encode("\uCEB2")}).to.throw(Error, "EncodingError U+CEB2");
expect(() => {ms932Encoder.encode("\uCEB3")}).to.throw(Error, "EncodingError U+CEB3");
expect(() => {ms932Encoder.encode("\uCEB4")}).to.throw(Error, "EncodingError U+CEB4");
expect(() => {ms932Encoder.encode("\uCEB5")}).to.throw(Error, "EncodingError U+CEB5");
expect(() => {ms932Encoder.encode("\uCEB6")}).to.throw(Error, "EncodingError U+CEB6");
expect(() => {ms932Encoder.encode("\uCEB7")}).to.throw(Error, "EncodingError U+CEB7");
expect(() => {ms932Encoder.encode("\uCEB8")}).to.throw(Error, "EncodingError U+CEB8");
expect(() => {ms932Encoder.encode("\uCEB9")}).to.throw(Error, "EncodingError U+CEB9");
expect(() => {ms932Encoder.encode("\uCEBA")}).to.throw(Error, "EncodingError U+CEBA");
expect(() => {ms932Encoder.encode("\uCEBB")}).to.throw(Error, "EncodingError U+CEBB");
expect(() => {ms932Encoder.encode("\uCEBC")}).to.throw(Error, "EncodingError U+CEBC");
expect(() => {ms932Encoder.encode("\uCEBD")}).to.throw(Error, "EncodingError U+CEBD");
expect(() => {ms932Encoder.encode("\uCEBE")}).to.throw(Error, "EncodingError U+CEBE");
expect(() => {ms932Encoder.encode("\uCEBF")}).to.throw(Error, "EncodingError U+CEBF");
expect(() => {ms932Encoder.encode("\uCEC0")}).to.throw(Error, "EncodingError U+CEC0");
expect(() => {ms932Encoder.encode("\uCEC1")}).to.throw(Error, "EncodingError U+CEC1");
expect(() => {ms932Encoder.encode("\uCEC2")}).to.throw(Error, "EncodingError U+CEC2");
expect(() => {ms932Encoder.encode("\uCEC3")}).to.throw(Error, "EncodingError U+CEC3");
expect(() => {ms932Encoder.encode("\uCEC4")}).to.throw(Error, "EncodingError U+CEC4");
expect(() => {ms932Encoder.encode("\uCEC5")}).to.throw(Error, "EncodingError U+CEC5");
expect(() => {ms932Encoder.encode("\uCEC6")}).to.throw(Error, "EncodingError U+CEC6");
expect(() => {ms932Encoder.encode("\uCEC7")}).to.throw(Error, "EncodingError U+CEC7");
expect(() => {ms932Encoder.encode("\uCEC8")}).to.throw(Error, "EncodingError U+CEC8");
expect(() => {ms932Encoder.encode("\uCEC9")}).to.throw(Error, "EncodingError U+CEC9");
expect(() => {ms932Encoder.encode("\uCECA")}).to.throw(Error, "EncodingError U+CECA");
expect(() => {ms932Encoder.encode("\uCECB")}).to.throw(Error, "EncodingError U+CECB");
expect(() => {ms932Encoder.encode("\uCECC")}).to.throw(Error, "EncodingError U+CECC");
expect(() => {ms932Encoder.encode("\uCECD")}).to.throw(Error, "EncodingError U+CECD");
expect(() => {ms932Encoder.encode("\uCECE")}).to.throw(Error, "EncodingError U+CECE");
expect(() => {ms932Encoder.encode("\uCECF")}).to.throw(Error, "EncodingError U+CECF");
expect(() => {ms932Encoder.encode("\uCED0")}).to.throw(Error, "EncodingError U+CED0");
expect(() => {ms932Encoder.encode("\uCED1")}).to.throw(Error, "EncodingError U+CED1");
expect(() => {ms932Encoder.encode("\uCED2")}).to.throw(Error, "EncodingError U+CED2");
expect(() => {ms932Encoder.encode("\uCED3")}).to.throw(Error, "EncodingError U+CED3");
expect(() => {ms932Encoder.encode("\uCED4")}).to.throw(Error, "EncodingError U+CED4");
expect(() => {ms932Encoder.encode("\uCED5")}).to.throw(Error, "EncodingError U+CED5");
expect(() => {ms932Encoder.encode("\uCED6")}).to.throw(Error, "EncodingError U+CED6");
expect(() => {ms932Encoder.encode("\uCED7")}).to.throw(Error, "EncodingError U+CED7");
expect(() => {ms932Encoder.encode("\uCED8")}).to.throw(Error, "EncodingError U+CED8");
expect(() => {ms932Encoder.encode("\uCED9")}).to.throw(Error, "EncodingError U+CED9");
expect(() => {ms932Encoder.encode("\uCEDA")}).to.throw(Error, "EncodingError U+CEDA");
expect(() => {ms932Encoder.encode("\uCEDB")}).to.throw(Error, "EncodingError U+CEDB");
expect(() => {ms932Encoder.encode("\uCEDC")}).to.throw(Error, "EncodingError U+CEDC");
expect(() => {ms932Encoder.encode("\uCEDD")}).to.throw(Error, "EncodingError U+CEDD");
expect(() => {ms932Encoder.encode("\uCEDE")}).to.throw(Error, "EncodingError U+CEDE");
expect(() => {ms932Encoder.encode("\uCEDF")}).to.throw(Error, "EncodingError U+CEDF");
expect(() => {ms932Encoder.encode("\uCEE0")}).to.throw(Error, "EncodingError U+CEE0");
expect(() => {ms932Encoder.encode("\uCEE1")}).to.throw(Error, "EncodingError U+CEE1");
expect(() => {ms932Encoder.encode("\uCEE2")}).to.throw(Error, "EncodingError U+CEE2");
expect(() => {ms932Encoder.encode("\uCEE3")}).to.throw(Error, "EncodingError U+CEE3");
expect(() => {ms932Encoder.encode("\uCEE4")}).to.throw(Error, "EncodingError U+CEE4");
expect(() => {ms932Encoder.encode("\uCEE5")}).to.throw(Error, "EncodingError U+CEE5");
expect(() => {ms932Encoder.encode("\uCEE6")}).to.throw(Error, "EncodingError U+CEE6");
expect(() => {ms932Encoder.encode("\uCEE7")}).to.throw(Error, "EncodingError U+CEE7");
expect(() => {ms932Encoder.encode("\uCEE8")}).to.throw(Error, "EncodingError U+CEE8");
expect(() => {ms932Encoder.encode("\uCEE9")}).to.throw(Error, "EncodingError U+CEE9");
expect(() => {ms932Encoder.encode("\uCEEA")}).to.throw(Error, "EncodingError U+CEEA");
expect(() => {ms932Encoder.encode("\uCEEB")}).to.throw(Error, "EncodingError U+CEEB");
expect(() => {ms932Encoder.encode("\uCEEC")}).to.throw(Error, "EncodingError U+CEEC");
expect(() => {ms932Encoder.encode("\uCEED")}).to.throw(Error, "EncodingError U+CEED");
expect(() => {ms932Encoder.encode("\uCEEE")}).to.throw(Error, "EncodingError U+CEEE");
expect(() => {ms932Encoder.encode("\uCEEF")}).to.throw(Error, "EncodingError U+CEEF");
expect(() => {ms932Encoder.encode("\uCEF0")}).to.throw(Error, "EncodingError U+CEF0");
expect(() => {ms932Encoder.encode("\uCEF1")}).to.throw(Error, "EncodingError U+CEF1");
expect(() => {ms932Encoder.encode("\uCEF2")}).to.throw(Error, "EncodingError U+CEF2");
expect(() => {ms932Encoder.encode("\uCEF3")}).to.throw(Error, "EncodingError U+CEF3");
expect(() => {ms932Encoder.encode("\uCEF4")}).to.throw(Error, "EncodingError U+CEF4");
expect(() => {ms932Encoder.encode("\uCEF5")}).to.throw(Error, "EncodingError U+CEF5");
expect(() => {ms932Encoder.encode("\uCEF6")}).to.throw(Error, "EncodingError U+CEF6");
expect(() => {ms932Encoder.encode("\uCEF7")}).to.throw(Error, "EncodingError U+CEF7");
expect(() => {ms932Encoder.encode("\uCEF8")}).to.throw(Error, "EncodingError U+CEF8");
expect(() => {ms932Encoder.encode("\uCEF9")}).to.throw(Error, "EncodingError U+CEF9");
expect(() => {ms932Encoder.encode("\uCEFA")}).to.throw(Error, "EncodingError U+CEFA");
expect(() => {ms932Encoder.encode("\uCEFB")}).to.throw(Error, "EncodingError U+CEFB");
expect(() => {ms932Encoder.encode("\uCEFC")}).to.throw(Error, "EncodingError U+CEFC");
expect(() => {ms932Encoder.encode("\uCEFD")}).to.throw(Error, "EncodingError U+CEFD");
expect(() => {ms932Encoder.encode("\uCEFE")}).to.throw(Error, "EncodingError U+CEFE");
expect(() => {ms932Encoder.encode("\uCEFF")}).to.throw(Error, "EncodingError U+CEFF");
expect(() => {ms932Encoder.encode("\uCF00")}).to.throw(Error, "EncodingError U+CF00");
expect(() => {ms932Encoder.encode("\uCF01")}).to.throw(Error, "EncodingError U+CF01");
expect(() => {ms932Encoder.encode("\uCF02")}).to.throw(Error, "EncodingError U+CF02");
expect(() => {ms932Encoder.encode("\uCF03")}).to.throw(Error, "EncodingError U+CF03");
expect(() => {ms932Encoder.encode("\uCF04")}).to.throw(Error, "EncodingError U+CF04");
expect(() => {ms932Encoder.encode("\uCF05")}).to.throw(Error, "EncodingError U+CF05");
expect(() => {ms932Encoder.encode("\uCF06")}).to.throw(Error, "EncodingError U+CF06");
expect(() => {ms932Encoder.encode("\uCF07")}).to.throw(Error, "EncodingError U+CF07");
expect(() => {ms932Encoder.encode("\uCF08")}).to.throw(Error, "EncodingError U+CF08");
expect(() => {ms932Encoder.encode("\uCF09")}).to.throw(Error, "EncodingError U+CF09");
expect(() => {ms932Encoder.encode("\uCF0A")}).to.throw(Error, "EncodingError U+CF0A");
expect(() => {ms932Encoder.encode("\uCF0B")}).to.throw(Error, "EncodingError U+CF0B");
expect(() => {ms932Encoder.encode("\uCF0C")}).to.throw(Error, "EncodingError U+CF0C");
expect(() => {ms932Encoder.encode("\uCF0D")}).to.throw(Error, "EncodingError U+CF0D");
expect(() => {ms932Encoder.encode("\uCF0E")}).to.throw(Error, "EncodingError U+CF0E");
expect(() => {ms932Encoder.encode("\uCF0F")}).to.throw(Error, "EncodingError U+CF0F");
expect(() => {ms932Encoder.encode("\uCF10")}).to.throw(Error, "EncodingError U+CF10");
expect(() => {ms932Encoder.encode("\uCF11")}).to.throw(Error, "EncodingError U+CF11");
expect(() => {ms932Encoder.encode("\uCF12")}).to.throw(Error, "EncodingError U+CF12");
expect(() => {ms932Encoder.encode("\uCF13")}).to.throw(Error, "EncodingError U+CF13");
expect(() => {ms932Encoder.encode("\uCF14")}).to.throw(Error, "EncodingError U+CF14");
expect(() => {ms932Encoder.encode("\uCF15")}).to.throw(Error, "EncodingError U+CF15");
expect(() => {ms932Encoder.encode("\uCF16")}).to.throw(Error, "EncodingError U+CF16");
expect(() => {ms932Encoder.encode("\uCF17")}).to.throw(Error, "EncodingError U+CF17");
expect(() => {ms932Encoder.encode("\uCF18")}).to.throw(Error, "EncodingError U+CF18");
expect(() => {ms932Encoder.encode("\uCF19")}).to.throw(Error, "EncodingError U+CF19");
expect(() => {ms932Encoder.encode("\uCF1A")}).to.throw(Error, "EncodingError U+CF1A");
expect(() => {ms932Encoder.encode("\uCF1B")}).to.throw(Error, "EncodingError U+CF1B");
expect(() => {ms932Encoder.encode("\uCF1C")}).to.throw(Error, "EncodingError U+CF1C");
expect(() => {ms932Encoder.encode("\uCF1D")}).to.throw(Error, "EncodingError U+CF1D");
expect(() => {ms932Encoder.encode("\uCF1E")}).to.throw(Error, "EncodingError U+CF1E");
expect(() => {ms932Encoder.encode("\uCF1F")}).to.throw(Error, "EncodingError U+CF1F");
expect(() => {ms932Encoder.encode("\uCF20")}).to.throw(Error, "EncodingError U+CF20");
expect(() => {ms932Encoder.encode("\uCF21")}).to.throw(Error, "EncodingError U+CF21");
expect(() => {ms932Encoder.encode("\uCF22")}).to.throw(Error, "EncodingError U+CF22");
expect(() => {ms932Encoder.encode("\uCF23")}).to.throw(Error, "EncodingError U+CF23");
expect(() => {ms932Encoder.encode("\uCF24")}).to.throw(Error, "EncodingError U+CF24");
expect(() => {ms932Encoder.encode("\uCF25")}).to.throw(Error, "EncodingError U+CF25");
expect(() => {ms932Encoder.encode("\uCF26")}).to.throw(Error, "EncodingError U+CF26");
expect(() => {ms932Encoder.encode("\uCF27")}).to.throw(Error, "EncodingError U+CF27");
expect(() => {ms932Encoder.encode("\uCF28")}).to.throw(Error, "EncodingError U+CF28");
expect(() => {ms932Encoder.encode("\uCF29")}).to.throw(Error, "EncodingError U+CF29");
expect(() => {ms932Encoder.encode("\uCF2A")}).to.throw(Error, "EncodingError U+CF2A");
expect(() => {ms932Encoder.encode("\uCF2B")}).to.throw(Error, "EncodingError U+CF2B");
expect(() => {ms932Encoder.encode("\uCF2C")}).to.throw(Error, "EncodingError U+CF2C");
expect(() => {ms932Encoder.encode("\uCF2D")}).to.throw(Error, "EncodingError U+CF2D");
expect(() => {ms932Encoder.encode("\uCF2E")}).to.throw(Error, "EncodingError U+CF2E");
expect(() => {ms932Encoder.encode("\uCF2F")}).to.throw(Error, "EncodingError U+CF2F");
expect(() => {ms932Encoder.encode("\uCF30")}).to.throw(Error, "EncodingError U+CF30");
expect(() => {ms932Encoder.encode("\uCF31")}).to.throw(Error, "EncodingError U+CF31");
expect(() => {ms932Encoder.encode("\uCF32")}).to.throw(Error, "EncodingError U+CF32");
expect(() => {ms932Encoder.encode("\uCF33")}).to.throw(Error, "EncodingError U+CF33");
expect(() => {ms932Encoder.encode("\uCF34")}).to.throw(Error, "EncodingError U+CF34");
expect(() => {ms932Encoder.encode("\uCF35")}).to.throw(Error, "EncodingError U+CF35");
expect(() => {ms932Encoder.encode("\uCF36")}).to.throw(Error, "EncodingError U+CF36");
expect(() => {ms932Encoder.encode("\uCF37")}).to.throw(Error, "EncodingError U+CF37");
expect(() => {ms932Encoder.encode("\uCF38")}).to.throw(Error, "EncodingError U+CF38");
expect(() => {ms932Encoder.encode("\uCF39")}).to.throw(Error, "EncodingError U+CF39");
expect(() => {ms932Encoder.encode("\uCF3A")}).to.throw(Error, "EncodingError U+CF3A");
expect(() => {ms932Encoder.encode("\uCF3B")}).to.throw(Error, "EncodingError U+CF3B");
expect(() => {ms932Encoder.encode("\uCF3C")}).to.throw(Error, "EncodingError U+CF3C");
expect(() => {ms932Encoder.encode("\uCF3D")}).to.throw(Error, "EncodingError U+CF3D");
expect(() => {ms932Encoder.encode("\uCF3E")}).to.throw(Error, "EncodingError U+CF3E");
expect(() => {ms932Encoder.encode("\uCF3F")}).to.throw(Error, "EncodingError U+CF3F");
expect(() => {ms932Encoder.encode("\uCF40")}).to.throw(Error, "EncodingError U+CF40");
expect(() => {ms932Encoder.encode("\uCF41")}).to.throw(Error, "EncodingError U+CF41");
expect(() => {ms932Encoder.encode("\uCF42")}).to.throw(Error, "EncodingError U+CF42");
expect(() => {ms932Encoder.encode("\uCF43")}).to.throw(Error, "EncodingError U+CF43");
expect(() => {ms932Encoder.encode("\uCF44")}).to.throw(Error, "EncodingError U+CF44");
expect(() => {ms932Encoder.encode("\uCF45")}).to.throw(Error, "EncodingError U+CF45");
expect(() => {ms932Encoder.encode("\uCF46")}).to.throw(Error, "EncodingError U+CF46");
expect(() => {ms932Encoder.encode("\uCF47")}).to.throw(Error, "EncodingError U+CF47");
expect(() => {ms932Encoder.encode("\uCF48")}).to.throw(Error, "EncodingError U+CF48");
expect(() => {ms932Encoder.encode("\uCF49")}).to.throw(Error, "EncodingError U+CF49");
expect(() => {ms932Encoder.encode("\uCF4A")}).to.throw(Error, "EncodingError U+CF4A");
expect(() => {ms932Encoder.encode("\uCF4B")}).to.throw(Error, "EncodingError U+CF4B");
expect(() => {ms932Encoder.encode("\uCF4C")}).to.throw(Error, "EncodingError U+CF4C");
expect(() => {ms932Encoder.encode("\uCF4D")}).to.throw(Error, "EncodingError U+CF4D");
expect(() => {ms932Encoder.encode("\uCF4E")}).to.throw(Error, "EncodingError U+CF4E");
expect(() => {ms932Encoder.encode("\uCF4F")}).to.throw(Error, "EncodingError U+CF4F");
expect(() => {ms932Encoder.encode("\uCF50")}).to.throw(Error, "EncodingError U+CF50");
expect(() => {ms932Encoder.encode("\uCF51")}).to.throw(Error, "EncodingError U+CF51");
expect(() => {ms932Encoder.encode("\uCF52")}).to.throw(Error, "EncodingError U+CF52");
expect(() => {ms932Encoder.encode("\uCF53")}).to.throw(Error, "EncodingError U+CF53");
expect(() => {ms932Encoder.encode("\uCF54")}).to.throw(Error, "EncodingError U+CF54");
expect(() => {ms932Encoder.encode("\uCF55")}).to.throw(Error, "EncodingError U+CF55");
expect(() => {ms932Encoder.encode("\uCF56")}).to.throw(Error, "EncodingError U+CF56");
expect(() => {ms932Encoder.encode("\uCF57")}).to.throw(Error, "EncodingError U+CF57");
expect(() => {ms932Encoder.encode("\uCF58")}).to.throw(Error, "EncodingError U+CF58");
expect(() => {ms932Encoder.encode("\uCF59")}).to.throw(Error, "EncodingError U+CF59");
expect(() => {ms932Encoder.encode("\uCF5A")}).to.throw(Error, "EncodingError U+CF5A");
expect(() => {ms932Encoder.encode("\uCF5B")}).to.throw(Error, "EncodingError U+CF5B");
expect(() => {ms932Encoder.encode("\uCF5C")}).to.throw(Error, "EncodingError U+CF5C");
expect(() => {ms932Encoder.encode("\uCF5D")}).to.throw(Error, "EncodingError U+CF5D");
expect(() => {ms932Encoder.encode("\uCF5E")}).to.throw(Error, "EncodingError U+CF5E");
expect(() => {ms932Encoder.encode("\uCF5F")}).to.throw(Error, "EncodingError U+CF5F");
expect(() => {ms932Encoder.encode("\uCF60")}).to.throw(Error, "EncodingError U+CF60");
expect(() => {ms932Encoder.encode("\uCF61")}).to.throw(Error, "EncodingError U+CF61");
expect(() => {ms932Encoder.encode("\uCF62")}).to.throw(Error, "EncodingError U+CF62");
expect(() => {ms932Encoder.encode("\uCF63")}).to.throw(Error, "EncodingError U+CF63");
expect(() => {ms932Encoder.encode("\uCF64")}).to.throw(Error, "EncodingError U+CF64");
expect(() => {ms932Encoder.encode("\uCF65")}).to.throw(Error, "EncodingError U+CF65");
expect(() => {ms932Encoder.encode("\uCF66")}).to.throw(Error, "EncodingError U+CF66");
expect(() => {ms932Encoder.encode("\uCF67")}).to.throw(Error, "EncodingError U+CF67");
expect(() => {ms932Encoder.encode("\uCF68")}).to.throw(Error, "EncodingError U+CF68");
expect(() => {ms932Encoder.encode("\uCF69")}).to.throw(Error, "EncodingError U+CF69");
expect(() => {ms932Encoder.encode("\uCF6A")}).to.throw(Error, "EncodingError U+CF6A");
expect(() => {ms932Encoder.encode("\uCF6B")}).to.throw(Error, "EncodingError U+CF6B");
expect(() => {ms932Encoder.encode("\uCF6C")}).to.throw(Error, "EncodingError U+CF6C");
expect(() => {ms932Encoder.encode("\uCF6D")}).to.throw(Error, "EncodingError U+CF6D");
expect(() => {ms932Encoder.encode("\uCF6E")}).to.throw(Error, "EncodingError U+CF6E");
expect(() => {ms932Encoder.encode("\uCF6F")}).to.throw(Error, "EncodingError U+CF6F");
expect(() => {ms932Encoder.encode("\uCF70")}).to.throw(Error, "EncodingError U+CF70");
expect(() => {ms932Encoder.encode("\uCF71")}).to.throw(Error, "EncodingError U+CF71");
expect(() => {ms932Encoder.encode("\uCF72")}).to.throw(Error, "EncodingError U+CF72");
expect(() => {ms932Encoder.encode("\uCF73")}).to.throw(Error, "EncodingError U+CF73");
expect(() => {ms932Encoder.encode("\uCF74")}).to.throw(Error, "EncodingError U+CF74");
expect(() => {ms932Encoder.encode("\uCF75")}).to.throw(Error, "EncodingError U+CF75");
expect(() => {ms932Encoder.encode("\uCF76")}).to.throw(Error, "EncodingError U+CF76");
expect(() => {ms932Encoder.encode("\uCF77")}).to.throw(Error, "EncodingError U+CF77");
expect(() => {ms932Encoder.encode("\uCF78")}).to.throw(Error, "EncodingError U+CF78");
expect(() => {ms932Encoder.encode("\uCF79")}).to.throw(Error, "EncodingError U+CF79");
expect(() => {ms932Encoder.encode("\uCF7A")}).to.throw(Error, "EncodingError U+CF7A");
expect(() => {ms932Encoder.encode("\uCF7B")}).to.throw(Error, "EncodingError U+CF7B");
expect(() => {ms932Encoder.encode("\uCF7C")}).to.throw(Error, "EncodingError U+CF7C");
expect(() => {ms932Encoder.encode("\uCF7D")}).to.throw(Error, "EncodingError U+CF7D");
expect(() => {ms932Encoder.encode("\uCF7E")}).to.throw(Error, "EncodingError U+CF7E");
expect(() => {ms932Encoder.encode("\uCF7F")}).to.throw(Error, "EncodingError U+CF7F");
expect(() => {ms932Encoder.encode("\uCF80")}).to.throw(Error, "EncodingError U+CF80");
expect(() => {ms932Encoder.encode("\uCF81")}).to.throw(Error, "EncodingError U+CF81");
expect(() => {ms932Encoder.encode("\uCF82")}).to.throw(Error, "EncodingError U+CF82");
expect(() => {ms932Encoder.encode("\uCF83")}).to.throw(Error, "EncodingError U+CF83");
expect(() => {ms932Encoder.encode("\uCF84")}).to.throw(Error, "EncodingError U+CF84");
expect(() => {ms932Encoder.encode("\uCF85")}).to.throw(Error, "EncodingError U+CF85");
expect(() => {ms932Encoder.encode("\uCF86")}).to.throw(Error, "EncodingError U+CF86");
expect(() => {ms932Encoder.encode("\uCF87")}).to.throw(Error, "EncodingError U+CF87");
expect(() => {ms932Encoder.encode("\uCF88")}).to.throw(Error, "EncodingError U+CF88");
expect(() => {ms932Encoder.encode("\uCF89")}).to.throw(Error, "EncodingError U+CF89");
expect(() => {ms932Encoder.encode("\uCF8A")}).to.throw(Error, "EncodingError U+CF8A");
expect(() => {ms932Encoder.encode("\uCF8B")}).to.throw(Error, "EncodingError U+CF8B");
expect(() => {ms932Encoder.encode("\uCF8C")}).to.throw(Error, "EncodingError U+CF8C");
expect(() => {ms932Encoder.encode("\uCF8D")}).to.throw(Error, "EncodingError U+CF8D");
expect(() => {ms932Encoder.encode("\uCF8E")}).to.throw(Error, "EncodingError U+CF8E");
expect(() => {ms932Encoder.encode("\uCF8F")}).to.throw(Error, "EncodingError U+CF8F");
expect(() => {ms932Encoder.encode("\uCF90")}).to.throw(Error, "EncodingError U+CF90");
expect(() => {ms932Encoder.encode("\uCF91")}).to.throw(Error, "EncodingError U+CF91");
expect(() => {ms932Encoder.encode("\uCF92")}).to.throw(Error, "EncodingError U+CF92");
expect(() => {ms932Encoder.encode("\uCF93")}).to.throw(Error, "EncodingError U+CF93");
expect(() => {ms932Encoder.encode("\uCF94")}).to.throw(Error, "EncodingError U+CF94");
expect(() => {ms932Encoder.encode("\uCF95")}).to.throw(Error, "EncodingError U+CF95");
expect(() => {ms932Encoder.encode("\uCF96")}).to.throw(Error, "EncodingError U+CF96");
expect(() => {ms932Encoder.encode("\uCF97")}).to.throw(Error, "EncodingError U+CF97");
expect(() => {ms932Encoder.encode("\uCF98")}).to.throw(Error, "EncodingError U+CF98");
expect(() => {ms932Encoder.encode("\uCF99")}).to.throw(Error, "EncodingError U+CF99");
expect(() => {ms932Encoder.encode("\uCF9A")}).to.throw(Error, "EncodingError U+CF9A");
expect(() => {ms932Encoder.encode("\uCF9B")}).to.throw(Error, "EncodingError U+CF9B");
expect(() => {ms932Encoder.encode("\uCF9C")}).to.throw(Error, "EncodingError U+CF9C");
expect(() => {ms932Encoder.encode("\uCF9D")}).to.throw(Error, "EncodingError U+CF9D");
expect(() => {ms932Encoder.encode("\uCF9E")}).to.throw(Error, "EncodingError U+CF9E");
expect(() => {ms932Encoder.encode("\uCF9F")}).to.throw(Error, "EncodingError U+CF9F");
expect(() => {ms932Encoder.encode("\uCFA0")}).to.throw(Error, "EncodingError U+CFA0");
expect(() => {ms932Encoder.encode("\uCFA1")}).to.throw(Error, "EncodingError U+CFA1");
expect(() => {ms932Encoder.encode("\uCFA2")}).to.throw(Error, "EncodingError U+CFA2");
expect(() => {ms932Encoder.encode("\uCFA3")}).to.throw(Error, "EncodingError U+CFA3");
expect(() => {ms932Encoder.encode("\uCFA4")}).to.throw(Error, "EncodingError U+CFA4");
expect(() => {ms932Encoder.encode("\uCFA5")}).to.throw(Error, "EncodingError U+CFA5");
expect(() => {ms932Encoder.encode("\uCFA6")}).to.throw(Error, "EncodingError U+CFA6");
expect(() => {ms932Encoder.encode("\uCFA7")}).to.throw(Error, "EncodingError U+CFA7");
expect(() => {ms932Encoder.encode("\uCFA8")}).to.throw(Error, "EncodingError U+CFA8");
expect(() => {ms932Encoder.encode("\uCFA9")}).to.throw(Error, "EncodingError U+CFA9");
expect(() => {ms932Encoder.encode("\uCFAA")}).to.throw(Error, "EncodingError U+CFAA");
expect(() => {ms932Encoder.encode("\uCFAB")}).to.throw(Error, "EncodingError U+CFAB");
expect(() => {ms932Encoder.encode("\uCFAC")}).to.throw(Error, "EncodingError U+CFAC");
expect(() => {ms932Encoder.encode("\uCFAD")}).to.throw(Error, "EncodingError U+CFAD");
expect(() => {ms932Encoder.encode("\uCFAE")}).to.throw(Error, "EncodingError U+CFAE");
expect(() => {ms932Encoder.encode("\uCFAF")}).to.throw(Error, "EncodingError U+CFAF");
expect(() => {ms932Encoder.encode("\uCFB0")}).to.throw(Error, "EncodingError U+CFB0");
expect(() => {ms932Encoder.encode("\uCFB1")}).to.throw(Error, "EncodingError U+CFB1");
expect(() => {ms932Encoder.encode("\uCFB2")}).to.throw(Error, "EncodingError U+CFB2");
expect(() => {ms932Encoder.encode("\uCFB3")}).to.throw(Error, "EncodingError U+CFB3");
expect(() => {ms932Encoder.encode("\uCFB4")}).to.throw(Error, "EncodingError U+CFB4");
expect(() => {ms932Encoder.encode("\uCFB5")}).to.throw(Error, "EncodingError U+CFB5");
expect(() => {ms932Encoder.encode("\uCFB6")}).to.throw(Error, "EncodingError U+CFB6");
expect(() => {ms932Encoder.encode("\uCFB7")}).to.throw(Error, "EncodingError U+CFB7");
expect(() => {ms932Encoder.encode("\uCFB8")}).to.throw(Error, "EncodingError U+CFB8");
expect(() => {ms932Encoder.encode("\uCFB9")}).to.throw(Error, "EncodingError U+CFB9");
expect(() => {ms932Encoder.encode("\uCFBA")}).to.throw(Error, "EncodingError U+CFBA");
expect(() => {ms932Encoder.encode("\uCFBB")}).to.throw(Error, "EncodingError U+CFBB");
expect(() => {ms932Encoder.encode("\uCFBC")}).to.throw(Error, "EncodingError U+CFBC");
expect(() => {ms932Encoder.encode("\uCFBD")}).to.throw(Error, "EncodingError U+CFBD");
expect(() => {ms932Encoder.encode("\uCFBE")}).to.throw(Error, "EncodingError U+CFBE");
expect(() => {ms932Encoder.encode("\uCFBF")}).to.throw(Error, "EncodingError U+CFBF");
expect(() => {ms932Encoder.encode("\uCFC0")}).to.throw(Error, "EncodingError U+CFC0");
expect(() => {ms932Encoder.encode("\uCFC1")}).to.throw(Error, "EncodingError U+CFC1");
expect(() => {ms932Encoder.encode("\uCFC2")}).to.throw(Error, "EncodingError U+CFC2");
expect(() => {ms932Encoder.encode("\uCFC3")}).to.throw(Error, "EncodingError U+CFC3");
expect(() => {ms932Encoder.encode("\uCFC4")}).to.throw(Error, "EncodingError U+CFC4");
expect(() => {ms932Encoder.encode("\uCFC5")}).to.throw(Error, "EncodingError U+CFC5");
expect(() => {ms932Encoder.encode("\uCFC6")}).to.throw(Error, "EncodingError U+CFC6");
expect(() => {ms932Encoder.encode("\uCFC7")}).to.throw(Error, "EncodingError U+CFC7");
expect(() => {ms932Encoder.encode("\uCFC8")}).to.throw(Error, "EncodingError U+CFC8");
expect(() => {ms932Encoder.encode("\uCFC9")}).to.throw(Error, "EncodingError U+CFC9");
expect(() => {ms932Encoder.encode("\uCFCA")}).to.throw(Error, "EncodingError U+CFCA");
expect(() => {ms932Encoder.encode("\uCFCB")}).to.throw(Error, "EncodingError U+CFCB");
expect(() => {ms932Encoder.encode("\uCFCC")}).to.throw(Error, "EncodingError U+CFCC");
expect(() => {ms932Encoder.encode("\uCFCD")}).to.throw(Error, "EncodingError U+CFCD");
expect(() => {ms932Encoder.encode("\uCFCE")}).to.throw(Error, "EncodingError U+CFCE");
expect(() => {ms932Encoder.encode("\uCFCF")}).to.throw(Error, "EncodingError U+CFCF");
expect(() => {ms932Encoder.encode("\uCFD0")}).to.throw(Error, "EncodingError U+CFD0");
expect(() => {ms932Encoder.encode("\uCFD1")}).to.throw(Error, "EncodingError U+CFD1");
expect(() => {ms932Encoder.encode("\uCFD2")}).to.throw(Error, "EncodingError U+CFD2");
expect(() => {ms932Encoder.encode("\uCFD3")}).to.throw(Error, "EncodingError U+CFD3");
expect(() => {ms932Encoder.encode("\uCFD4")}).to.throw(Error, "EncodingError U+CFD4");
expect(() => {ms932Encoder.encode("\uCFD5")}).to.throw(Error, "EncodingError U+CFD5");
expect(() => {ms932Encoder.encode("\uCFD6")}).to.throw(Error, "EncodingError U+CFD6");
expect(() => {ms932Encoder.encode("\uCFD7")}).to.throw(Error, "EncodingError U+CFD7");
expect(() => {ms932Encoder.encode("\uCFD8")}).to.throw(Error, "EncodingError U+CFD8");
expect(() => {ms932Encoder.encode("\uCFD9")}).to.throw(Error, "EncodingError U+CFD9");
expect(() => {ms932Encoder.encode("\uCFDA")}).to.throw(Error, "EncodingError U+CFDA");
expect(() => {ms932Encoder.encode("\uCFDB")}).to.throw(Error, "EncodingError U+CFDB");
expect(() => {ms932Encoder.encode("\uCFDC")}).to.throw(Error, "EncodingError U+CFDC");
expect(() => {ms932Encoder.encode("\uCFDD")}).to.throw(Error, "EncodingError U+CFDD");
expect(() => {ms932Encoder.encode("\uCFDE")}).to.throw(Error, "EncodingError U+CFDE");
expect(() => {ms932Encoder.encode("\uCFDF")}).to.throw(Error, "EncodingError U+CFDF");
expect(() => {ms932Encoder.encode("\uCFE0")}).to.throw(Error, "EncodingError U+CFE0");
expect(() => {ms932Encoder.encode("\uCFE1")}).to.throw(Error, "EncodingError U+CFE1");
expect(() => {ms932Encoder.encode("\uCFE2")}).to.throw(Error, "EncodingError U+CFE2");
expect(() => {ms932Encoder.encode("\uCFE3")}).to.throw(Error, "EncodingError U+CFE3");
expect(() => {ms932Encoder.encode("\uCFE4")}).to.throw(Error, "EncodingError U+CFE4");
expect(() => {ms932Encoder.encode("\uCFE5")}).to.throw(Error, "EncodingError U+CFE5");
expect(() => {ms932Encoder.encode("\uCFE6")}).to.throw(Error, "EncodingError U+CFE6");
expect(() => {ms932Encoder.encode("\uCFE7")}).to.throw(Error, "EncodingError U+CFE7");
expect(() => {ms932Encoder.encode("\uCFE8")}).to.throw(Error, "EncodingError U+CFE8");
expect(() => {ms932Encoder.encode("\uCFE9")}).to.throw(Error, "EncodingError U+CFE9");
expect(() => {ms932Encoder.encode("\uCFEA")}).to.throw(Error, "EncodingError U+CFEA");
expect(() => {ms932Encoder.encode("\uCFEB")}).to.throw(Error, "EncodingError U+CFEB");
expect(() => {ms932Encoder.encode("\uCFEC")}).to.throw(Error, "EncodingError U+CFEC");
expect(() => {ms932Encoder.encode("\uCFED")}).to.throw(Error, "EncodingError U+CFED");
expect(() => {ms932Encoder.encode("\uCFEE")}).to.throw(Error, "EncodingError U+CFEE");
expect(() => {ms932Encoder.encode("\uCFEF")}).to.throw(Error, "EncodingError U+CFEF");
expect(() => {ms932Encoder.encode("\uCFF0")}).to.throw(Error, "EncodingError U+CFF0");
expect(() => {ms932Encoder.encode("\uCFF1")}).to.throw(Error, "EncodingError U+CFF1");
expect(() => {ms932Encoder.encode("\uCFF2")}).to.throw(Error, "EncodingError U+CFF2");
expect(() => {ms932Encoder.encode("\uCFF3")}).to.throw(Error, "EncodingError U+CFF3");
expect(() => {ms932Encoder.encode("\uCFF4")}).to.throw(Error, "EncodingError U+CFF4");
expect(() => {ms932Encoder.encode("\uCFF5")}).to.throw(Error, "EncodingError U+CFF5");
expect(() => {ms932Encoder.encode("\uCFF6")}).to.throw(Error, "EncodingError U+CFF6");
expect(() => {ms932Encoder.encode("\uCFF7")}).to.throw(Error, "EncodingError U+CFF7");
expect(() => {ms932Encoder.encode("\uCFF8")}).to.throw(Error, "EncodingError U+CFF8");
expect(() => {ms932Encoder.encode("\uCFF9")}).to.throw(Error, "EncodingError U+CFF9");
expect(() => {ms932Encoder.encode("\uCFFA")}).to.throw(Error, "EncodingError U+CFFA");
expect(() => {ms932Encoder.encode("\uCFFB")}).to.throw(Error, "EncodingError U+CFFB");
expect(() => {ms932Encoder.encode("\uCFFC")}).to.throw(Error, "EncodingError U+CFFC");
expect(() => {ms932Encoder.encode("\uCFFD")}).to.throw(Error, "EncodingError U+CFFD");
expect(() => {ms932Encoder.encode("\uCFFE")}).to.throw(Error, "EncodingError U+CFFE");
expect(() => {ms932Encoder.encode("\uCFFF")}).to.throw(Error, "EncodingError U+CFFF");

  });

});
