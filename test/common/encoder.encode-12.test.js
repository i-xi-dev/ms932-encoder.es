import { expect } from '@esm-bundle/chai';
import { Ms932 } from "../../dist/index.js";

describe("Ms932.Encoder.prototype.encode 12", () => {

  it("encode(string) - U+B000-U+BFFF", () => {
    const ms932Encoder = new Ms932.Encoder({fatal:true});

expect(() => {ms932Encoder.encode("\uB000")}).to.throw(Error, "EncodingError U+B000");
expect(() => {ms932Encoder.encode("\uB001")}).to.throw(Error, "EncodingError U+B001");
expect(() => {ms932Encoder.encode("\uB002")}).to.throw(Error, "EncodingError U+B002");
expect(() => {ms932Encoder.encode("\uB003")}).to.throw(Error, "EncodingError U+B003");
expect(() => {ms932Encoder.encode("\uB004")}).to.throw(Error, "EncodingError U+B004");
expect(() => {ms932Encoder.encode("\uB005")}).to.throw(Error, "EncodingError U+B005");
expect(() => {ms932Encoder.encode("\uB006")}).to.throw(Error, "EncodingError U+B006");
expect(() => {ms932Encoder.encode("\uB007")}).to.throw(Error, "EncodingError U+B007");
expect(() => {ms932Encoder.encode("\uB008")}).to.throw(Error, "EncodingError U+B008");
expect(() => {ms932Encoder.encode("\uB009")}).to.throw(Error, "EncodingError U+B009");
expect(() => {ms932Encoder.encode("\uB00A")}).to.throw(Error, "EncodingError U+B00A");
expect(() => {ms932Encoder.encode("\uB00B")}).to.throw(Error, "EncodingError U+B00B");
expect(() => {ms932Encoder.encode("\uB00C")}).to.throw(Error, "EncodingError U+B00C");
expect(() => {ms932Encoder.encode("\uB00D")}).to.throw(Error, "EncodingError U+B00D");
expect(() => {ms932Encoder.encode("\uB00E")}).to.throw(Error, "EncodingError U+B00E");
expect(() => {ms932Encoder.encode("\uB00F")}).to.throw(Error, "EncodingError U+B00F");
expect(() => {ms932Encoder.encode("\uB010")}).to.throw(Error, "EncodingError U+B010");
expect(() => {ms932Encoder.encode("\uB011")}).to.throw(Error, "EncodingError U+B011");
expect(() => {ms932Encoder.encode("\uB012")}).to.throw(Error, "EncodingError U+B012");
expect(() => {ms932Encoder.encode("\uB013")}).to.throw(Error, "EncodingError U+B013");
expect(() => {ms932Encoder.encode("\uB014")}).to.throw(Error, "EncodingError U+B014");
expect(() => {ms932Encoder.encode("\uB015")}).to.throw(Error, "EncodingError U+B015");
expect(() => {ms932Encoder.encode("\uB016")}).to.throw(Error, "EncodingError U+B016");
expect(() => {ms932Encoder.encode("\uB017")}).to.throw(Error, "EncodingError U+B017");
expect(() => {ms932Encoder.encode("\uB018")}).to.throw(Error, "EncodingError U+B018");
expect(() => {ms932Encoder.encode("\uB019")}).to.throw(Error, "EncodingError U+B019");
expect(() => {ms932Encoder.encode("\uB01A")}).to.throw(Error, "EncodingError U+B01A");
expect(() => {ms932Encoder.encode("\uB01B")}).to.throw(Error, "EncodingError U+B01B");
expect(() => {ms932Encoder.encode("\uB01C")}).to.throw(Error, "EncodingError U+B01C");
expect(() => {ms932Encoder.encode("\uB01D")}).to.throw(Error, "EncodingError U+B01D");
expect(() => {ms932Encoder.encode("\uB01E")}).to.throw(Error, "EncodingError U+B01E");
expect(() => {ms932Encoder.encode("\uB01F")}).to.throw(Error, "EncodingError U+B01F");
expect(() => {ms932Encoder.encode("\uB020")}).to.throw(Error, "EncodingError U+B020");
expect(() => {ms932Encoder.encode("\uB021")}).to.throw(Error, "EncodingError U+B021");
expect(() => {ms932Encoder.encode("\uB022")}).to.throw(Error, "EncodingError U+B022");
expect(() => {ms932Encoder.encode("\uB023")}).to.throw(Error, "EncodingError U+B023");
expect(() => {ms932Encoder.encode("\uB024")}).to.throw(Error, "EncodingError U+B024");
expect(() => {ms932Encoder.encode("\uB025")}).to.throw(Error, "EncodingError U+B025");
expect(() => {ms932Encoder.encode("\uB026")}).to.throw(Error, "EncodingError U+B026");
expect(() => {ms932Encoder.encode("\uB027")}).to.throw(Error, "EncodingError U+B027");
expect(() => {ms932Encoder.encode("\uB028")}).to.throw(Error, "EncodingError U+B028");
expect(() => {ms932Encoder.encode("\uB029")}).to.throw(Error, "EncodingError U+B029");
expect(() => {ms932Encoder.encode("\uB02A")}).to.throw(Error, "EncodingError U+B02A");
expect(() => {ms932Encoder.encode("\uB02B")}).to.throw(Error, "EncodingError U+B02B");
expect(() => {ms932Encoder.encode("\uB02C")}).to.throw(Error, "EncodingError U+B02C");
expect(() => {ms932Encoder.encode("\uB02D")}).to.throw(Error, "EncodingError U+B02D");
expect(() => {ms932Encoder.encode("\uB02E")}).to.throw(Error, "EncodingError U+B02E");
expect(() => {ms932Encoder.encode("\uB02F")}).to.throw(Error, "EncodingError U+B02F");
expect(() => {ms932Encoder.encode("\uB030")}).to.throw(Error, "EncodingError U+B030");
expect(() => {ms932Encoder.encode("\uB031")}).to.throw(Error, "EncodingError U+B031");
expect(() => {ms932Encoder.encode("\uB032")}).to.throw(Error, "EncodingError U+B032");
expect(() => {ms932Encoder.encode("\uB033")}).to.throw(Error, "EncodingError U+B033");
expect(() => {ms932Encoder.encode("\uB034")}).to.throw(Error, "EncodingError U+B034");
expect(() => {ms932Encoder.encode("\uB035")}).to.throw(Error, "EncodingError U+B035");
expect(() => {ms932Encoder.encode("\uB036")}).to.throw(Error, "EncodingError U+B036");
expect(() => {ms932Encoder.encode("\uB037")}).to.throw(Error, "EncodingError U+B037");
expect(() => {ms932Encoder.encode("\uB038")}).to.throw(Error, "EncodingError U+B038");
expect(() => {ms932Encoder.encode("\uB039")}).to.throw(Error, "EncodingError U+B039");
expect(() => {ms932Encoder.encode("\uB03A")}).to.throw(Error, "EncodingError U+B03A");
expect(() => {ms932Encoder.encode("\uB03B")}).to.throw(Error, "EncodingError U+B03B");
expect(() => {ms932Encoder.encode("\uB03C")}).to.throw(Error, "EncodingError U+B03C");
expect(() => {ms932Encoder.encode("\uB03D")}).to.throw(Error, "EncodingError U+B03D");
expect(() => {ms932Encoder.encode("\uB03E")}).to.throw(Error, "EncodingError U+B03E");
expect(() => {ms932Encoder.encode("\uB03F")}).to.throw(Error, "EncodingError U+B03F");
expect(() => {ms932Encoder.encode("\uB040")}).to.throw(Error, "EncodingError U+B040");
expect(() => {ms932Encoder.encode("\uB041")}).to.throw(Error, "EncodingError U+B041");
expect(() => {ms932Encoder.encode("\uB042")}).to.throw(Error, "EncodingError U+B042");
expect(() => {ms932Encoder.encode("\uB043")}).to.throw(Error, "EncodingError U+B043");
expect(() => {ms932Encoder.encode("\uB044")}).to.throw(Error, "EncodingError U+B044");
expect(() => {ms932Encoder.encode("\uB045")}).to.throw(Error, "EncodingError U+B045");
expect(() => {ms932Encoder.encode("\uB046")}).to.throw(Error, "EncodingError U+B046");
expect(() => {ms932Encoder.encode("\uB047")}).to.throw(Error, "EncodingError U+B047");
expect(() => {ms932Encoder.encode("\uB048")}).to.throw(Error, "EncodingError U+B048");
expect(() => {ms932Encoder.encode("\uB049")}).to.throw(Error, "EncodingError U+B049");
expect(() => {ms932Encoder.encode("\uB04A")}).to.throw(Error, "EncodingError U+B04A");
expect(() => {ms932Encoder.encode("\uB04B")}).to.throw(Error, "EncodingError U+B04B");
expect(() => {ms932Encoder.encode("\uB04C")}).to.throw(Error, "EncodingError U+B04C");
expect(() => {ms932Encoder.encode("\uB04D")}).to.throw(Error, "EncodingError U+B04D");
expect(() => {ms932Encoder.encode("\uB04E")}).to.throw(Error, "EncodingError U+B04E");
expect(() => {ms932Encoder.encode("\uB04F")}).to.throw(Error, "EncodingError U+B04F");
expect(() => {ms932Encoder.encode("\uB050")}).to.throw(Error, "EncodingError U+B050");
expect(() => {ms932Encoder.encode("\uB051")}).to.throw(Error, "EncodingError U+B051");
expect(() => {ms932Encoder.encode("\uB052")}).to.throw(Error, "EncodingError U+B052");
expect(() => {ms932Encoder.encode("\uB053")}).to.throw(Error, "EncodingError U+B053");
expect(() => {ms932Encoder.encode("\uB054")}).to.throw(Error, "EncodingError U+B054");
expect(() => {ms932Encoder.encode("\uB055")}).to.throw(Error, "EncodingError U+B055");
expect(() => {ms932Encoder.encode("\uB056")}).to.throw(Error, "EncodingError U+B056");
expect(() => {ms932Encoder.encode("\uB057")}).to.throw(Error, "EncodingError U+B057");
expect(() => {ms932Encoder.encode("\uB058")}).to.throw(Error, "EncodingError U+B058");
expect(() => {ms932Encoder.encode("\uB059")}).to.throw(Error, "EncodingError U+B059");
expect(() => {ms932Encoder.encode("\uB05A")}).to.throw(Error, "EncodingError U+B05A");
expect(() => {ms932Encoder.encode("\uB05B")}).to.throw(Error, "EncodingError U+B05B");
expect(() => {ms932Encoder.encode("\uB05C")}).to.throw(Error, "EncodingError U+B05C");
expect(() => {ms932Encoder.encode("\uB05D")}).to.throw(Error, "EncodingError U+B05D");
expect(() => {ms932Encoder.encode("\uB05E")}).to.throw(Error, "EncodingError U+B05E");
expect(() => {ms932Encoder.encode("\uB05F")}).to.throw(Error, "EncodingError U+B05F");
expect(() => {ms932Encoder.encode("\uB060")}).to.throw(Error, "EncodingError U+B060");
expect(() => {ms932Encoder.encode("\uB061")}).to.throw(Error, "EncodingError U+B061");
expect(() => {ms932Encoder.encode("\uB062")}).to.throw(Error, "EncodingError U+B062");
expect(() => {ms932Encoder.encode("\uB063")}).to.throw(Error, "EncodingError U+B063");
expect(() => {ms932Encoder.encode("\uB064")}).to.throw(Error, "EncodingError U+B064");
expect(() => {ms932Encoder.encode("\uB065")}).to.throw(Error, "EncodingError U+B065");
expect(() => {ms932Encoder.encode("\uB066")}).to.throw(Error, "EncodingError U+B066");
expect(() => {ms932Encoder.encode("\uB067")}).to.throw(Error, "EncodingError U+B067");
expect(() => {ms932Encoder.encode("\uB068")}).to.throw(Error, "EncodingError U+B068");
expect(() => {ms932Encoder.encode("\uB069")}).to.throw(Error, "EncodingError U+B069");
expect(() => {ms932Encoder.encode("\uB06A")}).to.throw(Error, "EncodingError U+B06A");
expect(() => {ms932Encoder.encode("\uB06B")}).to.throw(Error, "EncodingError U+B06B");
expect(() => {ms932Encoder.encode("\uB06C")}).to.throw(Error, "EncodingError U+B06C");
expect(() => {ms932Encoder.encode("\uB06D")}).to.throw(Error, "EncodingError U+B06D");
expect(() => {ms932Encoder.encode("\uB06E")}).to.throw(Error, "EncodingError U+B06E");
expect(() => {ms932Encoder.encode("\uB06F")}).to.throw(Error, "EncodingError U+B06F");
expect(() => {ms932Encoder.encode("\uB070")}).to.throw(Error, "EncodingError U+B070");
expect(() => {ms932Encoder.encode("\uB071")}).to.throw(Error, "EncodingError U+B071");
expect(() => {ms932Encoder.encode("\uB072")}).to.throw(Error, "EncodingError U+B072");
expect(() => {ms932Encoder.encode("\uB073")}).to.throw(Error, "EncodingError U+B073");
expect(() => {ms932Encoder.encode("\uB074")}).to.throw(Error, "EncodingError U+B074");
expect(() => {ms932Encoder.encode("\uB075")}).to.throw(Error, "EncodingError U+B075");
expect(() => {ms932Encoder.encode("\uB076")}).to.throw(Error, "EncodingError U+B076");
expect(() => {ms932Encoder.encode("\uB077")}).to.throw(Error, "EncodingError U+B077");
expect(() => {ms932Encoder.encode("\uB078")}).to.throw(Error, "EncodingError U+B078");
expect(() => {ms932Encoder.encode("\uB079")}).to.throw(Error, "EncodingError U+B079");
expect(() => {ms932Encoder.encode("\uB07A")}).to.throw(Error, "EncodingError U+B07A");
expect(() => {ms932Encoder.encode("\uB07B")}).to.throw(Error, "EncodingError U+B07B");
expect(() => {ms932Encoder.encode("\uB07C")}).to.throw(Error, "EncodingError U+B07C");
expect(() => {ms932Encoder.encode("\uB07D")}).to.throw(Error, "EncodingError U+B07D");
expect(() => {ms932Encoder.encode("\uB07E")}).to.throw(Error, "EncodingError U+B07E");
expect(() => {ms932Encoder.encode("\uB07F")}).to.throw(Error, "EncodingError U+B07F");
expect(() => {ms932Encoder.encode("\uB080")}).to.throw(Error, "EncodingError U+B080");
expect(() => {ms932Encoder.encode("\uB081")}).to.throw(Error, "EncodingError U+B081");
expect(() => {ms932Encoder.encode("\uB082")}).to.throw(Error, "EncodingError U+B082");
expect(() => {ms932Encoder.encode("\uB083")}).to.throw(Error, "EncodingError U+B083");
expect(() => {ms932Encoder.encode("\uB084")}).to.throw(Error, "EncodingError U+B084");
expect(() => {ms932Encoder.encode("\uB085")}).to.throw(Error, "EncodingError U+B085");
expect(() => {ms932Encoder.encode("\uB086")}).to.throw(Error, "EncodingError U+B086");
expect(() => {ms932Encoder.encode("\uB087")}).to.throw(Error, "EncodingError U+B087");
expect(() => {ms932Encoder.encode("\uB088")}).to.throw(Error, "EncodingError U+B088");
expect(() => {ms932Encoder.encode("\uB089")}).to.throw(Error, "EncodingError U+B089");
expect(() => {ms932Encoder.encode("\uB08A")}).to.throw(Error, "EncodingError U+B08A");
expect(() => {ms932Encoder.encode("\uB08B")}).to.throw(Error, "EncodingError U+B08B");
expect(() => {ms932Encoder.encode("\uB08C")}).to.throw(Error, "EncodingError U+B08C");
expect(() => {ms932Encoder.encode("\uB08D")}).to.throw(Error, "EncodingError U+B08D");
expect(() => {ms932Encoder.encode("\uB08E")}).to.throw(Error, "EncodingError U+B08E");
expect(() => {ms932Encoder.encode("\uB08F")}).to.throw(Error, "EncodingError U+B08F");
expect(() => {ms932Encoder.encode("\uB090")}).to.throw(Error, "EncodingError U+B090");
expect(() => {ms932Encoder.encode("\uB091")}).to.throw(Error, "EncodingError U+B091");
expect(() => {ms932Encoder.encode("\uB092")}).to.throw(Error, "EncodingError U+B092");
expect(() => {ms932Encoder.encode("\uB093")}).to.throw(Error, "EncodingError U+B093");
expect(() => {ms932Encoder.encode("\uB094")}).to.throw(Error, "EncodingError U+B094");
expect(() => {ms932Encoder.encode("\uB095")}).to.throw(Error, "EncodingError U+B095");
expect(() => {ms932Encoder.encode("\uB096")}).to.throw(Error, "EncodingError U+B096");
expect(() => {ms932Encoder.encode("\uB097")}).to.throw(Error, "EncodingError U+B097");
expect(() => {ms932Encoder.encode("\uB098")}).to.throw(Error, "EncodingError U+B098");
expect(() => {ms932Encoder.encode("\uB099")}).to.throw(Error, "EncodingError U+B099");
expect(() => {ms932Encoder.encode("\uB09A")}).to.throw(Error, "EncodingError U+B09A");
expect(() => {ms932Encoder.encode("\uB09B")}).to.throw(Error, "EncodingError U+B09B");
expect(() => {ms932Encoder.encode("\uB09C")}).to.throw(Error, "EncodingError U+B09C");
expect(() => {ms932Encoder.encode("\uB09D")}).to.throw(Error, "EncodingError U+B09D");
expect(() => {ms932Encoder.encode("\uB09E")}).to.throw(Error, "EncodingError U+B09E");
expect(() => {ms932Encoder.encode("\uB09F")}).to.throw(Error, "EncodingError U+B09F");
expect(() => {ms932Encoder.encode("\uB0A0")}).to.throw(Error, "EncodingError U+B0A0");
expect(() => {ms932Encoder.encode("\uB0A1")}).to.throw(Error, "EncodingError U+B0A1");
expect(() => {ms932Encoder.encode("\uB0A2")}).to.throw(Error, "EncodingError U+B0A2");
expect(() => {ms932Encoder.encode("\uB0A3")}).to.throw(Error, "EncodingError U+B0A3");
expect(() => {ms932Encoder.encode("\uB0A4")}).to.throw(Error, "EncodingError U+B0A4");
expect(() => {ms932Encoder.encode("\uB0A5")}).to.throw(Error, "EncodingError U+B0A5");
expect(() => {ms932Encoder.encode("\uB0A6")}).to.throw(Error, "EncodingError U+B0A6");
expect(() => {ms932Encoder.encode("\uB0A7")}).to.throw(Error, "EncodingError U+B0A7");
expect(() => {ms932Encoder.encode("\uB0A8")}).to.throw(Error, "EncodingError U+B0A8");
expect(() => {ms932Encoder.encode("\uB0A9")}).to.throw(Error, "EncodingError U+B0A9");
expect(() => {ms932Encoder.encode("\uB0AA")}).to.throw(Error, "EncodingError U+B0AA");
expect(() => {ms932Encoder.encode("\uB0AB")}).to.throw(Error, "EncodingError U+B0AB");
expect(() => {ms932Encoder.encode("\uB0AC")}).to.throw(Error, "EncodingError U+B0AC");
expect(() => {ms932Encoder.encode("\uB0AD")}).to.throw(Error, "EncodingError U+B0AD");
expect(() => {ms932Encoder.encode("\uB0AE")}).to.throw(Error, "EncodingError U+B0AE");
expect(() => {ms932Encoder.encode("\uB0AF")}).to.throw(Error, "EncodingError U+B0AF");
expect(() => {ms932Encoder.encode("\uB0B0")}).to.throw(Error, "EncodingError U+B0B0");
expect(() => {ms932Encoder.encode("\uB0B1")}).to.throw(Error, "EncodingError U+B0B1");
expect(() => {ms932Encoder.encode("\uB0B2")}).to.throw(Error, "EncodingError U+B0B2");
expect(() => {ms932Encoder.encode("\uB0B3")}).to.throw(Error, "EncodingError U+B0B3");
expect(() => {ms932Encoder.encode("\uB0B4")}).to.throw(Error, "EncodingError U+B0B4");
expect(() => {ms932Encoder.encode("\uB0B5")}).to.throw(Error, "EncodingError U+B0B5");
expect(() => {ms932Encoder.encode("\uB0B6")}).to.throw(Error, "EncodingError U+B0B6");
expect(() => {ms932Encoder.encode("\uB0B7")}).to.throw(Error, "EncodingError U+B0B7");
expect(() => {ms932Encoder.encode("\uB0B8")}).to.throw(Error, "EncodingError U+B0B8");
expect(() => {ms932Encoder.encode("\uB0B9")}).to.throw(Error, "EncodingError U+B0B9");
expect(() => {ms932Encoder.encode("\uB0BA")}).to.throw(Error, "EncodingError U+B0BA");
expect(() => {ms932Encoder.encode("\uB0BB")}).to.throw(Error, "EncodingError U+B0BB");
expect(() => {ms932Encoder.encode("\uB0BC")}).to.throw(Error, "EncodingError U+B0BC");
expect(() => {ms932Encoder.encode("\uB0BD")}).to.throw(Error, "EncodingError U+B0BD");
expect(() => {ms932Encoder.encode("\uB0BE")}).to.throw(Error, "EncodingError U+B0BE");
expect(() => {ms932Encoder.encode("\uB0BF")}).to.throw(Error, "EncodingError U+B0BF");
expect(() => {ms932Encoder.encode("\uB0C0")}).to.throw(Error, "EncodingError U+B0C0");
expect(() => {ms932Encoder.encode("\uB0C1")}).to.throw(Error, "EncodingError U+B0C1");
expect(() => {ms932Encoder.encode("\uB0C2")}).to.throw(Error, "EncodingError U+B0C2");
expect(() => {ms932Encoder.encode("\uB0C3")}).to.throw(Error, "EncodingError U+B0C3");
expect(() => {ms932Encoder.encode("\uB0C4")}).to.throw(Error, "EncodingError U+B0C4");
expect(() => {ms932Encoder.encode("\uB0C5")}).to.throw(Error, "EncodingError U+B0C5");
expect(() => {ms932Encoder.encode("\uB0C6")}).to.throw(Error, "EncodingError U+B0C6");
expect(() => {ms932Encoder.encode("\uB0C7")}).to.throw(Error, "EncodingError U+B0C7");
expect(() => {ms932Encoder.encode("\uB0C8")}).to.throw(Error, "EncodingError U+B0C8");
expect(() => {ms932Encoder.encode("\uB0C9")}).to.throw(Error, "EncodingError U+B0C9");
expect(() => {ms932Encoder.encode("\uB0CA")}).to.throw(Error, "EncodingError U+B0CA");
expect(() => {ms932Encoder.encode("\uB0CB")}).to.throw(Error, "EncodingError U+B0CB");
expect(() => {ms932Encoder.encode("\uB0CC")}).to.throw(Error, "EncodingError U+B0CC");
expect(() => {ms932Encoder.encode("\uB0CD")}).to.throw(Error, "EncodingError U+B0CD");
expect(() => {ms932Encoder.encode("\uB0CE")}).to.throw(Error, "EncodingError U+B0CE");
expect(() => {ms932Encoder.encode("\uB0CF")}).to.throw(Error, "EncodingError U+B0CF");
expect(() => {ms932Encoder.encode("\uB0D0")}).to.throw(Error, "EncodingError U+B0D0");
expect(() => {ms932Encoder.encode("\uB0D1")}).to.throw(Error, "EncodingError U+B0D1");
expect(() => {ms932Encoder.encode("\uB0D2")}).to.throw(Error, "EncodingError U+B0D2");
expect(() => {ms932Encoder.encode("\uB0D3")}).to.throw(Error, "EncodingError U+B0D3");
expect(() => {ms932Encoder.encode("\uB0D4")}).to.throw(Error, "EncodingError U+B0D4");
expect(() => {ms932Encoder.encode("\uB0D5")}).to.throw(Error, "EncodingError U+B0D5");
expect(() => {ms932Encoder.encode("\uB0D6")}).to.throw(Error, "EncodingError U+B0D6");
expect(() => {ms932Encoder.encode("\uB0D7")}).to.throw(Error, "EncodingError U+B0D7");
expect(() => {ms932Encoder.encode("\uB0D8")}).to.throw(Error, "EncodingError U+B0D8");
expect(() => {ms932Encoder.encode("\uB0D9")}).to.throw(Error, "EncodingError U+B0D9");
expect(() => {ms932Encoder.encode("\uB0DA")}).to.throw(Error, "EncodingError U+B0DA");
expect(() => {ms932Encoder.encode("\uB0DB")}).to.throw(Error, "EncodingError U+B0DB");
expect(() => {ms932Encoder.encode("\uB0DC")}).to.throw(Error, "EncodingError U+B0DC");
expect(() => {ms932Encoder.encode("\uB0DD")}).to.throw(Error, "EncodingError U+B0DD");
expect(() => {ms932Encoder.encode("\uB0DE")}).to.throw(Error, "EncodingError U+B0DE");
expect(() => {ms932Encoder.encode("\uB0DF")}).to.throw(Error, "EncodingError U+B0DF");
expect(() => {ms932Encoder.encode("\uB0E0")}).to.throw(Error, "EncodingError U+B0E0");
expect(() => {ms932Encoder.encode("\uB0E1")}).to.throw(Error, "EncodingError U+B0E1");
expect(() => {ms932Encoder.encode("\uB0E2")}).to.throw(Error, "EncodingError U+B0E2");
expect(() => {ms932Encoder.encode("\uB0E3")}).to.throw(Error, "EncodingError U+B0E3");
expect(() => {ms932Encoder.encode("\uB0E4")}).to.throw(Error, "EncodingError U+B0E4");
expect(() => {ms932Encoder.encode("\uB0E5")}).to.throw(Error, "EncodingError U+B0E5");
expect(() => {ms932Encoder.encode("\uB0E6")}).to.throw(Error, "EncodingError U+B0E6");
expect(() => {ms932Encoder.encode("\uB0E7")}).to.throw(Error, "EncodingError U+B0E7");
expect(() => {ms932Encoder.encode("\uB0E8")}).to.throw(Error, "EncodingError U+B0E8");
expect(() => {ms932Encoder.encode("\uB0E9")}).to.throw(Error, "EncodingError U+B0E9");
expect(() => {ms932Encoder.encode("\uB0EA")}).to.throw(Error, "EncodingError U+B0EA");
expect(() => {ms932Encoder.encode("\uB0EB")}).to.throw(Error, "EncodingError U+B0EB");
expect(() => {ms932Encoder.encode("\uB0EC")}).to.throw(Error, "EncodingError U+B0EC");
expect(() => {ms932Encoder.encode("\uB0ED")}).to.throw(Error, "EncodingError U+B0ED");
expect(() => {ms932Encoder.encode("\uB0EE")}).to.throw(Error, "EncodingError U+B0EE");
expect(() => {ms932Encoder.encode("\uB0EF")}).to.throw(Error, "EncodingError U+B0EF");
expect(() => {ms932Encoder.encode("\uB0F0")}).to.throw(Error, "EncodingError U+B0F0");
expect(() => {ms932Encoder.encode("\uB0F1")}).to.throw(Error, "EncodingError U+B0F1");
expect(() => {ms932Encoder.encode("\uB0F2")}).to.throw(Error, "EncodingError U+B0F2");
expect(() => {ms932Encoder.encode("\uB0F3")}).to.throw(Error, "EncodingError U+B0F3");
expect(() => {ms932Encoder.encode("\uB0F4")}).to.throw(Error, "EncodingError U+B0F4");
expect(() => {ms932Encoder.encode("\uB0F5")}).to.throw(Error, "EncodingError U+B0F5");
expect(() => {ms932Encoder.encode("\uB0F6")}).to.throw(Error, "EncodingError U+B0F6");
expect(() => {ms932Encoder.encode("\uB0F7")}).to.throw(Error, "EncodingError U+B0F7");
expect(() => {ms932Encoder.encode("\uB0F8")}).to.throw(Error, "EncodingError U+B0F8");
expect(() => {ms932Encoder.encode("\uB0F9")}).to.throw(Error, "EncodingError U+B0F9");
expect(() => {ms932Encoder.encode("\uB0FA")}).to.throw(Error, "EncodingError U+B0FA");
expect(() => {ms932Encoder.encode("\uB0FB")}).to.throw(Error, "EncodingError U+B0FB");
expect(() => {ms932Encoder.encode("\uB0FC")}).to.throw(Error, "EncodingError U+B0FC");
expect(() => {ms932Encoder.encode("\uB0FD")}).to.throw(Error, "EncodingError U+B0FD");
expect(() => {ms932Encoder.encode("\uB0FE")}).to.throw(Error, "EncodingError U+B0FE");
expect(() => {ms932Encoder.encode("\uB0FF")}).to.throw(Error, "EncodingError U+B0FF");
expect(() => {ms932Encoder.encode("\uB100")}).to.throw(Error, "EncodingError U+B100");
expect(() => {ms932Encoder.encode("\uB101")}).to.throw(Error, "EncodingError U+B101");
expect(() => {ms932Encoder.encode("\uB102")}).to.throw(Error, "EncodingError U+B102");
expect(() => {ms932Encoder.encode("\uB103")}).to.throw(Error, "EncodingError U+B103");
expect(() => {ms932Encoder.encode("\uB104")}).to.throw(Error, "EncodingError U+B104");
expect(() => {ms932Encoder.encode("\uB105")}).to.throw(Error, "EncodingError U+B105");
expect(() => {ms932Encoder.encode("\uB106")}).to.throw(Error, "EncodingError U+B106");
expect(() => {ms932Encoder.encode("\uB107")}).to.throw(Error, "EncodingError U+B107");
expect(() => {ms932Encoder.encode("\uB108")}).to.throw(Error, "EncodingError U+B108");
expect(() => {ms932Encoder.encode("\uB109")}).to.throw(Error, "EncodingError U+B109");
expect(() => {ms932Encoder.encode("\uB10A")}).to.throw(Error, "EncodingError U+B10A");
expect(() => {ms932Encoder.encode("\uB10B")}).to.throw(Error, "EncodingError U+B10B");
expect(() => {ms932Encoder.encode("\uB10C")}).to.throw(Error, "EncodingError U+B10C");
expect(() => {ms932Encoder.encode("\uB10D")}).to.throw(Error, "EncodingError U+B10D");
expect(() => {ms932Encoder.encode("\uB10E")}).to.throw(Error, "EncodingError U+B10E");
expect(() => {ms932Encoder.encode("\uB10F")}).to.throw(Error, "EncodingError U+B10F");
expect(() => {ms932Encoder.encode("\uB110")}).to.throw(Error, "EncodingError U+B110");
expect(() => {ms932Encoder.encode("\uB111")}).to.throw(Error, "EncodingError U+B111");
expect(() => {ms932Encoder.encode("\uB112")}).to.throw(Error, "EncodingError U+B112");
expect(() => {ms932Encoder.encode("\uB113")}).to.throw(Error, "EncodingError U+B113");
expect(() => {ms932Encoder.encode("\uB114")}).to.throw(Error, "EncodingError U+B114");
expect(() => {ms932Encoder.encode("\uB115")}).to.throw(Error, "EncodingError U+B115");
expect(() => {ms932Encoder.encode("\uB116")}).to.throw(Error, "EncodingError U+B116");
expect(() => {ms932Encoder.encode("\uB117")}).to.throw(Error, "EncodingError U+B117");
expect(() => {ms932Encoder.encode("\uB118")}).to.throw(Error, "EncodingError U+B118");
expect(() => {ms932Encoder.encode("\uB119")}).to.throw(Error, "EncodingError U+B119");
expect(() => {ms932Encoder.encode("\uB11A")}).to.throw(Error, "EncodingError U+B11A");
expect(() => {ms932Encoder.encode("\uB11B")}).to.throw(Error, "EncodingError U+B11B");
expect(() => {ms932Encoder.encode("\uB11C")}).to.throw(Error, "EncodingError U+B11C");
expect(() => {ms932Encoder.encode("\uB11D")}).to.throw(Error, "EncodingError U+B11D");
expect(() => {ms932Encoder.encode("\uB11E")}).to.throw(Error, "EncodingError U+B11E");
expect(() => {ms932Encoder.encode("\uB11F")}).to.throw(Error, "EncodingError U+B11F");
expect(() => {ms932Encoder.encode("\uB120")}).to.throw(Error, "EncodingError U+B120");
expect(() => {ms932Encoder.encode("\uB121")}).to.throw(Error, "EncodingError U+B121");
expect(() => {ms932Encoder.encode("\uB122")}).to.throw(Error, "EncodingError U+B122");
expect(() => {ms932Encoder.encode("\uB123")}).to.throw(Error, "EncodingError U+B123");
expect(() => {ms932Encoder.encode("\uB124")}).to.throw(Error, "EncodingError U+B124");
expect(() => {ms932Encoder.encode("\uB125")}).to.throw(Error, "EncodingError U+B125");
expect(() => {ms932Encoder.encode("\uB126")}).to.throw(Error, "EncodingError U+B126");
expect(() => {ms932Encoder.encode("\uB127")}).to.throw(Error, "EncodingError U+B127");
expect(() => {ms932Encoder.encode("\uB128")}).to.throw(Error, "EncodingError U+B128");
expect(() => {ms932Encoder.encode("\uB129")}).to.throw(Error, "EncodingError U+B129");
expect(() => {ms932Encoder.encode("\uB12A")}).to.throw(Error, "EncodingError U+B12A");
expect(() => {ms932Encoder.encode("\uB12B")}).to.throw(Error, "EncodingError U+B12B");
expect(() => {ms932Encoder.encode("\uB12C")}).to.throw(Error, "EncodingError U+B12C");
expect(() => {ms932Encoder.encode("\uB12D")}).to.throw(Error, "EncodingError U+B12D");
expect(() => {ms932Encoder.encode("\uB12E")}).to.throw(Error, "EncodingError U+B12E");
expect(() => {ms932Encoder.encode("\uB12F")}).to.throw(Error, "EncodingError U+B12F");
expect(() => {ms932Encoder.encode("\uB130")}).to.throw(Error, "EncodingError U+B130");
expect(() => {ms932Encoder.encode("\uB131")}).to.throw(Error, "EncodingError U+B131");
expect(() => {ms932Encoder.encode("\uB132")}).to.throw(Error, "EncodingError U+B132");
expect(() => {ms932Encoder.encode("\uB133")}).to.throw(Error, "EncodingError U+B133");
expect(() => {ms932Encoder.encode("\uB134")}).to.throw(Error, "EncodingError U+B134");
expect(() => {ms932Encoder.encode("\uB135")}).to.throw(Error, "EncodingError U+B135");
expect(() => {ms932Encoder.encode("\uB136")}).to.throw(Error, "EncodingError U+B136");
expect(() => {ms932Encoder.encode("\uB137")}).to.throw(Error, "EncodingError U+B137");
expect(() => {ms932Encoder.encode("\uB138")}).to.throw(Error, "EncodingError U+B138");
expect(() => {ms932Encoder.encode("\uB139")}).to.throw(Error, "EncodingError U+B139");
expect(() => {ms932Encoder.encode("\uB13A")}).to.throw(Error, "EncodingError U+B13A");
expect(() => {ms932Encoder.encode("\uB13B")}).to.throw(Error, "EncodingError U+B13B");
expect(() => {ms932Encoder.encode("\uB13C")}).to.throw(Error, "EncodingError U+B13C");
expect(() => {ms932Encoder.encode("\uB13D")}).to.throw(Error, "EncodingError U+B13D");
expect(() => {ms932Encoder.encode("\uB13E")}).to.throw(Error, "EncodingError U+B13E");
expect(() => {ms932Encoder.encode("\uB13F")}).to.throw(Error, "EncodingError U+B13F");
expect(() => {ms932Encoder.encode("\uB140")}).to.throw(Error, "EncodingError U+B140");
expect(() => {ms932Encoder.encode("\uB141")}).to.throw(Error, "EncodingError U+B141");
expect(() => {ms932Encoder.encode("\uB142")}).to.throw(Error, "EncodingError U+B142");
expect(() => {ms932Encoder.encode("\uB143")}).to.throw(Error, "EncodingError U+B143");
expect(() => {ms932Encoder.encode("\uB144")}).to.throw(Error, "EncodingError U+B144");
expect(() => {ms932Encoder.encode("\uB145")}).to.throw(Error, "EncodingError U+B145");
expect(() => {ms932Encoder.encode("\uB146")}).to.throw(Error, "EncodingError U+B146");
expect(() => {ms932Encoder.encode("\uB147")}).to.throw(Error, "EncodingError U+B147");
expect(() => {ms932Encoder.encode("\uB148")}).to.throw(Error, "EncodingError U+B148");
expect(() => {ms932Encoder.encode("\uB149")}).to.throw(Error, "EncodingError U+B149");
expect(() => {ms932Encoder.encode("\uB14A")}).to.throw(Error, "EncodingError U+B14A");
expect(() => {ms932Encoder.encode("\uB14B")}).to.throw(Error, "EncodingError U+B14B");
expect(() => {ms932Encoder.encode("\uB14C")}).to.throw(Error, "EncodingError U+B14C");
expect(() => {ms932Encoder.encode("\uB14D")}).to.throw(Error, "EncodingError U+B14D");
expect(() => {ms932Encoder.encode("\uB14E")}).to.throw(Error, "EncodingError U+B14E");
expect(() => {ms932Encoder.encode("\uB14F")}).to.throw(Error, "EncodingError U+B14F");
expect(() => {ms932Encoder.encode("\uB150")}).to.throw(Error, "EncodingError U+B150");
expect(() => {ms932Encoder.encode("\uB151")}).to.throw(Error, "EncodingError U+B151");
expect(() => {ms932Encoder.encode("\uB152")}).to.throw(Error, "EncodingError U+B152");
expect(() => {ms932Encoder.encode("\uB153")}).to.throw(Error, "EncodingError U+B153");
expect(() => {ms932Encoder.encode("\uB154")}).to.throw(Error, "EncodingError U+B154");
expect(() => {ms932Encoder.encode("\uB155")}).to.throw(Error, "EncodingError U+B155");
expect(() => {ms932Encoder.encode("\uB156")}).to.throw(Error, "EncodingError U+B156");
expect(() => {ms932Encoder.encode("\uB157")}).to.throw(Error, "EncodingError U+B157");
expect(() => {ms932Encoder.encode("\uB158")}).to.throw(Error, "EncodingError U+B158");
expect(() => {ms932Encoder.encode("\uB159")}).to.throw(Error, "EncodingError U+B159");
expect(() => {ms932Encoder.encode("\uB15A")}).to.throw(Error, "EncodingError U+B15A");
expect(() => {ms932Encoder.encode("\uB15B")}).to.throw(Error, "EncodingError U+B15B");
expect(() => {ms932Encoder.encode("\uB15C")}).to.throw(Error, "EncodingError U+B15C");
expect(() => {ms932Encoder.encode("\uB15D")}).to.throw(Error, "EncodingError U+B15D");
expect(() => {ms932Encoder.encode("\uB15E")}).to.throw(Error, "EncodingError U+B15E");
expect(() => {ms932Encoder.encode("\uB15F")}).to.throw(Error, "EncodingError U+B15F");
expect(() => {ms932Encoder.encode("\uB160")}).to.throw(Error, "EncodingError U+B160");
expect(() => {ms932Encoder.encode("\uB161")}).to.throw(Error, "EncodingError U+B161");
expect(() => {ms932Encoder.encode("\uB162")}).to.throw(Error, "EncodingError U+B162");
expect(() => {ms932Encoder.encode("\uB163")}).to.throw(Error, "EncodingError U+B163");
expect(() => {ms932Encoder.encode("\uB164")}).to.throw(Error, "EncodingError U+B164");
expect(() => {ms932Encoder.encode("\uB165")}).to.throw(Error, "EncodingError U+B165");
expect(() => {ms932Encoder.encode("\uB166")}).to.throw(Error, "EncodingError U+B166");
expect(() => {ms932Encoder.encode("\uB167")}).to.throw(Error, "EncodingError U+B167");
expect(() => {ms932Encoder.encode("\uB168")}).to.throw(Error, "EncodingError U+B168");
expect(() => {ms932Encoder.encode("\uB169")}).to.throw(Error, "EncodingError U+B169");
expect(() => {ms932Encoder.encode("\uB16A")}).to.throw(Error, "EncodingError U+B16A");
expect(() => {ms932Encoder.encode("\uB16B")}).to.throw(Error, "EncodingError U+B16B");
expect(() => {ms932Encoder.encode("\uB16C")}).to.throw(Error, "EncodingError U+B16C");
expect(() => {ms932Encoder.encode("\uB16D")}).to.throw(Error, "EncodingError U+B16D");
expect(() => {ms932Encoder.encode("\uB16E")}).to.throw(Error, "EncodingError U+B16E");
expect(() => {ms932Encoder.encode("\uB16F")}).to.throw(Error, "EncodingError U+B16F");
expect(() => {ms932Encoder.encode("\uB170")}).to.throw(Error, "EncodingError U+B170");
expect(() => {ms932Encoder.encode("\uB171")}).to.throw(Error, "EncodingError U+B171");
expect(() => {ms932Encoder.encode("\uB172")}).to.throw(Error, "EncodingError U+B172");
expect(() => {ms932Encoder.encode("\uB173")}).to.throw(Error, "EncodingError U+B173");
expect(() => {ms932Encoder.encode("\uB174")}).to.throw(Error, "EncodingError U+B174");
expect(() => {ms932Encoder.encode("\uB175")}).to.throw(Error, "EncodingError U+B175");
expect(() => {ms932Encoder.encode("\uB176")}).to.throw(Error, "EncodingError U+B176");
expect(() => {ms932Encoder.encode("\uB177")}).to.throw(Error, "EncodingError U+B177");
expect(() => {ms932Encoder.encode("\uB178")}).to.throw(Error, "EncodingError U+B178");
expect(() => {ms932Encoder.encode("\uB179")}).to.throw(Error, "EncodingError U+B179");
expect(() => {ms932Encoder.encode("\uB17A")}).to.throw(Error, "EncodingError U+B17A");
expect(() => {ms932Encoder.encode("\uB17B")}).to.throw(Error, "EncodingError U+B17B");
expect(() => {ms932Encoder.encode("\uB17C")}).to.throw(Error, "EncodingError U+B17C");
expect(() => {ms932Encoder.encode("\uB17D")}).to.throw(Error, "EncodingError U+B17D");
expect(() => {ms932Encoder.encode("\uB17E")}).to.throw(Error, "EncodingError U+B17E");
expect(() => {ms932Encoder.encode("\uB17F")}).to.throw(Error, "EncodingError U+B17F");
expect(() => {ms932Encoder.encode("\uB180")}).to.throw(Error, "EncodingError U+B180");
expect(() => {ms932Encoder.encode("\uB181")}).to.throw(Error, "EncodingError U+B181");
expect(() => {ms932Encoder.encode("\uB182")}).to.throw(Error, "EncodingError U+B182");
expect(() => {ms932Encoder.encode("\uB183")}).to.throw(Error, "EncodingError U+B183");
expect(() => {ms932Encoder.encode("\uB184")}).to.throw(Error, "EncodingError U+B184");
expect(() => {ms932Encoder.encode("\uB185")}).to.throw(Error, "EncodingError U+B185");
expect(() => {ms932Encoder.encode("\uB186")}).to.throw(Error, "EncodingError U+B186");
expect(() => {ms932Encoder.encode("\uB187")}).to.throw(Error, "EncodingError U+B187");
expect(() => {ms932Encoder.encode("\uB188")}).to.throw(Error, "EncodingError U+B188");
expect(() => {ms932Encoder.encode("\uB189")}).to.throw(Error, "EncodingError U+B189");
expect(() => {ms932Encoder.encode("\uB18A")}).to.throw(Error, "EncodingError U+B18A");
expect(() => {ms932Encoder.encode("\uB18B")}).to.throw(Error, "EncodingError U+B18B");
expect(() => {ms932Encoder.encode("\uB18C")}).to.throw(Error, "EncodingError U+B18C");
expect(() => {ms932Encoder.encode("\uB18D")}).to.throw(Error, "EncodingError U+B18D");
expect(() => {ms932Encoder.encode("\uB18E")}).to.throw(Error, "EncodingError U+B18E");
expect(() => {ms932Encoder.encode("\uB18F")}).to.throw(Error, "EncodingError U+B18F");
expect(() => {ms932Encoder.encode("\uB190")}).to.throw(Error, "EncodingError U+B190");
expect(() => {ms932Encoder.encode("\uB191")}).to.throw(Error, "EncodingError U+B191");
expect(() => {ms932Encoder.encode("\uB192")}).to.throw(Error, "EncodingError U+B192");
expect(() => {ms932Encoder.encode("\uB193")}).to.throw(Error, "EncodingError U+B193");
expect(() => {ms932Encoder.encode("\uB194")}).to.throw(Error, "EncodingError U+B194");
expect(() => {ms932Encoder.encode("\uB195")}).to.throw(Error, "EncodingError U+B195");
expect(() => {ms932Encoder.encode("\uB196")}).to.throw(Error, "EncodingError U+B196");
expect(() => {ms932Encoder.encode("\uB197")}).to.throw(Error, "EncodingError U+B197");
expect(() => {ms932Encoder.encode("\uB198")}).to.throw(Error, "EncodingError U+B198");
expect(() => {ms932Encoder.encode("\uB199")}).to.throw(Error, "EncodingError U+B199");
expect(() => {ms932Encoder.encode("\uB19A")}).to.throw(Error, "EncodingError U+B19A");
expect(() => {ms932Encoder.encode("\uB19B")}).to.throw(Error, "EncodingError U+B19B");
expect(() => {ms932Encoder.encode("\uB19C")}).to.throw(Error, "EncodingError U+B19C");
expect(() => {ms932Encoder.encode("\uB19D")}).to.throw(Error, "EncodingError U+B19D");
expect(() => {ms932Encoder.encode("\uB19E")}).to.throw(Error, "EncodingError U+B19E");
expect(() => {ms932Encoder.encode("\uB19F")}).to.throw(Error, "EncodingError U+B19F");
expect(() => {ms932Encoder.encode("\uB1A0")}).to.throw(Error, "EncodingError U+B1A0");
expect(() => {ms932Encoder.encode("\uB1A1")}).to.throw(Error, "EncodingError U+B1A1");
expect(() => {ms932Encoder.encode("\uB1A2")}).to.throw(Error, "EncodingError U+B1A2");
expect(() => {ms932Encoder.encode("\uB1A3")}).to.throw(Error, "EncodingError U+B1A3");
expect(() => {ms932Encoder.encode("\uB1A4")}).to.throw(Error, "EncodingError U+B1A4");
expect(() => {ms932Encoder.encode("\uB1A5")}).to.throw(Error, "EncodingError U+B1A5");
expect(() => {ms932Encoder.encode("\uB1A6")}).to.throw(Error, "EncodingError U+B1A6");
expect(() => {ms932Encoder.encode("\uB1A7")}).to.throw(Error, "EncodingError U+B1A7");
expect(() => {ms932Encoder.encode("\uB1A8")}).to.throw(Error, "EncodingError U+B1A8");
expect(() => {ms932Encoder.encode("\uB1A9")}).to.throw(Error, "EncodingError U+B1A9");
expect(() => {ms932Encoder.encode("\uB1AA")}).to.throw(Error, "EncodingError U+B1AA");
expect(() => {ms932Encoder.encode("\uB1AB")}).to.throw(Error, "EncodingError U+B1AB");
expect(() => {ms932Encoder.encode("\uB1AC")}).to.throw(Error, "EncodingError U+B1AC");
expect(() => {ms932Encoder.encode("\uB1AD")}).to.throw(Error, "EncodingError U+B1AD");
expect(() => {ms932Encoder.encode("\uB1AE")}).to.throw(Error, "EncodingError U+B1AE");
expect(() => {ms932Encoder.encode("\uB1AF")}).to.throw(Error, "EncodingError U+B1AF");
expect(() => {ms932Encoder.encode("\uB1B0")}).to.throw(Error, "EncodingError U+B1B0");
expect(() => {ms932Encoder.encode("\uB1B1")}).to.throw(Error, "EncodingError U+B1B1");
expect(() => {ms932Encoder.encode("\uB1B2")}).to.throw(Error, "EncodingError U+B1B2");
expect(() => {ms932Encoder.encode("\uB1B3")}).to.throw(Error, "EncodingError U+B1B3");
expect(() => {ms932Encoder.encode("\uB1B4")}).to.throw(Error, "EncodingError U+B1B4");
expect(() => {ms932Encoder.encode("\uB1B5")}).to.throw(Error, "EncodingError U+B1B5");
expect(() => {ms932Encoder.encode("\uB1B6")}).to.throw(Error, "EncodingError U+B1B6");
expect(() => {ms932Encoder.encode("\uB1B7")}).to.throw(Error, "EncodingError U+B1B7");
expect(() => {ms932Encoder.encode("\uB1B8")}).to.throw(Error, "EncodingError U+B1B8");
expect(() => {ms932Encoder.encode("\uB1B9")}).to.throw(Error, "EncodingError U+B1B9");
expect(() => {ms932Encoder.encode("\uB1BA")}).to.throw(Error, "EncodingError U+B1BA");
expect(() => {ms932Encoder.encode("\uB1BB")}).to.throw(Error, "EncodingError U+B1BB");
expect(() => {ms932Encoder.encode("\uB1BC")}).to.throw(Error, "EncodingError U+B1BC");
expect(() => {ms932Encoder.encode("\uB1BD")}).to.throw(Error, "EncodingError U+B1BD");
expect(() => {ms932Encoder.encode("\uB1BE")}).to.throw(Error, "EncodingError U+B1BE");
expect(() => {ms932Encoder.encode("\uB1BF")}).to.throw(Error, "EncodingError U+B1BF");
expect(() => {ms932Encoder.encode("\uB1C0")}).to.throw(Error, "EncodingError U+B1C0");
expect(() => {ms932Encoder.encode("\uB1C1")}).to.throw(Error, "EncodingError U+B1C1");
expect(() => {ms932Encoder.encode("\uB1C2")}).to.throw(Error, "EncodingError U+B1C2");
expect(() => {ms932Encoder.encode("\uB1C3")}).to.throw(Error, "EncodingError U+B1C3");
expect(() => {ms932Encoder.encode("\uB1C4")}).to.throw(Error, "EncodingError U+B1C4");
expect(() => {ms932Encoder.encode("\uB1C5")}).to.throw(Error, "EncodingError U+B1C5");
expect(() => {ms932Encoder.encode("\uB1C6")}).to.throw(Error, "EncodingError U+B1C6");
expect(() => {ms932Encoder.encode("\uB1C7")}).to.throw(Error, "EncodingError U+B1C7");
expect(() => {ms932Encoder.encode("\uB1C8")}).to.throw(Error, "EncodingError U+B1C8");
expect(() => {ms932Encoder.encode("\uB1C9")}).to.throw(Error, "EncodingError U+B1C9");
expect(() => {ms932Encoder.encode("\uB1CA")}).to.throw(Error, "EncodingError U+B1CA");
expect(() => {ms932Encoder.encode("\uB1CB")}).to.throw(Error, "EncodingError U+B1CB");
expect(() => {ms932Encoder.encode("\uB1CC")}).to.throw(Error, "EncodingError U+B1CC");
expect(() => {ms932Encoder.encode("\uB1CD")}).to.throw(Error, "EncodingError U+B1CD");
expect(() => {ms932Encoder.encode("\uB1CE")}).to.throw(Error, "EncodingError U+B1CE");
expect(() => {ms932Encoder.encode("\uB1CF")}).to.throw(Error, "EncodingError U+B1CF");
expect(() => {ms932Encoder.encode("\uB1D0")}).to.throw(Error, "EncodingError U+B1D0");
expect(() => {ms932Encoder.encode("\uB1D1")}).to.throw(Error, "EncodingError U+B1D1");
expect(() => {ms932Encoder.encode("\uB1D2")}).to.throw(Error, "EncodingError U+B1D2");
expect(() => {ms932Encoder.encode("\uB1D3")}).to.throw(Error, "EncodingError U+B1D3");
expect(() => {ms932Encoder.encode("\uB1D4")}).to.throw(Error, "EncodingError U+B1D4");
expect(() => {ms932Encoder.encode("\uB1D5")}).to.throw(Error, "EncodingError U+B1D5");
expect(() => {ms932Encoder.encode("\uB1D6")}).to.throw(Error, "EncodingError U+B1D6");
expect(() => {ms932Encoder.encode("\uB1D7")}).to.throw(Error, "EncodingError U+B1D7");
expect(() => {ms932Encoder.encode("\uB1D8")}).to.throw(Error, "EncodingError U+B1D8");
expect(() => {ms932Encoder.encode("\uB1D9")}).to.throw(Error, "EncodingError U+B1D9");
expect(() => {ms932Encoder.encode("\uB1DA")}).to.throw(Error, "EncodingError U+B1DA");
expect(() => {ms932Encoder.encode("\uB1DB")}).to.throw(Error, "EncodingError U+B1DB");
expect(() => {ms932Encoder.encode("\uB1DC")}).to.throw(Error, "EncodingError U+B1DC");
expect(() => {ms932Encoder.encode("\uB1DD")}).to.throw(Error, "EncodingError U+B1DD");
expect(() => {ms932Encoder.encode("\uB1DE")}).to.throw(Error, "EncodingError U+B1DE");
expect(() => {ms932Encoder.encode("\uB1DF")}).to.throw(Error, "EncodingError U+B1DF");
expect(() => {ms932Encoder.encode("\uB1E0")}).to.throw(Error, "EncodingError U+B1E0");
expect(() => {ms932Encoder.encode("\uB1E1")}).to.throw(Error, "EncodingError U+B1E1");
expect(() => {ms932Encoder.encode("\uB1E2")}).to.throw(Error, "EncodingError U+B1E2");
expect(() => {ms932Encoder.encode("\uB1E3")}).to.throw(Error, "EncodingError U+B1E3");
expect(() => {ms932Encoder.encode("\uB1E4")}).to.throw(Error, "EncodingError U+B1E4");
expect(() => {ms932Encoder.encode("\uB1E5")}).to.throw(Error, "EncodingError U+B1E5");
expect(() => {ms932Encoder.encode("\uB1E6")}).to.throw(Error, "EncodingError U+B1E6");
expect(() => {ms932Encoder.encode("\uB1E7")}).to.throw(Error, "EncodingError U+B1E7");
expect(() => {ms932Encoder.encode("\uB1E8")}).to.throw(Error, "EncodingError U+B1E8");
expect(() => {ms932Encoder.encode("\uB1E9")}).to.throw(Error, "EncodingError U+B1E9");
expect(() => {ms932Encoder.encode("\uB1EA")}).to.throw(Error, "EncodingError U+B1EA");
expect(() => {ms932Encoder.encode("\uB1EB")}).to.throw(Error, "EncodingError U+B1EB");
expect(() => {ms932Encoder.encode("\uB1EC")}).to.throw(Error, "EncodingError U+B1EC");
expect(() => {ms932Encoder.encode("\uB1ED")}).to.throw(Error, "EncodingError U+B1ED");
expect(() => {ms932Encoder.encode("\uB1EE")}).to.throw(Error, "EncodingError U+B1EE");
expect(() => {ms932Encoder.encode("\uB1EF")}).to.throw(Error, "EncodingError U+B1EF");
expect(() => {ms932Encoder.encode("\uB1F0")}).to.throw(Error, "EncodingError U+B1F0");
expect(() => {ms932Encoder.encode("\uB1F1")}).to.throw(Error, "EncodingError U+B1F1");
expect(() => {ms932Encoder.encode("\uB1F2")}).to.throw(Error, "EncodingError U+B1F2");
expect(() => {ms932Encoder.encode("\uB1F3")}).to.throw(Error, "EncodingError U+B1F3");
expect(() => {ms932Encoder.encode("\uB1F4")}).to.throw(Error, "EncodingError U+B1F4");
expect(() => {ms932Encoder.encode("\uB1F5")}).to.throw(Error, "EncodingError U+B1F5");
expect(() => {ms932Encoder.encode("\uB1F6")}).to.throw(Error, "EncodingError U+B1F6");
expect(() => {ms932Encoder.encode("\uB1F7")}).to.throw(Error, "EncodingError U+B1F7");
expect(() => {ms932Encoder.encode("\uB1F8")}).to.throw(Error, "EncodingError U+B1F8");
expect(() => {ms932Encoder.encode("\uB1F9")}).to.throw(Error, "EncodingError U+B1F9");
expect(() => {ms932Encoder.encode("\uB1FA")}).to.throw(Error, "EncodingError U+B1FA");
expect(() => {ms932Encoder.encode("\uB1FB")}).to.throw(Error, "EncodingError U+B1FB");
expect(() => {ms932Encoder.encode("\uB1FC")}).to.throw(Error, "EncodingError U+B1FC");
expect(() => {ms932Encoder.encode("\uB1FD")}).to.throw(Error, "EncodingError U+B1FD");
expect(() => {ms932Encoder.encode("\uB1FE")}).to.throw(Error, "EncodingError U+B1FE");
expect(() => {ms932Encoder.encode("\uB1FF")}).to.throw(Error, "EncodingError U+B1FF");
expect(() => {ms932Encoder.encode("\uB200")}).to.throw(Error, "EncodingError U+B200");
expect(() => {ms932Encoder.encode("\uB201")}).to.throw(Error, "EncodingError U+B201");
expect(() => {ms932Encoder.encode("\uB202")}).to.throw(Error, "EncodingError U+B202");
expect(() => {ms932Encoder.encode("\uB203")}).to.throw(Error, "EncodingError U+B203");
expect(() => {ms932Encoder.encode("\uB204")}).to.throw(Error, "EncodingError U+B204");
expect(() => {ms932Encoder.encode("\uB205")}).to.throw(Error, "EncodingError U+B205");
expect(() => {ms932Encoder.encode("\uB206")}).to.throw(Error, "EncodingError U+B206");
expect(() => {ms932Encoder.encode("\uB207")}).to.throw(Error, "EncodingError U+B207");
expect(() => {ms932Encoder.encode("\uB208")}).to.throw(Error, "EncodingError U+B208");
expect(() => {ms932Encoder.encode("\uB209")}).to.throw(Error, "EncodingError U+B209");
expect(() => {ms932Encoder.encode("\uB20A")}).to.throw(Error, "EncodingError U+B20A");
expect(() => {ms932Encoder.encode("\uB20B")}).to.throw(Error, "EncodingError U+B20B");
expect(() => {ms932Encoder.encode("\uB20C")}).to.throw(Error, "EncodingError U+B20C");
expect(() => {ms932Encoder.encode("\uB20D")}).to.throw(Error, "EncodingError U+B20D");
expect(() => {ms932Encoder.encode("\uB20E")}).to.throw(Error, "EncodingError U+B20E");
expect(() => {ms932Encoder.encode("\uB20F")}).to.throw(Error, "EncodingError U+B20F");
expect(() => {ms932Encoder.encode("\uB210")}).to.throw(Error, "EncodingError U+B210");
expect(() => {ms932Encoder.encode("\uB211")}).to.throw(Error, "EncodingError U+B211");
expect(() => {ms932Encoder.encode("\uB212")}).to.throw(Error, "EncodingError U+B212");
expect(() => {ms932Encoder.encode("\uB213")}).to.throw(Error, "EncodingError U+B213");
expect(() => {ms932Encoder.encode("\uB214")}).to.throw(Error, "EncodingError U+B214");
expect(() => {ms932Encoder.encode("\uB215")}).to.throw(Error, "EncodingError U+B215");
expect(() => {ms932Encoder.encode("\uB216")}).to.throw(Error, "EncodingError U+B216");
expect(() => {ms932Encoder.encode("\uB217")}).to.throw(Error, "EncodingError U+B217");
expect(() => {ms932Encoder.encode("\uB218")}).to.throw(Error, "EncodingError U+B218");
expect(() => {ms932Encoder.encode("\uB219")}).to.throw(Error, "EncodingError U+B219");
expect(() => {ms932Encoder.encode("\uB21A")}).to.throw(Error, "EncodingError U+B21A");
expect(() => {ms932Encoder.encode("\uB21B")}).to.throw(Error, "EncodingError U+B21B");
expect(() => {ms932Encoder.encode("\uB21C")}).to.throw(Error, "EncodingError U+B21C");
expect(() => {ms932Encoder.encode("\uB21D")}).to.throw(Error, "EncodingError U+B21D");
expect(() => {ms932Encoder.encode("\uB21E")}).to.throw(Error, "EncodingError U+B21E");
expect(() => {ms932Encoder.encode("\uB21F")}).to.throw(Error, "EncodingError U+B21F");
expect(() => {ms932Encoder.encode("\uB220")}).to.throw(Error, "EncodingError U+B220");
expect(() => {ms932Encoder.encode("\uB221")}).to.throw(Error, "EncodingError U+B221");
expect(() => {ms932Encoder.encode("\uB222")}).to.throw(Error, "EncodingError U+B222");
expect(() => {ms932Encoder.encode("\uB223")}).to.throw(Error, "EncodingError U+B223");
expect(() => {ms932Encoder.encode("\uB224")}).to.throw(Error, "EncodingError U+B224");
expect(() => {ms932Encoder.encode("\uB225")}).to.throw(Error, "EncodingError U+B225");
expect(() => {ms932Encoder.encode("\uB226")}).to.throw(Error, "EncodingError U+B226");
expect(() => {ms932Encoder.encode("\uB227")}).to.throw(Error, "EncodingError U+B227");
expect(() => {ms932Encoder.encode("\uB228")}).to.throw(Error, "EncodingError U+B228");
expect(() => {ms932Encoder.encode("\uB229")}).to.throw(Error, "EncodingError U+B229");
expect(() => {ms932Encoder.encode("\uB22A")}).to.throw(Error, "EncodingError U+B22A");
expect(() => {ms932Encoder.encode("\uB22B")}).to.throw(Error, "EncodingError U+B22B");
expect(() => {ms932Encoder.encode("\uB22C")}).to.throw(Error, "EncodingError U+B22C");
expect(() => {ms932Encoder.encode("\uB22D")}).to.throw(Error, "EncodingError U+B22D");
expect(() => {ms932Encoder.encode("\uB22E")}).to.throw(Error, "EncodingError U+B22E");
expect(() => {ms932Encoder.encode("\uB22F")}).to.throw(Error, "EncodingError U+B22F");
expect(() => {ms932Encoder.encode("\uB230")}).to.throw(Error, "EncodingError U+B230");
expect(() => {ms932Encoder.encode("\uB231")}).to.throw(Error, "EncodingError U+B231");
expect(() => {ms932Encoder.encode("\uB232")}).to.throw(Error, "EncodingError U+B232");
expect(() => {ms932Encoder.encode("\uB233")}).to.throw(Error, "EncodingError U+B233");
expect(() => {ms932Encoder.encode("\uB234")}).to.throw(Error, "EncodingError U+B234");
expect(() => {ms932Encoder.encode("\uB235")}).to.throw(Error, "EncodingError U+B235");
expect(() => {ms932Encoder.encode("\uB236")}).to.throw(Error, "EncodingError U+B236");
expect(() => {ms932Encoder.encode("\uB237")}).to.throw(Error, "EncodingError U+B237");
expect(() => {ms932Encoder.encode("\uB238")}).to.throw(Error, "EncodingError U+B238");
expect(() => {ms932Encoder.encode("\uB239")}).to.throw(Error, "EncodingError U+B239");
expect(() => {ms932Encoder.encode("\uB23A")}).to.throw(Error, "EncodingError U+B23A");
expect(() => {ms932Encoder.encode("\uB23B")}).to.throw(Error, "EncodingError U+B23B");
expect(() => {ms932Encoder.encode("\uB23C")}).to.throw(Error, "EncodingError U+B23C");
expect(() => {ms932Encoder.encode("\uB23D")}).to.throw(Error, "EncodingError U+B23D");
expect(() => {ms932Encoder.encode("\uB23E")}).to.throw(Error, "EncodingError U+B23E");
expect(() => {ms932Encoder.encode("\uB23F")}).to.throw(Error, "EncodingError U+B23F");
expect(() => {ms932Encoder.encode("\uB240")}).to.throw(Error, "EncodingError U+B240");
expect(() => {ms932Encoder.encode("\uB241")}).to.throw(Error, "EncodingError U+B241");
expect(() => {ms932Encoder.encode("\uB242")}).to.throw(Error, "EncodingError U+B242");
expect(() => {ms932Encoder.encode("\uB243")}).to.throw(Error, "EncodingError U+B243");
expect(() => {ms932Encoder.encode("\uB244")}).to.throw(Error, "EncodingError U+B244");
expect(() => {ms932Encoder.encode("\uB245")}).to.throw(Error, "EncodingError U+B245");
expect(() => {ms932Encoder.encode("\uB246")}).to.throw(Error, "EncodingError U+B246");
expect(() => {ms932Encoder.encode("\uB247")}).to.throw(Error, "EncodingError U+B247");
expect(() => {ms932Encoder.encode("\uB248")}).to.throw(Error, "EncodingError U+B248");
expect(() => {ms932Encoder.encode("\uB249")}).to.throw(Error, "EncodingError U+B249");
expect(() => {ms932Encoder.encode("\uB24A")}).to.throw(Error, "EncodingError U+B24A");
expect(() => {ms932Encoder.encode("\uB24B")}).to.throw(Error, "EncodingError U+B24B");
expect(() => {ms932Encoder.encode("\uB24C")}).to.throw(Error, "EncodingError U+B24C");
expect(() => {ms932Encoder.encode("\uB24D")}).to.throw(Error, "EncodingError U+B24D");
expect(() => {ms932Encoder.encode("\uB24E")}).to.throw(Error, "EncodingError U+B24E");
expect(() => {ms932Encoder.encode("\uB24F")}).to.throw(Error, "EncodingError U+B24F");
expect(() => {ms932Encoder.encode("\uB250")}).to.throw(Error, "EncodingError U+B250");
expect(() => {ms932Encoder.encode("\uB251")}).to.throw(Error, "EncodingError U+B251");
expect(() => {ms932Encoder.encode("\uB252")}).to.throw(Error, "EncodingError U+B252");
expect(() => {ms932Encoder.encode("\uB253")}).to.throw(Error, "EncodingError U+B253");
expect(() => {ms932Encoder.encode("\uB254")}).to.throw(Error, "EncodingError U+B254");
expect(() => {ms932Encoder.encode("\uB255")}).to.throw(Error, "EncodingError U+B255");
expect(() => {ms932Encoder.encode("\uB256")}).to.throw(Error, "EncodingError U+B256");
expect(() => {ms932Encoder.encode("\uB257")}).to.throw(Error, "EncodingError U+B257");
expect(() => {ms932Encoder.encode("\uB258")}).to.throw(Error, "EncodingError U+B258");
expect(() => {ms932Encoder.encode("\uB259")}).to.throw(Error, "EncodingError U+B259");
expect(() => {ms932Encoder.encode("\uB25A")}).to.throw(Error, "EncodingError U+B25A");
expect(() => {ms932Encoder.encode("\uB25B")}).to.throw(Error, "EncodingError U+B25B");
expect(() => {ms932Encoder.encode("\uB25C")}).to.throw(Error, "EncodingError U+B25C");
expect(() => {ms932Encoder.encode("\uB25D")}).to.throw(Error, "EncodingError U+B25D");
expect(() => {ms932Encoder.encode("\uB25E")}).to.throw(Error, "EncodingError U+B25E");
expect(() => {ms932Encoder.encode("\uB25F")}).to.throw(Error, "EncodingError U+B25F");
expect(() => {ms932Encoder.encode("\uB260")}).to.throw(Error, "EncodingError U+B260");
expect(() => {ms932Encoder.encode("\uB261")}).to.throw(Error, "EncodingError U+B261");
expect(() => {ms932Encoder.encode("\uB262")}).to.throw(Error, "EncodingError U+B262");
expect(() => {ms932Encoder.encode("\uB263")}).to.throw(Error, "EncodingError U+B263");
expect(() => {ms932Encoder.encode("\uB264")}).to.throw(Error, "EncodingError U+B264");
expect(() => {ms932Encoder.encode("\uB265")}).to.throw(Error, "EncodingError U+B265");
expect(() => {ms932Encoder.encode("\uB266")}).to.throw(Error, "EncodingError U+B266");
expect(() => {ms932Encoder.encode("\uB267")}).to.throw(Error, "EncodingError U+B267");
expect(() => {ms932Encoder.encode("\uB268")}).to.throw(Error, "EncodingError U+B268");
expect(() => {ms932Encoder.encode("\uB269")}).to.throw(Error, "EncodingError U+B269");
expect(() => {ms932Encoder.encode("\uB26A")}).to.throw(Error, "EncodingError U+B26A");
expect(() => {ms932Encoder.encode("\uB26B")}).to.throw(Error, "EncodingError U+B26B");
expect(() => {ms932Encoder.encode("\uB26C")}).to.throw(Error, "EncodingError U+B26C");
expect(() => {ms932Encoder.encode("\uB26D")}).to.throw(Error, "EncodingError U+B26D");
expect(() => {ms932Encoder.encode("\uB26E")}).to.throw(Error, "EncodingError U+B26E");
expect(() => {ms932Encoder.encode("\uB26F")}).to.throw(Error, "EncodingError U+B26F");
expect(() => {ms932Encoder.encode("\uB270")}).to.throw(Error, "EncodingError U+B270");
expect(() => {ms932Encoder.encode("\uB271")}).to.throw(Error, "EncodingError U+B271");
expect(() => {ms932Encoder.encode("\uB272")}).to.throw(Error, "EncodingError U+B272");
expect(() => {ms932Encoder.encode("\uB273")}).to.throw(Error, "EncodingError U+B273");
expect(() => {ms932Encoder.encode("\uB274")}).to.throw(Error, "EncodingError U+B274");
expect(() => {ms932Encoder.encode("\uB275")}).to.throw(Error, "EncodingError U+B275");
expect(() => {ms932Encoder.encode("\uB276")}).to.throw(Error, "EncodingError U+B276");
expect(() => {ms932Encoder.encode("\uB277")}).to.throw(Error, "EncodingError U+B277");
expect(() => {ms932Encoder.encode("\uB278")}).to.throw(Error, "EncodingError U+B278");
expect(() => {ms932Encoder.encode("\uB279")}).to.throw(Error, "EncodingError U+B279");
expect(() => {ms932Encoder.encode("\uB27A")}).to.throw(Error, "EncodingError U+B27A");
expect(() => {ms932Encoder.encode("\uB27B")}).to.throw(Error, "EncodingError U+B27B");
expect(() => {ms932Encoder.encode("\uB27C")}).to.throw(Error, "EncodingError U+B27C");
expect(() => {ms932Encoder.encode("\uB27D")}).to.throw(Error, "EncodingError U+B27D");
expect(() => {ms932Encoder.encode("\uB27E")}).to.throw(Error, "EncodingError U+B27E");
expect(() => {ms932Encoder.encode("\uB27F")}).to.throw(Error, "EncodingError U+B27F");
expect(() => {ms932Encoder.encode("\uB280")}).to.throw(Error, "EncodingError U+B280");
expect(() => {ms932Encoder.encode("\uB281")}).to.throw(Error, "EncodingError U+B281");
expect(() => {ms932Encoder.encode("\uB282")}).to.throw(Error, "EncodingError U+B282");
expect(() => {ms932Encoder.encode("\uB283")}).to.throw(Error, "EncodingError U+B283");
expect(() => {ms932Encoder.encode("\uB284")}).to.throw(Error, "EncodingError U+B284");
expect(() => {ms932Encoder.encode("\uB285")}).to.throw(Error, "EncodingError U+B285");
expect(() => {ms932Encoder.encode("\uB286")}).to.throw(Error, "EncodingError U+B286");
expect(() => {ms932Encoder.encode("\uB287")}).to.throw(Error, "EncodingError U+B287");
expect(() => {ms932Encoder.encode("\uB288")}).to.throw(Error, "EncodingError U+B288");
expect(() => {ms932Encoder.encode("\uB289")}).to.throw(Error, "EncodingError U+B289");
expect(() => {ms932Encoder.encode("\uB28A")}).to.throw(Error, "EncodingError U+B28A");
expect(() => {ms932Encoder.encode("\uB28B")}).to.throw(Error, "EncodingError U+B28B");
expect(() => {ms932Encoder.encode("\uB28C")}).to.throw(Error, "EncodingError U+B28C");
expect(() => {ms932Encoder.encode("\uB28D")}).to.throw(Error, "EncodingError U+B28D");
expect(() => {ms932Encoder.encode("\uB28E")}).to.throw(Error, "EncodingError U+B28E");
expect(() => {ms932Encoder.encode("\uB28F")}).to.throw(Error, "EncodingError U+B28F");
expect(() => {ms932Encoder.encode("\uB290")}).to.throw(Error, "EncodingError U+B290");
expect(() => {ms932Encoder.encode("\uB291")}).to.throw(Error, "EncodingError U+B291");
expect(() => {ms932Encoder.encode("\uB292")}).to.throw(Error, "EncodingError U+B292");
expect(() => {ms932Encoder.encode("\uB293")}).to.throw(Error, "EncodingError U+B293");
expect(() => {ms932Encoder.encode("\uB294")}).to.throw(Error, "EncodingError U+B294");
expect(() => {ms932Encoder.encode("\uB295")}).to.throw(Error, "EncodingError U+B295");
expect(() => {ms932Encoder.encode("\uB296")}).to.throw(Error, "EncodingError U+B296");
expect(() => {ms932Encoder.encode("\uB297")}).to.throw(Error, "EncodingError U+B297");
expect(() => {ms932Encoder.encode("\uB298")}).to.throw(Error, "EncodingError U+B298");
expect(() => {ms932Encoder.encode("\uB299")}).to.throw(Error, "EncodingError U+B299");
expect(() => {ms932Encoder.encode("\uB29A")}).to.throw(Error, "EncodingError U+B29A");
expect(() => {ms932Encoder.encode("\uB29B")}).to.throw(Error, "EncodingError U+B29B");
expect(() => {ms932Encoder.encode("\uB29C")}).to.throw(Error, "EncodingError U+B29C");
expect(() => {ms932Encoder.encode("\uB29D")}).to.throw(Error, "EncodingError U+B29D");
expect(() => {ms932Encoder.encode("\uB29E")}).to.throw(Error, "EncodingError U+B29E");
expect(() => {ms932Encoder.encode("\uB29F")}).to.throw(Error, "EncodingError U+B29F");
expect(() => {ms932Encoder.encode("\uB2A0")}).to.throw(Error, "EncodingError U+B2A0");
expect(() => {ms932Encoder.encode("\uB2A1")}).to.throw(Error, "EncodingError U+B2A1");
expect(() => {ms932Encoder.encode("\uB2A2")}).to.throw(Error, "EncodingError U+B2A2");
expect(() => {ms932Encoder.encode("\uB2A3")}).to.throw(Error, "EncodingError U+B2A3");
expect(() => {ms932Encoder.encode("\uB2A4")}).to.throw(Error, "EncodingError U+B2A4");
expect(() => {ms932Encoder.encode("\uB2A5")}).to.throw(Error, "EncodingError U+B2A5");
expect(() => {ms932Encoder.encode("\uB2A6")}).to.throw(Error, "EncodingError U+B2A6");
expect(() => {ms932Encoder.encode("\uB2A7")}).to.throw(Error, "EncodingError U+B2A7");
expect(() => {ms932Encoder.encode("\uB2A8")}).to.throw(Error, "EncodingError U+B2A8");
expect(() => {ms932Encoder.encode("\uB2A9")}).to.throw(Error, "EncodingError U+B2A9");
expect(() => {ms932Encoder.encode("\uB2AA")}).to.throw(Error, "EncodingError U+B2AA");
expect(() => {ms932Encoder.encode("\uB2AB")}).to.throw(Error, "EncodingError U+B2AB");
expect(() => {ms932Encoder.encode("\uB2AC")}).to.throw(Error, "EncodingError U+B2AC");
expect(() => {ms932Encoder.encode("\uB2AD")}).to.throw(Error, "EncodingError U+B2AD");
expect(() => {ms932Encoder.encode("\uB2AE")}).to.throw(Error, "EncodingError U+B2AE");
expect(() => {ms932Encoder.encode("\uB2AF")}).to.throw(Error, "EncodingError U+B2AF");
expect(() => {ms932Encoder.encode("\uB2B0")}).to.throw(Error, "EncodingError U+B2B0");
expect(() => {ms932Encoder.encode("\uB2B1")}).to.throw(Error, "EncodingError U+B2B1");
expect(() => {ms932Encoder.encode("\uB2B2")}).to.throw(Error, "EncodingError U+B2B2");
expect(() => {ms932Encoder.encode("\uB2B3")}).to.throw(Error, "EncodingError U+B2B3");
expect(() => {ms932Encoder.encode("\uB2B4")}).to.throw(Error, "EncodingError U+B2B4");
expect(() => {ms932Encoder.encode("\uB2B5")}).to.throw(Error, "EncodingError U+B2B5");
expect(() => {ms932Encoder.encode("\uB2B6")}).to.throw(Error, "EncodingError U+B2B6");
expect(() => {ms932Encoder.encode("\uB2B7")}).to.throw(Error, "EncodingError U+B2B7");
expect(() => {ms932Encoder.encode("\uB2B8")}).to.throw(Error, "EncodingError U+B2B8");
expect(() => {ms932Encoder.encode("\uB2B9")}).to.throw(Error, "EncodingError U+B2B9");
expect(() => {ms932Encoder.encode("\uB2BA")}).to.throw(Error, "EncodingError U+B2BA");
expect(() => {ms932Encoder.encode("\uB2BB")}).to.throw(Error, "EncodingError U+B2BB");
expect(() => {ms932Encoder.encode("\uB2BC")}).to.throw(Error, "EncodingError U+B2BC");
expect(() => {ms932Encoder.encode("\uB2BD")}).to.throw(Error, "EncodingError U+B2BD");
expect(() => {ms932Encoder.encode("\uB2BE")}).to.throw(Error, "EncodingError U+B2BE");
expect(() => {ms932Encoder.encode("\uB2BF")}).to.throw(Error, "EncodingError U+B2BF");
expect(() => {ms932Encoder.encode("\uB2C0")}).to.throw(Error, "EncodingError U+B2C0");
expect(() => {ms932Encoder.encode("\uB2C1")}).to.throw(Error, "EncodingError U+B2C1");
expect(() => {ms932Encoder.encode("\uB2C2")}).to.throw(Error, "EncodingError U+B2C2");
expect(() => {ms932Encoder.encode("\uB2C3")}).to.throw(Error, "EncodingError U+B2C3");
expect(() => {ms932Encoder.encode("\uB2C4")}).to.throw(Error, "EncodingError U+B2C4");
expect(() => {ms932Encoder.encode("\uB2C5")}).to.throw(Error, "EncodingError U+B2C5");
expect(() => {ms932Encoder.encode("\uB2C6")}).to.throw(Error, "EncodingError U+B2C6");
expect(() => {ms932Encoder.encode("\uB2C7")}).to.throw(Error, "EncodingError U+B2C7");
expect(() => {ms932Encoder.encode("\uB2C8")}).to.throw(Error, "EncodingError U+B2C8");
expect(() => {ms932Encoder.encode("\uB2C9")}).to.throw(Error, "EncodingError U+B2C9");
expect(() => {ms932Encoder.encode("\uB2CA")}).to.throw(Error, "EncodingError U+B2CA");
expect(() => {ms932Encoder.encode("\uB2CB")}).to.throw(Error, "EncodingError U+B2CB");
expect(() => {ms932Encoder.encode("\uB2CC")}).to.throw(Error, "EncodingError U+B2CC");
expect(() => {ms932Encoder.encode("\uB2CD")}).to.throw(Error, "EncodingError U+B2CD");
expect(() => {ms932Encoder.encode("\uB2CE")}).to.throw(Error, "EncodingError U+B2CE");
expect(() => {ms932Encoder.encode("\uB2CF")}).to.throw(Error, "EncodingError U+B2CF");
expect(() => {ms932Encoder.encode("\uB2D0")}).to.throw(Error, "EncodingError U+B2D0");
expect(() => {ms932Encoder.encode("\uB2D1")}).to.throw(Error, "EncodingError U+B2D1");
expect(() => {ms932Encoder.encode("\uB2D2")}).to.throw(Error, "EncodingError U+B2D2");
expect(() => {ms932Encoder.encode("\uB2D3")}).to.throw(Error, "EncodingError U+B2D3");
expect(() => {ms932Encoder.encode("\uB2D4")}).to.throw(Error, "EncodingError U+B2D4");
expect(() => {ms932Encoder.encode("\uB2D5")}).to.throw(Error, "EncodingError U+B2D5");
expect(() => {ms932Encoder.encode("\uB2D6")}).to.throw(Error, "EncodingError U+B2D6");
expect(() => {ms932Encoder.encode("\uB2D7")}).to.throw(Error, "EncodingError U+B2D7");
expect(() => {ms932Encoder.encode("\uB2D8")}).to.throw(Error, "EncodingError U+B2D8");
expect(() => {ms932Encoder.encode("\uB2D9")}).to.throw(Error, "EncodingError U+B2D9");
expect(() => {ms932Encoder.encode("\uB2DA")}).to.throw(Error, "EncodingError U+B2DA");
expect(() => {ms932Encoder.encode("\uB2DB")}).to.throw(Error, "EncodingError U+B2DB");
expect(() => {ms932Encoder.encode("\uB2DC")}).to.throw(Error, "EncodingError U+B2DC");
expect(() => {ms932Encoder.encode("\uB2DD")}).to.throw(Error, "EncodingError U+B2DD");
expect(() => {ms932Encoder.encode("\uB2DE")}).to.throw(Error, "EncodingError U+B2DE");
expect(() => {ms932Encoder.encode("\uB2DF")}).to.throw(Error, "EncodingError U+B2DF");
expect(() => {ms932Encoder.encode("\uB2E0")}).to.throw(Error, "EncodingError U+B2E0");
expect(() => {ms932Encoder.encode("\uB2E1")}).to.throw(Error, "EncodingError U+B2E1");
expect(() => {ms932Encoder.encode("\uB2E2")}).to.throw(Error, "EncodingError U+B2E2");
expect(() => {ms932Encoder.encode("\uB2E3")}).to.throw(Error, "EncodingError U+B2E3");
expect(() => {ms932Encoder.encode("\uB2E4")}).to.throw(Error, "EncodingError U+B2E4");
expect(() => {ms932Encoder.encode("\uB2E5")}).to.throw(Error, "EncodingError U+B2E5");
expect(() => {ms932Encoder.encode("\uB2E6")}).to.throw(Error, "EncodingError U+B2E6");
expect(() => {ms932Encoder.encode("\uB2E7")}).to.throw(Error, "EncodingError U+B2E7");
expect(() => {ms932Encoder.encode("\uB2E8")}).to.throw(Error, "EncodingError U+B2E8");
expect(() => {ms932Encoder.encode("\uB2E9")}).to.throw(Error, "EncodingError U+B2E9");
expect(() => {ms932Encoder.encode("\uB2EA")}).to.throw(Error, "EncodingError U+B2EA");
expect(() => {ms932Encoder.encode("\uB2EB")}).to.throw(Error, "EncodingError U+B2EB");
expect(() => {ms932Encoder.encode("\uB2EC")}).to.throw(Error, "EncodingError U+B2EC");
expect(() => {ms932Encoder.encode("\uB2ED")}).to.throw(Error, "EncodingError U+B2ED");
expect(() => {ms932Encoder.encode("\uB2EE")}).to.throw(Error, "EncodingError U+B2EE");
expect(() => {ms932Encoder.encode("\uB2EF")}).to.throw(Error, "EncodingError U+B2EF");
expect(() => {ms932Encoder.encode("\uB2F0")}).to.throw(Error, "EncodingError U+B2F0");
expect(() => {ms932Encoder.encode("\uB2F1")}).to.throw(Error, "EncodingError U+B2F1");
expect(() => {ms932Encoder.encode("\uB2F2")}).to.throw(Error, "EncodingError U+B2F2");
expect(() => {ms932Encoder.encode("\uB2F3")}).to.throw(Error, "EncodingError U+B2F3");
expect(() => {ms932Encoder.encode("\uB2F4")}).to.throw(Error, "EncodingError U+B2F4");
expect(() => {ms932Encoder.encode("\uB2F5")}).to.throw(Error, "EncodingError U+B2F5");
expect(() => {ms932Encoder.encode("\uB2F6")}).to.throw(Error, "EncodingError U+B2F6");
expect(() => {ms932Encoder.encode("\uB2F7")}).to.throw(Error, "EncodingError U+B2F7");
expect(() => {ms932Encoder.encode("\uB2F8")}).to.throw(Error, "EncodingError U+B2F8");
expect(() => {ms932Encoder.encode("\uB2F9")}).to.throw(Error, "EncodingError U+B2F9");
expect(() => {ms932Encoder.encode("\uB2FA")}).to.throw(Error, "EncodingError U+B2FA");
expect(() => {ms932Encoder.encode("\uB2FB")}).to.throw(Error, "EncodingError U+B2FB");
expect(() => {ms932Encoder.encode("\uB2FC")}).to.throw(Error, "EncodingError U+B2FC");
expect(() => {ms932Encoder.encode("\uB2FD")}).to.throw(Error, "EncodingError U+B2FD");
expect(() => {ms932Encoder.encode("\uB2FE")}).to.throw(Error, "EncodingError U+B2FE");
expect(() => {ms932Encoder.encode("\uB2FF")}).to.throw(Error, "EncodingError U+B2FF");
expect(() => {ms932Encoder.encode("\uB300")}).to.throw(Error, "EncodingError U+B300");
expect(() => {ms932Encoder.encode("\uB301")}).to.throw(Error, "EncodingError U+B301");
expect(() => {ms932Encoder.encode("\uB302")}).to.throw(Error, "EncodingError U+B302");
expect(() => {ms932Encoder.encode("\uB303")}).to.throw(Error, "EncodingError U+B303");
expect(() => {ms932Encoder.encode("\uB304")}).to.throw(Error, "EncodingError U+B304");
expect(() => {ms932Encoder.encode("\uB305")}).to.throw(Error, "EncodingError U+B305");
expect(() => {ms932Encoder.encode("\uB306")}).to.throw(Error, "EncodingError U+B306");
expect(() => {ms932Encoder.encode("\uB307")}).to.throw(Error, "EncodingError U+B307");
expect(() => {ms932Encoder.encode("\uB308")}).to.throw(Error, "EncodingError U+B308");
expect(() => {ms932Encoder.encode("\uB309")}).to.throw(Error, "EncodingError U+B309");
expect(() => {ms932Encoder.encode("\uB30A")}).to.throw(Error, "EncodingError U+B30A");
expect(() => {ms932Encoder.encode("\uB30B")}).to.throw(Error, "EncodingError U+B30B");
expect(() => {ms932Encoder.encode("\uB30C")}).to.throw(Error, "EncodingError U+B30C");
expect(() => {ms932Encoder.encode("\uB30D")}).to.throw(Error, "EncodingError U+B30D");
expect(() => {ms932Encoder.encode("\uB30E")}).to.throw(Error, "EncodingError U+B30E");
expect(() => {ms932Encoder.encode("\uB30F")}).to.throw(Error, "EncodingError U+B30F");
expect(() => {ms932Encoder.encode("\uB310")}).to.throw(Error, "EncodingError U+B310");
expect(() => {ms932Encoder.encode("\uB311")}).to.throw(Error, "EncodingError U+B311");
expect(() => {ms932Encoder.encode("\uB312")}).to.throw(Error, "EncodingError U+B312");
expect(() => {ms932Encoder.encode("\uB313")}).to.throw(Error, "EncodingError U+B313");
expect(() => {ms932Encoder.encode("\uB314")}).to.throw(Error, "EncodingError U+B314");
expect(() => {ms932Encoder.encode("\uB315")}).to.throw(Error, "EncodingError U+B315");
expect(() => {ms932Encoder.encode("\uB316")}).to.throw(Error, "EncodingError U+B316");
expect(() => {ms932Encoder.encode("\uB317")}).to.throw(Error, "EncodingError U+B317");
expect(() => {ms932Encoder.encode("\uB318")}).to.throw(Error, "EncodingError U+B318");
expect(() => {ms932Encoder.encode("\uB319")}).to.throw(Error, "EncodingError U+B319");
expect(() => {ms932Encoder.encode("\uB31A")}).to.throw(Error, "EncodingError U+B31A");
expect(() => {ms932Encoder.encode("\uB31B")}).to.throw(Error, "EncodingError U+B31B");
expect(() => {ms932Encoder.encode("\uB31C")}).to.throw(Error, "EncodingError U+B31C");
expect(() => {ms932Encoder.encode("\uB31D")}).to.throw(Error, "EncodingError U+B31D");
expect(() => {ms932Encoder.encode("\uB31E")}).to.throw(Error, "EncodingError U+B31E");
expect(() => {ms932Encoder.encode("\uB31F")}).to.throw(Error, "EncodingError U+B31F");
expect(() => {ms932Encoder.encode("\uB320")}).to.throw(Error, "EncodingError U+B320");
expect(() => {ms932Encoder.encode("\uB321")}).to.throw(Error, "EncodingError U+B321");
expect(() => {ms932Encoder.encode("\uB322")}).to.throw(Error, "EncodingError U+B322");
expect(() => {ms932Encoder.encode("\uB323")}).to.throw(Error, "EncodingError U+B323");
expect(() => {ms932Encoder.encode("\uB324")}).to.throw(Error, "EncodingError U+B324");
expect(() => {ms932Encoder.encode("\uB325")}).to.throw(Error, "EncodingError U+B325");
expect(() => {ms932Encoder.encode("\uB326")}).to.throw(Error, "EncodingError U+B326");
expect(() => {ms932Encoder.encode("\uB327")}).to.throw(Error, "EncodingError U+B327");
expect(() => {ms932Encoder.encode("\uB328")}).to.throw(Error, "EncodingError U+B328");
expect(() => {ms932Encoder.encode("\uB329")}).to.throw(Error, "EncodingError U+B329");
expect(() => {ms932Encoder.encode("\uB32A")}).to.throw(Error, "EncodingError U+B32A");
expect(() => {ms932Encoder.encode("\uB32B")}).to.throw(Error, "EncodingError U+B32B");
expect(() => {ms932Encoder.encode("\uB32C")}).to.throw(Error, "EncodingError U+B32C");
expect(() => {ms932Encoder.encode("\uB32D")}).to.throw(Error, "EncodingError U+B32D");
expect(() => {ms932Encoder.encode("\uB32E")}).to.throw(Error, "EncodingError U+B32E");
expect(() => {ms932Encoder.encode("\uB32F")}).to.throw(Error, "EncodingError U+B32F");
expect(() => {ms932Encoder.encode("\uB330")}).to.throw(Error, "EncodingError U+B330");
expect(() => {ms932Encoder.encode("\uB331")}).to.throw(Error, "EncodingError U+B331");
expect(() => {ms932Encoder.encode("\uB332")}).to.throw(Error, "EncodingError U+B332");
expect(() => {ms932Encoder.encode("\uB333")}).to.throw(Error, "EncodingError U+B333");
expect(() => {ms932Encoder.encode("\uB334")}).to.throw(Error, "EncodingError U+B334");
expect(() => {ms932Encoder.encode("\uB335")}).to.throw(Error, "EncodingError U+B335");
expect(() => {ms932Encoder.encode("\uB336")}).to.throw(Error, "EncodingError U+B336");
expect(() => {ms932Encoder.encode("\uB337")}).to.throw(Error, "EncodingError U+B337");
expect(() => {ms932Encoder.encode("\uB338")}).to.throw(Error, "EncodingError U+B338");
expect(() => {ms932Encoder.encode("\uB339")}).to.throw(Error, "EncodingError U+B339");
expect(() => {ms932Encoder.encode("\uB33A")}).to.throw(Error, "EncodingError U+B33A");
expect(() => {ms932Encoder.encode("\uB33B")}).to.throw(Error, "EncodingError U+B33B");
expect(() => {ms932Encoder.encode("\uB33C")}).to.throw(Error, "EncodingError U+B33C");
expect(() => {ms932Encoder.encode("\uB33D")}).to.throw(Error, "EncodingError U+B33D");
expect(() => {ms932Encoder.encode("\uB33E")}).to.throw(Error, "EncodingError U+B33E");
expect(() => {ms932Encoder.encode("\uB33F")}).to.throw(Error, "EncodingError U+B33F");
expect(() => {ms932Encoder.encode("\uB340")}).to.throw(Error, "EncodingError U+B340");
expect(() => {ms932Encoder.encode("\uB341")}).to.throw(Error, "EncodingError U+B341");
expect(() => {ms932Encoder.encode("\uB342")}).to.throw(Error, "EncodingError U+B342");
expect(() => {ms932Encoder.encode("\uB343")}).to.throw(Error, "EncodingError U+B343");
expect(() => {ms932Encoder.encode("\uB344")}).to.throw(Error, "EncodingError U+B344");
expect(() => {ms932Encoder.encode("\uB345")}).to.throw(Error, "EncodingError U+B345");
expect(() => {ms932Encoder.encode("\uB346")}).to.throw(Error, "EncodingError U+B346");
expect(() => {ms932Encoder.encode("\uB347")}).to.throw(Error, "EncodingError U+B347");
expect(() => {ms932Encoder.encode("\uB348")}).to.throw(Error, "EncodingError U+B348");
expect(() => {ms932Encoder.encode("\uB349")}).to.throw(Error, "EncodingError U+B349");
expect(() => {ms932Encoder.encode("\uB34A")}).to.throw(Error, "EncodingError U+B34A");
expect(() => {ms932Encoder.encode("\uB34B")}).to.throw(Error, "EncodingError U+B34B");
expect(() => {ms932Encoder.encode("\uB34C")}).to.throw(Error, "EncodingError U+B34C");
expect(() => {ms932Encoder.encode("\uB34D")}).to.throw(Error, "EncodingError U+B34D");
expect(() => {ms932Encoder.encode("\uB34E")}).to.throw(Error, "EncodingError U+B34E");
expect(() => {ms932Encoder.encode("\uB34F")}).to.throw(Error, "EncodingError U+B34F");
expect(() => {ms932Encoder.encode("\uB350")}).to.throw(Error, "EncodingError U+B350");
expect(() => {ms932Encoder.encode("\uB351")}).to.throw(Error, "EncodingError U+B351");
expect(() => {ms932Encoder.encode("\uB352")}).to.throw(Error, "EncodingError U+B352");
expect(() => {ms932Encoder.encode("\uB353")}).to.throw(Error, "EncodingError U+B353");
expect(() => {ms932Encoder.encode("\uB354")}).to.throw(Error, "EncodingError U+B354");
expect(() => {ms932Encoder.encode("\uB355")}).to.throw(Error, "EncodingError U+B355");
expect(() => {ms932Encoder.encode("\uB356")}).to.throw(Error, "EncodingError U+B356");
expect(() => {ms932Encoder.encode("\uB357")}).to.throw(Error, "EncodingError U+B357");
expect(() => {ms932Encoder.encode("\uB358")}).to.throw(Error, "EncodingError U+B358");
expect(() => {ms932Encoder.encode("\uB359")}).to.throw(Error, "EncodingError U+B359");
expect(() => {ms932Encoder.encode("\uB35A")}).to.throw(Error, "EncodingError U+B35A");
expect(() => {ms932Encoder.encode("\uB35B")}).to.throw(Error, "EncodingError U+B35B");
expect(() => {ms932Encoder.encode("\uB35C")}).to.throw(Error, "EncodingError U+B35C");
expect(() => {ms932Encoder.encode("\uB35D")}).to.throw(Error, "EncodingError U+B35D");
expect(() => {ms932Encoder.encode("\uB35E")}).to.throw(Error, "EncodingError U+B35E");
expect(() => {ms932Encoder.encode("\uB35F")}).to.throw(Error, "EncodingError U+B35F");
expect(() => {ms932Encoder.encode("\uB360")}).to.throw(Error, "EncodingError U+B360");
expect(() => {ms932Encoder.encode("\uB361")}).to.throw(Error, "EncodingError U+B361");
expect(() => {ms932Encoder.encode("\uB362")}).to.throw(Error, "EncodingError U+B362");
expect(() => {ms932Encoder.encode("\uB363")}).to.throw(Error, "EncodingError U+B363");
expect(() => {ms932Encoder.encode("\uB364")}).to.throw(Error, "EncodingError U+B364");
expect(() => {ms932Encoder.encode("\uB365")}).to.throw(Error, "EncodingError U+B365");
expect(() => {ms932Encoder.encode("\uB366")}).to.throw(Error, "EncodingError U+B366");
expect(() => {ms932Encoder.encode("\uB367")}).to.throw(Error, "EncodingError U+B367");
expect(() => {ms932Encoder.encode("\uB368")}).to.throw(Error, "EncodingError U+B368");
expect(() => {ms932Encoder.encode("\uB369")}).to.throw(Error, "EncodingError U+B369");
expect(() => {ms932Encoder.encode("\uB36A")}).to.throw(Error, "EncodingError U+B36A");
expect(() => {ms932Encoder.encode("\uB36B")}).to.throw(Error, "EncodingError U+B36B");
expect(() => {ms932Encoder.encode("\uB36C")}).to.throw(Error, "EncodingError U+B36C");
expect(() => {ms932Encoder.encode("\uB36D")}).to.throw(Error, "EncodingError U+B36D");
expect(() => {ms932Encoder.encode("\uB36E")}).to.throw(Error, "EncodingError U+B36E");
expect(() => {ms932Encoder.encode("\uB36F")}).to.throw(Error, "EncodingError U+B36F");
expect(() => {ms932Encoder.encode("\uB370")}).to.throw(Error, "EncodingError U+B370");
expect(() => {ms932Encoder.encode("\uB371")}).to.throw(Error, "EncodingError U+B371");
expect(() => {ms932Encoder.encode("\uB372")}).to.throw(Error, "EncodingError U+B372");
expect(() => {ms932Encoder.encode("\uB373")}).to.throw(Error, "EncodingError U+B373");
expect(() => {ms932Encoder.encode("\uB374")}).to.throw(Error, "EncodingError U+B374");
expect(() => {ms932Encoder.encode("\uB375")}).to.throw(Error, "EncodingError U+B375");
expect(() => {ms932Encoder.encode("\uB376")}).to.throw(Error, "EncodingError U+B376");
expect(() => {ms932Encoder.encode("\uB377")}).to.throw(Error, "EncodingError U+B377");
expect(() => {ms932Encoder.encode("\uB378")}).to.throw(Error, "EncodingError U+B378");
expect(() => {ms932Encoder.encode("\uB379")}).to.throw(Error, "EncodingError U+B379");
expect(() => {ms932Encoder.encode("\uB37A")}).to.throw(Error, "EncodingError U+B37A");
expect(() => {ms932Encoder.encode("\uB37B")}).to.throw(Error, "EncodingError U+B37B");
expect(() => {ms932Encoder.encode("\uB37C")}).to.throw(Error, "EncodingError U+B37C");
expect(() => {ms932Encoder.encode("\uB37D")}).to.throw(Error, "EncodingError U+B37D");
expect(() => {ms932Encoder.encode("\uB37E")}).to.throw(Error, "EncodingError U+B37E");
expect(() => {ms932Encoder.encode("\uB37F")}).to.throw(Error, "EncodingError U+B37F");
expect(() => {ms932Encoder.encode("\uB380")}).to.throw(Error, "EncodingError U+B380");
expect(() => {ms932Encoder.encode("\uB381")}).to.throw(Error, "EncodingError U+B381");
expect(() => {ms932Encoder.encode("\uB382")}).to.throw(Error, "EncodingError U+B382");
expect(() => {ms932Encoder.encode("\uB383")}).to.throw(Error, "EncodingError U+B383");
expect(() => {ms932Encoder.encode("\uB384")}).to.throw(Error, "EncodingError U+B384");
expect(() => {ms932Encoder.encode("\uB385")}).to.throw(Error, "EncodingError U+B385");
expect(() => {ms932Encoder.encode("\uB386")}).to.throw(Error, "EncodingError U+B386");
expect(() => {ms932Encoder.encode("\uB387")}).to.throw(Error, "EncodingError U+B387");
expect(() => {ms932Encoder.encode("\uB388")}).to.throw(Error, "EncodingError U+B388");
expect(() => {ms932Encoder.encode("\uB389")}).to.throw(Error, "EncodingError U+B389");
expect(() => {ms932Encoder.encode("\uB38A")}).to.throw(Error, "EncodingError U+B38A");
expect(() => {ms932Encoder.encode("\uB38B")}).to.throw(Error, "EncodingError U+B38B");
expect(() => {ms932Encoder.encode("\uB38C")}).to.throw(Error, "EncodingError U+B38C");
expect(() => {ms932Encoder.encode("\uB38D")}).to.throw(Error, "EncodingError U+B38D");
expect(() => {ms932Encoder.encode("\uB38E")}).to.throw(Error, "EncodingError U+B38E");
expect(() => {ms932Encoder.encode("\uB38F")}).to.throw(Error, "EncodingError U+B38F");
expect(() => {ms932Encoder.encode("\uB390")}).to.throw(Error, "EncodingError U+B390");
expect(() => {ms932Encoder.encode("\uB391")}).to.throw(Error, "EncodingError U+B391");
expect(() => {ms932Encoder.encode("\uB392")}).to.throw(Error, "EncodingError U+B392");
expect(() => {ms932Encoder.encode("\uB393")}).to.throw(Error, "EncodingError U+B393");
expect(() => {ms932Encoder.encode("\uB394")}).to.throw(Error, "EncodingError U+B394");
expect(() => {ms932Encoder.encode("\uB395")}).to.throw(Error, "EncodingError U+B395");
expect(() => {ms932Encoder.encode("\uB396")}).to.throw(Error, "EncodingError U+B396");
expect(() => {ms932Encoder.encode("\uB397")}).to.throw(Error, "EncodingError U+B397");
expect(() => {ms932Encoder.encode("\uB398")}).to.throw(Error, "EncodingError U+B398");
expect(() => {ms932Encoder.encode("\uB399")}).to.throw(Error, "EncodingError U+B399");
expect(() => {ms932Encoder.encode("\uB39A")}).to.throw(Error, "EncodingError U+B39A");
expect(() => {ms932Encoder.encode("\uB39B")}).to.throw(Error, "EncodingError U+B39B");
expect(() => {ms932Encoder.encode("\uB39C")}).to.throw(Error, "EncodingError U+B39C");
expect(() => {ms932Encoder.encode("\uB39D")}).to.throw(Error, "EncodingError U+B39D");
expect(() => {ms932Encoder.encode("\uB39E")}).to.throw(Error, "EncodingError U+B39E");
expect(() => {ms932Encoder.encode("\uB39F")}).to.throw(Error, "EncodingError U+B39F");
expect(() => {ms932Encoder.encode("\uB3A0")}).to.throw(Error, "EncodingError U+B3A0");
expect(() => {ms932Encoder.encode("\uB3A1")}).to.throw(Error, "EncodingError U+B3A1");
expect(() => {ms932Encoder.encode("\uB3A2")}).to.throw(Error, "EncodingError U+B3A2");
expect(() => {ms932Encoder.encode("\uB3A3")}).to.throw(Error, "EncodingError U+B3A3");
expect(() => {ms932Encoder.encode("\uB3A4")}).to.throw(Error, "EncodingError U+B3A4");
expect(() => {ms932Encoder.encode("\uB3A5")}).to.throw(Error, "EncodingError U+B3A5");
expect(() => {ms932Encoder.encode("\uB3A6")}).to.throw(Error, "EncodingError U+B3A6");
expect(() => {ms932Encoder.encode("\uB3A7")}).to.throw(Error, "EncodingError U+B3A7");
expect(() => {ms932Encoder.encode("\uB3A8")}).to.throw(Error, "EncodingError U+B3A8");
expect(() => {ms932Encoder.encode("\uB3A9")}).to.throw(Error, "EncodingError U+B3A9");
expect(() => {ms932Encoder.encode("\uB3AA")}).to.throw(Error, "EncodingError U+B3AA");
expect(() => {ms932Encoder.encode("\uB3AB")}).to.throw(Error, "EncodingError U+B3AB");
expect(() => {ms932Encoder.encode("\uB3AC")}).to.throw(Error, "EncodingError U+B3AC");
expect(() => {ms932Encoder.encode("\uB3AD")}).to.throw(Error, "EncodingError U+B3AD");
expect(() => {ms932Encoder.encode("\uB3AE")}).to.throw(Error, "EncodingError U+B3AE");
expect(() => {ms932Encoder.encode("\uB3AF")}).to.throw(Error, "EncodingError U+B3AF");
expect(() => {ms932Encoder.encode("\uB3B0")}).to.throw(Error, "EncodingError U+B3B0");
expect(() => {ms932Encoder.encode("\uB3B1")}).to.throw(Error, "EncodingError U+B3B1");
expect(() => {ms932Encoder.encode("\uB3B2")}).to.throw(Error, "EncodingError U+B3B2");
expect(() => {ms932Encoder.encode("\uB3B3")}).to.throw(Error, "EncodingError U+B3B3");
expect(() => {ms932Encoder.encode("\uB3B4")}).to.throw(Error, "EncodingError U+B3B4");
expect(() => {ms932Encoder.encode("\uB3B5")}).to.throw(Error, "EncodingError U+B3B5");
expect(() => {ms932Encoder.encode("\uB3B6")}).to.throw(Error, "EncodingError U+B3B6");
expect(() => {ms932Encoder.encode("\uB3B7")}).to.throw(Error, "EncodingError U+B3B7");
expect(() => {ms932Encoder.encode("\uB3B8")}).to.throw(Error, "EncodingError U+B3B8");
expect(() => {ms932Encoder.encode("\uB3B9")}).to.throw(Error, "EncodingError U+B3B9");
expect(() => {ms932Encoder.encode("\uB3BA")}).to.throw(Error, "EncodingError U+B3BA");
expect(() => {ms932Encoder.encode("\uB3BB")}).to.throw(Error, "EncodingError U+B3BB");
expect(() => {ms932Encoder.encode("\uB3BC")}).to.throw(Error, "EncodingError U+B3BC");
expect(() => {ms932Encoder.encode("\uB3BD")}).to.throw(Error, "EncodingError U+B3BD");
expect(() => {ms932Encoder.encode("\uB3BE")}).to.throw(Error, "EncodingError U+B3BE");
expect(() => {ms932Encoder.encode("\uB3BF")}).to.throw(Error, "EncodingError U+B3BF");
expect(() => {ms932Encoder.encode("\uB3C0")}).to.throw(Error, "EncodingError U+B3C0");
expect(() => {ms932Encoder.encode("\uB3C1")}).to.throw(Error, "EncodingError U+B3C1");
expect(() => {ms932Encoder.encode("\uB3C2")}).to.throw(Error, "EncodingError U+B3C2");
expect(() => {ms932Encoder.encode("\uB3C3")}).to.throw(Error, "EncodingError U+B3C3");
expect(() => {ms932Encoder.encode("\uB3C4")}).to.throw(Error, "EncodingError U+B3C4");
expect(() => {ms932Encoder.encode("\uB3C5")}).to.throw(Error, "EncodingError U+B3C5");
expect(() => {ms932Encoder.encode("\uB3C6")}).to.throw(Error, "EncodingError U+B3C6");
expect(() => {ms932Encoder.encode("\uB3C7")}).to.throw(Error, "EncodingError U+B3C7");
expect(() => {ms932Encoder.encode("\uB3C8")}).to.throw(Error, "EncodingError U+B3C8");
expect(() => {ms932Encoder.encode("\uB3C9")}).to.throw(Error, "EncodingError U+B3C9");
expect(() => {ms932Encoder.encode("\uB3CA")}).to.throw(Error, "EncodingError U+B3CA");
expect(() => {ms932Encoder.encode("\uB3CB")}).to.throw(Error, "EncodingError U+B3CB");
expect(() => {ms932Encoder.encode("\uB3CC")}).to.throw(Error, "EncodingError U+B3CC");
expect(() => {ms932Encoder.encode("\uB3CD")}).to.throw(Error, "EncodingError U+B3CD");
expect(() => {ms932Encoder.encode("\uB3CE")}).to.throw(Error, "EncodingError U+B3CE");
expect(() => {ms932Encoder.encode("\uB3CF")}).to.throw(Error, "EncodingError U+B3CF");
expect(() => {ms932Encoder.encode("\uB3D0")}).to.throw(Error, "EncodingError U+B3D0");
expect(() => {ms932Encoder.encode("\uB3D1")}).to.throw(Error, "EncodingError U+B3D1");
expect(() => {ms932Encoder.encode("\uB3D2")}).to.throw(Error, "EncodingError U+B3D2");
expect(() => {ms932Encoder.encode("\uB3D3")}).to.throw(Error, "EncodingError U+B3D3");
expect(() => {ms932Encoder.encode("\uB3D4")}).to.throw(Error, "EncodingError U+B3D4");
expect(() => {ms932Encoder.encode("\uB3D5")}).to.throw(Error, "EncodingError U+B3D5");
expect(() => {ms932Encoder.encode("\uB3D6")}).to.throw(Error, "EncodingError U+B3D6");
expect(() => {ms932Encoder.encode("\uB3D7")}).to.throw(Error, "EncodingError U+B3D7");
expect(() => {ms932Encoder.encode("\uB3D8")}).to.throw(Error, "EncodingError U+B3D8");
expect(() => {ms932Encoder.encode("\uB3D9")}).to.throw(Error, "EncodingError U+B3D9");
expect(() => {ms932Encoder.encode("\uB3DA")}).to.throw(Error, "EncodingError U+B3DA");
expect(() => {ms932Encoder.encode("\uB3DB")}).to.throw(Error, "EncodingError U+B3DB");
expect(() => {ms932Encoder.encode("\uB3DC")}).to.throw(Error, "EncodingError U+B3DC");
expect(() => {ms932Encoder.encode("\uB3DD")}).to.throw(Error, "EncodingError U+B3DD");
expect(() => {ms932Encoder.encode("\uB3DE")}).to.throw(Error, "EncodingError U+B3DE");
expect(() => {ms932Encoder.encode("\uB3DF")}).to.throw(Error, "EncodingError U+B3DF");
expect(() => {ms932Encoder.encode("\uB3E0")}).to.throw(Error, "EncodingError U+B3E0");
expect(() => {ms932Encoder.encode("\uB3E1")}).to.throw(Error, "EncodingError U+B3E1");
expect(() => {ms932Encoder.encode("\uB3E2")}).to.throw(Error, "EncodingError U+B3E2");
expect(() => {ms932Encoder.encode("\uB3E3")}).to.throw(Error, "EncodingError U+B3E3");
expect(() => {ms932Encoder.encode("\uB3E4")}).to.throw(Error, "EncodingError U+B3E4");
expect(() => {ms932Encoder.encode("\uB3E5")}).to.throw(Error, "EncodingError U+B3E5");
expect(() => {ms932Encoder.encode("\uB3E6")}).to.throw(Error, "EncodingError U+B3E6");
expect(() => {ms932Encoder.encode("\uB3E7")}).to.throw(Error, "EncodingError U+B3E7");
expect(() => {ms932Encoder.encode("\uB3E8")}).to.throw(Error, "EncodingError U+B3E8");
expect(() => {ms932Encoder.encode("\uB3E9")}).to.throw(Error, "EncodingError U+B3E9");
expect(() => {ms932Encoder.encode("\uB3EA")}).to.throw(Error, "EncodingError U+B3EA");
expect(() => {ms932Encoder.encode("\uB3EB")}).to.throw(Error, "EncodingError U+B3EB");
expect(() => {ms932Encoder.encode("\uB3EC")}).to.throw(Error, "EncodingError U+B3EC");
expect(() => {ms932Encoder.encode("\uB3ED")}).to.throw(Error, "EncodingError U+B3ED");
expect(() => {ms932Encoder.encode("\uB3EE")}).to.throw(Error, "EncodingError U+B3EE");
expect(() => {ms932Encoder.encode("\uB3EF")}).to.throw(Error, "EncodingError U+B3EF");
expect(() => {ms932Encoder.encode("\uB3F0")}).to.throw(Error, "EncodingError U+B3F0");
expect(() => {ms932Encoder.encode("\uB3F1")}).to.throw(Error, "EncodingError U+B3F1");
expect(() => {ms932Encoder.encode("\uB3F2")}).to.throw(Error, "EncodingError U+B3F2");
expect(() => {ms932Encoder.encode("\uB3F3")}).to.throw(Error, "EncodingError U+B3F3");
expect(() => {ms932Encoder.encode("\uB3F4")}).to.throw(Error, "EncodingError U+B3F4");
expect(() => {ms932Encoder.encode("\uB3F5")}).to.throw(Error, "EncodingError U+B3F5");
expect(() => {ms932Encoder.encode("\uB3F6")}).to.throw(Error, "EncodingError U+B3F6");
expect(() => {ms932Encoder.encode("\uB3F7")}).to.throw(Error, "EncodingError U+B3F7");
expect(() => {ms932Encoder.encode("\uB3F8")}).to.throw(Error, "EncodingError U+B3F8");
expect(() => {ms932Encoder.encode("\uB3F9")}).to.throw(Error, "EncodingError U+B3F9");
expect(() => {ms932Encoder.encode("\uB3FA")}).to.throw(Error, "EncodingError U+B3FA");
expect(() => {ms932Encoder.encode("\uB3FB")}).to.throw(Error, "EncodingError U+B3FB");
expect(() => {ms932Encoder.encode("\uB3FC")}).to.throw(Error, "EncodingError U+B3FC");
expect(() => {ms932Encoder.encode("\uB3FD")}).to.throw(Error, "EncodingError U+B3FD");
expect(() => {ms932Encoder.encode("\uB3FE")}).to.throw(Error, "EncodingError U+B3FE");
expect(() => {ms932Encoder.encode("\uB3FF")}).to.throw(Error, "EncodingError U+B3FF");
expect(() => {ms932Encoder.encode("\uB400")}).to.throw(Error, "EncodingError U+B400");
expect(() => {ms932Encoder.encode("\uB401")}).to.throw(Error, "EncodingError U+B401");
expect(() => {ms932Encoder.encode("\uB402")}).to.throw(Error, "EncodingError U+B402");
expect(() => {ms932Encoder.encode("\uB403")}).to.throw(Error, "EncodingError U+B403");
expect(() => {ms932Encoder.encode("\uB404")}).to.throw(Error, "EncodingError U+B404");
expect(() => {ms932Encoder.encode("\uB405")}).to.throw(Error, "EncodingError U+B405");
expect(() => {ms932Encoder.encode("\uB406")}).to.throw(Error, "EncodingError U+B406");
expect(() => {ms932Encoder.encode("\uB407")}).to.throw(Error, "EncodingError U+B407");
expect(() => {ms932Encoder.encode("\uB408")}).to.throw(Error, "EncodingError U+B408");
expect(() => {ms932Encoder.encode("\uB409")}).to.throw(Error, "EncodingError U+B409");
expect(() => {ms932Encoder.encode("\uB40A")}).to.throw(Error, "EncodingError U+B40A");
expect(() => {ms932Encoder.encode("\uB40B")}).to.throw(Error, "EncodingError U+B40B");
expect(() => {ms932Encoder.encode("\uB40C")}).to.throw(Error, "EncodingError U+B40C");
expect(() => {ms932Encoder.encode("\uB40D")}).to.throw(Error, "EncodingError U+B40D");
expect(() => {ms932Encoder.encode("\uB40E")}).to.throw(Error, "EncodingError U+B40E");
expect(() => {ms932Encoder.encode("\uB40F")}).to.throw(Error, "EncodingError U+B40F");
expect(() => {ms932Encoder.encode("\uB410")}).to.throw(Error, "EncodingError U+B410");
expect(() => {ms932Encoder.encode("\uB411")}).to.throw(Error, "EncodingError U+B411");
expect(() => {ms932Encoder.encode("\uB412")}).to.throw(Error, "EncodingError U+B412");
expect(() => {ms932Encoder.encode("\uB413")}).to.throw(Error, "EncodingError U+B413");
expect(() => {ms932Encoder.encode("\uB414")}).to.throw(Error, "EncodingError U+B414");
expect(() => {ms932Encoder.encode("\uB415")}).to.throw(Error, "EncodingError U+B415");
expect(() => {ms932Encoder.encode("\uB416")}).to.throw(Error, "EncodingError U+B416");
expect(() => {ms932Encoder.encode("\uB417")}).to.throw(Error, "EncodingError U+B417");
expect(() => {ms932Encoder.encode("\uB418")}).to.throw(Error, "EncodingError U+B418");
expect(() => {ms932Encoder.encode("\uB419")}).to.throw(Error, "EncodingError U+B419");
expect(() => {ms932Encoder.encode("\uB41A")}).to.throw(Error, "EncodingError U+B41A");
expect(() => {ms932Encoder.encode("\uB41B")}).to.throw(Error, "EncodingError U+B41B");
expect(() => {ms932Encoder.encode("\uB41C")}).to.throw(Error, "EncodingError U+B41C");
expect(() => {ms932Encoder.encode("\uB41D")}).to.throw(Error, "EncodingError U+B41D");
expect(() => {ms932Encoder.encode("\uB41E")}).to.throw(Error, "EncodingError U+B41E");
expect(() => {ms932Encoder.encode("\uB41F")}).to.throw(Error, "EncodingError U+B41F");
expect(() => {ms932Encoder.encode("\uB420")}).to.throw(Error, "EncodingError U+B420");
expect(() => {ms932Encoder.encode("\uB421")}).to.throw(Error, "EncodingError U+B421");
expect(() => {ms932Encoder.encode("\uB422")}).to.throw(Error, "EncodingError U+B422");
expect(() => {ms932Encoder.encode("\uB423")}).to.throw(Error, "EncodingError U+B423");
expect(() => {ms932Encoder.encode("\uB424")}).to.throw(Error, "EncodingError U+B424");
expect(() => {ms932Encoder.encode("\uB425")}).to.throw(Error, "EncodingError U+B425");
expect(() => {ms932Encoder.encode("\uB426")}).to.throw(Error, "EncodingError U+B426");
expect(() => {ms932Encoder.encode("\uB427")}).to.throw(Error, "EncodingError U+B427");
expect(() => {ms932Encoder.encode("\uB428")}).to.throw(Error, "EncodingError U+B428");
expect(() => {ms932Encoder.encode("\uB429")}).to.throw(Error, "EncodingError U+B429");
expect(() => {ms932Encoder.encode("\uB42A")}).to.throw(Error, "EncodingError U+B42A");
expect(() => {ms932Encoder.encode("\uB42B")}).to.throw(Error, "EncodingError U+B42B");
expect(() => {ms932Encoder.encode("\uB42C")}).to.throw(Error, "EncodingError U+B42C");
expect(() => {ms932Encoder.encode("\uB42D")}).to.throw(Error, "EncodingError U+B42D");
expect(() => {ms932Encoder.encode("\uB42E")}).to.throw(Error, "EncodingError U+B42E");
expect(() => {ms932Encoder.encode("\uB42F")}).to.throw(Error, "EncodingError U+B42F");
expect(() => {ms932Encoder.encode("\uB430")}).to.throw(Error, "EncodingError U+B430");
expect(() => {ms932Encoder.encode("\uB431")}).to.throw(Error, "EncodingError U+B431");
expect(() => {ms932Encoder.encode("\uB432")}).to.throw(Error, "EncodingError U+B432");
expect(() => {ms932Encoder.encode("\uB433")}).to.throw(Error, "EncodingError U+B433");
expect(() => {ms932Encoder.encode("\uB434")}).to.throw(Error, "EncodingError U+B434");
expect(() => {ms932Encoder.encode("\uB435")}).to.throw(Error, "EncodingError U+B435");
expect(() => {ms932Encoder.encode("\uB436")}).to.throw(Error, "EncodingError U+B436");
expect(() => {ms932Encoder.encode("\uB437")}).to.throw(Error, "EncodingError U+B437");
expect(() => {ms932Encoder.encode("\uB438")}).to.throw(Error, "EncodingError U+B438");
expect(() => {ms932Encoder.encode("\uB439")}).to.throw(Error, "EncodingError U+B439");
expect(() => {ms932Encoder.encode("\uB43A")}).to.throw(Error, "EncodingError U+B43A");
expect(() => {ms932Encoder.encode("\uB43B")}).to.throw(Error, "EncodingError U+B43B");
expect(() => {ms932Encoder.encode("\uB43C")}).to.throw(Error, "EncodingError U+B43C");
expect(() => {ms932Encoder.encode("\uB43D")}).to.throw(Error, "EncodingError U+B43D");
expect(() => {ms932Encoder.encode("\uB43E")}).to.throw(Error, "EncodingError U+B43E");
expect(() => {ms932Encoder.encode("\uB43F")}).to.throw(Error, "EncodingError U+B43F");
expect(() => {ms932Encoder.encode("\uB440")}).to.throw(Error, "EncodingError U+B440");
expect(() => {ms932Encoder.encode("\uB441")}).to.throw(Error, "EncodingError U+B441");
expect(() => {ms932Encoder.encode("\uB442")}).to.throw(Error, "EncodingError U+B442");
expect(() => {ms932Encoder.encode("\uB443")}).to.throw(Error, "EncodingError U+B443");
expect(() => {ms932Encoder.encode("\uB444")}).to.throw(Error, "EncodingError U+B444");
expect(() => {ms932Encoder.encode("\uB445")}).to.throw(Error, "EncodingError U+B445");
expect(() => {ms932Encoder.encode("\uB446")}).to.throw(Error, "EncodingError U+B446");
expect(() => {ms932Encoder.encode("\uB447")}).to.throw(Error, "EncodingError U+B447");
expect(() => {ms932Encoder.encode("\uB448")}).to.throw(Error, "EncodingError U+B448");
expect(() => {ms932Encoder.encode("\uB449")}).to.throw(Error, "EncodingError U+B449");
expect(() => {ms932Encoder.encode("\uB44A")}).to.throw(Error, "EncodingError U+B44A");
expect(() => {ms932Encoder.encode("\uB44B")}).to.throw(Error, "EncodingError U+B44B");
expect(() => {ms932Encoder.encode("\uB44C")}).to.throw(Error, "EncodingError U+B44C");
expect(() => {ms932Encoder.encode("\uB44D")}).to.throw(Error, "EncodingError U+B44D");
expect(() => {ms932Encoder.encode("\uB44E")}).to.throw(Error, "EncodingError U+B44E");
expect(() => {ms932Encoder.encode("\uB44F")}).to.throw(Error, "EncodingError U+B44F");
expect(() => {ms932Encoder.encode("\uB450")}).to.throw(Error, "EncodingError U+B450");
expect(() => {ms932Encoder.encode("\uB451")}).to.throw(Error, "EncodingError U+B451");
expect(() => {ms932Encoder.encode("\uB452")}).to.throw(Error, "EncodingError U+B452");
expect(() => {ms932Encoder.encode("\uB453")}).to.throw(Error, "EncodingError U+B453");
expect(() => {ms932Encoder.encode("\uB454")}).to.throw(Error, "EncodingError U+B454");
expect(() => {ms932Encoder.encode("\uB455")}).to.throw(Error, "EncodingError U+B455");
expect(() => {ms932Encoder.encode("\uB456")}).to.throw(Error, "EncodingError U+B456");
expect(() => {ms932Encoder.encode("\uB457")}).to.throw(Error, "EncodingError U+B457");
expect(() => {ms932Encoder.encode("\uB458")}).to.throw(Error, "EncodingError U+B458");
expect(() => {ms932Encoder.encode("\uB459")}).to.throw(Error, "EncodingError U+B459");
expect(() => {ms932Encoder.encode("\uB45A")}).to.throw(Error, "EncodingError U+B45A");
expect(() => {ms932Encoder.encode("\uB45B")}).to.throw(Error, "EncodingError U+B45B");
expect(() => {ms932Encoder.encode("\uB45C")}).to.throw(Error, "EncodingError U+B45C");
expect(() => {ms932Encoder.encode("\uB45D")}).to.throw(Error, "EncodingError U+B45D");
expect(() => {ms932Encoder.encode("\uB45E")}).to.throw(Error, "EncodingError U+B45E");
expect(() => {ms932Encoder.encode("\uB45F")}).to.throw(Error, "EncodingError U+B45F");
expect(() => {ms932Encoder.encode("\uB460")}).to.throw(Error, "EncodingError U+B460");
expect(() => {ms932Encoder.encode("\uB461")}).to.throw(Error, "EncodingError U+B461");
expect(() => {ms932Encoder.encode("\uB462")}).to.throw(Error, "EncodingError U+B462");
expect(() => {ms932Encoder.encode("\uB463")}).to.throw(Error, "EncodingError U+B463");
expect(() => {ms932Encoder.encode("\uB464")}).to.throw(Error, "EncodingError U+B464");
expect(() => {ms932Encoder.encode("\uB465")}).to.throw(Error, "EncodingError U+B465");
expect(() => {ms932Encoder.encode("\uB466")}).to.throw(Error, "EncodingError U+B466");
expect(() => {ms932Encoder.encode("\uB467")}).to.throw(Error, "EncodingError U+B467");
expect(() => {ms932Encoder.encode("\uB468")}).to.throw(Error, "EncodingError U+B468");
expect(() => {ms932Encoder.encode("\uB469")}).to.throw(Error, "EncodingError U+B469");
expect(() => {ms932Encoder.encode("\uB46A")}).to.throw(Error, "EncodingError U+B46A");
expect(() => {ms932Encoder.encode("\uB46B")}).to.throw(Error, "EncodingError U+B46B");
expect(() => {ms932Encoder.encode("\uB46C")}).to.throw(Error, "EncodingError U+B46C");
expect(() => {ms932Encoder.encode("\uB46D")}).to.throw(Error, "EncodingError U+B46D");
expect(() => {ms932Encoder.encode("\uB46E")}).to.throw(Error, "EncodingError U+B46E");
expect(() => {ms932Encoder.encode("\uB46F")}).to.throw(Error, "EncodingError U+B46F");
expect(() => {ms932Encoder.encode("\uB470")}).to.throw(Error, "EncodingError U+B470");
expect(() => {ms932Encoder.encode("\uB471")}).to.throw(Error, "EncodingError U+B471");
expect(() => {ms932Encoder.encode("\uB472")}).to.throw(Error, "EncodingError U+B472");
expect(() => {ms932Encoder.encode("\uB473")}).to.throw(Error, "EncodingError U+B473");
expect(() => {ms932Encoder.encode("\uB474")}).to.throw(Error, "EncodingError U+B474");
expect(() => {ms932Encoder.encode("\uB475")}).to.throw(Error, "EncodingError U+B475");
expect(() => {ms932Encoder.encode("\uB476")}).to.throw(Error, "EncodingError U+B476");
expect(() => {ms932Encoder.encode("\uB477")}).to.throw(Error, "EncodingError U+B477");
expect(() => {ms932Encoder.encode("\uB478")}).to.throw(Error, "EncodingError U+B478");
expect(() => {ms932Encoder.encode("\uB479")}).to.throw(Error, "EncodingError U+B479");
expect(() => {ms932Encoder.encode("\uB47A")}).to.throw(Error, "EncodingError U+B47A");
expect(() => {ms932Encoder.encode("\uB47B")}).to.throw(Error, "EncodingError U+B47B");
expect(() => {ms932Encoder.encode("\uB47C")}).to.throw(Error, "EncodingError U+B47C");
expect(() => {ms932Encoder.encode("\uB47D")}).to.throw(Error, "EncodingError U+B47D");
expect(() => {ms932Encoder.encode("\uB47E")}).to.throw(Error, "EncodingError U+B47E");
expect(() => {ms932Encoder.encode("\uB47F")}).to.throw(Error, "EncodingError U+B47F");
expect(() => {ms932Encoder.encode("\uB480")}).to.throw(Error, "EncodingError U+B480");
expect(() => {ms932Encoder.encode("\uB481")}).to.throw(Error, "EncodingError U+B481");
expect(() => {ms932Encoder.encode("\uB482")}).to.throw(Error, "EncodingError U+B482");
expect(() => {ms932Encoder.encode("\uB483")}).to.throw(Error, "EncodingError U+B483");
expect(() => {ms932Encoder.encode("\uB484")}).to.throw(Error, "EncodingError U+B484");
expect(() => {ms932Encoder.encode("\uB485")}).to.throw(Error, "EncodingError U+B485");
expect(() => {ms932Encoder.encode("\uB486")}).to.throw(Error, "EncodingError U+B486");
expect(() => {ms932Encoder.encode("\uB487")}).to.throw(Error, "EncodingError U+B487");
expect(() => {ms932Encoder.encode("\uB488")}).to.throw(Error, "EncodingError U+B488");
expect(() => {ms932Encoder.encode("\uB489")}).to.throw(Error, "EncodingError U+B489");
expect(() => {ms932Encoder.encode("\uB48A")}).to.throw(Error, "EncodingError U+B48A");
expect(() => {ms932Encoder.encode("\uB48B")}).to.throw(Error, "EncodingError U+B48B");
expect(() => {ms932Encoder.encode("\uB48C")}).to.throw(Error, "EncodingError U+B48C");
expect(() => {ms932Encoder.encode("\uB48D")}).to.throw(Error, "EncodingError U+B48D");
expect(() => {ms932Encoder.encode("\uB48E")}).to.throw(Error, "EncodingError U+B48E");
expect(() => {ms932Encoder.encode("\uB48F")}).to.throw(Error, "EncodingError U+B48F");
expect(() => {ms932Encoder.encode("\uB490")}).to.throw(Error, "EncodingError U+B490");
expect(() => {ms932Encoder.encode("\uB491")}).to.throw(Error, "EncodingError U+B491");
expect(() => {ms932Encoder.encode("\uB492")}).to.throw(Error, "EncodingError U+B492");
expect(() => {ms932Encoder.encode("\uB493")}).to.throw(Error, "EncodingError U+B493");
expect(() => {ms932Encoder.encode("\uB494")}).to.throw(Error, "EncodingError U+B494");
expect(() => {ms932Encoder.encode("\uB495")}).to.throw(Error, "EncodingError U+B495");
expect(() => {ms932Encoder.encode("\uB496")}).to.throw(Error, "EncodingError U+B496");
expect(() => {ms932Encoder.encode("\uB497")}).to.throw(Error, "EncodingError U+B497");
expect(() => {ms932Encoder.encode("\uB498")}).to.throw(Error, "EncodingError U+B498");
expect(() => {ms932Encoder.encode("\uB499")}).to.throw(Error, "EncodingError U+B499");
expect(() => {ms932Encoder.encode("\uB49A")}).to.throw(Error, "EncodingError U+B49A");
expect(() => {ms932Encoder.encode("\uB49B")}).to.throw(Error, "EncodingError U+B49B");
expect(() => {ms932Encoder.encode("\uB49C")}).to.throw(Error, "EncodingError U+B49C");
expect(() => {ms932Encoder.encode("\uB49D")}).to.throw(Error, "EncodingError U+B49D");
expect(() => {ms932Encoder.encode("\uB49E")}).to.throw(Error, "EncodingError U+B49E");
expect(() => {ms932Encoder.encode("\uB49F")}).to.throw(Error, "EncodingError U+B49F");
expect(() => {ms932Encoder.encode("\uB4A0")}).to.throw(Error, "EncodingError U+B4A0");
expect(() => {ms932Encoder.encode("\uB4A1")}).to.throw(Error, "EncodingError U+B4A1");
expect(() => {ms932Encoder.encode("\uB4A2")}).to.throw(Error, "EncodingError U+B4A2");
expect(() => {ms932Encoder.encode("\uB4A3")}).to.throw(Error, "EncodingError U+B4A3");
expect(() => {ms932Encoder.encode("\uB4A4")}).to.throw(Error, "EncodingError U+B4A4");
expect(() => {ms932Encoder.encode("\uB4A5")}).to.throw(Error, "EncodingError U+B4A5");
expect(() => {ms932Encoder.encode("\uB4A6")}).to.throw(Error, "EncodingError U+B4A6");
expect(() => {ms932Encoder.encode("\uB4A7")}).to.throw(Error, "EncodingError U+B4A7");
expect(() => {ms932Encoder.encode("\uB4A8")}).to.throw(Error, "EncodingError U+B4A8");
expect(() => {ms932Encoder.encode("\uB4A9")}).to.throw(Error, "EncodingError U+B4A9");
expect(() => {ms932Encoder.encode("\uB4AA")}).to.throw(Error, "EncodingError U+B4AA");
expect(() => {ms932Encoder.encode("\uB4AB")}).to.throw(Error, "EncodingError U+B4AB");
expect(() => {ms932Encoder.encode("\uB4AC")}).to.throw(Error, "EncodingError U+B4AC");
expect(() => {ms932Encoder.encode("\uB4AD")}).to.throw(Error, "EncodingError U+B4AD");
expect(() => {ms932Encoder.encode("\uB4AE")}).to.throw(Error, "EncodingError U+B4AE");
expect(() => {ms932Encoder.encode("\uB4AF")}).to.throw(Error, "EncodingError U+B4AF");
expect(() => {ms932Encoder.encode("\uB4B0")}).to.throw(Error, "EncodingError U+B4B0");
expect(() => {ms932Encoder.encode("\uB4B1")}).to.throw(Error, "EncodingError U+B4B1");
expect(() => {ms932Encoder.encode("\uB4B2")}).to.throw(Error, "EncodingError U+B4B2");
expect(() => {ms932Encoder.encode("\uB4B3")}).to.throw(Error, "EncodingError U+B4B3");
expect(() => {ms932Encoder.encode("\uB4B4")}).to.throw(Error, "EncodingError U+B4B4");
expect(() => {ms932Encoder.encode("\uB4B5")}).to.throw(Error, "EncodingError U+B4B5");
expect(() => {ms932Encoder.encode("\uB4B6")}).to.throw(Error, "EncodingError U+B4B6");
expect(() => {ms932Encoder.encode("\uB4B7")}).to.throw(Error, "EncodingError U+B4B7");
expect(() => {ms932Encoder.encode("\uB4B8")}).to.throw(Error, "EncodingError U+B4B8");
expect(() => {ms932Encoder.encode("\uB4B9")}).to.throw(Error, "EncodingError U+B4B9");
expect(() => {ms932Encoder.encode("\uB4BA")}).to.throw(Error, "EncodingError U+B4BA");
expect(() => {ms932Encoder.encode("\uB4BB")}).to.throw(Error, "EncodingError U+B4BB");
expect(() => {ms932Encoder.encode("\uB4BC")}).to.throw(Error, "EncodingError U+B4BC");
expect(() => {ms932Encoder.encode("\uB4BD")}).to.throw(Error, "EncodingError U+B4BD");
expect(() => {ms932Encoder.encode("\uB4BE")}).to.throw(Error, "EncodingError U+B4BE");
expect(() => {ms932Encoder.encode("\uB4BF")}).to.throw(Error, "EncodingError U+B4BF");
expect(() => {ms932Encoder.encode("\uB4C0")}).to.throw(Error, "EncodingError U+B4C0");
expect(() => {ms932Encoder.encode("\uB4C1")}).to.throw(Error, "EncodingError U+B4C1");
expect(() => {ms932Encoder.encode("\uB4C2")}).to.throw(Error, "EncodingError U+B4C2");
expect(() => {ms932Encoder.encode("\uB4C3")}).to.throw(Error, "EncodingError U+B4C3");
expect(() => {ms932Encoder.encode("\uB4C4")}).to.throw(Error, "EncodingError U+B4C4");
expect(() => {ms932Encoder.encode("\uB4C5")}).to.throw(Error, "EncodingError U+B4C5");
expect(() => {ms932Encoder.encode("\uB4C6")}).to.throw(Error, "EncodingError U+B4C6");
expect(() => {ms932Encoder.encode("\uB4C7")}).to.throw(Error, "EncodingError U+B4C7");
expect(() => {ms932Encoder.encode("\uB4C8")}).to.throw(Error, "EncodingError U+B4C8");
expect(() => {ms932Encoder.encode("\uB4C9")}).to.throw(Error, "EncodingError U+B4C9");
expect(() => {ms932Encoder.encode("\uB4CA")}).to.throw(Error, "EncodingError U+B4CA");
expect(() => {ms932Encoder.encode("\uB4CB")}).to.throw(Error, "EncodingError U+B4CB");
expect(() => {ms932Encoder.encode("\uB4CC")}).to.throw(Error, "EncodingError U+B4CC");
expect(() => {ms932Encoder.encode("\uB4CD")}).to.throw(Error, "EncodingError U+B4CD");
expect(() => {ms932Encoder.encode("\uB4CE")}).to.throw(Error, "EncodingError U+B4CE");
expect(() => {ms932Encoder.encode("\uB4CF")}).to.throw(Error, "EncodingError U+B4CF");
expect(() => {ms932Encoder.encode("\uB4D0")}).to.throw(Error, "EncodingError U+B4D0");
expect(() => {ms932Encoder.encode("\uB4D1")}).to.throw(Error, "EncodingError U+B4D1");
expect(() => {ms932Encoder.encode("\uB4D2")}).to.throw(Error, "EncodingError U+B4D2");
expect(() => {ms932Encoder.encode("\uB4D3")}).to.throw(Error, "EncodingError U+B4D3");
expect(() => {ms932Encoder.encode("\uB4D4")}).to.throw(Error, "EncodingError U+B4D4");
expect(() => {ms932Encoder.encode("\uB4D5")}).to.throw(Error, "EncodingError U+B4D5");
expect(() => {ms932Encoder.encode("\uB4D6")}).to.throw(Error, "EncodingError U+B4D6");
expect(() => {ms932Encoder.encode("\uB4D7")}).to.throw(Error, "EncodingError U+B4D7");
expect(() => {ms932Encoder.encode("\uB4D8")}).to.throw(Error, "EncodingError U+B4D8");
expect(() => {ms932Encoder.encode("\uB4D9")}).to.throw(Error, "EncodingError U+B4D9");
expect(() => {ms932Encoder.encode("\uB4DA")}).to.throw(Error, "EncodingError U+B4DA");
expect(() => {ms932Encoder.encode("\uB4DB")}).to.throw(Error, "EncodingError U+B4DB");
expect(() => {ms932Encoder.encode("\uB4DC")}).to.throw(Error, "EncodingError U+B4DC");
expect(() => {ms932Encoder.encode("\uB4DD")}).to.throw(Error, "EncodingError U+B4DD");
expect(() => {ms932Encoder.encode("\uB4DE")}).to.throw(Error, "EncodingError U+B4DE");
expect(() => {ms932Encoder.encode("\uB4DF")}).to.throw(Error, "EncodingError U+B4DF");
expect(() => {ms932Encoder.encode("\uB4E0")}).to.throw(Error, "EncodingError U+B4E0");
expect(() => {ms932Encoder.encode("\uB4E1")}).to.throw(Error, "EncodingError U+B4E1");
expect(() => {ms932Encoder.encode("\uB4E2")}).to.throw(Error, "EncodingError U+B4E2");
expect(() => {ms932Encoder.encode("\uB4E3")}).to.throw(Error, "EncodingError U+B4E3");
expect(() => {ms932Encoder.encode("\uB4E4")}).to.throw(Error, "EncodingError U+B4E4");
expect(() => {ms932Encoder.encode("\uB4E5")}).to.throw(Error, "EncodingError U+B4E5");
expect(() => {ms932Encoder.encode("\uB4E6")}).to.throw(Error, "EncodingError U+B4E6");
expect(() => {ms932Encoder.encode("\uB4E7")}).to.throw(Error, "EncodingError U+B4E7");
expect(() => {ms932Encoder.encode("\uB4E8")}).to.throw(Error, "EncodingError U+B4E8");
expect(() => {ms932Encoder.encode("\uB4E9")}).to.throw(Error, "EncodingError U+B4E9");
expect(() => {ms932Encoder.encode("\uB4EA")}).to.throw(Error, "EncodingError U+B4EA");
expect(() => {ms932Encoder.encode("\uB4EB")}).to.throw(Error, "EncodingError U+B4EB");
expect(() => {ms932Encoder.encode("\uB4EC")}).to.throw(Error, "EncodingError U+B4EC");
expect(() => {ms932Encoder.encode("\uB4ED")}).to.throw(Error, "EncodingError U+B4ED");
expect(() => {ms932Encoder.encode("\uB4EE")}).to.throw(Error, "EncodingError U+B4EE");
expect(() => {ms932Encoder.encode("\uB4EF")}).to.throw(Error, "EncodingError U+B4EF");
expect(() => {ms932Encoder.encode("\uB4F0")}).to.throw(Error, "EncodingError U+B4F0");
expect(() => {ms932Encoder.encode("\uB4F1")}).to.throw(Error, "EncodingError U+B4F1");
expect(() => {ms932Encoder.encode("\uB4F2")}).to.throw(Error, "EncodingError U+B4F2");
expect(() => {ms932Encoder.encode("\uB4F3")}).to.throw(Error, "EncodingError U+B4F3");
expect(() => {ms932Encoder.encode("\uB4F4")}).to.throw(Error, "EncodingError U+B4F4");
expect(() => {ms932Encoder.encode("\uB4F5")}).to.throw(Error, "EncodingError U+B4F5");
expect(() => {ms932Encoder.encode("\uB4F6")}).to.throw(Error, "EncodingError U+B4F6");
expect(() => {ms932Encoder.encode("\uB4F7")}).to.throw(Error, "EncodingError U+B4F7");
expect(() => {ms932Encoder.encode("\uB4F8")}).to.throw(Error, "EncodingError U+B4F8");
expect(() => {ms932Encoder.encode("\uB4F9")}).to.throw(Error, "EncodingError U+B4F9");
expect(() => {ms932Encoder.encode("\uB4FA")}).to.throw(Error, "EncodingError U+B4FA");
expect(() => {ms932Encoder.encode("\uB4FB")}).to.throw(Error, "EncodingError U+B4FB");
expect(() => {ms932Encoder.encode("\uB4FC")}).to.throw(Error, "EncodingError U+B4FC");
expect(() => {ms932Encoder.encode("\uB4FD")}).to.throw(Error, "EncodingError U+B4FD");
expect(() => {ms932Encoder.encode("\uB4FE")}).to.throw(Error, "EncodingError U+B4FE");
expect(() => {ms932Encoder.encode("\uB4FF")}).to.throw(Error, "EncodingError U+B4FF");
expect(() => {ms932Encoder.encode("\uB500")}).to.throw(Error, "EncodingError U+B500");
expect(() => {ms932Encoder.encode("\uB501")}).to.throw(Error, "EncodingError U+B501");
expect(() => {ms932Encoder.encode("\uB502")}).to.throw(Error, "EncodingError U+B502");
expect(() => {ms932Encoder.encode("\uB503")}).to.throw(Error, "EncodingError U+B503");
expect(() => {ms932Encoder.encode("\uB504")}).to.throw(Error, "EncodingError U+B504");
expect(() => {ms932Encoder.encode("\uB505")}).to.throw(Error, "EncodingError U+B505");
expect(() => {ms932Encoder.encode("\uB506")}).to.throw(Error, "EncodingError U+B506");
expect(() => {ms932Encoder.encode("\uB507")}).to.throw(Error, "EncodingError U+B507");
expect(() => {ms932Encoder.encode("\uB508")}).to.throw(Error, "EncodingError U+B508");
expect(() => {ms932Encoder.encode("\uB509")}).to.throw(Error, "EncodingError U+B509");
expect(() => {ms932Encoder.encode("\uB50A")}).to.throw(Error, "EncodingError U+B50A");
expect(() => {ms932Encoder.encode("\uB50B")}).to.throw(Error, "EncodingError U+B50B");
expect(() => {ms932Encoder.encode("\uB50C")}).to.throw(Error, "EncodingError U+B50C");
expect(() => {ms932Encoder.encode("\uB50D")}).to.throw(Error, "EncodingError U+B50D");
expect(() => {ms932Encoder.encode("\uB50E")}).to.throw(Error, "EncodingError U+B50E");
expect(() => {ms932Encoder.encode("\uB50F")}).to.throw(Error, "EncodingError U+B50F");
expect(() => {ms932Encoder.encode("\uB510")}).to.throw(Error, "EncodingError U+B510");
expect(() => {ms932Encoder.encode("\uB511")}).to.throw(Error, "EncodingError U+B511");
expect(() => {ms932Encoder.encode("\uB512")}).to.throw(Error, "EncodingError U+B512");
expect(() => {ms932Encoder.encode("\uB513")}).to.throw(Error, "EncodingError U+B513");
expect(() => {ms932Encoder.encode("\uB514")}).to.throw(Error, "EncodingError U+B514");
expect(() => {ms932Encoder.encode("\uB515")}).to.throw(Error, "EncodingError U+B515");
expect(() => {ms932Encoder.encode("\uB516")}).to.throw(Error, "EncodingError U+B516");
expect(() => {ms932Encoder.encode("\uB517")}).to.throw(Error, "EncodingError U+B517");
expect(() => {ms932Encoder.encode("\uB518")}).to.throw(Error, "EncodingError U+B518");
expect(() => {ms932Encoder.encode("\uB519")}).to.throw(Error, "EncodingError U+B519");
expect(() => {ms932Encoder.encode("\uB51A")}).to.throw(Error, "EncodingError U+B51A");
expect(() => {ms932Encoder.encode("\uB51B")}).to.throw(Error, "EncodingError U+B51B");
expect(() => {ms932Encoder.encode("\uB51C")}).to.throw(Error, "EncodingError U+B51C");
expect(() => {ms932Encoder.encode("\uB51D")}).to.throw(Error, "EncodingError U+B51D");
expect(() => {ms932Encoder.encode("\uB51E")}).to.throw(Error, "EncodingError U+B51E");
expect(() => {ms932Encoder.encode("\uB51F")}).to.throw(Error, "EncodingError U+B51F");
expect(() => {ms932Encoder.encode("\uB520")}).to.throw(Error, "EncodingError U+B520");
expect(() => {ms932Encoder.encode("\uB521")}).to.throw(Error, "EncodingError U+B521");
expect(() => {ms932Encoder.encode("\uB522")}).to.throw(Error, "EncodingError U+B522");
expect(() => {ms932Encoder.encode("\uB523")}).to.throw(Error, "EncodingError U+B523");
expect(() => {ms932Encoder.encode("\uB524")}).to.throw(Error, "EncodingError U+B524");
expect(() => {ms932Encoder.encode("\uB525")}).to.throw(Error, "EncodingError U+B525");
expect(() => {ms932Encoder.encode("\uB526")}).to.throw(Error, "EncodingError U+B526");
expect(() => {ms932Encoder.encode("\uB527")}).to.throw(Error, "EncodingError U+B527");
expect(() => {ms932Encoder.encode("\uB528")}).to.throw(Error, "EncodingError U+B528");
expect(() => {ms932Encoder.encode("\uB529")}).to.throw(Error, "EncodingError U+B529");
expect(() => {ms932Encoder.encode("\uB52A")}).to.throw(Error, "EncodingError U+B52A");
expect(() => {ms932Encoder.encode("\uB52B")}).to.throw(Error, "EncodingError U+B52B");
expect(() => {ms932Encoder.encode("\uB52C")}).to.throw(Error, "EncodingError U+B52C");
expect(() => {ms932Encoder.encode("\uB52D")}).to.throw(Error, "EncodingError U+B52D");
expect(() => {ms932Encoder.encode("\uB52E")}).to.throw(Error, "EncodingError U+B52E");
expect(() => {ms932Encoder.encode("\uB52F")}).to.throw(Error, "EncodingError U+B52F");
expect(() => {ms932Encoder.encode("\uB530")}).to.throw(Error, "EncodingError U+B530");
expect(() => {ms932Encoder.encode("\uB531")}).to.throw(Error, "EncodingError U+B531");
expect(() => {ms932Encoder.encode("\uB532")}).to.throw(Error, "EncodingError U+B532");
expect(() => {ms932Encoder.encode("\uB533")}).to.throw(Error, "EncodingError U+B533");
expect(() => {ms932Encoder.encode("\uB534")}).to.throw(Error, "EncodingError U+B534");
expect(() => {ms932Encoder.encode("\uB535")}).to.throw(Error, "EncodingError U+B535");
expect(() => {ms932Encoder.encode("\uB536")}).to.throw(Error, "EncodingError U+B536");
expect(() => {ms932Encoder.encode("\uB537")}).to.throw(Error, "EncodingError U+B537");
expect(() => {ms932Encoder.encode("\uB538")}).to.throw(Error, "EncodingError U+B538");
expect(() => {ms932Encoder.encode("\uB539")}).to.throw(Error, "EncodingError U+B539");
expect(() => {ms932Encoder.encode("\uB53A")}).to.throw(Error, "EncodingError U+B53A");
expect(() => {ms932Encoder.encode("\uB53B")}).to.throw(Error, "EncodingError U+B53B");
expect(() => {ms932Encoder.encode("\uB53C")}).to.throw(Error, "EncodingError U+B53C");
expect(() => {ms932Encoder.encode("\uB53D")}).to.throw(Error, "EncodingError U+B53D");
expect(() => {ms932Encoder.encode("\uB53E")}).to.throw(Error, "EncodingError U+B53E");
expect(() => {ms932Encoder.encode("\uB53F")}).to.throw(Error, "EncodingError U+B53F");
expect(() => {ms932Encoder.encode("\uB540")}).to.throw(Error, "EncodingError U+B540");
expect(() => {ms932Encoder.encode("\uB541")}).to.throw(Error, "EncodingError U+B541");
expect(() => {ms932Encoder.encode("\uB542")}).to.throw(Error, "EncodingError U+B542");
expect(() => {ms932Encoder.encode("\uB543")}).to.throw(Error, "EncodingError U+B543");
expect(() => {ms932Encoder.encode("\uB544")}).to.throw(Error, "EncodingError U+B544");
expect(() => {ms932Encoder.encode("\uB545")}).to.throw(Error, "EncodingError U+B545");
expect(() => {ms932Encoder.encode("\uB546")}).to.throw(Error, "EncodingError U+B546");
expect(() => {ms932Encoder.encode("\uB547")}).to.throw(Error, "EncodingError U+B547");
expect(() => {ms932Encoder.encode("\uB548")}).to.throw(Error, "EncodingError U+B548");
expect(() => {ms932Encoder.encode("\uB549")}).to.throw(Error, "EncodingError U+B549");
expect(() => {ms932Encoder.encode("\uB54A")}).to.throw(Error, "EncodingError U+B54A");
expect(() => {ms932Encoder.encode("\uB54B")}).to.throw(Error, "EncodingError U+B54B");
expect(() => {ms932Encoder.encode("\uB54C")}).to.throw(Error, "EncodingError U+B54C");
expect(() => {ms932Encoder.encode("\uB54D")}).to.throw(Error, "EncodingError U+B54D");
expect(() => {ms932Encoder.encode("\uB54E")}).to.throw(Error, "EncodingError U+B54E");
expect(() => {ms932Encoder.encode("\uB54F")}).to.throw(Error, "EncodingError U+B54F");
expect(() => {ms932Encoder.encode("\uB550")}).to.throw(Error, "EncodingError U+B550");
expect(() => {ms932Encoder.encode("\uB551")}).to.throw(Error, "EncodingError U+B551");
expect(() => {ms932Encoder.encode("\uB552")}).to.throw(Error, "EncodingError U+B552");
expect(() => {ms932Encoder.encode("\uB553")}).to.throw(Error, "EncodingError U+B553");
expect(() => {ms932Encoder.encode("\uB554")}).to.throw(Error, "EncodingError U+B554");
expect(() => {ms932Encoder.encode("\uB555")}).to.throw(Error, "EncodingError U+B555");
expect(() => {ms932Encoder.encode("\uB556")}).to.throw(Error, "EncodingError U+B556");
expect(() => {ms932Encoder.encode("\uB557")}).to.throw(Error, "EncodingError U+B557");
expect(() => {ms932Encoder.encode("\uB558")}).to.throw(Error, "EncodingError U+B558");
expect(() => {ms932Encoder.encode("\uB559")}).to.throw(Error, "EncodingError U+B559");
expect(() => {ms932Encoder.encode("\uB55A")}).to.throw(Error, "EncodingError U+B55A");
expect(() => {ms932Encoder.encode("\uB55B")}).to.throw(Error, "EncodingError U+B55B");
expect(() => {ms932Encoder.encode("\uB55C")}).to.throw(Error, "EncodingError U+B55C");
expect(() => {ms932Encoder.encode("\uB55D")}).to.throw(Error, "EncodingError U+B55D");
expect(() => {ms932Encoder.encode("\uB55E")}).to.throw(Error, "EncodingError U+B55E");
expect(() => {ms932Encoder.encode("\uB55F")}).to.throw(Error, "EncodingError U+B55F");
expect(() => {ms932Encoder.encode("\uB560")}).to.throw(Error, "EncodingError U+B560");
expect(() => {ms932Encoder.encode("\uB561")}).to.throw(Error, "EncodingError U+B561");
expect(() => {ms932Encoder.encode("\uB562")}).to.throw(Error, "EncodingError U+B562");
expect(() => {ms932Encoder.encode("\uB563")}).to.throw(Error, "EncodingError U+B563");
expect(() => {ms932Encoder.encode("\uB564")}).to.throw(Error, "EncodingError U+B564");
expect(() => {ms932Encoder.encode("\uB565")}).to.throw(Error, "EncodingError U+B565");
expect(() => {ms932Encoder.encode("\uB566")}).to.throw(Error, "EncodingError U+B566");
expect(() => {ms932Encoder.encode("\uB567")}).to.throw(Error, "EncodingError U+B567");
expect(() => {ms932Encoder.encode("\uB568")}).to.throw(Error, "EncodingError U+B568");
expect(() => {ms932Encoder.encode("\uB569")}).to.throw(Error, "EncodingError U+B569");
expect(() => {ms932Encoder.encode("\uB56A")}).to.throw(Error, "EncodingError U+B56A");
expect(() => {ms932Encoder.encode("\uB56B")}).to.throw(Error, "EncodingError U+B56B");
expect(() => {ms932Encoder.encode("\uB56C")}).to.throw(Error, "EncodingError U+B56C");
expect(() => {ms932Encoder.encode("\uB56D")}).to.throw(Error, "EncodingError U+B56D");
expect(() => {ms932Encoder.encode("\uB56E")}).to.throw(Error, "EncodingError U+B56E");
expect(() => {ms932Encoder.encode("\uB56F")}).to.throw(Error, "EncodingError U+B56F");
expect(() => {ms932Encoder.encode("\uB570")}).to.throw(Error, "EncodingError U+B570");
expect(() => {ms932Encoder.encode("\uB571")}).to.throw(Error, "EncodingError U+B571");
expect(() => {ms932Encoder.encode("\uB572")}).to.throw(Error, "EncodingError U+B572");
expect(() => {ms932Encoder.encode("\uB573")}).to.throw(Error, "EncodingError U+B573");
expect(() => {ms932Encoder.encode("\uB574")}).to.throw(Error, "EncodingError U+B574");
expect(() => {ms932Encoder.encode("\uB575")}).to.throw(Error, "EncodingError U+B575");
expect(() => {ms932Encoder.encode("\uB576")}).to.throw(Error, "EncodingError U+B576");
expect(() => {ms932Encoder.encode("\uB577")}).to.throw(Error, "EncodingError U+B577");
expect(() => {ms932Encoder.encode("\uB578")}).to.throw(Error, "EncodingError U+B578");
expect(() => {ms932Encoder.encode("\uB579")}).to.throw(Error, "EncodingError U+B579");
expect(() => {ms932Encoder.encode("\uB57A")}).to.throw(Error, "EncodingError U+B57A");
expect(() => {ms932Encoder.encode("\uB57B")}).to.throw(Error, "EncodingError U+B57B");
expect(() => {ms932Encoder.encode("\uB57C")}).to.throw(Error, "EncodingError U+B57C");
expect(() => {ms932Encoder.encode("\uB57D")}).to.throw(Error, "EncodingError U+B57D");
expect(() => {ms932Encoder.encode("\uB57E")}).to.throw(Error, "EncodingError U+B57E");
expect(() => {ms932Encoder.encode("\uB57F")}).to.throw(Error, "EncodingError U+B57F");
expect(() => {ms932Encoder.encode("\uB580")}).to.throw(Error, "EncodingError U+B580");
expect(() => {ms932Encoder.encode("\uB581")}).to.throw(Error, "EncodingError U+B581");
expect(() => {ms932Encoder.encode("\uB582")}).to.throw(Error, "EncodingError U+B582");
expect(() => {ms932Encoder.encode("\uB583")}).to.throw(Error, "EncodingError U+B583");
expect(() => {ms932Encoder.encode("\uB584")}).to.throw(Error, "EncodingError U+B584");
expect(() => {ms932Encoder.encode("\uB585")}).to.throw(Error, "EncodingError U+B585");
expect(() => {ms932Encoder.encode("\uB586")}).to.throw(Error, "EncodingError U+B586");
expect(() => {ms932Encoder.encode("\uB587")}).to.throw(Error, "EncodingError U+B587");
expect(() => {ms932Encoder.encode("\uB588")}).to.throw(Error, "EncodingError U+B588");
expect(() => {ms932Encoder.encode("\uB589")}).to.throw(Error, "EncodingError U+B589");
expect(() => {ms932Encoder.encode("\uB58A")}).to.throw(Error, "EncodingError U+B58A");
expect(() => {ms932Encoder.encode("\uB58B")}).to.throw(Error, "EncodingError U+B58B");
expect(() => {ms932Encoder.encode("\uB58C")}).to.throw(Error, "EncodingError U+B58C");
expect(() => {ms932Encoder.encode("\uB58D")}).to.throw(Error, "EncodingError U+B58D");
expect(() => {ms932Encoder.encode("\uB58E")}).to.throw(Error, "EncodingError U+B58E");
expect(() => {ms932Encoder.encode("\uB58F")}).to.throw(Error, "EncodingError U+B58F");
expect(() => {ms932Encoder.encode("\uB590")}).to.throw(Error, "EncodingError U+B590");
expect(() => {ms932Encoder.encode("\uB591")}).to.throw(Error, "EncodingError U+B591");
expect(() => {ms932Encoder.encode("\uB592")}).to.throw(Error, "EncodingError U+B592");
expect(() => {ms932Encoder.encode("\uB593")}).to.throw(Error, "EncodingError U+B593");
expect(() => {ms932Encoder.encode("\uB594")}).to.throw(Error, "EncodingError U+B594");
expect(() => {ms932Encoder.encode("\uB595")}).to.throw(Error, "EncodingError U+B595");
expect(() => {ms932Encoder.encode("\uB596")}).to.throw(Error, "EncodingError U+B596");
expect(() => {ms932Encoder.encode("\uB597")}).to.throw(Error, "EncodingError U+B597");
expect(() => {ms932Encoder.encode("\uB598")}).to.throw(Error, "EncodingError U+B598");
expect(() => {ms932Encoder.encode("\uB599")}).to.throw(Error, "EncodingError U+B599");
expect(() => {ms932Encoder.encode("\uB59A")}).to.throw(Error, "EncodingError U+B59A");
expect(() => {ms932Encoder.encode("\uB59B")}).to.throw(Error, "EncodingError U+B59B");
expect(() => {ms932Encoder.encode("\uB59C")}).to.throw(Error, "EncodingError U+B59C");
expect(() => {ms932Encoder.encode("\uB59D")}).to.throw(Error, "EncodingError U+B59D");
expect(() => {ms932Encoder.encode("\uB59E")}).to.throw(Error, "EncodingError U+B59E");
expect(() => {ms932Encoder.encode("\uB59F")}).to.throw(Error, "EncodingError U+B59F");
expect(() => {ms932Encoder.encode("\uB5A0")}).to.throw(Error, "EncodingError U+B5A0");
expect(() => {ms932Encoder.encode("\uB5A1")}).to.throw(Error, "EncodingError U+B5A1");
expect(() => {ms932Encoder.encode("\uB5A2")}).to.throw(Error, "EncodingError U+B5A2");
expect(() => {ms932Encoder.encode("\uB5A3")}).to.throw(Error, "EncodingError U+B5A3");
expect(() => {ms932Encoder.encode("\uB5A4")}).to.throw(Error, "EncodingError U+B5A4");
expect(() => {ms932Encoder.encode("\uB5A5")}).to.throw(Error, "EncodingError U+B5A5");
expect(() => {ms932Encoder.encode("\uB5A6")}).to.throw(Error, "EncodingError U+B5A6");
expect(() => {ms932Encoder.encode("\uB5A7")}).to.throw(Error, "EncodingError U+B5A7");
expect(() => {ms932Encoder.encode("\uB5A8")}).to.throw(Error, "EncodingError U+B5A8");
expect(() => {ms932Encoder.encode("\uB5A9")}).to.throw(Error, "EncodingError U+B5A9");
expect(() => {ms932Encoder.encode("\uB5AA")}).to.throw(Error, "EncodingError U+B5AA");
expect(() => {ms932Encoder.encode("\uB5AB")}).to.throw(Error, "EncodingError U+B5AB");
expect(() => {ms932Encoder.encode("\uB5AC")}).to.throw(Error, "EncodingError U+B5AC");
expect(() => {ms932Encoder.encode("\uB5AD")}).to.throw(Error, "EncodingError U+B5AD");
expect(() => {ms932Encoder.encode("\uB5AE")}).to.throw(Error, "EncodingError U+B5AE");
expect(() => {ms932Encoder.encode("\uB5AF")}).to.throw(Error, "EncodingError U+B5AF");
expect(() => {ms932Encoder.encode("\uB5B0")}).to.throw(Error, "EncodingError U+B5B0");
expect(() => {ms932Encoder.encode("\uB5B1")}).to.throw(Error, "EncodingError U+B5B1");
expect(() => {ms932Encoder.encode("\uB5B2")}).to.throw(Error, "EncodingError U+B5B2");
expect(() => {ms932Encoder.encode("\uB5B3")}).to.throw(Error, "EncodingError U+B5B3");
expect(() => {ms932Encoder.encode("\uB5B4")}).to.throw(Error, "EncodingError U+B5B4");
expect(() => {ms932Encoder.encode("\uB5B5")}).to.throw(Error, "EncodingError U+B5B5");
expect(() => {ms932Encoder.encode("\uB5B6")}).to.throw(Error, "EncodingError U+B5B6");
expect(() => {ms932Encoder.encode("\uB5B7")}).to.throw(Error, "EncodingError U+B5B7");
expect(() => {ms932Encoder.encode("\uB5B8")}).to.throw(Error, "EncodingError U+B5B8");
expect(() => {ms932Encoder.encode("\uB5B9")}).to.throw(Error, "EncodingError U+B5B9");
expect(() => {ms932Encoder.encode("\uB5BA")}).to.throw(Error, "EncodingError U+B5BA");
expect(() => {ms932Encoder.encode("\uB5BB")}).to.throw(Error, "EncodingError U+B5BB");
expect(() => {ms932Encoder.encode("\uB5BC")}).to.throw(Error, "EncodingError U+B5BC");
expect(() => {ms932Encoder.encode("\uB5BD")}).to.throw(Error, "EncodingError U+B5BD");
expect(() => {ms932Encoder.encode("\uB5BE")}).to.throw(Error, "EncodingError U+B5BE");
expect(() => {ms932Encoder.encode("\uB5BF")}).to.throw(Error, "EncodingError U+B5BF");
expect(() => {ms932Encoder.encode("\uB5C0")}).to.throw(Error, "EncodingError U+B5C0");
expect(() => {ms932Encoder.encode("\uB5C1")}).to.throw(Error, "EncodingError U+B5C1");
expect(() => {ms932Encoder.encode("\uB5C2")}).to.throw(Error, "EncodingError U+B5C2");
expect(() => {ms932Encoder.encode("\uB5C3")}).to.throw(Error, "EncodingError U+B5C3");
expect(() => {ms932Encoder.encode("\uB5C4")}).to.throw(Error, "EncodingError U+B5C4");
expect(() => {ms932Encoder.encode("\uB5C5")}).to.throw(Error, "EncodingError U+B5C5");
expect(() => {ms932Encoder.encode("\uB5C6")}).to.throw(Error, "EncodingError U+B5C6");
expect(() => {ms932Encoder.encode("\uB5C7")}).to.throw(Error, "EncodingError U+B5C7");
expect(() => {ms932Encoder.encode("\uB5C8")}).to.throw(Error, "EncodingError U+B5C8");
expect(() => {ms932Encoder.encode("\uB5C9")}).to.throw(Error, "EncodingError U+B5C9");
expect(() => {ms932Encoder.encode("\uB5CA")}).to.throw(Error, "EncodingError U+B5CA");
expect(() => {ms932Encoder.encode("\uB5CB")}).to.throw(Error, "EncodingError U+B5CB");
expect(() => {ms932Encoder.encode("\uB5CC")}).to.throw(Error, "EncodingError U+B5CC");
expect(() => {ms932Encoder.encode("\uB5CD")}).to.throw(Error, "EncodingError U+B5CD");
expect(() => {ms932Encoder.encode("\uB5CE")}).to.throw(Error, "EncodingError U+B5CE");
expect(() => {ms932Encoder.encode("\uB5CF")}).to.throw(Error, "EncodingError U+B5CF");
expect(() => {ms932Encoder.encode("\uB5D0")}).to.throw(Error, "EncodingError U+B5D0");
expect(() => {ms932Encoder.encode("\uB5D1")}).to.throw(Error, "EncodingError U+B5D1");
expect(() => {ms932Encoder.encode("\uB5D2")}).to.throw(Error, "EncodingError U+B5D2");
expect(() => {ms932Encoder.encode("\uB5D3")}).to.throw(Error, "EncodingError U+B5D3");
expect(() => {ms932Encoder.encode("\uB5D4")}).to.throw(Error, "EncodingError U+B5D4");
expect(() => {ms932Encoder.encode("\uB5D5")}).to.throw(Error, "EncodingError U+B5D5");
expect(() => {ms932Encoder.encode("\uB5D6")}).to.throw(Error, "EncodingError U+B5D6");
expect(() => {ms932Encoder.encode("\uB5D7")}).to.throw(Error, "EncodingError U+B5D7");
expect(() => {ms932Encoder.encode("\uB5D8")}).to.throw(Error, "EncodingError U+B5D8");
expect(() => {ms932Encoder.encode("\uB5D9")}).to.throw(Error, "EncodingError U+B5D9");
expect(() => {ms932Encoder.encode("\uB5DA")}).to.throw(Error, "EncodingError U+B5DA");
expect(() => {ms932Encoder.encode("\uB5DB")}).to.throw(Error, "EncodingError U+B5DB");
expect(() => {ms932Encoder.encode("\uB5DC")}).to.throw(Error, "EncodingError U+B5DC");
expect(() => {ms932Encoder.encode("\uB5DD")}).to.throw(Error, "EncodingError U+B5DD");
expect(() => {ms932Encoder.encode("\uB5DE")}).to.throw(Error, "EncodingError U+B5DE");
expect(() => {ms932Encoder.encode("\uB5DF")}).to.throw(Error, "EncodingError U+B5DF");
expect(() => {ms932Encoder.encode("\uB5E0")}).to.throw(Error, "EncodingError U+B5E0");
expect(() => {ms932Encoder.encode("\uB5E1")}).to.throw(Error, "EncodingError U+B5E1");
expect(() => {ms932Encoder.encode("\uB5E2")}).to.throw(Error, "EncodingError U+B5E2");
expect(() => {ms932Encoder.encode("\uB5E3")}).to.throw(Error, "EncodingError U+B5E3");
expect(() => {ms932Encoder.encode("\uB5E4")}).to.throw(Error, "EncodingError U+B5E4");
expect(() => {ms932Encoder.encode("\uB5E5")}).to.throw(Error, "EncodingError U+B5E5");
expect(() => {ms932Encoder.encode("\uB5E6")}).to.throw(Error, "EncodingError U+B5E6");
expect(() => {ms932Encoder.encode("\uB5E7")}).to.throw(Error, "EncodingError U+B5E7");
expect(() => {ms932Encoder.encode("\uB5E8")}).to.throw(Error, "EncodingError U+B5E8");
expect(() => {ms932Encoder.encode("\uB5E9")}).to.throw(Error, "EncodingError U+B5E9");
expect(() => {ms932Encoder.encode("\uB5EA")}).to.throw(Error, "EncodingError U+B5EA");
expect(() => {ms932Encoder.encode("\uB5EB")}).to.throw(Error, "EncodingError U+B5EB");
expect(() => {ms932Encoder.encode("\uB5EC")}).to.throw(Error, "EncodingError U+B5EC");
expect(() => {ms932Encoder.encode("\uB5ED")}).to.throw(Error, "EncodingError U+B5ED");
expect(() => {ms932Encoder.encode("\uB5EE")}).to.throw(Error, "EncodingError U+B5EE");
expect(() => {ms932Encoder.encode("\uB5EF")}).to.throw(Error, "EncodingError U+B5EF");
expect(() => {ms932Encoder.encode("\uB5F0")}).to.throw(Error, "EncodingError U+B5F0");
expect(() => {ms932Encoder.encode("\uB5F1")}).to.throw(Error, "EncodingError U+B5F1");
expect(() => {ms932Encoder.encode("\uB5F2")}).to.throw(Error, "EncodingError U+B5F2");
expect(() => {ms932Encoder.encode("\uB5F3")}).to.throw(Error, "EncodingError U+B5F3");
expect(() => {ms932Encoder.encode("\uB5F4")}).to.throw(Error, "EncodingError U+B5F4");
expect(() => {ms932Encoder.encode("\uB5F5")}).to.throw(Error, "EncodingError U+B5F5");
expect(() => {ms932Encoder.encode("\uB5F6")}).to.throw(Error, "EncodingError U+B5F6");
expect(() => {ms932Encoder.encode("\uB5F7")}).to.throw(Error, "EncodingError U+B5F7");
expect(() => {ms932Encoder.encode("\uB5F8")}).to.throw(Error, "EncodingError U+B5F8");
expect(() => {ms932Encoder.encode("\uB5F9")}).to.throw(Error, "EncodingError U+B5F9");
expect(() => {ms932Encoder.encode("\uB5FA")}).to.throw(Error, "EncodingError U+B5FA");
expect(() => {ms932Encoder.encode("\uB5FB")}).to.throw(Error, "EncodingError U+B5FB");
expect(() => {ms932Encoder.encode("\uB5FC")}).to.throw(Error, "EncodingError U+B5FC");
expect(() => {ms932Encoder.encode("\uB5FD")}).to.throw(Error, "EncodingError U+B5FD");
expect(() => {ms932Encoder.encode("\uB5FE")}).to.throw(Error, "EncodingError U+B5FE");
expect(() => {ms932Encoder.encode("\uB5FF")}).to.throw(Error, "EncodingError U+B5FF");
expect(() => {ms932Encoder.encode("\uB600")}).to.throw(Error, "EncodingError U+B600");
expect(() => {ms932Encoder.encode("\uB601")}).to.throw(Error, "EncodingError U+B601");
expect(() => {ms932Encoder.encode("\uB602")}).to.throw(Error, "EncodingError U+B602");
expect(() => {ms932Encoder.encode("\uB603")}).to.throw(Error, "EncodingError U+B603");
expect(() => {ms932Encoder.encode("\uB604")}).to.throw(Error, "EncodingError U+B604");
expect(() => {ms932Encoder.encode("\uB605")}).to.throw(Error, "EncodingError U+B605");
expect(() => {ms932Encoder.encode("\uB606")}).to.throw(Error, "EncodingError U+B606");
expect(() => {ms932Encoder.encode("\uB607")}).to.throw(Error, "EncodingError U+B607");
expect(() => {ms932Encoder.encode("\uB608")}).to.throw(Error, "EncodingError U+B608");
expect(() => {ms932Encoder.encode("\uB609")}).to.throw(Error, "EncodingError U+B609");
expect(() => {ms932Encoder.encode("\uB60A")}).to.throw(Error, "EncodingError U+B60A");
expect(() => {ms932Encoder.encode("\uB60B")}).to.throw(Error, "EncodingError U+B60B");
expect(() => {ms932Encoder.encode("\uB60C")}).to.throw(Error, "EncodingError U+B60C");
expect(() => {ms932Encoder.encode("\uB60D")}).to.throw(Error, "EncodingError U+B60D");
expect(() => {ms932Encoder.encode("\uB60E")}).to.throw(Error, "EncodingError U+B60E");
expect(() => {ms932Encoder.encode("\uB60F")}).to.throw(Error, "EncodingError U+B60F");
expect(() => {ms932Encoder.encode("\uB610")}).to.throw(Error, "EncodingError U+B610");
expect(() => {ms932Encoder.encode("\uB611")}).to.throw(Error, "EncodingError U+B611");
expect(() => {ms932Encoder.encode("\uB612")}).to.throw(Error, "EncodingError U+B612");
expect(() => {ms932Encoder.encode("\uB613")}).to.throw(Error, "EncodingError U+B613");
expect(() => {ms932Encoder.encode("\uB614")}).to.throw(Error, "EncodingError U+B614");
expect(() => {ms932Encoder.encode("\uB615")}).to.throw(Error, "EncodingError U+B615");
expect(() => {ms932Encoder.encode("\uB616")}).to.throw(Error, "EncodingError U+B616");
expect(() => {ms932Encoder.encode("\uB617")}).to.throw(Error, "EncodingError U+B617");
expect(() => {ms932Encoder.encode("\uB618")}).to.throw(Error, "EncodingError U+B618");
expect(() => {ms932Encoder.encode("\uB619")}).to.throw(Error, "EncodingError U+B619");
expect(() => {ms932Encoder.encode("\uB61A")}).to.throw(Error, "EncodingError U+B61A");
expect(() => {ms932Encoder.encode("\uB61B")}).to.throw(Error, "EncodingError U+B61B");
expect(() => {ms932Encoder.encode("\uB61C")}).to.throw(Error, "EncodingError U+B61C");
expect(() => {ms932Encoder.encode("\uB61D")}).to.throw(Error, "EncodingError U+B61D");
expect(() => {ms932Encoder.encode("\uB61E")}).to.throw(Error, "EncodingError U+B61E");
expect(() => {ms932Encoder.encode("\uB61F")}).to.throw(Error, "EncodingError U+B61F");
expect(() => {ms932Encoder.encode("\uB620")}).to.throw(Error, "EncodingError U+B620");
expect(() => {ms932Encoder.encode("\uB621")}).to.throw(Error, "EncodingError U+B621");
expect(() => {ms932Encoder.encode("\uB622")}).to.throw(Error, "EncodingError U+B622");
expect(() => {ms932Encoder.encode("\uB623")}).to.throw(Error, "EncodingError U+B623");
expect(() => {ms932Encoder.encode("\uB624")}).to.throw(Error, "EncodingError U+B624");
expect(() => {ms932Encoder.encode("\uB625")}).to.throw(Error, "EncodingError U+B625");
expect(() => {ms932Encoder.encode("\uB626")}).to.throw(Error, "EncodingError U+B626");
expect(() => {ms932Encoder.encode("\uB627")}).to.throw(Error, "EncodingError U+B627");
expect(() => {ms932Encoder.encode("\uB628")}).to.throw(Error, "EncodingError U+B628");
expect(() => {ms932Encoder.encode("\uB629")}).to.throw(Error, "EncodingError U+B629");
expect(() => {ms932Encoder.encode("\uB62A")}).to.throw(Error, "EncodingError U+B62A");
expect(() => {ms932Encoder.encode("\uB62B")}).to.throw(Error, "EncodingError U+B62B");
expect(() => {ms932Encoder.encode("\uB62C")}).to.throw(Error, "EncodingError U+B62C");
expect(() => {ms932Encoder.encode("\uB62D")}).to.throw(Error, "EncodingError U+B62D");
expect(() => {ms932Encoder.encode("\uB62E")}).to.throw(Error, "EncodingError U+B62E");
expect(() => {ms932Encoder.encode("\uB62F")}).to.throw(Error, "EncodingError U+B62F");
expect(() => {ms932Encoder.encode("\uB630")}).to.throw(Error, "EncodingError U+B630");
expect(() => {ms932Encoder.encode("\uB631")}).to.throw(Error, "EncodingError U+B631");
expect(() => {ms932Encoder.encode("\uB632")}).to.throw(Error, "EncodingError U+B632");
expect(() => {ms932Encoder.encode("\uB633")}).to.throw(Error, "EncodingError U+B633");
expect(() => {ms932Encoder.encode("\uB634")}).to.throw(Error, "EncodingError U+B634");
expect(() => {ms932Encoder.encode("\uB635")}).to.throw(Error, "EncodingError U+B635");
expect(() => {ms932Encoder.encode("\uB636")}).to.throw(Error, "EncodingError U+B636");
expect(() => {ms932Encoder.encode("\uB637")}).to.throw(Error, "EncodingError U+B637");
expect(() => {ms932Encoder.encode("\uB638")}).to.throw(Error, "EncodingError U+B638");
expect(() => {ms932Encoder.encode("\uB639")}).to.throw(Error, "EncodingError U+B639");
expect(() => {ms932Encoder.encode("\uB63A")}).to.throw(Error, "EncodingError U+B63A");
expect(() => {ms932Encoder.encode("\uB63B")}).to.throw(Error, "EncodingError U+B63B");
expect(() => {ms932Encoder.encode("\uB63C")}).to.throw(Error, "EncodingError U+B63C");
expect(() => {ms932Encoder.encode("\uB63D")}).to.throw(Error, "EncodingError U+B63D");
expect(() => {ms932Encoder.encode("\uB63E")}).to.throw(Error, "EncodingError U+B63E");
expect(() => {ms932Encoder.encode("\uB63F")}).to.throw(Error, "EncodingError U+B63F");
expect(() => {ms932Encoder.encode("\uB640")}).to.throw(Error, "EncodingError U+B640");
expect(() => {ms932Encoder.encode("\uB641")}).to.throw(Error, "EncodingError U+B641");
expect(() => {ms932Encoder.encode("\uB642")}).to.throw(Error, "EncodingError U+B642");
expect(() => {ms932Encoder.encode("\uB643")}).to.throw(Error, "EncodingError U+B643");
expect(() => {ms932Encoder.encode("\uB644")}).to.throw(Error, "EncodingError U+B644");
expect(() => {ms932Encoder.encode("\uB645")}).to.throw(Error, "EncodingError U+B645");
expect(() => {ms932Encoder.encode("\uB646")}).to.throw(Error, "EncodingError U+B646");
expect(() => {ms932Encoder.encode("\uB647")}).to.throw(Error, "EncodingError U+B647");
expect(() => {ms932Encoder.encode("\uB648")}).to.throw(Error, "EncodingError U+B648");
expect(() => {ms932Encoder.encode("\uB649")}).to.throw(Error, "EncodingError U+B649");
expect(() => {ms932Encoder.encode("\uB64A")}).to.throw(Error, "EncodingError U+B64A");
expect(() => {ms932Encoder.encode("\uB64B")}).to.throw(Error, "EncodingError U+B64B");
expect(() => {ms932Encoder.encode("\uB64C")}).to.throw(Error, "EncodingError U+B64C");
expect(() => {ms932Encoder.encode("\uB64D")}).to.throw(Error, "EncodingError U+B64D");
expect(() => {ms932Encoder.encode("\uB64E")}).to.throw(Error, "EncodingError U+B64E");
expect(() => {ms932Encoder.encode("\uB64F")}).to.throw(Error, "EncodingError U+B64F");
expect(() => {ms932Encoder.encode("\uB650")}).to.throw(Error, "EncodingError U+B650");
expect(() => {ms932Encoder.encode("\uB651")}).to.throw(Error, "EncodingError U+B651");
expect(() => {ms932Encoder.encode("\uB652")}).to.throw(Error, "EncodingError U+B652");
expect(() => {ms932Encoder.encode("\uB653")}).to.throw(Error, "EncodingError U+B653");
expect(() => {ms932Encoder.encode("\uB654")}).to.throw(Error, "EncodingError U+B654");
expect(() => {ms932Encoder.encode("\uB655")}).to.throw(Error, "EncodingError U+B655");
expect(() => {ms932Encoder.encode("\uB656")}).to.throw(Error, "EncodingError U+B656");
expect(() => {ms932Encoder.encode("\uB657")}).to.throw(Error, "EncodingError U+B657");
expect(() => {ms932Encoder.encode("\uB658")}).to.throw(Error, "EncodingError U+B658");
expect(() => {ms932Encoder.encode("\uB659")}).to.throw(Error, "EncodingError U+B659");
expect(() => {ms932Encoder.encode("\uB65A")}).to.throw(Error, "EncodingError U+B65A");
expect(() => {ms932Encoder.encode("\uB65B")}).to.throw(Error, "EncodingError U+B65B");
expect(() => {ms932Encoder.encode("\uB65C")}).to.throw(Error, "EncodingError U+B65C");
expect(() => {ms932Encoder.encode("\uB65D")}).to.throw(Error, "EncodingError U+B65D");
expect(() => {ms932Encoder.encode("\uB65E")}).to.throw(Error, "EncodingError U+B65E");
expect(() => {ms932Encoder.encode("\uB65F")}).to.throw(Error, "EncodingError U+B65F");
expect(() => {ms932Encoder.encode("\uB660")}).to.throw(Error, "EncodingError U+B660");
expect(() => {ms932Encoder.encode("\uB661")}).to.throw(Error, "EncodingError U+B661");
expect(() => {ms932Encoder.encode("\uB662")}).to.throw(Error, "EncodingError U+B662");
expect(() => {ms932Encoder.encode("\uB663")}).to.throw(Error, "EncodingError U+B663");
expect(() => {ms932Encoder.encode("\uB664")}).to.throw(Error, "EncodingError U+B664");
expect(() => {ms932Encoder.encode("\uB665")}).to.throw(Error, "EncodingError U+B665");
expect(() => {ms932Encoder.encode("\uB666")}).to.throw(Error, "EncodingError U+B666");
expect(() => {ms932Encoder.encode("\uB667")}).to.throw(Error, "EncodingError U+B667");
expect(() => {ms932Encoder.encode("\uB668")}).to.throw(Error, "EncodingError U+B668");
expect(() => {ms932Encoder.encode("\uB669")}).to.throw(Error, "EncodingError U+B669");
expect(() => {ms932Encoder.encode("\uB66A")}).to.throw(Error, "EncodingError U+B66A");
expect(() => {ms932Encoder.encode("\uB66B")}).to.throw(Error, "EncodingError U+B66B");
expect(() => {ms932Encoder.encode("\uB66C")}).to.throw(Error, "EncodingError U+B66C");
expect(() => {ms932Encoder.encode("\uB66D")}).to.throw(Error, "EncodingError U+B66D");
expect(() => {ms932Encoder.encode("\uB66E")}).to.throw(Error, "EncodingError U+B66E");
expect(() => {ms932Encoder.encode("\uB66F")}).to.throw(Error, "EncodingError U+B66F");
expect(() => {ms932Encoder.encode("\uB670")}).to.throw(Error, "EncodingError U+B670");
expect(() => {ms932Encoder.encode("\uB671")}).to.throw(Error, "EncodingError U+B671");
expect(() => {ms932Encoder.encode("\uB672")}).to.throw(Error, "EncodingError U+B672");
expect(() => {ms932Encoder.encode("\uB673")}).to.throw(Error, "EncodingError U+B673");
expect(() => {ms932Encoder.encode("\uB674")}).to.throw(Error, "EncodingError U+B674");
expect(() => {ms932Encoder.encode("\uB675")}).to.throw(Error, "EncodingError U+B675");
expect(() => {ms932Encoder.encode("\uB676")}).to.throw(Error, "EncodingError U+B676");
expect(() => {ms932Encoder.encode("\uB677")}).to.throw(Error, "EncodingError U+B677");
expect(() => {ms932Encoder.encode("\uB678")}).to.throw(Error, "EncodingError U+B678");
expect(() => {ms932Encoder.encode("\uB679")}).to.throw(Error, "EncodingError U+B679");
expect(() => {ms932Encoder.encode("\uB67A")}).to.throw(Error, "EncodingError U+B67A");
expect(() => {ms932Encoder.encode("\uB67B")}).to.throw(Error, "EncodingError U+B67B");
expect(() => {ms932Encoder.encode("\uB67C")}).to.throw(Error, "EncodingError U+B67C");
expect(() => {ms932Encoder.encode("\uB67D")}).to.throw(Error, "EncodingError U+B67D");
expect(() => {ms932Encoder.encode("\uB67E")}).to.throw(Error, "EncodingError U+B67E");
expect(() => {ms932Encoder.encode("\uB67F")}).to.throw(Error, "EncodingError U+B67F");
expect(() => {ms932Encoder.encode("\uB680")}).to.throw(Error, "EncodingError U+B680");
expect(() => {ms932Encoder.encode("\uB681")}).to.throw(Error, "EncodingError U+B681");
expect(() => {ms932Encoder.encode("\uB682")}).to.throw(Error, "EncodingError U+B682");
expect(() => {ms932Encoder.encode("\uB683")}).to.throw(Error, "EncodingError U+B683");
expect(() => {ms932Encoder.encode("\uB684")}).to.throw(Error, "EncodingError U+B684");
expect(() => {ms932Encoder.encode("\uB685")}).to.throw(Error, "EncodingError U+B685");
expect(() => {ms932Encoder.encode("\uB686")}).to.throw(Error, "EncodingError U+B686");
expect(() => {ms932Encoder.encode("\uB687")}).to.throw(Error, "EncodingError U+B687");
expect(() => {ms932Encoder.encode("\uB688")}).to.throw(Error, "EncodingError U+B688");
expect(() => {ms932Encoder.encode("\uB689")}).to.throw(Error, "EncodingError U+B689");
expect(() => {ms932Encoder.encode("\uB68A")}).to.throw(Error, "EncodingError U+B68A");
expect(() => {ms932Encoder.encode("\uB68B")}).to.throw(Error, "EncodingError U+B68B");
expect(() => {ms932Encoder.encode("\uB68C")}).to.throw(Error, "EncodingError U+B68C");
expect(() => {ms932Encoder.encode("\uB68D")}).to.throw(Error, "EncodingError U+B68D");
expect(() => {ms932Encoder.encode("\uB68E")}).to.throw(Error, "EncodingError U+B68E");
expect(() => {ms932Encoder.encode("\uB68F")}).to.throw(Error, "EncodingError U+B68F");
expect(() => {ms932Encoder.encode("\uB690")}).to.throw(Error, "EncodingError U+B690");
expect(() => {ms932Encoder.encode("\uB691")}).to.throw(Error, "EncodingError U+B691");
expect(() => {ms932Encoder.encode("\uB692")}).to.throw(Error, "EncodingError U+B692");
expect(() => {ms932Encoder.encode("\uB693")}).to.throw(Error, "EncodingError U+B693");
expect(() => {ms932Encoder.encode("\uB694")}).to.throw(Error, "EncodingError U+B694");
expect(() => {ms932Encoder.encode("\uB695")}).to.throw(Error, "EncodingError U+B695");
expect(() => {ms932Encoder.encode("\uB696")}).to.throw(Error, "EncodingError U+B696");
expect(() => {ms932Encoder.encode("\uB697")}).to.throw(Error, "EncodingError U+B697");
expect(() => {ms932Encoder.encode("\uB698")}).to.throw(Error, "EncodingError U+B698");
expect(() => {ms932Encoder.encode("\uB699")}).to.throw(Error, "EncodingError U+B699");
expect(() => {ms932Encoder.encode("\uB69A")}).to.throw(Error, "EncodingError U+B69A");
expect(() => {ms932Encoder.encode("\uB69B")}).to.throw(Error, "EncodingError U+B69B");
expect(() => {ms932Encoder.encode("\uB69C")}).to.throw(Error, "EncodingError U+B69C");
expect(() => {ms932Encoder.encode("\uB69D")}).to.throw(Error, "EncodingError U+B69D");
expect(() => {ms932Encoder.encode("\uB69E")}).to.throw(Error, "EncodingError U+B69E");
expect(() => {ms932Encoder.encode("\uB69F")}).to.throw(Error, "EncodingError U+B69F");
expect(() => {ms932Encoder.encode("\uB6A0")}).to.throw(Error, "EncodingError U+B6A0");
expect(() => {ms932Encoder.encode("\uB6A1")}).to.throw(Error, "EncodingError U+B6A1");
expect(() => {ms932Encoder.encode("\uB6A2")}).to.throw(Error, "EncodingError U+B6A2");
expect(() => {ms932Encoder.encode("\uB6A3")}).to.throw(Error, "EncodingError U+B6A3");
expect(() => {ms932Encoder.encode("\uB6A4")}).to.throw(Error, "EncodingError U+B6A4");
expect(() => {ms932Encoder.encode("\uB6A5")}).to.throw(Error, "EncodingError U+B6A5");
expect(() => {ms932Encoder.encode("\uB6A6")}).to.throw(Error, "EncodingError U+B6A6");
expect(() => {ms932Encoder.encode("\uB6A7")}).to.throw(Error, "EncodingError U+B6A7");
expect(() => {ms932Encoder.encode("\uB6A8")}).to.throw(Error, "EncodingError U+B6A8");
expect(() => {ms932Encoder.encode("\uB6A9")}).to.throw(Error, "EncodingError U+B6A9");
expect(() => {ms932Encoder.encode("\uB6AA")}).to.throw(Error, "EncodingError U+B6AA");
expect(() => {ms932Encoder.encode("\uB6AB")}).to.throw(Error, "EncodingError U+B6AB");
expect(() => {ms932Encoder.encode("\uB6AC")}).to.throw(Error, "EncodingError U+B6AC");
expect(() => {ms932Encoder.encode("\uB6AD")}).to.throw(Error, "EncodingError U+B6AD");
expect(() => {ms932Encoder.encode("\uB6AE")}).to.throw(Error, "EncodingError U+B6AE");
expect(() => {ms932Encoder.encode("\uB6AF")}).to.throw(Error, "EncodingError U+B6AF");
expect(() => {ms932Encoder.encode("\uB6B0")}).to.throw(Error, "EncodingError U+B6B0");
expect(() => {ms932Encoder.encode("\uB6B1")}).to.throw(Error, "EncodingError U+B6B1");
expect(() => {ms932Encoder.encode("\uB6B2")}).to.throw(Error, "EncodingError U+B6B2");
expect(() => {ms932Encoder.encode("\uB6B3")}).to.throw(Error, "EncodingError U+B6B3");
expect(() => {ms932Encoder.encode("\uB6B4")}).to.throw(Error, "EncodingError U+B6B4");
expect(() => {ms932Encoder.encode("\uB6B5")}).to.throw(Error, "EncodingError U+B6B5");
expect(() => {ms932Encoder.encode("\uB6B6")}).to.throw(Error, "EncodingError U+B6B6");
expect(() => {ms932Encoder.encode("\uB6B7")}).to.throw(Error, "EncodingError U+B6B7");
expect(() => {ms932Encoder.encode("\uB6B8")}).to.throw(Error, "EncodingError U+B6B8");
expect(() => {ms932Encoder.encode("\uB6B9")}).to.throw(Error, "EncodingError U+B6B9");
expect(() => {ms932Encoder.encode("\uB6BA")}).to.throw(Error, "EncodingError U+B6BA");
expect(() => {ms932Encoder.encode("\uB6BB")}).to.throw(Error, "EncodingError U+B6BB");
expect(() => {ms932Encoder.encode("\uB6BC")}).to.throw(Error, "EncodingError U+B6BC");
expect(() => {ms932Encoder.encode("\uB6BD")}).to.throw(Error, "EncodingError U+B6BD");
expect(() => {ms932Encoder.encode("\uB6BE")}).to.throw(Error, "EncodingError U+B6BE");
expect(() => {ms932Encoder.encode("\uB6BF")}).to.throw(Error, "EncodingError U+B6BF");
expect(() => {ms932Encoder.encode("\uB6C0")}).to.throw(Error, "EncodingError U+B6C0");
expect(() => {ms932Encoder.encode("\uB6C1")}).to.throw(Error, "EncodingError U+B6C1");
expect(() => {ms932Encoder.encode("\uB6C2")}).to.throw(Error, "EncodingError U+B6C2");
expect(() => {ms932Encoder.encode("\uB6C3")}).to.throw(Error, "EncodingError U+B6C3");
expect(() => {ms932Encoder.encode("\uB6C4")}).to.throw(Error, "EncodingError U+B6C4");
expect(() => {ms932Encoder.encode("\uB6C5")}).to.throw(Error, "EncodingError U+B6C5");
expect(() => {ms932Encoder.encode("\uB6C6")}).to.throw(Error, "EncodingError U+B6C6");
expect(() => {ms932Encoder.encode("\uB6C7")}).to.throw(Error, "EncodingError U+B6C7");
expect(() => {ms932Encoder.encode("\uB6C8")}).to.throw(Error, "EncodingError U+B6C8");
expect(() => {ms932Encoder.encode("\uB6C9")}).to.throw(Error, "EncodingError U+B6C9");
expect(() => {ms932Encoder.encode("\uB6CA")}).to.throw(Error, "EncodingError U+B6CA");
expect(() => {ms932Encoder.encode("\uB6CB")}).to.throw(Error, "EncodingError U+B6CB");
expect(() => {ms932Encoder.encode("\uB6CC")}).to.throw(Error, "EncodingError U+B6CC");
expect(() => {ms932Encoder.encode("\uB6CD")}).to.throw(Error, "EncodingError U+B6CD");
expect(() => {ms932Encoder.encode("\uB6CE")}).to.throw(Error, "EncodingError U+B6CE");
expect(() => {ms932Encoder.encode("\uB6CF")}).to.throw(Error, "EncodingError U+B6CF");
expect(() => {ms932Encoder.encode("\uB6D0")}).to.throw(Error, "EncodingError U+B6D0");
expect(() => {ms932Encoder.encode("\uB6D1")}).to.throw(Error, "EncodingError U+B6D1");
expect(() => {ms932Encoder.encode("\uB6D2")}).to.throw(Error, "EncodingError U+B6D2");
expect(() => {ms932Encoder.encode("\uB6D3")}).to.throw(Error, "EncodingError U+B6D3");
expect(() => {ms932Encoder.encode("\uB6D4")}).to.throw(Error, "EncodingError U+B6D4");
expect(() => {ms932Encoder.encode("\uB6D5")}).to.throw(Error, "EncodingError U+B6D5");
expect(() => {ms932Encoder.encode("\uB6D6")}).to.throw(Error, "EncodingError U+B6D6");
expect(() => {ms932Encoder.encode("\uB6D7")}).to.throw(Error, "EncodingError U+B6D7");
expect(() => {ms932Encoder.encode("\uB6D8")}).to.throw(Error, "EncodingError U+B6D8");
expect(() => {ms932Encoder.encode("\uB6D9")}).to.throw(Error, "EncodingError U+B6D9");
expect(() => {ms932Encoder.encode("\uB6DA")}).to.throw(Error, "EncodingError U+B6DA");
expect(() => {ms932Encoder.encode("\uB6DB")}).to.throw(Error, "EncodingError U+B6DB");
expect(() => {ms932Encoder.encode("\uB6DC")}).to.throw(Error, "EncodingError U+B6DC");
expect(() => {ms932Encoder.encode("\uB6DD")}).to.throw(Error, "EncodingError U+B6DD");
expect(() => {ms932Encoder.encode("\uB6DE")}).to.throw(Error, "EncodingError U+B6DE");
expect(() => {ms932Encoder.encode("\uB6DF")}).to.throw(Error, "EncodingError U+B6DF");
expect(() => {ms932Encoder.encode("\uB6E0")}).to.throw(Error, "EncodingError U+B6E0");
expect(() => {ms932Encoder.encode("\uB6E1")}).to.throw(Error, "EncodingError U+B6E1");
expect(() => {ms932Encoder.encode("\uB6E2")}).to.throw(Error, "EncodingError U+B6E2");
expect(() => {ms932Encoder.encode("\uB6E3")}).to.throw(Error, "EncodingError U+B6E3");
expect(() => {ms932Encoder.encode("\uB6E4")}).to.throw(Error, "EncodingError U+B6E4");
expect(() => {ms932Encoder.encode("\uB6E5")}).to.throw(Error, "EncodingError U+B6E5");
expect(() => {ms932Encoder.encode("\uB6E6")}).to.throw(Error, "EncodingError U+B6E6");
expect(() => {ms932Encoder.encode("\uB6E7")}).to.throw(Error, "EncodingError U+B6E7");
expect(() => {ms932Encoder.encode("\uB6E8")}).to.throw(Error, "EncodingError U+B6E8");
expect(() => {ms932Encoder.encode("\uB6E9")}).to.throw(Error, "EncodingError U+B6E9");
expect(() => {ms932Encoder.encode("\uB6EA")}).to.throw(Error, "EncodingError U+B6EA");
expect(() => {ms932Encoder.encode("\uB6EB")}).to.throw(Error, "EncodingError U+B6EB");
expect(() => {ms932Encoder.encode("\uB6EC")}).to.throw(Error, "EncodingError U+B6EC");
expect(() => {ms932Encoder.encode("\uB6ED")}).to.throw(Error, "EncodingError U+B6ED");
expect(() => {ms932Encoder.encode("\uB6EE")}).to.throw(Error, "EncodingError U+B6EE");
expect(() => {ms932Encoder.encode("\uB6EF")}).to.throw(Error, "EncodingError U+B6EF");
expect(() => {ms932Encoder.encode("\uB6F0")}).to.throw(Error, "EncodingError U+B6F0");
expect(() => {ms932Encoder.encode("\uB6F1")}).to.throw(Error, "EncodingError U+B6F1");
expect(() => {ms932Encoder.encode("\uB6F2")}).to.throw(Error, "EncodingError U+B6F2");
expect(() => {ms932Encoder.encode("\uB6F3")}).to.throw(Error, "EncodingError U+B6F3");
expect(() => {ms932Encoder.encode("\uB6F4")}).to.throw(Error, "EncodingError U+B6F4");
expect(() => {ms932Encoder.encode("\uB6F5")}).to.throw(Error, "EncodingError U+B6F5");
expect(() => {ms932Encoder.encode("\uB6F6")}).to.throw(Error, "EncodingError U+B6F6");
expect(() => {ms932Encoder.encode("\uB6F7")}).to.throw(Error, "EncodingError U+B6F7");
expect(() => {ms932Encoder.encode("\uB6F8")}).to.throw(Error, "EncodingError U+B6F8");
expect(() => {ms932Encoder.encode("\uB6F9")}).to.throw(Error, "EncodingError U+B6F9");
expect(() => {ms932Encoder.encode("\uB6FA")}).to.throw(Error, "EncodingError U+B6FA");
expect(() => {ms932Encoder.encode("\uB6FB")}).to.throw(Error, "EncodingError U+B6FB");
expect(() => {ms932Encoder.encode("\uB6FC")}).to.throw(Error, "EncodingError U+B6FC");
expect(() => {ms932Encoder.encode("\uB6FD")}).to.throw(Error, "EncodingError U+B6FD");
expect(() => {ms932Encoder.encode("\uB6FE")}).to.throw(Error, "EncodingError U+B6FE");
expect(() => {ms932Encoder.encode("\uB6FF")}).to.throw(Error, "EncodingError U+B6FF");
expect(() => {ms932Encoder.encode("\uB700")}).to.throw(Error, "EncodingError U+B700");
expect(() => {ms932Encoder.encode("\uB701")}).to.throw(Error, "EncodingError U+B701");
expect(() => {ms932Encoder.encode("\uB702")}).to.throw(Error, "EncodingError U+B702");
expect(() => {ms932Encoder.encode("\uB703")}).to.throw(Error, "EncodingError U+B703");
expect(() => {ms932Encoder.encode("\uB704")}).to.throw(Error, "EncodingError U+B704");
expect(() => {ms932Encoder.encode("\uB705")}).to.throw(Error, "EncodingError U+B705");
expect(() => {ms932Encoder.encode("\uB706")}).to.throw(Error, "EncodingError U+B706");
expect(() => {ms932Encoder.encode("\uB707")}).to.throw(Error, "EncodingError U+B707");
expect(() => {ms932Encoder.encode("\uB708")}).to.throw(Error, "EncodingError U+B708");
expect(() => {ms932Encoder.encode("\uB709")}).to.throw(Error, "EncodingError U+B709");
expect(() => {ms932Encoder.encode("\uB70A")}).to.throw(Error, "EncodingError U+B70A");
expect(() => {ms932Encoder.encode("\uB70B")}).to.throw(Error, "EncodingError U+B70B");
expect(() => {ms932Encoder.encode("\uB70C")}).to.throw(Error, "EncodingError U+B70C");
expect(() => {ms932Encoder.encode("\uB70D")}).to.throw(Error, "EncodingError U+B70D");
expect(() => {ms932Encoder.encode("\uB70E")}).to.throw(Error, "EncodingError U+B70E");
expect(() => {ms932Encoder.encode("\uB70F")}).to.throw(Error, "EncodingError U+B70F");
expect(() => {ms932Encoder.encode("\uB710")}).to.throw(Error, "EncodingError U+B710");
expect(() => {ms932Encoder.encode("\uB711")}).to.throw(Error, "EncodingError U+B711");
expect(() => {ms932Encoder.encode("\uB712")}).to.throw(Error, "EncodingError U+B712");
expect(() => {ms932Encoder.encode("\uB713")}).to.throw(Error, "EncodingError U+B713");
expect(() => {ms932Encoder.encode("\uB714")}).to.throw(Error, "EncodingError U+B714");
expect(() => {ms932Encoder.encode("\uB715")}).to.throw(Error, "EncodingError U+B715");
expect(() => {ms932Encoder.encode("\uB716")}).to.throw(Error, "EncodingError U+B716");
expect(() => {ms932Encoder.encode("\uB717")}).to.throw(Error, "EncodingError U+B717");
expect(() => {ms932Encoder.encode("\uB718")}).to.throw(Error, "EncodingError U+B718");
expect(() => {ms932Encoder.encode("\uB719")}).to.throw(Error, "EncodingError U+B719");
expect(() => {ms932Encoder.encode("\uB71A")}).to.throw(Error, "EncodingError U+B71A");
expect(() => {ms932Encoder.encode("\uB71B")}).to.throw(Error, "EncodingError U+B71B");
expect(() => {ms932Encoder.encode("\uB71C")}).to.throw(Error, "EncodingError U+B71C");
expect(() => {ms932Encoder.encode("\uB71D")}).to.throw(Error, "EncodingError U+B71D");
expect(() => {ms932Encoder.encode("\uB71E")}).to.throw(Error, "EncodingError U+B71E");
expect(() => {ms932Encoder.encode("\uB71F")}).to.throw(Error, "EncodingError U+B71F");
expect(() => {ms932Encoder.encode("\uB720")}).to.throw(Error, "EncodingError U+B720");
expect(() => {ms932Encoder.encode("\uB721")}).to.throw(Error, "EncodingError U+B721");
expect(() => {ms932Encoder.encode("\uB722")}).to.throw(Error, "EncodingError U+B722");
expect(() => {ms932Encoder.encode("\uB723")}).to.throw(Error, "EncodingError U+B723");
expect(() => {ms932Encoder.encode("\uB724")}).to.throw(Error, "EncodingError U+B724");
expect(() => {ms932Encoder.encode("\uB725")}).to.throw(Error, "EncodingError U+B725");
expect(() => {ms932Encoder.encode("\uB726")}).to.throw(Error, "EncodingError U+B726");
expect(() => {ms932Encoder.encode("\uB727")}).to.throw(Error, "EncodingError U+B727");
expect(() => {ms932Encoder.encode("\uB728")}).to.throw(Error, "EncodingError U+B728");
expect(() => {ms932Encoder.encode("\uB729")}).to.throw(Error, "EncodingError U+B729");
expect(() => {ms932Encoder.encode("\uB72A")}).to.throw(Error, "EncodingError U+B72A");
expect(() => {ms932Encoder.encode("\uB72B")}).to.throw(Error, "EncodingError U+B72B");
expect(() => {ms932Encoder.encode("\uB72C")}).to.throw(Error, "EncodingError U+B72C");
expect(() => {ms932Encoder.encode("\uB72D")}).to.throw(Error, "EncodingError U+B72D");
expect(() => {ms932Encoder.encode("\uB72E")}).to.throw(Error, "EncodingError U+B72E");
expect(() => {ms932Encoder.encode("\uB72F")}).to.throw(Error, "EncodingError U+B72F");
expect(() => {ms932Encoder.encode("\uB730")}).to.throw(Error, "EncodingError U+B730");
expect(() => {ms932Encoder.encode("\uB731")}).to.throw(Error, "EncodingError U+B731");
expect(() => {ms932Encoder.encode("\uB732")}).to.throw(Error, "EncodingError U+B732");
expect(() => {ms932Encoder.encode("\uB733")}).to.throw(Error, "EncodingError U+B733");
expect(() => {ms932Encoder.encode("\uB734")}).to.throw(Error, "EncodingError U+B734");
expect(() => {ms932Encoder.encode("\uB735")}).to.throw(Error, "EncodingError U+B735");
expect(() => {ms932Encoder.encode("\uB736")}).to.throw(Error, "EncodingError U+B736");
expect(() => {ms932Encoder.encode("\uB737")}).to.throw(Error, "EncodingError U+B737");
expect(() => {ms932Encoder.encode("\uB738")}).to.throw(Error, "EncodingError U+B738");
expect(() => {ms932Encoder.encode("\uB739")}).to.throw(Error, "EncodingError U+B739");
expect(() => {ms932Encoder.encode("\uB73A")}).to.throw(Error, "EncodingError U+B73A");
expect(() => {ms932Encoder.encode("\uB73B")}).to.throw(Error, "EncodingError U+B73B");
expect(() => {ms932Encoder.encode("\uB73C")}).to.throw(Error, "EncodingError U+B73C");
expect(() => {ms932Encoder.encode("\uB73D")}).to.throw(Error, "EncodingError U+B73D");
expect(() => {ms932Encoder.encode("\uB73E")}).to.throw(Error, "EncodingError U+B73E");
expect(() => {ms932Encoder.encode("\uB73F")}).to.throw(Error, "EncodingError U+B73F");
expect(() => {ms932Encoder.encode("\uB740")}).to.throw(Error, "EncodingError U+B740");
expect(() => {ms932Encoder.encode("\uB741")}).to.throw(Error, "EncodingError U+B741");
expect(() => {ms932Encoder.encode("\uB742")}).to.throw(Error, "EncodingError U+B742");
expect(() => {ms932Encoder.encode("\uB743")}).to.throw(Error, "EncodingError U+B743");
expect(() => {ms932Encoder.encode("\uB744")}).to.throw(Error, "EncodingError U+B744");
expect(() => {ms932Encoder.encode("\uB745")}).to.throw(Error, "EncodingError U+B745");
expect(() => {ms932Encoder.encode("\uB746")}).to.throw(Error, "EncodingError U+B746");
expect(() => {ms932Encoder.encode("\uB747")}).to.throw(Error, "EncodingError U+B747");
expect(() => {ms932Encoder.encode("\uB748")}).to.throw(Error, "EncodingError U+B748");
expect(() => {ms932Encoder.encode("\uB749")}).to.throw(Error, "EncodingError U+B749");
expect(() => {ms932Encoder.encode("\uB74A")}).to.throw(Error, "EncodingError U+B74A");
expect(() => {ms932Encoder.encode("\uB74B")}).to.throw(Error, "EncodingError U+B74B");
expect(() => {ms932Encoder.encode("\uB74C")}).to.throw(Error, "EncodingError U+B74C");
expect(() => {ms932Encoder.encode("\uB74D")}).to.throw(Error, "EncodingError U+B74D");
expect(() => {ms932Encoder.encode("\uB74E")}).to.throw(Error, "EncodingError U+B74E");
expect(() => {ms932Encoder.encode("\uB74F")}).to.throw(Error, "EncodingError U+B74F");
expect(() => {ms932Encoder.encode("\uB750")}).to.throw(Error, "EncodingError U+B750");
expect(() => {ms932Encoder.encode("\uB751")}).to.throw(Error, "EncodingError U+B751");
expect(() => {ms932Encoder.encode("\uB752")}).to.throw(Error, "EncodingError U+B752");
expect(() => {ms932Encoder.encode("\uB753")}).to.throw(Error, "EncodingError U+B753");
expect(() => {ms932Encoder.encode("\uB754")}).to.throw(Error, "EncodingError U+B754");
expect(() => {ms932Encoder.encode("\uB755")}).to.throw(Error, "EncodingError U+B755");
expect(() => {ms932Encoder.encode("\uB756")}).to.throw(Error, "EncodingError U+B756");
expect(() => {ms932Encoder.encode("\uB757")}).to.throw(Error, "EncodingError U+B757");
expect(() => {ms932Encoder.encode("\uB758")}).to.throw(Error, "EncodingError U+B758");
expect(() => {ms932Encoder.encode("\uB759")}).to.throw(Error, "EncodingError U+B759");
expect(() => {ms932Encoder.encode("\uB75A")}).to.throw(Error, "EncodingError U+B75A");
expect(() => {ms932Encoder.encode("\uB75B")}).to.throw(Error, "EncodingError U+B75B");
expect(() => {ms932Encoder.encode("\uB75C")}).to.throw(Error, "EncodingError U+B75C");
expect(() => {ms932Encoder.encode("\uB75D")}).to.throw(Error, "EncodingError U+B75D");
expect(() => {ms932Encoder.encode("\uB75E")}).to.throw(Error, "EncodingError U+B75E");
expect(() => {ms932Encoder.encode("\uB75F")}).to.throw(Error, "EncodingError U+B75F");
expect(() => {ms932Encoder.encode("\uB760")}).to.throw(Error, "EncodingError U+B760");
expect(() => {ms932Encoder.encode("\uB761")}).to.throw(Error, "EncodingError U+B761");
expect(() => {ms932Encoder.encode("\uB762")}).to.throw(Error, "EncodingError U+B762");
expect(() => {ms932Encoder.encode("\uB763")}).to.throw(Error, "EncodingError U+B763");
expect(() => {ms932Encoder.encode("\uB764")}).to.throw(Error, "EncodingError U+B764");
expect(() => {ms932Encoder.encode("\uB765")}).to.throw(Error, "EncodingError U+B765");
expect(() => {ms932Encoder.encode("\uB766")}).to.throw(Error, "EncodingError U+B766");
expect(() => {ms932Encoder.encode("\uB767")}).to.throw(Error, "EncodingError U+B767");
expect(() => {ms932Encoder.encode("\uB768")}).to.throw(Error, "EncodingError U+B768");
expect(() => {ms932Encoder.encode("\uB769")}).to.throw(Error, "EncodingError U+B769");
expect(() => {ms932Encoder.encode("\uB76A")}).to.throw(Error, "EncodingError U+B76A");
expect(() => {ms932Encoder.encode("\uB76B")}).to.throw(Error, "EncodingError U+B76B");
expect(() => {ms932Encoder.encode("\uB76C")}).to.throw(Error, "EncodingError U+B76C");
expect(() => {ms932Encoder.encode("\uB76D")}).to.throw(Error, "EncodingError U+B76D");
expect(() => {ms932Encoder.encode("\uB76E")}).to.throw(Error, "EncodingError U+B76E");
expect(() => {ms932Encoder.encode("\uB76F")}).to.throw(Error, "EncodingError U+B76F");
expect(() => {ms932Encoder.encode("\uB770")}).to.throw(Error, "EncodingError U+B770");
expect(() => {ms932Encoder.encode("\uB771")}).to.throw(Error, "EncodingError U+B771");
expect(() => {ms932Encoder.encode("\uB772")}).to.throw(Error, "EncodingError U+B772");
expect(() => {ms932Encoder.encode("\uB773")}).to.throw(Error, "EncodingError U+B773");
expect(() => {ms932Encoder.encode("\uB774")}).to.throw(Error, "EncodingError U+B774");
expect(() => {ms932Encoder.encode("\uB775")}).to.throw(Error, "EncodingError U+B775");
expect(() => {ms932Encoder.encode("\uB776")}).to.throw(Error, "EncodingError U+B776");
expect(() => {ms932Encoder.encode("\uB777")}).to.throw(Error, "EncodingError U+B777");
expect(() => {ms932Encoder.encode("\uB778")}).to.throw(Error, "EncodingError U+B778");
expect(() => {ms932Encoder.encode("\uB779")}).to.throw(Error, "EncodingError U+B779");
expect(() => {ms932Encoder.encode("\uB77A")}).to.throw(Error, "EncodingError U+B77A");
expect(() => {ms932Encoder.encode("\uB77B")}).to.throw(Error, "EncodingError U+B77B");
expect(() => {ms932Encoder.encode("\uB77C")}).to.throw(Error, "EncodingError U+B77C");
expect(() => {ms932Encoder.encode("\uB77D")}).to.throw(Error, "EncodingError U+B77D");
expect(() => {ms932Encoder.encode("\uB77E")}).to.throw(Error, "EncodingError U+B77E");
expect(() => {ms932Encoder.encode("\uB77F")}).to.throw(Error, "EncodingError U+B77F");
expect(() => {ms932Encoder.encode("\uB780")}).to.throw(Error, "EncodingError U+B780");
expect(() => {ms932Encoder.encode("\uB781")}).to.throw(Error, "EncodingError U+B781");
expect(() => {ms932Encoder.encode("\uB782")}).to.throw(Error, "EncodingError U+B782");
expect(() => {ms932Encoder.encode("\uB783")}).to.throw(Error, "EncodingError U+B783");
expect(() => {ms932Encoder.encode("\uB784")}).to.throw(Error, "EncodingError U+B784");
expect(() => {ms932Encoder.encode("\uB785")}).to.throw(Error, "EncodingError U+B785");
expect(() => {ms932Encoder.encode("\uB786")}).to.throw(Error, "EncodingError U+B786");
expect(() => {ms932Encoder.encode("\uB787")}).to.throw(Error, "EncodingError U+B787");
expect(() => {ms932Encoder.encode("\uB788")}).to.throw(Error, "EncodingError U+B788");
expect(() => {ms932Encoder.encode("\uB789")}).to.throw(Error, "EncodingError U+B789");
expect(() => {ms932Encoder.encode("\uB78A")}).to.throw(Error, "EncodingError U+B78A");
expect(() => {ms932Encoder.encode("\uB78B")}).to.throw(Error, "EncodingError U+B78B");
expect(() => {ms932Encoder.encode("\uB78C")}).to.throw(Error, "EncodingError U+B78C");
expect(() => {ms932Encoder.encode("\uB78D")}).to.throw(Error, "EncodingError U+B78D");
expect(() => {ms932Encoder.encode("\uB78E")}).to.throw(Error, "EncodingError U+B78E");
expect(() => {ms932Encoder.encode("\uB78F")}).to.throw(Error, "EncodingError U+B78F");
expect(() => {ms932Encoder.encode("\uB790")}).to.throw(Error, "EncodingError U+B790");
expect(() => {ms932Encoder.encode("\uB791")}).to.throw(Error, "EncodingError U+B791");
expect(() => {ms932Encoder.encode("\uB792")}).to.throw(Error, "EncodingError U+B792");
expect(() => {ms932Encoder.encode("\uB793")}).to.throw(Error, "EncodingError U+B793");
expect(() => {ms932Encoder.encode("\uB794")}).to.throw(Error, "EncodingError U+B794");
expect(() => {ms932Encoder.encode("\uB795")}).to.throw(Error, "EncodingError U+B795");
expect(() => {ms932Encoder.encode("\uB796")}).to.throw(Error, "EncodingError U+B796");
expect(() => {ms932Encoder.encode("\uB797")}).to.throw(Error, "EncodingError U+B797");
expect(() => {ms932Encoder.encode("\uB798")}).to.throw(Error, "EncodingError U+B798");
expect(() => {ms932Encoder.encode("\uB799")}).to.throw(Error, "EncodingError U+B799");
expect(() => {ms932Encoder.encode("\uB79A")}).to.throw(Error, "EncodingError U+B79A");
expect(() => {ms932Encoder.encode("\uB79B")}).to.throw(Error, "EncodingError U+B79B");
expect(() => {ms932Encoder.encode("\uB79C")}).to.throw(Error, "EncodingError U+B79C");
expect(() => {ms932Encoder.encode("\uB79D")}).to.throw(Error, "EncodingError U+B79D");
expect(() => {ms932Encoder.encode("\uB79E")}).to.throw(Error, "EncodingError U+B79E");
expect(() => {ms932Encoder.encode("\uB79F")}).to.throw(Error, "EncodingError U+B79F");
expect(() => {ms932Encoder.encode("\uB7A0")}).to.throw(Error, "EncodingError U+B7A0");
expect(() => {ms932Encoder.encode("\uB7A1")}).to.throw(Error, "EncodingError U+B7A1");
expect(() => {ms932Encoder.encode("\uB7A2")}).to.throw(Error, "EncodingError U+B7A2");
expect(() => {ms932Encoder.encode("\uB7A3")}).to.throw(Error, "EncodingError U+B7A3");
expect(() => {ms932Encoder.encode("\uB7A4")}).to.throw(Error, "EncodingError U+B7A4");
expect(() => {ms932Encoder.encode("\uB7A5")}).to.throw(Error, "EncodingError U+B7A5");
expect(() => {ms932Encoder.encode("\uB7A6")}).to.throw(Error, "EncodingError U+B7A6");
expect(() => {ms932Encoder.encode("\uB7A7")}).to.throw(Error, "EncodingError U+B7A7");
expect(() => {ms932Encoder.encode("\uB7A8")}).to.throw(Error, "EncodingError U+B7A8");
expect(() => {ms932Encoder.encode("\uB7A9")}).to.throw(Error, "EncodingError U+B7A9");
expect(() => {ms932Encoder.encode("\uB7AA")}).to.throw(Error, "EncodingError U+B7AA");
expect(() => {ms932Encoder.encode("\uB7AB")}).to.throw(Error, "EncodingError U+B7AB");
expect(() => {ms932Encoder.encode("\uB7AC")}).to.throw(Error, "EncodingError U+B7AC");
expect(() => {ms932Encoder.encode("\uB7AD")}).to.throw(Error, "EncodingError U+B7AD");
expect(() => {ms932Encoder.encode("\uB7AE")}).to.throw(Error, "EncodingError U+B7AE");
expect(() => {ms932Encoder.encode("\uB7AF")}).to.throw(Error, "EncodingError U+B7AF");
expect(() => {ms932Encoder.encode("\uB7B0")}).to.throw(Error, "EncodingError U+B7B0");
expect(() => {ms932Encoder.encode("\uB7B1")}).to.throw(Error, "EncodingError U+B7B1");
expect(() => {ms932Encoder.encode("\uB7B2")}).to.throw(Error, "EncodingError U+B7B2");
expect(() => {ms932Encoder.encode("\uB7B3")}).to.throw(Error, "EncodingError U+B7B3");
expect(() => {ms932Encoder.encode("\uB7B4")}).to.throw(Error, "EncodingError U+B7B4");
expect(() => {ms932Encoder.encode("\uB7B5")}).to.throw(Error, "EncodingError U+B7B5");
expect(() => {ms932Encoder.encode("\uB7B6")}).to.throw(Error, "EncodingError U+B7B6");
expect(() => {ms932Encoder.encode("\uB7B7")}).to.throw(Error, "EncodingError U+B7B7");
expect(() => {ms932Encoder.encode("\uB7B8")}).to.throw(Error, "EncodingError U+B7B8");
expect(() => {ms932Encoder.encode("\uB7B9")}).to.throw(Error, "EncodingError U+B7B9");
expect(() => {ms932Encoder.encode("\uB7BA")}).to.throw(Error, "EncodingError U+B7BA");
expect(() => {ms932Encoder.encode("\uB7BB")}).to.throw(Error, "EncodingError U+B7BB");
expect(() => {ms932Encoder.encode("\uB7BC")}).to.throw(Error, "EncodingError U+B7BC");
expect(() => {ms932Encoder.encode("\uB7BD")}).to.throw(Error, "EncodingError U+B7BD");
expect(() => {ms932Encoder.encode("\uB7BE")}).to.throw(Error, "EncodingError U+B7BE");
expect(() => {ms932Encoder.encode("\uB7BF")}).to.throw(Error, "EncodingError U+B7BF");
expect(() => {ms932Encoder.encode("\uB7C0")}).to.throw(Error, "EncodingError U+B7C0");
expect(() => {ms932Encoder.encode("\uB7C1")}).to.throw(Error, "EncodingError U+B7C1");
expect(() => {ms932Encoder.encode("\uB7C2")}).to.throw(Error, "EncodingError U+B7C2");
expect(() => {ms932Encoder.encode("\uB7C3")}).to.throw(Error, "EncodingError U+B7C3");
expect(() => {ms932Encoder.encode("\uB7C4")}).to.throw(Error, "EncodingError U+B7C4");
expect(() => {ms932Encoder.encode("\uB7C5")}).to.throw(Error, "EncodingError U+B7C5");
expect(() => {ms932Encoder.encode("\uB7C6")}).to.throw(Error, "EncodingError U+B7C6");
expect(() => {ms932Encoder.encode("\uB7C7")}).to.throw(Error, "EncodingError U+B7C7");
expect(() => {ms932Encoder.encode("\uB7C8")}).to.throw(Error, "EncodingError U+B7C8");
expect(() => {ms932Encoder.encode("\uB7C9")}).to.throw(Error, "EncodingError U+B7C9");
expect(() => {ms932Encoder.encode("\uB7CA")}).to.throw(Error, "EncodingError U+B7CA");
expect(() => {ms932Encoder.encode("\uB7CB")}).to.throw(Error, "EncodingError U+B7CB");
expect(() => {ms932Encoder.encode("\uB7CC")}).to.throw(Error, "EncodingError U+B7CC");
expect(() => {ms932Encoder.encode("\uB7CD")}).to.throw(Error, "EncodingError U+B7CD");
expect(() => {ms932Encoder.encode("\uB7CE")}).to.throw(Error, "EncodingError U+B7CE");
expect(() => {ms932Encoder.encode("\uB7CF")}).to.throw(Error, "EncodingError U+B7CF");
expect(() => {ms932Encoder.encode("\uB7D0")}).to.throw(Error, "EncodingError U+B7D0");
expect(() => {ms932Encoder.encode("\uB7D1")}).to.throw(Error, "EncodingError U+B7D1");
expect(() => {ms932Encoder.encode("\uB7D2")}).to.throw(Error, "EncodingError U+B7D2");
expect(() => {ms932Encoder.encode("\uB7D3")}).to.throw(Error, "EncodingError U+B7D3");
expect(() => {ms932Encoder.encode("\uB7D4")}).to.throw(Error, "EncodingError U+B7D4");
expect(() => {ms932Encoder.encode("\uB7D5")}).to.throw(Error, "EncodingError U+B7D5");
expect(() => {ms932Encoder.encode("\uB7D6")}).to.throw(Error, "EncodingError U+B7D6");
expect(() => {ms932Encoder.encode("\uB7D7")}).to.throw(Error, "EncodingError U+B7D7");
expect(() => {ms932Encoder.encode("\uB7D8")}).to.throw(Error, "EncodingError U+B7D8");
expect(() => {ms932Encoder.encode("\uB7D9")}).to.throw(Error, "EncodingError U+B7D9");
expect(() => {ms932Encoder.encode("\uB7DA")}).to.throw(Error, "EncodingError U+B7DA");
expect(() => {ms932Encoder.encode("\uB7DB")}).to.throw(Error, "EncodingError U+B7DB");
expect(() => {ms932Encoder.encode("\uB7DC")}).to.throw(Error, "EncodingError U+B7DC");
expect(() => {ms932Encoder.encode("\uB7DD")}).to.throw(Error, "EncodingError U+B7DD");
expect(() => {ms932Encoder.encode("\uB7DE")}).to.throw(Error, "EncodingError U+B7DE");
expect(() => {ms932Encoder.encode("\uB7DF")}).to.throw(Error, "EncodingError U+B7DF");
expect(() => {ms932Encoder.encode("\uB7E0")}).to.throw(Error, "EncodingError U+B7E0");
expect(() => {ms932Encoder.encode("\uB7E1")}).to.throw(Error, "EncodingError U+B7E1");
expect(() => {ms932Encoder.encode("\uB7E2")}).to.throw(Error, "EncodingError U+B7E2");
expect(() => {ms932Encoder.encode("\uB7E3")}).to.throw(Error, "EncodingError U+B7E3");
expect(() => {ms932Encoder.encode("\uB7E4")}).to.throw(Error, "EncodingError U+B7E4");
expect(() => {ms932Encoder.encode("\uB7E5")}).to.throw(Error, "EncodingError U+B7E5");
expect(() => {ms932Encoder.encode("\uB7E6")}).to.throw(Error, "EncodingError U+B7E6");
expect(() => {ms932Encoder.encode("\uB7E7")}).to.throw(Error, "EncodingError U+B7E7");
expect(() => {ms932Encoder.encode("\uB7E8")}).to.throw(Error, "EncodingError U+B7E8");
expect(() => {ms932Encoder.encode("\uB7E9")}).to.throw(Error, "EncodingError U+B7E9");
expect(() => {ms932Encoder.encode("\uB7EA")}).to.throw(Error, "EncodingError U+B7EA");
expect(() => {ms932Encoder.encode("\uB7EB")}).to.throw(Error, "EncodingError U+B7EB");
expect(() => {ms932Encoder.encode("\uB7EC")}).to.throw(Error, "EncodingError U+B7EC");
expect(() => {ms932Encoder.encode("\uB7ED")}).to.throw(Error, "EncodingError U+B7ED");
expect(() => {ms932Encoder.encode("\uB7EE")}).to.throw(Error, "EncodingError U+B7EE");
expect(() => {ms932Encoder.encode("\uB7EF")}).to.throw(Error, "EncodingError U+B7EF");
expect(() => {ms932Encoder.encode("\uB7F0")}).to.throw(Error, "EncodingError U+B7F0");
expect(() => {ms932Encoder.encode("\uB7F1")}).to.throw(Error, "EncodingError U+B7F1");
expect(() => {ms932Encoder.encode("\uB7F2")}).to.throw(Error, "EncodingError U+B7F2");
expect(() => {ms932Encoder.encode("\uB7F3")}).to.throw(Error, "EncodingError U+B7F3");
expect(() => {ms932Encoder.encode("\uB7F4")}).to.throw(Error, "EncodingError U+B7F4");
expect(() => {ms932Encoder.encode("\uB7F5")}).to.throw(Error, "EncodingError U+B7F5");
expect(() => {ms932Encoder.encode("\uB7F6")}).to.throw(Error, "EncodingError U+B7F6");
expect(() => {ms932Encoder.encode("\uB7F7")}).to.throw(Error, "EncodingError U+B7F7");
expect(() => {ms932Encoder.encode("\uB7F8")}).to.throw(Error, "EncodingError U+B7F8");
expect(() => {ms932Encoder.encode("\uB7F9")}).to.throw(Error, "EncodingError U+B7F9");
expect(() => {ms932Encoder.encode("\uB7FA")}).to.throw(Error, "EncodingError U+B7FA");
expect(() => {ms932Encoder.encode("\uB7FB")}).to.throw(Error, "EncodingError U+B7FB");
expect(() => {ms932Encoder.encode("\uB7FC")}).to.throw(Error, "EncodingError U+B7FC");
expect(() => {ms932Encoder.encode("\uB7FD")}).to.throw(Error, "EncodingError U+B7FD");
expect(() => {ms932Encoder.encode("\uB7FE")}).to.throw(Error, "EncodingError U+B7FE");
expect(() => {ms932Encoder.encode("\uB7FF")}).to.throw(Error, "EncodingError U+B7FF");
expect(() => {ms932Encoder.encode("\uB800")}).to.throw(Error, "EncodingError U+B800");
expect(() => {ms932Encoder.encode("\uB801")}).to.throw(Error, "EncodingError U+B801");
expect(() => {ms932Encoder.encode("\uB802")}).to.throw(Error, "EncodingError U+B802");
expect(() => {ms932Encoder.encode("\uB803")}).to.throw(Error, "EncodingError U+B803");
expect(() => {ms932Encoder.encode("\uB804")}).to.throw(Error, "EncodingError U+B804");
expect(() => {ms932Encoder.encode("\uB805")}).to.throw(Error, "EncodingError U+B805");
expect(() => {ms932Encoder.encode("\uB806")}).to.throw(Error, "EncodingError U+B806");
expect(() => {ms932Encoder.encode("\uB807")}).to.throw(Error, "EncodingError U+B807");
expect(() => {ms932Encoder.encode("\uB808")}).to.throw(Error, "EncodingError U+B808");
expect(() => {ms932Encoder.encode("\uB809")}).to.throw(Error, "EncodingError U+B809");
expect(() => {ms932Encoder.encode("\uB80A")}).to.throw(Error, "EncodingError U+B80A");
expect(() => {ms932Encoder.encode("\uB80B")}).to.throw(Error, "EncodingError U+B80B");
expect(() => {ms932Encoder.encode("\uB80C")}).to.throw(Error, "EncodingError U+B80C");
expect(() => {ms932Encoder.encode("\uB80D")}).to.throw(Error, "EncodingError U+B80D");
expect(() => {ms932Encoder.encode("\uB80E")}).to.throw(Error, "EncodingError U+B80E");
expect(() => {ms932Encoder.encode("\uB80F")}).to.throw(Error, "EncodingError U+B80F");
expect(() => {ms932Encoder.encode("\uB810")}).to.throw(Error, "EncodingError U+B810");
expect(() => {ms932Encoder.encode("\uB811")}).to.throw(Error, "EncodingError U+B811");
expect(() => {ms932Encoder.encode("\uB812")}).to.throw(Error, "EncodingError U+B812");
expect(() => {ms932Encoder.encode("\uB813")}).to.throw(Error, "EncodingError U+B813");
expect(() => {ms932Encoder.encode("\uB814")}).to.throw(Error, "EncodingError U+B814");
expect(() => {ms932Encoder.encode("\uB815")}).to.throw(Error, "EncodingError U+B815");
expect(() => {ms932Encoder.encode("\uB816")}).to.throw(Error, "EncodingError U+B816");
expect(() => {ms932Encoder.encode("\uB817")}).to.throw(Error, "EncodingError U+B817");
expect(() => {ms932Encoder.encode("\uB818")}).to.throw(Error, "EncodingError U+B818");
expect(() => {ms932Encoder.encode("\uB819")}).to.throw(Error, "EncodingError U+B819");
expect(() => {ms932Encoder.encode("\uB81A")}).to.throw(Error, "EncodingError U+B81A");
expect(() => {ms932Encoder.encode("\uB81B")}).to.throw(Error, "EncodingError U+B81B");
expect(() => {ms932Encoder.encode("\uB81C")}).to.throw(Error, "EncodingError U+B81C");
expect(() => {ms932Encoder.encode("\uB81D")}).to.throw(Error, "EncodingError U+B81D");
expect(() => {ms932Encoder.encode("\uB81E")}).to.throw(Error, "EncodingError U+B81E");
expect(() => {ms932Encoder.encode("\uB81F")}).to.throw(Error, "EncodingError U+B81F");
expect(() => {ms932Encoder.encode("\uB820")}).to.throw(Error, "EncodingError U+B820");
expect(() => {ms932Encoder.encode("\uB821")}).to.throw(Error, "EncodingError U+B821");
expect(() => {ms932Encoder.encode("\uB822")}).to.throw(Error, "EncodingError U+B822");
expect(() => {ms932Encoder.encode("\uB823")}).to.throw(Error, "EncodingError U+B823");
expect(() => {ms932Encoder.encode("\uB824")}).to.throw(Error, "EncodingError U+B824");
expect(() => {ms932Encoder.encode("\uB825")}).to.throw(Error, "EncodingError U+B825");
expect(() => {ms932Encoder.encode("\uB826")}).to.throw(Error, "EncodingError U+B826");
expect(() => {ms932Encoder.encode("\uB827")}).to.throw(Error, "EncodingError U+B827");
expect(() => {ms932Encoder.encode("\uB828")}).to.throw(Error, "EncodingError U+B828");
expect(() => {ms932Encoder.encode("\uB829")}).to.throw(Error, "EncodingError U+B829");
expect(() => {ms932Encoder.encode("\uB82A")}).to.throw(Error, "EncodingError U+B82A");
expect(() => {ms932Encoder.encode("\uB82B")}).to.throw(Error, "EncodingError U+B82B");
expect(() => {ms932Encoder.encode("\uB82C")}).to.throw(Error, "EncodingError U+B82C");
expect(() => {ms932Encoder.encode("\uB82D")}).to.throw(Error, "EncodingError U+B82D");
expect(() => {ms932Encoder.encode("\uB82E")}).to.throw(Error, "EncodingError U+B82E");
expect(() => {ms932Encoder.encode("\uB82F")}).to.throw(Error, "EncodingError U+B82F");
expect(() => {ms932Encoder.encode("\uB830")}).to.throw(Error, "EncodingError U+B830");
expect(() => {ms932Encoder.encode("\uB831")}).to.throw(Error, "EncodingError U+B831");
expect(() => {ms932Encoder.encode("\uB832")}).to.throw(Error, "EncodingError U+B832");
expect(() => {ms932Encoder.encode("\uB833")}).to.throw(Error, "EncodingError U+B833");
expect(() => {ms932Encoder.encode("\uB834")}).to.throw(Error, "EncodingError U+B834");
expect(() => {ms932Encoder.encode("\uB835")}).to.throw(Error, "EncodingError U+B835");
expect(() => {ms932Encoder.encode("\uB836")}).to.throw(Error, "EncodingError U+B836");
expect(() => {ms932Encoder.encode("\uB837")}).to.throw(Error, "EncodingError U+B837");
expect(() => {ms932Encoder.encode("\uB838")}).to.throw(Error, "EncodingError U+B838");
expect(() => {ms932Encoder.encode("\uB839")}).to.throw(Error, "EncodingError U+B839");
expect(() => {ms932Encoder.encode("\uB83A")}).to.throw(Error, "EncodingError U+B83A");
expect(() => {ms932Encoder.encode("\uB83B")}).to.throw(Error, "EncodingError U+B83B");
expect(() => {ms932Encoder.encode("\uB83C")}).to.throw(Error, "EncodingError U+B83C");
expect(() => {ms932Encoder.encode("\uB83D")}).to.throw(Error, "EncodingError U+B83D");
expect(() => {ms932Encoder.encode("\uB83E")}).to.throw(Error, "EncodingError U+B83E");
expect(() => {ms932Encoder.encode("\uB83F")}).to.throw(Error, "EncodingError U+B83F");
expect(() => {ms932Encoder.encode("\uB840")}).to.throw(Error, "EncodingError U+B840");
expect(() => {ms932Encoder.encode("\uB841")}).to.throw(Error, "EncodingError U+B841");
expect(() => {ms932Encoder.encode("\uB842")}).to.throw(Error, "EncodingError U+B842");
expect(() => {ms932Encoder.encode("\uB843")}).to.throw(Error, "EncodingError U+B843");
expect(() => {ms932Encoder.encode("\uB844")}).to.throw(Error, "EncodingError U+B844");
expect(() => {ms932Encoder.encode("\uB845")}).to.throw(Error, "EncodingError U+B845");
expect(() => {ms932Encoder.encode("\uB846")}).to.throw(Error, "EncodingError U+B846");
expect(() => {ms932Encoder.encode("\uB847")}).to.throw(Error, "EncodingError U+B847");
expect(() => {ms932Encoder.encode("\uB848")}).to.throw(Error, "EncodingError U+B848");
expect(() => {ms932Encoder.encode("\uB849")}).to.throw(Error, "EncodingError U+B849");
expect(() => {ms932Encoder.encode("\uB84A")}).to.throw(Error, "EncodingError U+B84A");
expect(() => {ms932Encoder.encode("\uB84B")}).to.throw(Error, "EncodingError U+B84B");
expect(() => {ms932Encoder.encode("\uB84C")}).to.throw(Error, "EncodingError U+B84C");
expect(() => {ms932Encoder.encode("\uB84D")}).to.throw(Error, "EncodingError U+B84D");
expect(() => {ms932Encoder.encode("\uB84E")}).to.throw(Error, "EncodingError U+B84E");
expect(() => {ms932Encoder.encode("\uB84F")}).to.throw(Error, "EncodingError U+B84F");
expect(() => {ms932Encoder.encode("\uB850")}).to.throw(Error, "EncodingError U+B850");
expect(() => {ms932Encoder.encode("\uB851")}).to.throw(Error, "EncodingError U+B851");
expect(() => {ms932Encoder.encode("\uB852")}).to.throw(Error, "EncodingError U+B852");
expect(() => {ms932Encoder.encode("\uB853")}).to.throw(Error, "EncodingError U+B853");
expect(() => {ms932Encoder.encode("\uB854")}).to.throw(Error, "EncodingError U+B854");
expect(() => {ms932Encoder.encode("\uB855")}).to.throw(Error, "EncodingError U+B855");
expect(() => {ms932Encoder.encode("\uB856")}).to.throw(Error, "EncodingError U+B856");
expect(() => {ms932Encoder.encode("\uB857")}).to.throw(Error, "EncodingError U+B857");
expect(() => {ms932Encoder.encode("\uB858")}).to.throw(Error, "EncodingError U+B858");
expect(() => {ms932Encoder.encode("\uB859")}).to.throw(Error, "EncodingError U+B859");
expect(() => {ms932Encoder.encode("\uB85A")}).to.throw(Error, "EncodingError U+B85A");
expect(() => {ms932Encoder.encode("\uB85B")}).to.throw(Error, "EncodingError U+B85B");
expect(() => {ms932Encoder.encode("\uB85C")}).to.throw(Error, "EncodingError U+B85C");
expect(() => {ms932Encoder.encode("\uB85D")}).to.throw(Error, "EncodingError U+B85D");
expect(() => {ms932Encoder.encode("\uB85E")}).to.throw(Error, "EncodingError U+B85E");
expect(() => {ms932Encoder.encode("\uB85F")}).to.throw(Error, "EncodingError U+B85F");
expect(() => {ms932Encoder.encode("\uB860")}).to.throw(Error, "EncodingError U+B860");
expect(() => {ms932Encoder.encode("\uB861")}).to.throw(Error, "EncodingError U+B861");
expect(() => {ms932Encoder.encode("\uB862")}).to.throw(Error, "EncodingError U+B862");
expect(() => {ms932Encoder.encode("\uB863")}).to.throw(Error, "EncodingError U+B863");
expect(() => {ms932Encoder.encode("\uB864")}).to.throw(Error, "EncodingError U+B864");
expect(() => {ms932Encoder.encode("\uB865")}).to.throw(Error, "EncodingError U+B865");
expect(() => {ms932Encoder.encode("\uB866")}).to.throw(Error, "EncodingError U+B866");
expect(() => {ms932Encoder.encode("\uB867")}).to.throw(Error, "EncodingError U+B867");
expect(() => {ms932Encoder.encode("\uB868")}).to.throw(Error, "EncodingError U+B868");
expect(() => {ms932Encoder.encode("\uB869")}).to.throw(Error, "EncodingError U+B869");
expect(() => {ms932Encoder.encode("\uB86A")}).to.throw(Error, "EncodingError U+B86A");
expect(() => {ms932Encoder.encode("\uB86B")}).to.throw(Error, "EncodingError U+B86B");
expect(() => {ms932Encoder.encode("\uB86C")}).to.throw(Error, "EncodingError U+B86C");
expect(() => {ms932Encoder.encode("\uB86D")}).to.throw(Error, "EncodingError U+B86D");
expect(() => {ms932Encoder.encode("\uB86E")}).to.throw(Error, "EncodingError U+B86E");
expect(() => {ms932Encoder.encode("\uB86F")}).to.throw(Error, "EncodingError U+B86F");
expect(() => {ms932Encoder.encode("\uB870")}).to.throw(Error, "EncodingError U+B870");
expect(() => {ms932Encoder.encode("\uB871")}).to.throw(Error, "EncodingError U+B871");
expect(() => {ms932Encoder.encode("\uB872")}).to.throw(Error, "EncodingError U+B872");
expect(() => {ms932Encoder.encode("\uB873")}).to.throw(Error, "EncodingError U+B873");
expect(() => {ms932Encoder.encode("\uB874")}).to.throw(Error, "EncodingError U+B874");
expect(() => {ms932Encoder.encode("\uB875")}).to.throw(Error, "EncodingError U+B875");
expect(() => {ms932Encoder.encode("\uB876")}).to.throw(Error, "EncodingError U+B876");
expect(() => {ms932Encoder.encode("\uB877")}).to.throw(Error, "EncodingError U+B877");
expect(() => {ms932Encoder.encode("\uB878")}).to.throw(Error, "EncodingError U+B878");
expect(() => {ms932Encoder.encode("\uB879")}).to.throw(Error, "EncodingError U+B879");
expect(() => {ms932Encoder.encode("\uB87A")}).to.throw(Error, "EncodingError U+B87A");
expect(() => {ms932Encoder.encode("\uB87B")}).to.throw(Error, "EncodingError U+B87B");
expect(() => {ms932Encoder.encode("\uB87C")}).to.throw(Error, "EncodingError U+B87C");
expect(() => {ms932Encoder.encode("\uB87D")}).to.throw(Error, "EncodingError U+B87D");
expect(() => {ms932Encoder.encode("\uB87E")}).to.throw(Error, "EncodingError U+B87E");
expect(() => {ms932Encoder.encode("\uB87F")}).to.throw(Error, "EncodingError U+B87F");
expect(() => {ms932Encoder.encode("\uB880")}).to.throw(Error, "EncodingError U+B880");
expect(() => {ms932Encoder.encode("\uB881")}).to.throw(Error, "EncodingError U+B881");
expect(() => {ms932Encoder.encode("\uB882")}).to.throw(Error, "EncodingError U+B882");
expect(() => {ms932Encoder.encode("\uB883")}).to.throw(Error, "EncodingError U+B883");
expect(() => {ms932Encoder.encode("\uB884")}).to.throw(Error, "EncodingError U+B884");
expect(() => {ms932Encoder.encode("\uB885")}).to.throw(Error, "EncodingError U+B885");
expect(() => {ms932Encoder.encode("\uB886")}).to.throw(Error, "EncodingError U+B886");
expect(() => {ms932Encoder.encode("\uB887")}).to.throw(Error, "EncodingError U+B887");
expect(() => {ms932Encoder.encode("\uB888")}).to.throw(Error, "EncodingError U+B888");
expect(() => {ms932Encoder.encode("\uB889")}).to.throw(Error, "EncodingError U+B889");
expect(() => {ms932Encoder.encode("\uB88A")}).to.throw(Error, "EncodingError U+B88A");
expect(() => {ms932Encoder.encode("\uB88B")}).to.throw(Error, "EncodingError U+B88B");
expect(() => {ms932Encoder.encode("\uB88C")}).to.throw(Error, "EncodingError U+B88C");
expect(() => {ms932Encoder.encode("\uB88D")}).to.throw(Error, "EncodingError U+B88D");
expect(() => {ms932Encoder.encode("\uB88E")}).to.throw(Error, "EncodingError U+B88E");
expect(() => {ms932Encoder.encode("\uB88F")}).to.throw(Error, "EncodingError U+B88F");
expect(() => {ms932Encoder.encode("\uB890")}).to.throw(Error, "EncodingError U+B890");
expect(() => {ms932Encoder.encode("\uB891")}).to.throw(Error, "EncodingError U+B891");
expect(() => {ms932Encoder.encode("\uB892")}).to.throw(Error, "EncodingError U+B892");
expect(() => {ms932Encoder.encode("\uB893")}).to.throw(Error, "EncodingError U+B893");
expect(() => {ms932Encoder.encode("\uB894")}).to.throw(Error, "EncodingError U+B894");
expect(() => {ms932Encoder.encode("\uB895")}).to.throw(Error, "EncodingError U+B895");
expect(() => {ms932Encoder.encode("\uB896")}).to.throw(Error, "EncodingError U+B896");
expect(() => {ms932Encoder.encode("\uB897")}).to.throw(Error, "EncodingError U+B897");
expect(() => {ms932Encoder.encode("\uB898")}).to.throw(Error, "EncodingError U+B898");
expect(() => {ms932Encoder.encode("\uB899")}).to.throw(Error, "EncodingError U+B899");
expect(() => {ms932Encoder.encode("\uB89A")}).to.throw(Error, "EncodingError U+B89A");
expect(() => {ms932Encoder.encode("\uB89B")}).to.throw(Error, "EncodingError U+B89B");
expect(() => {ms932Encoder.encode("\uB89C")}).to.throw(Error, "EncodingError U+B89C");
expect(() => {ms932Encoder.encode("\uB89D")}).to.throw(Error, "EncodingError U+B89D");
expect(() => {ms932Encoder.encode("\uB89E")}).to.throw(Error, "EncodingError U+B89E");
expect(() => {ms932Encoder.encode("\uB89F")}).to.throw(Error, "EncodingError U+B89F");
expect(() => {ms932Encoder.encode("\uB8A0")}).to.throw(Error, "EncodingError U+B8A0");
expect(() => {ms932Encoder.encode("\uB8A1")}).to.throw(Error, "EncodingError U+B8A1");
expect(() => {ms932Encoder.encode("\uB8A2")}).to.throw(Error, "EncodingError U+B8A2");
expect(() => {ms932Encoder.encode("\uB8A3")}).to.throw(Error, "EncodingError U+B8A3");
expect(() => {ms932Encoder.encode("\uB8A4")}).to.throw(Error, "EncodingError U+B8A4");
expect(() => {ms932Encoder.encode("\uB8A5")}).to.throw(Error, "EncodingError U+B8A5");
expect(() => {ms932Encoder.encode("\uB8A6")}).to.throw(Error, "EncodingError U+B8A6");
expect(() => {ms932Encoder.encode("\uB8A7")}).to.throw(Error, "EncodingError U+B8A7");
expect(() => {ms932Encoder.encode("\uB8A8")}).to.throw(Error, "EncodingError U+B8A8");
expect(() => {ms932Encoder.encode("\uB8A9")}).to.throw(Error, "EncodingError U+B8A9");
expect(() => {ms932Encoder.encode("\uB8AA")}).to.throw(Error, "EncodingError U+B8AA");
expect(() => {ms932Encoder.encode("\uB8AB")}).to.throw(Error, "EncodingError U+B8AB");
expect(() => {ms932Encoder.encode("\uB8AC")}).to.throw(Error, "EncodingError U+B8AC");
expect(() => {ms932Encoder.encode("\uB8AD")}).to.throw(Error, "EncodingError U+B8AD");
expect(() => {ms932Encoder.encode("\uB8AE")}).to.throw(Error, "EncodingError U+B8AE");
expect(() => {ms932Encoder.encode("\uB8AF")}).to.throw(Error, "EncodingError U+B8AF");
expect(() => {ms932Encoder.encode("\uB8B0")}).to.throw(Error, "EncodingError U+B8B0");
expect(() => {ms932Encoder.encode("\uB8B1")}).to.throw(Error, "EncodingError U+B8B1");
expect(() => {ms932Encoder.encode("\uB8B2")}).to.throw(Error, "EncodingError U+B8B2");
expect(() => {ms932Encoder.encode("\uB8B3")}).to.throw(Error, "EncodingError U+B8B3");
expect(() => {ms932Encoder.encode("\uB8B4")}).to.throw(Error, "EncodingError U+B8B4");
expect(() => {ms932Encoder.encode("\uB8B5")}).to.throw(Error, "EncodingError U+B8B5");
expect(() => {ms932Encoder.encode("\uB8B6")}).to.throw(Error, "EncodingError U+B8B6");
expect(() => {ms932Encoder.encode("\uB8B7")}).to.throw(Error, "EncodingError U+B8B7");
expect(() => {ms932Encoder.encode("\uB8B8")}).to.throw(Error, "EncodingError U+B8B8");
expect(() => {ms932Encoder.encode("\uB8B9")}).to.throw(Error, "EncodingError U+B8B9");
expect(() => {ms932Encoder.encode("\uB8BA")}).to.throw(Error, "EncodingError U+B8BA");
expect(() => {ms932Encoder.encode("\uB8BB")}).to.throw(Error, "EncodingError U+B8BB");
expect(() => {ms932Encoder.encode("\uB8BC")}).to.throw(Error, "EncodingError U+B8BC");
expect(() => {ms932Encoder.encode("\uB8BD")}).to.throw(Error, "EncodingError U+B8BD");
expect(() => {ms932Encoder.encode("\uB8BE")}).to.throw(Error, "EncodingError U+B8BE");
expect(() => {ms932Encoder.encode("\uB8BF")}).to.throw(Error, "EncodingError U+B8BF");
expect(() => {ms932Encoder.encode("\uB8C0")}).to.throw(Error, "EncodingError U+B8C0");
expect(() => {ms932Encoder.encode("\uB8C1")}).to.throw(Error, "EncodingError U+B8C1");
expect(() => {ms932Encoder.encode("\uB8C2")}).to.throw(Error, "EncodingError U+B8C2");
expect(() => {ms932Encoder.encode("\uB8C3")}).to.throw(Error, "EncodingError U+B8C3");
expect(() => {ms932Encoder.encode("\uB8C4")}).to.throw(Error, "EncodingError U+B8C4");
expect(() => {ms932Encoder.encode("\uB8C5")}).to.throw(Error, "EncodingError U+B8C5");
expect(() => {ms932Encoder.encode("\uB8C6")}).to.throw(Error, "EncodingError U+B8C6");
expect(() => {ms932Encoder.encode("\uB8C7")}).to.throw(Error, "EncodingError U+B8C7");
expect(() => {ms932Encoder.encode("\uB8C8")}).to.throw(Error, "EncodingError U+B8C8");
expect(() => {ms932Encoder.encode("\uB8C9")}).to.throw(Error, "EncodingError U+B8C9");
expect(() => {ms932Encoder.encode("\uB8CA")}).to.throw(Error, "EncodingError U+B8CA");
expect(() => {ms932Encoder.encode("\uB8CB")}).to.throw(Error, "EncodingError U+B8CB");
expect(() => {ms932Encoder.encode("\uB8CC")}).to.throw(Error, "EncodingError U+B8CC");
expect(() => {ms932Encoder.encode("\uB8CD")}).to.throw(Error, "EncodingError U+B8CD");
expect(() => {ms932Encoder.encode("\uB8CE")}).to.throw(Error, "EncodingError U+B8CE");
expect(() => {ms932Encoder.encode("\uB8CF")}).to.throw(Error, "EncodingError U+B8CF");
expect(() => {ms932Encoder.encode("\uB8D0")}).to.throw(Error, "EncodingError U+B8D0");
expect(() => {ms932Encoder.encode("\uB8D1")}).to.throw(Error, "EncodingError U+B8D1");
expect(() => {ms932Encoder.encode("\uB8D2")}).to.throw(Error, "EncodingError U+B8D2");
expect(() => {ms932Encoder.encode("\uB8D3")}).to.throw(Error, "EncodingError U+B8D3");
expect(() => {ms932Encoder.encode("\uB8D4")}).to.throw(Error, "EncodingError U+B8D4");
expect(() => {ms932Encoder.encode("\uB8D5")}).to.throw(Error, "EncodingError U+B8D5");
expect(() => {ms932Encoder.encode("\uB8D6")}).to.throw(Error, "EncodingError U+B8D6");
expect(() => {ms932Encoder.encode("\uB8D7")}).to.throw(Error, "EncodingError U+B8D7");
expect(() => {ms932Encoder.encode("\uB8D8")}).to.throw(Error, "EncodingError U+B8D8");
expect(() => {ms932Encoder.encode("\uB8D9")}).to.throw(Error, "EncodingError U+B8D9");
expect(() => {ms932Encoder.encode("\uB8DA")}).to.throw(Error, "EncodingError U+B8DA");
expect(() => {ms932Encoder.encode("\uB8DB")}).to.throw(Error, "EncodingError U+B8DB");
expect(() => {ms932Encoder.encode("\uB8DC")}).to.throw(Error, "EncodingError U+B8DC");
expect(() => {ms932Encoder.encode("\uB8DD")}).to.throw(Error, "EncodingError U+B8DD");
expect(() => {ms932Encoder.encode("\uB8DE")}).to.throw(Error, "EncodingError U+B8DE");
expect(() => {ms932Encoder.encode("\uB8DF")}).to.throw(Error, "EncodingError U+B8DF");
expect(() => {ms932Encoder.encode("\uB8E0")}).to.throw(Error, "EncodingError U+B8E0");
expect(() => {ms932Encoder.encode("\uB8E1")}).to.throw(Error, "EncodingError U+B8E1");
expect(() => {ms932Encoder.encode("\uB8E2")}).to.throw(Error, "EncodingError U+B8E2");
expect(() => {ms932Encoder.encode("\uB8E3")}).to.throw(Error, "EncodingError U+B8E3");
expect(() => {ms932Encoder.encode("\uB8E4")}).to.throw(Error, "EncodingError U+B8E4");
expect(() => {ms932Encoder.encode("\uB8E5")}).to.throw(Error, "EncodingError U+B8E5");
expect(() => {ms932Encoder.encode("\uB8E6")}).to.throw(Error, "EncodingError U+B8E6");
expect(() => {ms932Encoder.encode("\uB8E7")}).to.throw(Error, "EncodingError U+B8E7");
expect(() => {ms932Encoder.encode("\uB8E8")}).to.throw(Error, "EncodingError U+B8E8");
expect(() => {ms932Encoder.encode("\uB8E9")}).to.throw(Error, "EncodingError U+B8E9");
expect(() => {ms932Encoder.encode("\uB8EA")}).to.throw(Error, "EncodingError U+B8EA");
expect(() => {ms932Encoder.encode("\uB8EB")}).to.throw(Error, "EncodingError U+B8EB");
expect(() => {ms932Encoder.encode("\uB8EC")}).to.throw(Error, "EncodingError U+B8EC");
expect(() => {ms932Encoder.encode("\uB8ED")}).to.throw(Error, "EncodingError U+B8ED");
expect(() => {ms932Encoder.encode("\uB8EE")}).to.throw(Error, "EncodingError U+B8EE");
expect(() => {ms932Encoder.encode("\uB8EF")}).to.throw(Error, "EncodingError U+B8EF");
expect(() => {ms932Encoder.encode("\uB8F0")}).to.throw(Error, "EncodingError U+B8F0");
expect(() => {ms932Encoder.encode("\uB8F1")}).to.throw(Error, "EncodingError U+B8F1");
expect(() => {ms932Encoder.encode("\uB8F2")}).to.throw(Error, "EncodingError U+B8F2");
expect(() => {ms932Encoder.encode("\uB8F3")}).to.throw(Error, "EncodingError U+B8F3");
expect(() => {ms932Encoder.encode("\uB8F4")}).to.throw(Error, "EncodingError U+B8F4");
expect(() => {ms932Encoder.encode("\uB8F5")}).to.throw(Error, "EncodingError U+B8F5");
expect(() => {ms932Encoder.encode("\uB8F6")}).to.throw(Error, "EncodingError U+B8F6");
expect(() => {ms932Encoder.encode("\uB8F7")}).to.throw(Error, "EncodingError U+B8F7");
expect(() => {ms932Encoder.encode("\uB8F8")}).to.throw(Error, "EncodingError U+B8F8");
expect(() => {ms932Encoder.encode("\uB8F9")}).to.throw(Error, "EncodingError U+B8F9");
expect(() => {ms932Encoder.encode("\uB8FA")}).to.throw(Error, "EncodingError U+B8FA");
expect(() => {ms932Encoder.encode("\uB8FB")}).to.throw(Error, "EncodingError U+B8FB");
expect(() => {ms932Encoder.encode("\uB8FC")}).to.throw(Error, "EncodingError U+B8FC");
expect(() => {ms932Encoder.encode("\uB8FD")}).to.throw(Error, "EncodingError U+B8FD");
expect(() => {ms932Encoder.encode("\uB8FE")}).to.throw(Error, "EncodingError U+B8FE");
expect(() => {ms932Encoder.encode("\uB8FF")}).to.throw(Error, "EncodingError U+B8FF");
expect(() => {ms932Encoder.encode("\uB900")}).to.throw(Error, "EncodingError U+B900");
expect(() => {ms932Encoder.encode("\uB901")}).to.throw(Error, "EncodingError U+B901");
expect(() => {ms932Encoder.encode("\uB902")}).to.throw(Error, "EncodingError U+B902");
expect(() => {ms932Encoder.encode("\uB903")}).to.throw(Error, "EncodingError U+B903");
expect(() => {ms932Encoder.encode("\uB904")}).to.throw(Error, "EncodingError U+B904");
expect(() => {ms932Encoder.encode("\uB905")}).to.throw(Error, "EncodingError U+B905");
expect(() => {ms932Encoder.encode("\uB906")}).to.throw(Error, "EncodingError U+B906");
expect(() => {ms932Encoder.encode("\uB907")}).to.throw(Error, "EncodingError U+B907");
expect(() => {ms932Encoder.encode("\uB908")}).to.throw(Error, "EncodingError U+B908");
expect(() => {ms932Encoder.encode("\uB909")}).to.throw(Error, "EncodingError U+B909");
expect(() => {ms932Encoder.encode("\uB90A")}).to.throw(Error, "EncodingError U+B90A");
expect(() => {ms932Encoder.encode("\uB90B")}).to.throw(Error, "EncodingError U+B90B");
expect(() => {ms932Encoder.encode("\uB90C")}).to.throw(Error, "EncodingError U+B90C");
expect(() => {ms932Encoder.encode("\uB90D")}).to.throw(Error, "EncodingError U+B90D");
expect(() => {ms932Encoder.encode("\uB90E")}).to.throw(Error, "EncodingError U+B90E");
expect(() => {ms932Encoder.encode("\uB90F")}).to.throw(Error, "EncodingError U+B90F");
expect(() => {ms932Encoder.encode("\uB910")}).to.throw(Error, "EncodingError U+B910");
expect(() => {ms932Encoder.encode("\uB911")}).to.throw(Error, "EncodingError U+B911");
expect(() => {ms932Encoder.encode("\uB912")}).to.throw(Error, "EncodingError U+B912");
expect(() => {ms932Encoder.encode("\uB913")}).to.throw(Error, "EncodingError U+B913");
expect(() => {ms932Encoder.encode("\uB914")}).to.throw(Error, "EncodingError U+B914");
expect(() => {ms932Encoder.encode("\uB915")}).to.throw(Error, "EncodingError U+B915");
expect(() => {ms932Encoder.encode("\uB916")}).to.throw(Error, "EncodingError U+B916");
expect(() => {ms932Encoder.encode("\uB917")}).to.throw(Error, "EncodingError U+B917");
expect(() => {ms932Encoder.encode("\uB918")}).to.throw(Error, "EncodingError U+B918");
expect(() => {ms932Encoder.encode("\uB919")}).to.throw(Error, "EncodingError U+B919");
expect(() => {ms932Encoder.encode("\uB91A")}).to.throw(Error, "EncodingError U+B91A");
expect(() => {ms932Encoder.encode("\uB91B")}).to.throw(Error, "EncodingError U+B91B");
expect(() => {ms932Encoder.encode("\uB91C")}).to.throw(Error, "EncodingError U+B91C");
expect(() => {ms932Encoder.encode("\uB91D")}).to.throw(Error, "EncodingError U+B91D");
expect(() => {ms932Encoder.encode("\uB91E")}).to.throw(Error, "EncodingError U+B91E");
expect(() => {ms932Encoder.encode("\uB91F")}).to.throw(Error, "EncodingError U+B91F");
expect(() => {ms932Encoder.encode("\uB920")}).to.throw(Error, "EncodingError U+B920");
expect(() => {ms932Encoder.encode("\uB921")}).to.throw(Error, "EncodingError U+B921");
expect(() => {ms932Encoder.encode("\uB922")}).to.throw(Error, "EncodingError U+B922");
expect(() => {ms932Encoder.encode("\uB923")}).to.throw(Error, "EncodingError U+B923");
expect(() => {ms932Encoder.encode("\uB924")}).to.throw(Error, "EncodingError U+B924");
expect(() => {ms932Encoder.encode("\uB925")}).to.throw(Error, "EncodingError U+B925");
expect(() => {ms932Encoder.encode("\uB926")}).to.throw(Error, "EncodingError U+B926");
expect(() => {ms932Encoder.encode("\uB927")}).to.throw(Error, "EncodingError U+B927");
expect(() => {ms932Encoder.encode("\uB928")}).to.throw(Error, "EncodingError U+B928");
expect(() => {ms932Encoder.encode("\uB929")}).to.throw(Error, "EncodingError U+B929");
expect(() => {ms932Encoder.encode("\uB92A")}).to.throw(Error, "EncodingError U+B92A");
expect(() => {ms932Encoder.encode("\uB92B")}).to.throw(Error, "EncodingError U+B92B");
expect(() => {ms932Encoder.encode("\uB92C")}).to.throw(Error, "EncodingError U+B92C");
expect(() => {ms932Encoder.encode("\uB92D")}).to.throw(Error, "EncodingError U+B92D");
expect(() => {ms932Encoder.encode("\uB92E")}).to.throw(Error, "EncodingError U+B92E");
expect(() => {ms932Encoder.encode("\uB92F")}).to.throw(Error, "EncodingError U+B92F");
expect(() => {ms932Encoder.encode("\uB930")}).to.throw(Error, "EncodingError U+B930");
expect(() => {ms932Encoder.encode("\uB931")}).to.throw(Error, "EncodingError U+B931");
expect(() => {ms932Encoder.encode("\uB932")}).to.throw(Error, "EncodingError U+B932");
expect(() => {ms932Encoder.encode("\uB933")}).to.throw(Error, "EncodingError U+B933");
expect(() => {ms932Encoder.encode("\uB934")}).to.throw(Error, "EncodingError U+B934");
expect(() => {ms932Encoder.encode("\uB935")}).to.throw(Error, "EncodingError U+B935");
expect(() => {ms932Encoder.encode("\uB936")}).to.throw(Error, "EncodingError U+B936");
expect(() => {ms932Encoder.encode("\uB937")}).to.throw(Error, "EncodingError U+B937");
expect(() => {ms932Encoder.encode("\uB938")}).to.throw(Error, "EncodingError U+B938");
expect(() => {ms932Encoder.encode("\uB939")}).to.throw(Error, "EncodingError U+B939");
expect(() => {ms932Encoder.encode("\uB93A")}).to.throw(Error, "EncodingError U+B93A");
expect(() => {ms932Encoder.encode("\uB93B")}).to.throw(Error, "EncodingError U+B93B");
expect(() => {ms932Encoder.encode("\uB93C")}).to.throw(Error, "EncodingError U+B93C");
expect(() => {ms932Encoder.encode("\uB93D")}).to.throw(Error, "EncodingError U+B93D");
expect(() => {ms932Encoder.encode("\uB93E")}).to.throw(Error, "EncodingError U+B93E");
expect(() => {ms932Encoder.encode("\uB93F")}).to.throw(Error, "EncodingError U+B93F");
expect(() => {ms932Encoder.encode("\uB940")}).to.throw(Error, "EncodingError U+B940");
expect(() => {ms932Encoder.encode("\uB941")}).to.throw(Error, "EncodingError U+B941");
expect(() => {ms932Encoder.encode("\uB942")}).to.throw(Error, "EncodingError U+B942");
expect(() => {ms932Encoder.encode("\uB943")}).to.throw(Error, "EncodingError U+B943");
expect(() => {ms932Encoder.encode("\uB944")}).to.throw(Error, "EncodingError U+B944");
expect(() => {ms932Encoder.encode("\uB945")}).to.throw(Error, "EncodingError U+B945");
expect(() => {ms932Encoder.encode("\uB946")}).to.throw(Error, "EncodingError U+B946");
expect(() => {ms932Encoder.encode("\uB947")}).to.throw(Error, "EncodingError U+B947");
expect(() => {ms932Encoder.encode("\uB948")}).to.throw(Error, "EncodingError U+B948");
expect(() => {ms932Encoder.encode("\uB949")}).to.throw(Error, "EncodingError U+B949");
expect(() => {ms932Encoder.encode("\uB94A")}).to.throw(Error, "EncodingError U+B94A");
expect(() => {ms932Encoder.encode("\uB94B")}).to.throw(Error, "EncodingError U+B94B");
expect(() => {ms932Encoder.encode("\uB94C")}).to.throw(Error, "EncodingError U+B94C");
expect(() => {ms932Encoder.encode("\uB94D")}).to.throw(Error, "EncodingError U+B94D");
expect(() => {ms932Encoder.encode("\uB94E")}).to.throw(Error, "EncodingError U+B94E");
expect(() => {ms932Encoder.encode("\uB94F")}).to.throw(Error, "EncodingError U+B94F");
expect(() => {ms932Encoder.encode("\uB950")}).to.throw(Error, "EncodingError U+B950");
expect(() => {ms932Encoder.encode("\uB951")}).to.throw(Error, "EncodingError U+B951");
expect(() => {ms932Encoder.encode("\uB952")}).to.throw(Error, "EncodingError U+B952");
expect(() => {ms932Encoder.encode("\uB953")}).to.throw(Error, "EncodingError U+B953");
expect(() => {ms932Encoder.encode("\uB954")}).to.throw(Error, "EncodingError U+B954");
expect(() => {ms932Encoder.encode("\uB955")}).to.throw(Error, "EncodingError U+B955");
expect(() => {ms932Encoder.encode("\uB956")}).to.throw(Error, "EncodingError U+B956");
expect(() => {ms932Encoder.encode("\uB957")}).to.throw(Error, "EncodingError U+B957");
expect(() => {ms932Encoder.encode("\uB958")}).to.throw(Error, "EncodingError U+B958");
expect(() => {ms932Encoder.encode("\uB959")}).to.throw(Error, "EncodingError U+B959");
expect(() => {ms932Encoder.encode("\uB95A")}).to.throw(Error, "EncodingError U+B95A");
expect(() => {ms932Encoder.encode("\uB95B")}).to.throw(Error, "EncodingError U+B95B");
expect(() => {ms932Encoder.encode("\uB95C")}).to.throw(Error, "EncodingError U+B95C");
expect(() => {ms932Encoder.encode("\uB95D")}).to.throw(Error, "EncodingError U+B95D");
expect(() => {ms932Encoder.encode("\uB95E")}).to.throw(Error, "EncodingError U+B95E");
expect(() => {ms932Encoder.encode("\uB95F")}).to.throw(Error, "EncodingError U+B95F");
expect(() => {ms932Encoder.encode("\uB960")}).to.throw(Error, "EncodingError U+B960");
expect(() => {ms932Encoder.encode("\uB961")}).to.throw(Error, "EncodingError U+B961");
expect(() => {ms932Encoder.encode("\uB962")}).to.throw(Error, "EncodingError U+B962");
expect(() => {ms932Encoder.encode("\uB963")}).to.throw(Error, "EncodingError U+B963");
expect(() => {ms932Encoder.encode("\uB964")}).to.throw(Error, "EncodingError U+B964");
expect(() => {ms932Encoder.encode("\uB965")}).to.throw(Error, "EncodingError U+B965");
expect(() => {ms932Encoder.encode("\uB966")}).to.throw(Error, "EncodingError U+B966");
expect(() => {ms932Encoder.encode("\uB967")}).to.throw(Error, "EncodingError U+B967");
expect(() => {ms932Encoder.encode("\uB968")}).to.throw(Error, "EncodingError U+B968");
expect(() => {ms932Encoder.encode("\uB969")}).to.throw(Error, "EncodingError U+B969");
expect(() => {ms932Encoder.encode("\uB96A")}).to.throw(Error, "EncodingError U+B96A");
expect(() => {ms932Encoder.encode("\uB96B")}).to.throw(Error, "EncodingError U+B96B");
expect(() => {ms932Encoder.encode("\uB96C")}).to.throw(Error, "EncodingError U+B96C");
expect(() => {ms932Encoder.encode("\uB96D")}).to.throw(Error, "EncodingError U+B96D");
expect(() => {ms932Encoder.encode("\uB96E")}).to.throw(Error, "EncodingError U+B96E");
expect(() => {ms932Encoder.encode("\uB96F")}).to.throw(Error, "EncodingError U+B96F");
expect(() => {ms932Encoder.encode("\uB970")}).to.throw(Error, "EncodingError U+B970");
expect(() => {ms932Encoder.encode("\uB971")}).to.throw(Error, "EncodingError U+B971");
expect(() => {ms932Encoder.encode("\uB972")}).to.throw(Error, "EncodingError U+B972");
expect(() => {ms932Encoder.encode("\uB973")}).to.throw(Error, "EncodingError U+B973");
expect(() => {ms932Encoder.encode("\uB974")}).to.throw(Error, "EncodingError U+B974");
expect(() => {ms932Encoder.encode("\uB975")}).to.throw(Error, "EncodingError U+B975");
expect(() => {ms932Encoder.encode("\uB976")}).to.throw(Error, "EncodingError U+B976");
expect(() => {ms932Encoder.encode("\uB977")}).to.throw(Error, "EncodingError U+B977");
expect(() => {ms932Encoder.encode("\uB978")}).to.throw(Error, "EncodingError U+B978");
expect(() => {ms932Encoder.encode("\uB979")}).to.throw(Error, "EncodingError U+B979");
expect(() => {ms932Encoder.encode("\uB97A")}).to.throw(Error, "EncodingError U+B97A");
expect(() => {ms932Encoder.encode("\uB97B")}).to.throw(Error, "EncodingError U+B97B");
expect(() => {ms932Encoder.encode("\uB97C")}).to.throw(Error, "EncodingError U+B97C");
expect(() => {ms932Encoder.encode("\uB97D")}).to.throw(Error, "EncodingError U+B97D");
expect(() => {ms932Encoder.encode("\uB97E")}).to.throw(Error, "EncodingError U+B97E");
expect(() => {ms932Encoder.encode("\uB97F")}).to.throw(Error, "EncodingError U+B97F");
expect(() => {ms932Encoder.encode("\uB980")}).to.throw(Error, "EncodingError U+B980");
expect(() => {ms932Encoder.encode("\uB981")}).to.throw(Error, "EncodingError U+B981");
expect(() => {ms932Encoder.encode("\uB982")}).to.throw(Error, "EncodingError U+B982");
expect(() => {ms932Encoder.encode("\uB983")}).to.throw(Error, "EncodingError U+B983");
expect(() => {ms932Encoder.encode("\uB984")}).to.throw(Error, "EncodingError U+B984");
expect(() => {ms932Encoder.encode("\uB985")}).to.throw(Error, "EncodingError U+B985");
expect(() => {ms932Encoder.encode("\uB986")}).to.throw(Error, "EncodingError U+B986");
expect(() => {ms932Encoder.encode("\uB987")}).to.throw(Error, "EncodingError U+B987");
expect(() => {ms932Encoder.encode("\uB988")}).to.throw(Error, "EncodingError U+B988");
expect(() => {ms932Encoder.encode("\uB989")}).to.throw(Error, "EncodingError U+B989");
expect(() => {ms932Encoder.encode("\uB98A")}).to.throw(Error, "EncodingError U+B98A");
expect(() => {ms932Encoder.encode("\uB98B")}).to.throw(Error, "EncodingError U+B98B");
expect(() => {ms932Encoder.encode("\uB98C")}).to.throw(Error, "EncodingError U+B98C");
expect(() => {ms932Encoder.encode("\uB98D")}).to.throw(Error, "EncodingError U+B98D");
expect(() => {ms932Encoder.encode("\uB98E")}).to.throw(Error, "EncodingError U+B98E");
expect(() => {ms932Encoder.encode("\uB98F")}).to.throw(Error, "EncodingError U+B98F");
expect(() => {ms932Encoder.encode("\uB990")}).to.throw(Error, "EncodingError U+B990");
expect(() => {ms932Encoder.encode("\uB991")}).to.throw(Error, "EncodingError U+B991");
expect(() => {ms932Encoder.encode("\uB992")}).to.throw(Error, "EncodingError U+B992");
expect(() => {ms932Encoder.encode("\uB993")}).to.throw(Error, "EncodingError U+B993");
expect(() => {ms932Encoder.encode("\uB994")}).to.throw(Error, "EncodingError U+B994");
expect(() => {ms932Encoder.encode("\uB995")}).to.throw(Error, "EncodingError U+B995");
expect(() => {ms932Encoder.encode("\uB996")}).to.throw(Error, "EncodingError U+B996");
expect(() => {ms932Encoder.encode("\uB997")}).to.throw(Error, "EncodingError U+B997");
expect(() => {ms932Encoder.encode("\uB998")}).to.throw(Error, "EncodingError U+B998");
expect(() => {ms932Encoder.encode("\uB999")}).to.throw(Error, "EncodingError U+B999");
expect(() => {ms932Encoder.encode("\uB99A")}).to.throw(Error, "EncodingError U+B99A");
expect(() => {ms932Encoder.encode("\uB99B")}).to.throw(Error, "EncodingError U+B99B");
expect(() => {ms932Encoder.encode("\uB99C")}).to.throw(Error, "EncodingError U+B99C");
expect(() => {ms932Encoder.encode("\uB99D")}).to.throw(Error, "EncodingError U+B99D");
expect(() => {ms932Encoder.encode("\uB99E")}).to.throw(Error, "EncodingError U+B99E");
expect(() => {ms932Encoder.encode("\uB99F")}).to.throw(Error, "EncodingError U+B99F");
expect(() => {ms932Encoder.encode("\uB9A0")}).to.throw(Error, "EncodingError U+B9A0");
expect(() => {ms932Encoder.encode("\uB9A1")}).to.throw(Error, "EncodingError U+B9A1");
expect(() => {ms932Encoder.encode("\uB9A2")}).to.throw(Error, "EncodingError U+B9A2");
expect(() => {ms932Encoder.encode("\uB9A3")}).to.throw(Error, "EncodingError U+B9A3");
expect(() => {ms932Encoder.encode("\uB9A4")}).to.throw(Error, "EncodingError U+B9A4");
expect(() => {ms932Encoder.encode("\uB9A5")}).to.throw(Error, "EncodingError U+B9A5");
expect(() => {ms932Encoder.encode("\uB9A6")}).to.throw(Error, "EncodingError U+B9A6");
expect(() => {ms932Encoder.encode("\uB9A7")}).to.throw(Error, "EncodingError U+B9A7");
expect(() => {ms932Encoder.encode("\uB9A8")}).to.throw(Error, "EncodingError U+B9A8");
expect(() => {ms932Encoder.encode("\uB9A9")}).to.throw(Error, "EncodingError U+B9A9");
expect(() => {ms932Encoder.encode("\uB9AA")}).to.throw(Error, "EncodingError U+B9AA");
expect(() => {ms932Encoder.encode("\uB9AB")}).to.throw(Error, "EncodingError U+B9AB");
expect(() => {ms932Encoder.encode("\uB9AC")}).to.throw(Error, "EncodingError U+B9AC");
expect(() => {ms932Encoder.encode("\uB9AD")}).to.throw(Error, "EncodingError U+B9AD");
expect(() => {ms932Encoder.encode("\uB9AE")}).to.throw(Error, "EncodingError U+B9AE");
expect(() => {ms932Encoder.encode("\uB9AF")}).to.throw(Error, "EncodingError U+B9AF");
expect(() => {ms932Encoder.encode("\uB9B0")}).to.throw(Error, "EncodingError U+B9B0");
expect(() => {ms932Encoder.encode("\uB9B1")}).to.throw(Error, "EncodingError U+B9B1");
expect(() => {ms932Encoder.encode("\uB9B2")}).to.throw(Error, "EncodingError U+B9B2");
expect(() => {ms932Encoder.encode("\uB9B3")}).to.throw(Error, "EncodingError U+B9B3");
expect(() => {ms932Encoder.encode("\uB9B4")}).to.throw(Error, "EncodingError U+B9B4");
expect(() => {ms932Encoder.encode("\uB9B5")}).to.throw(Error, "EncodingError U+B9B5");
expect(() => {ms932Encoder.encode("\uB9B6")}).to.throw(Error, "EncodingError U+B9B6");
expect(() => {ms932Encoder.encode("\uB9B7")}).to.throw(Error, "EncodingError U+B9B7");
expect(() => {ms932Encoder.encode("\uB9B8")}).to.throw(Error, "EncodingError U+B9B8");
expect(() => {ms932Encoder.encode("\uB9B9")}).to.throw(Error, "EncodingError U+B9B9");
expect(() => {ms932Encoder.encode("\uB9BA")}).to.throw(Error, "EncodingError U+B9BA");
expect(() => {ms932Encoder.encode("\uB9BB")}).to.throw(Error, "EncodingError U+B9BB");
expect(() => {ms932Encoder.encode("\uB9BC")}).to.throw(Error, "EncodingError U+B9BC");
expect(() => {ms932Encoder.encode("\uB9BD")}).to.throw(Error, "EncodingError U+B9BD");
expect(() => {ms932Encoder.encode("\uB9BE")}).to.throw(Error, "EncodingError U+B9BE");
expect(() => {ms932Encoder.encode("\uB9BF")}).to.throw(Error, "EncodingError U+B9BF");
expect(() => {ms932Encoder.encode("\uB9C0")}).to.throw(Error, "EncodingError U+B9C0");
expect(() => {ms932Encoder.encode("\uB9C1")}).to.throw(Error, "EncodingError U+B9C1");
expect(() => {ms932Encoder.encode("\uB9C2")}).to.throw(Error, "EncodingError U+B9C2");
expect(() => {ms932Encoder.encode("\uB9C3")}).to.throw(Error, "EncodingError U+B9C3");
expect(() => {ms932Encoder.encode("\uB9C4")}).to.throw(Error, "EncodingError U+B9C4");
expect(() => {ms932Encoder.encode("\uB9C5")}).to.throw(Error, "EncodingError U+B9C5");
expect(() => {ms932Encoder.encode("\uB9C6")}).to.throw(Error, "EncodingError U+B9C6");
expect(() => {ms932Encoder.encode("\uB9C7")}).to.throw(Error, "EncodingError U+B9C7");
expect(() => {ms932Encoder.encode("\uB9C8")}).to.throw(Error, "EncodingError U+B9C8");
expect(() => {ms932Encoder.encode("\uB9C9")}).to.throw(Error, "EncodingError U+B9C9");
expect(() => {ms932Encoder.encode("\uB9CA")}).to.throw(Error, "EncodingError U+B9CA");
expect(() => {ms932Encoder.encode("\uB9CB")}).to.throw(Error, "EncodingError U+B9CB");
expect(() => {ms932Encoder.encode("\uB9CC")}).to.throw(Error, "EncodingError U+B9CC");
expect(() => {ms932Encoder.encode("\uB9CD")}).to.throw(Error, "EncodingError U+B9CD");
expect(() => {ms932Encoder.encode("\uB9CE")}).to.throw(Error, "EncodingError U+B9CE");
expect(() => {ms932Encoder.encode("\uB9CF")}).to.throw(Error, "EncodingError U+B9CF");
expect(() => {ms932Encoder.encode("\uB9D0")}).to.throw(Error, "EncodingError U+B9D0");
expect(() => {ms932Encoder.encode("\uB9D1")}).to.throw(Error, "EncodingError U+B9D1");
expect(() => {ms932Encoder.encode("\uB9D2")}).to.throw(Error, "EncodingError U+B9D2");
expect(() => {ms932Encoder.encode("\uB9D3")}).to.throw(Error, "EncodingError U+B9D3");
expect(() => {ms932Encoder.encode("\uB9D4")}).to.throw(Error, "EncodingError U+B9D4");
expect(() => {ms932Encoder.encode("\uB9D5")}).to.throw(Error, "EncodingError U+B9D5");
expect(() => {ms932Encoder.encode("\uB9D6")}).to.throw(Error, "EncodingError U+B9D6");
expect(() => {ms932Encoder.encode("\uB9D7")}).to.throw(Error, "EncodingError U+B9D7");
expect(() => {ms932Encoder.encode("\uB9D8")}).to.throw(Error, "EncodingError U+B9D8");
expect(() => {ms932Encoder.encode("\uB9D9")}).to.throw(Error, "EncodingError U+B9D9");
expect(() => {ms932Encoder.encode("\uB9DA")}).to.throw(Error, "EncodingError U+B9DA");
expect(() => {ms932Encoder.encode("\uB9DB")}).to.throw(Error, "EncodingError U+B9DB");
expect(() => {ms932Encoder.encode("\uB9DC")}).to.throw(Error, "EncodingError U+B9DC");
expect(() => {ms932Encoder.encode("\uB9DD")}).to.throw(Error, "EncodingError U+B9DD");
expect(() => {ms932Encoder.encode("\uB9DE")}).to.throw(Error, "EncodingError U+B9DE");
expect(() => {ms932Encoder.encode("\uB9DF")}).to.throw(Error, "EncodingError U+B9DF");
expect(() => {ms932Encoder.encode("\uB9E0")}).to.throw(Error, "EncodingError U+B9E0");
expect(() => {ms932Encoder.encode("\uB9E1")}).to.throw(Error, "EncodingError U+B9E1");
expect(() => {ms932Encoder.encode("\uB9E2")}).to.throw(Error, "EncodingError U+B9E2");
expect(() => {ms932Encoder.encode("\uB9E3")}).to.throw(Error, "EncodingError U+B9E3");
expect(() => {ms932Encoder.encode("\uB9E4")}).to.throw(Error, "EncodingError U+B9E4");
expect(() => {ms932Encoder.encode("\uB9E5")}).to.throw(Error, "EncodingError U+B9E5");
expect(() => {ms932Encoder.encode("\uB9E6")}).to.throw(Error, "EncodingError U+B9E6");
expect(() => {ms932Encoder.encode("\uB9E7")}).to.throw(Error, "EncodingError U+B9E7");
expect(() => {ms932Encoder.encode("\uB9E8")}).to.throw(Error, "EncodingError U+B9E8");
expect(() => {ms932Encoder.encode("\uB9E9")}).to.throw(Error, "EncodingError U+B9E9");
expect(() => {ms932Encoder.encode("\uB9EA")}).to.throw(Error, "EncodingError U+B9EA");
expect(() => {ms932Encoder.encode("\uB9EB")}).to.throw(Error, "EncodingError U+B9EB");
expect(() => {ms932Encoder.encode("\uB9EC")}).to.throw(Error, "EncodingError U+B9EC");
expect(() => {ms932Encoder.encode("\uB9ED")}).to.throw(Error, "EncodingError U+B9ED");
expect(() => {ms932Encoder.encode("\uB9EE")}).to.throw(Error, "EncodingError U+B9EE");
expect(() => {ms932Encoder.encode("\uB9EF")}).to.throw(Error, "EncodingError U+B9EF");
expect(() => {ms932Encoder.encode("\uB9F0")}).to.throw(Error, "EncodingError U+B9F0");
expect(() => {ms932Encoder.encode("\uB9F1")}).to.throw(Error, "EncodingError U+B9F1");
expect(() => {ms932Encoder.encode("\uB9F2")}).to.throw(Error, "EncodingError U+B9F2");
expect(() => {ms932Encoder.encode("\uB9F3")}).to.throw(Error, "EncodingError U+B9F3");
expect(() => {ms932Encoder.encode("\uB9F4")}).to.throw(Error, "EncodingError U+B9F4");
expect(() => {ms932Encoder.encode("\uB9F5")}).to.throw(Error, "EncodingError U+B9F5");
expect(() => {ms932Encoder.encode("\uB9F6")}).to.throw(Error, "EncodingError U+B9F6");
expect(() => {ms932Encoder.encode("\uB9F7")}).to.throw(Error, "EncodingError U+B9F7");
expect(() => {ms932Encoder.encode("\uB9F8")}).to.throw(Error, "EncodingError U+B9F8");
expect(() => {ms932Encoder.encode("\uB9F9")}).to.throw(Error, "EncodingError U+B9F9");
expect(() => {ms932Encoder.encode("\uB9FA")}).to.throw(Error, "EncodingError U+B9FA");
expect(() => {ms932Encoder.encode("\uB9FB")}).to.throw(Error, "EncodingError U+B9FB");
expect(() => {ms932Encoder.encode("\uB9FC")}).to.throw(Error, "EncodingError U+B9FC");
expect(() => {ms932Encoder.encode("\uB9FD")}).to.throw(Error, "EncodingError U+B9FD");
expect(() => {ms932Encoder.encode("\uB9FE")}).to.throw(Error, "EncodingError U+B9FE");
expect(() => {ms932Encoder.encode("\uB9FF")}).to.throw(Error, "EncodingError U+B9FF");
expect(() => {ms932Encoder.encode("\uBA00")}).to.throw(Error, "EncodingError U+BA00");
expect(() => {ms932Encoder.encode("\uBA01")}).to.throw(Error, "EncodingError U+BA01");
expect(() => {ms932Encoder.encode("\uBA02")}).to.throw(Error, "EncodingError U+BA02");
expect(() => {ms932Encoder.encode("\uBA03")}).to.throw(Error, "EncodingError U+BA03");
expect(() => {ms932Encoder.encode("\uBA04")}).to.throw(Error, "EncodingError U+BA04");
expect(() => {ms932Encoder.encode("\uBA05")}).to.throw(Error, "EncodingError U+BA05");
expect(() => {ms932Encoder.encode("\uBA06")}).to.throw(Error, "EncodingError U+BA06");
expect(() => {ms932Encoder.encode("\uBA07")}).to.throw(Error, "EncodingError U+BA07");
expect(() => {ms932Encoder.encode("\uBA08")}).to.throw(Error, "EncodingError U+BA08");
expect(() => {ms932Encoder.encode("\uBA09")}).to.throw(Error, "EncodingError U+BA09");
expect(() => {ms932Encoder.encode("\uBA0A")}).to.throw(Error, "EncodingError U+BA0A");
expect(() => {ms932Encoder.encode("\uBA0B")}).to.throw(Error, "EncodingError U+BA0B");
expect(() => {ms932Encoder.encode("\uBA0C")}).to.throw(Error, "EncodingError U+BA0C");
expect(() => {ms932Encoder.encode("\uBA0D")}).to.throw(Error, "EncodingError U+BA0D");
expect(() => {ms932Encoder.encode("\uBA0E")}).to.throw(Error, "EncodingError U+BA0E");
expect(() => {ms932Encoder.encode("\uBA0F")}).to.throw(Error, "EncodingError U+BA0F");
expect(() => {ms932Encoder.encode("\uBA10")}).to.throw(Error, "EncodingError U+BA10");
expect(() => {ms932Encoder.encode("\uBA11")}).to.throw(Error, "EncodingError U+BA11");
expect(() => {ms932Encoder.encode("\uBA12")}).to.throw(Error, "EncodingError U+BA12");
expect(() => {ms932Encoder.encode("\uBA13")}).to.throw(Error, "EncodingError U+BA13");
expect(() => {ms932Encoder.encode("\uBA14")}).to.throw(Error, "EncodingError U+BA14");
expect(() => {ms932Encoder.encode("\uBA15")}).to.throw(Error, "EncodingError U+BA15");
expect(() => {ms932Encoder.encode("\uBA16")}).to.throw(Error, "EncodingError U+BA16");
expect(() => {ms932Encoder.encode("\uBA17")}).to.throw(Error, "EncodingError U+BA17");
expect(() => {ms932Encoder.encode("\uBA18")}).to.throw(Error, "EncodingError U+BA18");
expect(() => {ms932Encoder.encode("\uBA19")}).to.throw(Error, "EncodingError U+BA19");
expect(() => {ms932Encoder.encode("\uBA1A")}).to.throw(Error, "EncodingError U+BA1A");
expect(() => {ms932Encoder.encode("\uBA1B")}).to.throw(Error, "EncodingError U+BA1B");
expect(() => {ms932Encoder.encode("\uBA1C")}).to.throw(Error, "EncodingError U+BA1C");
expect(() => {ms932Encoder.encode("\uBA1D")}).to.throw(Error, "EncodingError U+BA1D");
expect(() => {ms932Encoder.encode("\uBA1E")}).to.throw(Error, "EncodingError U+BA1E");
expect(() => {ms932Encoder.encode("\uBA1F")}).to.throw(Error, "EncodingError U+BA1F");
expect(() => {ms932Encoder.encode("\uBA20")}).to.throw(Error, "EncodingError U+BA20");
expect(() => {ms932Encoder.encode("\uBA21")}).to.throw(Error, "EncodingError U+BA21");
expect(() => {ms932Encoder.encode("\uBA22")}).to.throw(Error, "EncodingError U+BA22");
expect(() => {ms932Encoder.encode("\uBA23")}).to.throw(Error, "EncodingError U+BA23");
expect(() => {ms932Encoder.encode("\uBA24")}).to.throw(Error, "EncodingError U+BA24");
expect(() => {ms932Encoder.encode("\uBA25")}).to.throw(Error, "EncodingError U+BA25");
expect(() => {ms932Encoder.encode("\uBA26")}).to.throw(Error, "EncodingError U+BA26");
expect(() => {ms932Encoder.encode("\uBA27")}).to.throw(Error, "EncodingError U+BA27");
expect(() => {ms932Encoder.encode("\uBA28")}).to.throw(Error, "EncodingError U+BA28");
expect(() => {ms932Encoder.encode("\uBA29")}).to.throw(Error, "EncodingError U+BA29");
expect(() => {ms932Encoder.encode("\uBA2A")}).to.throw(Error, "EncodingError U+BA2A");
expect(() => {ms932Encoder.encode("\uBA2B")}).to.throw(Error, "EncodingError U+BA2B");
expect(() => {ms932Encoder.encode("\uBA2C")}).to.throw(Error, "EncodingError U+BA2C");
expect(() => {ms932Encoder.encode("\uBA2D")}).to.throw(Error, "EncodingError U+BA2D");
expect(() => {ms932Encoder.encode("\uBA2E")}).to.throw(Error, "EncodingError U+BA2E");
expect(() => {ms932Encoder.encode("\uBA2F")}).to.throw(Error, "EncodingError U+BA2F");
expect(() => {ms932Encoder.encode("\uBA30")}).to.throw(Error, "EncodingError U+BA30");
expect(() => {ms932Encoder.encode("\uBA31")}).to.throw(Error, "EncodingError U+BA31");
expect(() => {ms932Encoder.encode("\uBA32")}).to.throw(Error, "EncodingError U+BA32");
expect(() => {ms932Encoder.encode("\uBA33")}).to.throw(Error, "EncodingError U+BA33");
expect(() => {ms932Encoder.encode("\uBA34")}).to.throw(Error, "EncodingError U+BA34");
expect(() => {ms932Encoder.encode("\uBA35")}).to.throw(Error, "EncodingError U+BA35");
expect(() => {ms932Encoder.encode("\uBA36")}).to.throw(Error, "EncodingError U+BA36");
expect(() => {ms932Encoder.encode("\uBA37")}).to.throw(Error, "EncodingError U+BA37");
expect(() => {ms932Encoder.encode("\uBA38")}).to.throw(Error, "EncodingError U+BA38");
expect(() => {ms932Encoder.encode("\uBA39")}).to.throw(Error, "EncodingError U+BA39");
expect(() => {ms932Encoder.encode("\uBA3A")}).to.throw(Error, "EncodingError U+BA3A");
expect(() => {ms932Encoder.encode("\uBA3B")}).to.throw(Error, "EncodingError U+BA3B");
expect(() => {ms932Encoder.encode("\uBA3C")}).to.throw(Error, "EncodingError U+BA3C");
expect(() => {ms932Encoder.encode("\uBA3D")}).to.throw(Error, "EncodingError U+BA3D");
expect(() => {ms932Encoder.encode("\uBA3E")}).to.throw(Error, "EncodingError U+BA3E");
expect(() => {ms932Encoder.encode("\uBA3F")}).to.throw(Error, "EncodingError U+BA3F");
expect(() => {ms932Encoder.encode("\uBA40")}).to.throw(Error, "EncodingError U+BA40");
expect(() => {ms932Encoder.encode("\uBA41")}).to.throw(Error, "EncodingError U+BA41");
expect(() => {ms932Encoder.encode("\uBA42")}).to.throw(Error, "EncodingError U+BA42");
expect(() => {ms932Encoder.encode("\uBA43")}).to.throw(Error, "EncodingError U+BA43");
expect(() => {ms932Encoder.encode("\uBA44")}).to.throw(Error, "EncodingError U+BA44");
expect(() => {ms932Encoder.encode("\uBA45")}).to.throw(Error, "EncodingError U+BA45");
expect(() => {ms932Encoder.encode("\uBA46")}).to.throw(Error, "EncodingError U+BA46");
expect(() => {ms932Encoder.encode("\uBA47")}).to.throw(Error, "EncodingError U+BA47");
expect(() => {ms932Encoder.encode("\uBA48")}).to.throw(Error, "EncodingError U+BA48");
expect(() => {ms932Encoder.encode("\uBA49")}).to.throw(Error, "EncodingError U+BA49");
expect(() => {ms932Encoder.encode("\uBA4A")}).to.throw(Error, "EncodingError U+BA4A");
expect(() => {ms932Encoder.encode("\uBA4B")}).to.throw(Error, "EncodingError U+BA4B");
expect(() => {ms932Encoder.encode("\uBA4C")}).to.throw(Error, "EncodingError U+BA4C");
expect(() => {ms932Encoder.encode("\uBA4D")}).to.throw(Error, "EncodingError U+BA4D");
expect(() => {ms932Encoder.encode("\uBA4E")}).to.throw(Error, "EncodingError U+BA4E");
expect(() => {ms932Encoder.encode("\uBA4F")}).to.throw(Error, "EncodingError U+BA4F");
expect(() => {ms932Encoder.encode("\uBA50")}).to.throw(Error, "EncodingError U+BA50");
expect(() => {ms932Encoder.encode("\uBA51")}).to.throw(Error, "EncodingError U+BA51");
expect(() => {ms932Encoder.encode("\uBA52")}).to.throw(Error, "EncodingError U+BA52");
expect(() => {ms932Encoder.encode("\uBA53")}).to.throw(Error, "EncodingError U+BA53");
expect(() => {ms932Encoder.encode("\uBA54")}).to.throw(Error, "EncodingError U+BA54");
expect(() => {ms932Encoder.encode("\uBA55")}).to.throw(Error, "EncodingError U+BA55");
expect(() => {ms932Encoder.encode("\uBA56")}).to.throw(Error, "EncodingError U+BA56");
expect(() => {ms932Encoder.encode("\uBA57")}).to.throw(Error, "EncodingError U+BA57");
expect(() => {ms932Encoder.encode("\uBA58")}).to.throw(Error, "EncodingError U+BA58");
expect(() => {ms932Encoder.encode("\uBA59")}).to.throw(Error, "EncodingError U+BA59");
expect(() => {ms932Encoder.encode("\uBA5A")}).to.throw(Error, "EncodingError U+BA5A");
expect(() => {ms932Encoder.encode("\uBA5B")}).to.throw(Error, "EncodingError U+BA5B");
expect(() => {ms932Encoder.encode("\uBA5C")}).to.throw(Error, "EncodingError U+BA5C");
expect(() => {ms932Encoder.encode("\uBA5D")}).to.throw(Error, "EncodingError U+BA5D");
expect(() => {ms932Encoder.encode("\uBA5E")}).to.throw(Error, "EncodingError U+BA5E");
expect(() => {ms932Encoder.encode("\uBA5F")}).to.throw(Error, "EncodingError U+BA5F");
expect(() => {ms932Encoder.encode("\uBA60")}).to.throw(Error, "EncodingError U+BA60");
expect(() => {ms932Encoder.encode("\uBA61")}).to.throw(Error, "EncodingError U+BA61");
expect(() => {ms932Encoder.encode("\uBA62")}).to.throw(Error, "EncodingError U+BA62");
expect(() => {ms932Encoder.encode("\uBA63")}).to.throw(Error, "EncodingError U+BA63");
expect(() => {ms932Encoder.encode("\uBA64")}).to.throw(Error, "EncodingError U+BA64");
expect(() => {ms932Encoder.encode("\uBA65")}).to.throw(Error, "EncodingError U+BA65");
expect(() => {ms932Encoder.encode("\uBA66")}).to.throw(Error, "EncodingError U+BA66");
expect(() => {ms932Encoder.encode("\uBA67")}).to.throw(Error, "EncodingError U+BA67");
expect(() => {ms932Encoder.encode("\uBA68")}).to.throw(Error, "EncodingError U+BA68");
expect(() => {ms932Encoder.encode("\uBA69")}).to.throw(Error, "EncodingError U+BA69");
expect(() => {ms932Encoder.encode("\uBA6A")}).to.throw(Error, "EncodingError U+BA6A");
expect(() => {ms932Encoder.encode("\uBA6B")}).to.throw(Error, "EncodingError U+BA6B");
expect(() => {ms932Encoder.encode("\uBA6C")}).to.throw(Error, "EncodingError U+BA6C");
expect(() => {ms932Encoder.encode("\uBA6D")}).to.throw(Error, "EncodingError U+BA6D");
expect(() => {ms932Encoder.encode("\uBA6E")}).to.throw(Error, "EncodingError U+BA6E");
expect(() => {ms932Encoder.encode("\uBA6F")}).to.throw(Error, "EncodingError U+BA6F");
expect(() => {ms932Encoder.encode("\uBA70")}).to.throw(Error, "EncodingError U+BA70");
expect(() => {ms932Encoder.encode("\uBA71")}).to.throw(Error, "EncodingError U+BA71");
expect(() => {ms932Encoder.encode("\uBA72")}).to.throw(Error, "EncodingError U+BA72");
expect(() => {ms932Encoder.encode("\uBA73")}).to.throw(Error, "EncodingError U+BA73");
expect(() => {ms932Encoder.encode("\uBA74")}).to.throw(Error, "EncodingError U+BA74");
expect(() => {ms932Encoder.encode("\uBA75")}).to.throw(Error, "EncodingError U+BA75");
expect(() => {ms932Encoder.encode("\uBA76")}).to.throw(Error, "EncodingError U+BA76");
expect(() => {ms932Encoder.encode("\uBA77")}).to.throw(Error, "EncodingError U+BA77");
expect(() => {ms932Encoder.encode("\uBA78")}).to.throw(Error, "EncodingError U+BA78");
expect(() => {ms932Encoder.encode("\uBA79")}).to.throw(Error, "EncodingError U+BA79");
expect(() => {ms932Encoder.encode("\uBA7A")}).to.throw(Error, "EncodingError U+BA7A");
expect(() => {ms932Encoder.encode("\uBA7B")}).to.throw(Error, "EncodingError U+BA7B");
expect(() => {ms932Encoder.encode("\uBA7C")}).to.throw(Error, "EncodingError U+BA7C");
expect(() => {ms932Encoder.encode("\uBA7D")}).to.throw(Error, "EncodingError U+BA7D");
expect(() => {ms932Encoder.encode("\uBA7E")}).to.throw(Error, "EncodingError U+BA7E");
expect(() => {ms932Encoder.encode("\uBA7F")}).to.throw(Error, "EncodingError U+BA7F");
expect(() => {ms932Encoder.encode("\uBA80")}).to.throw(Error, "EncodingError U+BA80");
expect(() => {ms932Encoder.encode("\uBA81")}).to.throw(Error, "EncodingError U+BA81");
expect(() => {ms932Encoder.encode("\uBA82")}).to.throw(Error, "EncodingError U+BA82");
expect(() => {ms932Encoder.encode("\uBA83")}).to.throw(Error, "EncodingError U+BA83");
expect(() => {ms932Encoder.encode("\uBA84")}).to.throw(Error, "EncodingError U+BA84");
expect(() => {ms932Encoder.encode("\uBA85")}).to.throw(Error, "EncodingError U+BA85");
expect(() => {ms932Encoder.encode("\uBA86")}).to.throw(Error, "EncodingError U+BA86");
expect(() => {ms932Encoder.encode("\uBA87")}).to.throw(Error, "EncodingError U+BA87");
expect(() => {ms932Encoder.encode("\uBA88")}).to.throw(Error, "EncodingError U+BA88");
expect(() => {ms932Encoder.encode("\uBA89")}).to.throw(Error, "EncodingError U+BA89");
expect(() => {ms932Encoder.encode("\uBA8A")}).to.throw(Error, "EncodingError U+BA8A");
expect(() => {ms932Encoder.encode("\uBA8B")}).to.throw(Error, "EncodingError U+BA8B");
expect(() => {ms932Encoder.encode("\uBA8C")}).to.throw(Error, "EncodingError U+BA8C");
expect(() => {ms932Encoder.encode("\uBA8D")}).to.throw(Error, "EncodingError U+BA8D");
expect(() => {ms932Encoder.encode("\uBA8E")}).to.throw(Error, "EncodingError U+BA8E");
expect(() => {ms932Encoder.encode("\uBA8F")}).to.throw(Error, "EncodingError U+BA8F");
expect(() => {ms932Encoder.encode("\uBA90")}).to.throw(Error, "EncodingError U+BA90");
expect(() => {ms932Encoder.encode("\uBA91")}).to.throw(Error, "EncodingError U+BA91");
expect(() => {ms932Encoder.encode("\uBA92")}).to.throw(Error, "EncodingError U+BA92");
expect(() => {ms932Encoder.encode("\uBA93")}).to.throw(Error, "EncodingError U+BA93");
expect(() => {ms932Encoder.encode("\uBA94")}).to.throw(Error, "EncodingError U+BA94");
expect(() => {ms932Encoder.encode("\uBA95")}).to.throw(Error, "EncodingError U+BA95");
expect(() => {ms932Encoder.encode("\uBA96")}).to.throw(Error, "EncodingError U+BA96");
expect(() => {ms932Encoder.encode("\uBA97")}).to.throw(Error, "EncodingError U+BA97");
expect(() => {ms932Encoder.encode("\uBA98")}).to.throw(Error, "EncodingError U+BA98");
expect(() => {ms932Encoder.encode("\uBA99")}).to.throw(Error, "EncodingError U+BA99");
expect(() => {ms932Encoder.encode("\uBA9A")}).to.throw(Error, "EncodingError U+BA9A");
expect(() => {ms932Encoder.encode("\uBA9B")}).to.throw(Error, "EncodingError U+BA9B");
expect(() => {ms932Encoder.encode("\uBA9C")}).to.throw(Error, "EncodingError U+BA9C");
expect(() => {ms932Encoder.encode("\uBA9D")}).to.throw(Error, "EncodingError U+BA9D");
expect(() => {ms932Encoder.encode("\uBA9E")}).to.throw(Error, "EncodingError U+BA9E");
expect(() => {ms932Encoder.encode("\uBA9F")}).to.throw(Error, "EncodingError U+BA9F");
expect(() => {ms932Encoder.encode("\uBAA0")}).to.throw(Error, "EncodingError U+BAA0");
expect(() => {ms932Encoder.encode("\uBAA1")}).to.throw(Error, "EncodingError U+BAA1");
expect(() => {ms932Encoder.encode("\uBAA2")}).to.throw(Error, "EncodingError U+BAA2");
expect(() => {ms932Encoder.encode("\uBAA3")}).to.throw(Error, "EncodingError U+BAA3");
expect(() => {ms932Encoder.encode("\uBAA4")}).to.throw(Error, "EncodingError U+BAA4");
expect(() => {ms932Encoder.encode("\uBAA5")}).to.throw(Error, "EncodingError U+BAA5");
expect(() => {ms932Encoder.encode("\uBAA6")}).to.throw(Error, "EncodingError U+BAA6");
expect(() => {ms932Encoder.encode("\uBAA7")}).to.throw(Error, "EncodingError U+BAA7");
expect(() => {ms932Encoder.encode("\uBAA8")}).to.throw(Error, "EncodingError U+BAA8");
expect(() => {ms932Encoder.encode("\uBAA9")}).to.throw(Error, "EncodingError U+BAA9");
expect(() => {ms932Encoder.encode("\uBAAA")}).to.throw(Error, "EncodingError U+BAAA");
expect(() => {ms932Encoder.encode("\uBAAB")}).to.throw(Error, "EncodingError U+BAAB");
expect(() => {ms932Encoder.encode("\uBAAC")}).to.throw(Error, "EncodingError U+BAAC");
expect(() => {ms932Encoder.encode("\uBAAD")}).to.throw(Error, "EncodingError U+BAAD");
expect(() => {ms932Encoder.encode("\uBAAE")}).to.throw(Error, "EncodingError U+BAAE");
expect(() => {ms932Encoder.encode("\uBAAF")}).to.throw(Error, "EncodingError U+BAAF");
expect(() => {ms932Encoder.encode("\uBAB0")}).to.throw(Error, "EncodingError U+BAB0");
expect(() => {ms932Encoder.encode("\uBAB1")}).to.throw(Error, "EncodingError U+BAB1");
expect(() => {ms932Encoder.encode("\uBAB2")}).to.throw(Error, "EncodingError U+BAB2");
expect(() => {ms932Encoder.encode("\uBAB3")}).to.throw(Error, "EncodingError U+BAB3");
expect(() => {ms932Encoder.encode("\uBAB4")}).to.throw(Error, "EncodingError U+BAB4");
expect(() => {ms932Encoder.encode("\uBAB5")}).to.throw(Error, "EncodingError U+BAB5");
expect(() => {ms932Encoder.encode("\uBAB6")}).to.throw(Error, "EncodingError U+BAB6");
expect(() => {ms932Encoder.encode("\uBAB7")}).to.throw(Error, "EncodingError U+BAB7");
expect(() => {ms932Encoder.encode("\uBAB8")}).to.throw(Error, "EncodingError U+BAB8");
expect(() => {ms932Encoder.encode("\uBAB9")}).to.throw(Error, "EncodingError U+BAB9");
expect(() => {ms932Encoder.encode("\uBABA")}).to.throw(Error, "EncodingError U+BABA");
expect(() => {ms932Encoder.encode("\uBABB")}).to.throw(Error, "EncodingError U+BABB");
expect(() => {ms932Encoder.encode("\uBABC")}).to.throw(Error, "EncodingError U+BABC");
expect(() => {ms932Encoder.encode("\uBABD")}).to.throw(Error, "EncodingError U+BABD");
expect(() => {ms932Encoder.encode("\uBABE")}).to.throw(Error, "EncodingError U+BABE");
expect(() => {ms932Encoder.encode("\uBABF")}).to.throw(Error, "EncodingError U+BABF");
expect(() => {ms932Encoder.encode("\uBAC0")}).to.throw(Error, "EncodingError U+BAC0");
expect(() => {ms932Encoder.encode("\uBAC1")}).to.throw(Error, "EncodingError U+BAC1");
expect(() => {ms932Encoder.encode("\uBAC2")}).to.throw(Error, "EncodingError U+BAC2");
expect(() => {ms932Encoder.encode("\uBAC3")}).to.throw(Error, "EncodingError U+BAC3");
expect(() => {ms932Encoder.encode("\uBAC4")}).to.throw(Error, "EncodingError U+BAC4");
expect(() => {ms932Encoder.encode("\uBAC5")}).to.throw(Error, "EncodingError U+BAC5");
expect(() => {ms932Encoder.encode("\uBAC6")}).to.throw(Error, "EncodingError U+BAC6");
expect(() => {ms932Encoder.encode("\uBAC7")}).to.throw(Error, "EncodingError U+BAC7");
expect(() => {ms932Encoder.encode("\uBAC8")}).to.throw(Error, "EncodingError U+BAC8");
expect(() => {ms932Encoder.encode("\uBAC9")}).to.throw(Error, "EncodingError U+BAC9");
expect(() => {ms932Encoder.encode("\uBACA")}).to.throw(Error, "EncodingError U+BACA");
expect(() => {ms932Encoder.encode("\uBACB")}).to.throw(Error, "EncodingError U+BACB");
expect(() => {ms932Encoder.encode("\uBACC")}).to.throw(Error, "EncodingError U+BACC");
expect(() => {ms932Encoder.encode("\uBACD")}).to.throw(Error, "EncodingError U+BACD");
expect(() => {ms932Encoder.encode("\uBACE")}).to.throw(Error, "EncodingError U+BACE");
expect(() => {ms932Encoder.encode("\uBACF")}).to.throw(Error, "EncodingError U+BACF");
expect(() => {ms932Encoder.encode("\uBAD0")}).to.throw(Error, "EncodingError U+BAD0");
expect(() => {ms932Encoder.encode("\uBAD1")}).to.throw(Error, "EncodingError U+BAD1");
expect(() => {ms932Encoder.encode("\uBAD2")}).to.throw(Error, "EncodingError U+BAD2");
expect(() => {ms932Encoder.encode("\uBAD3")}).to.throw(Error, "EncodingError U+BAD3");
expect(() => {ms932Encoder.encode("\uBAD4")}).to.throw(Error, "EncodingError U+BAD4");
expect(() => {ms932Encoder.encode("\uBAD5")}).to.throw(Error, "EncodingError U+BAD5");
expect(() => {ms932Encoder.encode("\uBAD6")}).to.throw(Error, "EncodingError U+BAD6");
expect(() => {ms932Encoder.encode("\uBAD7")}).to.throw(Error, "EncodingError U+BAD7");
expect(() => {ms932Encoder.encode("\uBAD8")}).to.throw(Error, "EncodingError U+BAD8");
expect(() => {ms932Encoder.encode("\uBAD9")}).to.throw(Error, "EncodingError U+BAD9");
expect(() => {ms932Encoder.encode("\uBADA")}).to.throw(Error, "EncodingError U+BADA");
expect(() => {ms932Encoder.encode("\uBADB")}).to.throw(Error, "EncodingError U+BADB");
expect(() => {ms932Encoder.encode("\uBADC")}).to.throw(Error, "EncodingError U+BADC");
expect(() => {ms932Encoder.encode("\uBADD")}).to.throw(Error, "EncodingError U+BADD");
expect(() => {ms932Encoder.encode("\uBADE")}).to.throw(Error, "EncodingError U+BADE");
expect(() => {ms932Encoder.encode("\uBADF")}).to.throw(Error, "EncodingError U+BADF");
expect(() => {ms932Encoder.encode("\uBAE0")}).to.throw(Error, "EncodingError U+BAE0");
expect(() => {ms932Encoder.encode("\uBAE1")}).to.throw(Error, "EncodingError U+BAE1");
expect(() => {ms932Encoder.encode("\uBAE2")}).to.throw(Error, "EncodingError U+BAE2");
expect(() => {ms932Encoder.encode("\uBAE3")}).to.throw(Error, "EncodingError U+BAE3");
expect(() => {ms932Encoder.encode("\uBAE4")}).to.throw(Error, "EncodingError U+BAE4");
expect(() => {ms932Encoder.encode("\uBAE5")}).to.throw(Error, "EncodingError U+BAE5");
expect(() => {ms932Encoder.encode("\uBAE6")}).to.throw(Error, "EncodingError U+BAE6");
expect(() => {ms932Encoder.encode("\uBAE7")}).to.throw(Error, "EncodingError U+BAE7");
expect(() => {ms932Encoder.encode("\uBAE8")}).to.throw(Error, "EncodingError U+BAE8");
expect(() => {ms932Encoder.encode("\uBAE9")}).to.throw(Error, "EncodingError U+BAE9");
expect(() => {ms932Encoder.encode("\uBAEA")}).to.throw(Error, "EncodingError U+BAEA");
expect(() => {ms932Encoder.encode("\uBAEB")}).to.throw(Error, "EncodingError U+BAEB");
expect(() => {ms932Encoder.encode("\uBAEC")}).to.throw(Error, "EncodingError U+BAEC");
expect(() => {ms932Encoder.encode("\uBAED")}).to.throw(Error, "EncodingError U+BAED");
expect(() => {ms932Encoder.encode("\uBAEE")}).to.throw(Error, "EncodingError U+BAEE");
expect(() => {ms932Encoder.encode("\uBAEF")}).to.throw(Error, "EncodingError U+BAEF");
expect(() => {ms932Encoder.encode("\uBAF0")}).to.throw(Error, "EncodingError U+BAF0");
expect(() => {ms932Encoder.encode("\uBAF1")}).to.throw(Error, "EncodingError U+BAF1");
expect(() => {ms932Encoder.encode("\uBAF2")}).to.throw(Error, "EncodingError U+BAF2");
expect(() => {ms932Encoder.encode("\uBAF3")}).to.throw(Error, "EncodingError U+BAF3");
expect(() => {ms932Encoder.encode("\uBAF4")}).to.throw(Error, "EncodingError U+BAF4");
expect(() => {ms932Encoder.encode("\uBAF5")}).to.throw(Error, "EncodingError U+BAF5");
expect(() => {ms932Encoder.encode("\uBAF6")}).to.throw(Error, "EncodingError U+BAF6");
expect(() => {ms932Encoder.encode("\uBAF7")}).to.throw(Error, "EncodingError U+BAF7");
expect(() => {ms932Encoder.encode("\uBAF8")}).to.throw(Error, "EncodingError U+BAF8");
expect(() => {ms932Encoder.encode("\uBAF9")}).to.throw(Error, "EncodingError U+BAF9");
expect(() => {ms932Encoder.encode("\uBAFA")}).to.throw(Error, "EncodingError U+BAFA");
expect(() => {ms932Encoder.encode("\uBAFB")}).to.throw(Error, "EncodingError U+BAFB");
expect(() => {ms932Encoder.encode("\uBAFC")}).to.throw(Error, "EncodingError U+BAFC");
expect(() => {ms932Encoder.encode("\uBAFD")}).to.throw(Error, "EncodingError U+BAFD");
expect(() => {ms932Encoder.encode("\uBAFE")}).to.throw(Error, "EncodingError U+BAFE");
expect(() => {ms932Encoder.encode("\uBAFF")}).to.throw(Error, "EncodingError U+BAFF");
expect(() => {ms932Encoder.encode("\uBB00")}).to.throw(Error, "EncodingError U+BB00");
expect(() => {ms932Encoder.encode("\uBB01")}).to.throw(Error, "EncodingError U+BB01");
expect(() => {ms932Encoder.encode("\uBB02")}).to.throw(Error, "EncodingError U+BB02");
expect(() => {ms932Encoder.encode("\uBB03")}).to.throw(Error, "EncodingError U+BB03");
expect(() => {ms932Encoder.encode("\uBB04")}).to.throw(Error, "EncodingError U+BB04");
expect(() => {ms932Encoder.encode("\uBB05")}).to.throw(Error, "EncodingError U+BB05");
expect(() => {ms932Encoder.encode("\uBB06")}).to.throw(Error, "EncodingError U+BB06");
expect(() => {ms932Encoder.encode("\uBB07")}).to.throw(Error, "EncodingError U+BB07");
expect(() => {ms932Encoder.encode("\uBB08")}).to.throw(Error, "EncodingError U+BB08");
expect(() => {ms932Encoder.encode("\uBB09")}).to.throw(Error, "EncodingError U+BB09");
expect(() => {ms932Encoder.encode("\uBB0A")}).to.throw(Error, "EncodingError U+BB0A");
expect(() => {ms932Encoder.encode("\uBB0B")}).to.throw(Error, "EncodingError U+BB0B");
expect(() => {ms932Encoder.encode("\uBB0C")}).to.throw(Error, "EncodingError U+BB0C");
expect(() => {ms932Encoder.encode("\uBB0D")}).to.throw(Error, "EncodingError U+BB0D");
expect(() => {ms932Encoder.encode("\uBB0E")}).to.throw(Error, "EncodingError U+BB0E");
expect(() => {ms932Encoder.encode("\uBB0F")}).to.throw(Error, "EncodingError U+BB0F");
expect(() => {ms932Encoder.encode("\uBB10")}).to.throw(Error, "EncodingError U+BB10");
expect(() => {ms932Encoder.encode("\uBB11")}).to.throw(Error, "EncodingError U+BB11");
expect(() => {ms932Encoder.encode("\uBB12")}).to.throw(Error, "EncodingError U+BB12");
expect(() => {ms932Encoder.encode("\uBB13")}).to.throw(Error, "EncodingError U+BB13");
expect(() => {ms932Encoder.encode("\uBB14")}).to.throw(Error, "EncodingError U+BB14");
expect(() => {ms932Encoder.encode("\uBB15")}).to.throw(Error, "EncodingError U+BB15");
expect(() => {ms932Encoder.encode("\uBB16")}).to.throw(Error, "EncodingError U+BB16");
expect(() => {ms932Encoder.encode("\uBB17")}).to.throw(Error, "EncodingError U+BB17");
expect(() => {ms932Encoder.encode("\uBB18")}).to.throw(Error, "EncodingError U+BB18");
expect(() => {ms932Encoder.encode("\uBB19")}).to.throw(Error, "EncodingError U+BB19");
expect(() => {ms932Encoder.encode("\uBB1A")}).to.throw(Error, "EncodingError U+BB1A");
expect(() => {ms932Encoder.encode("\uBB1B")}).to.throw(Error, "EncodingError U+BB1B");
expect(() => {ms932Encoder.encode("\uBB1C")}).to.throw(Error, "EncodingError U+BB1C");
expect(() => {ms932Encoder.encode("\uBB1D")}).to.throw(Error, "EncodingError U+BB1D");
expect(() => {ms932Encoder.encode("\uBB1E")}).to.throw(Error, "EncodingError U+BB1E");
expect(() => {ms932Encoder.encode("\uBB1F")}).to.throw(Error, "EncodingError U+BB1F");
expect(() => {ms932Encoder.encode("\uBB20")}).to.throw(Error, "EncodingError U+BB20");
expect(() => {ms932Encoder.encode("\uBB21")}).to.throw(Error, "EncodingError U+BB21");
expect(() => {ms932Encoder.encode("\uBB22")}).to.throw(Error, "EncodingError U+BB22");
expect(() => {ms932Encoder.encode("\uBB23")}).to.throw(Error, "EncodingError U+BB23");
expect(() => {ms932Encoder.encode("\uBB24")}).to.throw(Error, "EncodingError U+BB24");
expect(() => {ms932Encoder.encode("\uBB25")}).to.throw(Error, "EncodingError U+BB25");
expect(() => {ms932Encoder.encode("\uBB26")}).to.throw(Error, "EncodingError U+BB26");
expect(() => {ms932Encoder.encode("\uBB27")}).to.throw(Error, "EncodingError U+BB27");
expect(() => {ms932Encoder.encode("\uBB28")}).to.throw(Error, "EncodingError U+BB28");
expect(() => {ms932Encoder.encode("\uBB29")}).to.throw(Error, "EncodingError U+BB29");
expect(() => {ms932Encoder.encode("\uBB2A")}).to.throw(Error, "EncodingError U+BB2A");
expect(() => {ms932Encoder.encode("\uBB2B")}).to.throw(Error, "EncodingError U+BB2B");
expect(() => {ms932Encoder.encode("\uBB2C")}).to.throw(Error, "EncodingError U+BB2C");
expect(() => {ms932Encoder.encode("\uBB2D")}).to.throw(Error, "EncodingError U+BB2D");
expect(() => {ms932Encoder.encode("\uBB2E")}).to.throw(Error, "EncodingError U+BB2E");
expect(() => {ms932Encoder.encode("\uBB2F")}).to.throw(Error, "EncodingError U+BB2F");
expect(() => {ms932Encoder.encode("\uBB30")}).to.throw(Error, "EncodingError U+BB30");
expect(() => {ms932Encoder.encode("\uBB31")}).to.throw(Error, "EncodingError U+BB31");
expect(() => {ms932Encoder.encode("\uBB32")}).to.throw(Error, "EncodingError U+BB32");
expect(() => {ms932Encoder.encode("\uBB33")}).to.throw(Error, "EncodingError U+BB33");
expect(() => {ms932Encoder.encode("\uBB34")}).to.throw(Error, "EncodingError U+BB34");
expect(() => {ms932Encoder.encode("\uBB35")}).to.throw(Error, "EncodingError U+BB35");
expect(() => {ms932Encoder.encode("\uBB36")}).to.throw(Error, "EncodingError U+BB36");
expect(() => {ms932Encoder.encode("\uBB37")}).to.throw(Error, "EncodingError U+BB37");
expect(() => {ms932Encoder.encode("\uBB38")}).to.throw(Error, "EncodingError U+BB38");
expect(() => {ms932Encoder.encode("\uBB39")}).to.throw(Error, "EncodingError U+BB39");
expect(() => {ms932Encoder.encode("\uBB3A")}).to.throw(Error, "EncodingError U+BB3A");
expect(() => {ms932Encoder.encode("\uBB3B")}).to.throw(Error, "EncodingError U+BB3B");
expect(() => {ms932Encoder.encode("\uBB3C")}).to.throw(Error, "EncodingError U+BB3C");
expect(() => {ms932Encoder.encode("\uBB3D")}).to.throw(Error, "EncodingError U+BB3D");
expect(() => {ms932Encoder.encode("\uBB3E")}).to.throw(Error, "EncodingError U+BB3E");
expect(() => {ms932Encoder.encode("\uBB3F")}).to.throw(Error, "EncodingError U+BB3F");
expect(() => {ms932Encoder.encode("\uBB40")}).to.throw(Error, "EncodingError U+BB40");
expect(() => {ms932Encoder.encode("\uBB41")}).to.throw(Error, "EncodingError U+BB41");
expect(() => {ms932Encoder.encode("\uBB42")}).to.throw(Error, "EncodingError U+BB42");
expect(() => {ms932Encoder.encode("\uBB43")}).to.throw(Error, "EncodingError U+BB43");
expect(() => {ms932Encoder.encode("\uBB44")}).to.throw(Error, "EncodingError U+BB44");
expect(() => {ms932Encoder.encode("\uBB45")}).to.throw(Error, "EncodingError U+BB45");
expect(() => {ms932Encoder.encode("\uBB46")}).to.throw(Error, "EncodingError U+BB46");
expect(() => {ms932Encoder.encode("\uBB47")}).to.throw(Error, "EncodingError U+BB47");
expect(() => {ms932Encoder.encode("\uBB48")}).to.throw(Error, "EncodingError U+BB48");
expect(() => {ms932Encoder.encode("\uBB49")}).to.throw(Error, "EncodingError U+BB49");
expect(() => {ms932Encoder.encode("\uBB4A")}).to.throw(Error, "EncodingError U+BB4A");
expect(() => {ms932Encoder.encode("\uBB4B")}).to.throw(Error, "EncodingError U+BB4B");
expect(() => {ms932Encoder.encode("\uBB4C")}).to.throw(Error, "EncodingError U+BB4C");
expect(() => {ms932Encoder.encode("\uBB4D")}).to.throw(Error, "EncodingError U+BB4D");
expect(() => {ms932Encoder.encode("\uBB4E")}).to.throw(Error, "EncodingError U+BB4E");
expect(() => {ms932Encoder.encode("\uBB4F")}).to.throw(Error, "EncodingError U+BB4F");
expect(() => {ms932Encoder.encode("\uBB50")}).to.throw(Error, "EncodingError U+BB50");
expect(() => {ms932Encoder.encode("\uBB51")}).to.throw(Error, "EncodingError U+BB51");
expect(() => {ms932Encoder.encode("\uBB52")}).to.throw(Error, "EncodingError U+BB52");
expect(() => {ms932Encoder.encode("\uBB53")}).to.throw(Error, "EncodingError U+BB53");
expect(() => {ms932Encoder.encode("\uBB54")}).to.throw(Error, "EncodingError U+BB54");
expect(() => {ms932Encoder.encode("\uBB55")}).to.throw(Error, "EncodingError U+BB55");
expect(() => {ms932Encoder.encode("\uBB56")}).to.throw(Error, "EncodingError U+BB56");
expect(() => {ms932Encoder.encode("\uBB57")}).to.throw(Error, "EncodingError U+BB57");
expect(() => {ms932Encoder.encode("\uBB58")}).to.throw(Error, "EncodingError U+BB58");
expect(() => {ms932Encoder.encode("\uBB59")}).to.throw(Error, "EncodingError U+BB59");
expect(() => {ms932Encoder.encode("\uBB5A")}).to.throw(Error, "EncodingError U+BB5A");
expect(() => {ms932Encoder.encode("\uBB5B")}).to.throw(Error, "EncodingError U+BB5B");
expect(() => {ms932Encoder.encode("\uBB5C")}).to.throw(Error, "EncodingError U+BB5C");
expect(() => {ms932Encoder.encode("\uBB5D")}).to.throw(Error, "EncodingError U+BB5D");
expect(() => {ms932Encoder.encode("\uBB5E")}).to.throw(Error, "EncodingError U+BB5E");
expect(() => {ms932Encoder.encode("\uBB5F")}).to.throw(Error, "EncodingError U+BB5F");
expect(() => {ms932Encoder.encode("\uBB60")}).to.throw(Error, "EncodingError U+BB60");
expect(() => {ms932Encoder.encode("\uBB61")}).to.throw(Error, "EncodingError U+BB61");
expect(() => {ms932Encoder.encode("\uBB62")}).to.throw(Error, "EncodingError U+BB62");
expect(() => {ms932Encoder.encode("\uBB63")}).to.throw(Error, "EncodingError U+BB63");
expect(() => {ms932Encoder.encode("\uBB64")}).to.throw(Error, "EncodingError U+BB64");
expect(() => {ms932Encoder.encode("\uBB65")}).to.throw(Error, "EncodingError U+BB65");
expect(() => {ms932Encoder.encode("\uBB66")}).to.throw(Error, "EncodingError U+BB66");
expect(() => {ms932Encoder.encode("\uBB67")}).to.throw(Error, "EncodingError U+BB67");
expect(() => {ms932Encoder.encode("\uBB68")}).to.throw(Error, "EncodingError U+BB68");
expect(() => {ms932Encoder.encode("\uBB69")}).to.throw(Error, "EncodingError U+BB69");
expect(() => {ms932Encoder.encode("\uBB6A")}).to.throw(Error, "EncodingError U+BB6A");
expect(() => {ms932Encoder.encode("\uBB6B")}).to.throw(Error, "EncodingError U+BB6B");
expect(() => {ms932Encoder.encode("\uBB6C")}).to.throw(Error, "EncodingError U+BB6C");
expect(() => {ms932Encoder.encode("\uBB6D")}).to.throw(Error, "EncodingError U+BB6D");
expect(() => {ms932Encoder.encode("\uBB6E")}).to.throw(Error, "EncodingError U+BB6E");
expect(() => {ms932Encoder.encode("\uBB6F")}).to.throw(Error, "EncodingError U+BB6F");
expect(() => {ms932Encoder.encode("\uBB70")}).to.throw(Error, "EncodingError U+BB70");
expect(() => {ms932Encoder.encode("\uBB71")}).to.throw(Error, "EncodingError U+BB71");
expect(() => {ms932Encoder.encode("\uBB72")}).to.throw(Error, "EncodingError U+BB72");
expect(() => {ms932Encoder.encode("\uBB73")}).to.throw(Error, "EncodingError U+BB73");
expect(() => {ms932Encoder.encode("\uBB74")}).to.throw(Error, "EncodingError U+BB74");
expect(() => {ms932Encoder.encode("\uBB75")}).to.throw(Error, "EncodingError U+BB75");
expect(() => {ms932Encoder.encode("\uBB76")}).to.throw(Error, "EncodingError U+BB76");
expect(() => {ms932Encoder.encode("\uBB77")}).to.throw(Error, "EncodingError U+BB77");
expect(() => {ms932Encoder.encode("\uBB78")}).to.throw(Error, "EncodingError U+BB78");
expect(() => {ms932Encoder.encode("\uBB79")}).to.throw(Error, "EncodingError U+BB79");
expect(() => {ms932Encoder.encode("\uBB7A")}).to.throw(Error, "EncodingError U+BB7A");
expect(() => {ms932Encoder.encode("\uBB7B")}).to.throw(Error, "EncodingError U+BB7B");
expect(() => {ms932Encoder.encode("\uBB7C")}).to.throw(Error, "EncodingError U+BB7C");
expect(() => {ms932Encoder.encode("\uBB7D")}).to.throw(Error, "EncodingError U+BB7D");
expect(() => {ms932Encoder.encode("\uBB7E")}).to.throw(Error, "EncodingError U+BB7E");
expect(() => {ms932Encoder.encode("\uBB7F")}).to.throw(Error, "EncodingError U+BB7F");
expect(() => {ms932Encoder.encode("\uBB80")}).to.throw(Error, "EncodingError U+BB80");
expect(() => {ms932Encoder.encode("\uBB81")}).to.throw(Error, "EncodingError U+BB81");
expect(() => {ms932Encoder.encode("\uBB82")}).to.throw(Error, "EncodingError U+BB82");
expect(() => {ms932Encoder.encode("\uBB83")}).to.throw(Error, "EncodingError U+BB83");
expect(() => {ms932Encoder.encode("\uBB84")}).to.throw(Error, "EncodingError U+BB84");
expect(() => {ms932Encoder.encode("\uBB85")}).to.throw(Error, "EncodingError U+BB85");
expect(() => {ms932Encoder.encode("\uBB86")}).to.throw(Error, "EncodingError U+BB86");
expect(() => {ms932Encoder.encode("\uBB87")}).to.throw(Error, "EncodingError U+BB87");
expect(() => {ms932Encoder.encode("\uBB88")}).to.throw(Error, "EncodingError U+BB88");
expect(() => {ms932Encoder.encode("\uBB89")}).to.throw(Error, "EncodingError U+BB89");
expect(() => {ms932Encoder.encode("\uBB8A")}).to.throw(Error, "EncodingError U+BB8A");
expect(() => {ms932Encoder.encode("\uBB8B")}).to.throw(Error, "EncodingError U+BB8B");
expect(() => {ms932Encoder.encode("\uBB8C")}).to.throw(Error, "EncodingError U+BB8C");
expect(() => {ms932Encoder.encode("\uBB8D")}).to.throw(Error, "EncodingError U+BB8D");
expect(() => {ms932Encoder.encode("\uBB8E")}).to.throw(Error, "EncodingError U+BB8E");
expect(() => {ms932Encoder.encode("\uBB8F")}).to.throw(Error, "EncodingError U+BB8F");
expect(() => {ms932Encoder.encode("\uBB90")}).to.throw(Error, "EncodingError U+BB90");
expect(() => {ms932Encoder.encode("\uBB91")}).to.throw(Error, "EncodingError U+BB91");
expect(() => {ms932Encoder.encode("\uBB92")}).to.throw(Error, "EncodingError U+BB92");
expect(() => {ms932Encoder.encode("\uBB93")}).to.throw(Error, "EncodingError U+BB93");
expect(() => {ms932Encoder.encode("\uBB94")}).to.throw(Error, "EncodingError U+BB94");
expect(() => {ms932Encoder.encode("\uBB95")}).to.throw(Error, "EncodingError U+BB95");
expect(() => {ms932Encoder.encode("\uBB96")}).to.throw(Error, "EncodingError U+BB96");
expect(() => {ms932Encoder.encode("\uBB97")}).to.throw(Error, "EncodingError U+BB97");
expect(() => {ms932Encoder.encode("\uBB98")}).to.throw(Error, "EncodingError U+BB98");
expect(() => {ms932Encoder.encode("\uBB99")}).to.throw(Error, "EncodingError U+BB99");
expect(() => {ms932Encoder.encode("\uBB9A")}).to.throw(Error, "EncodingError U+BB9A");
expect(() => {ms932Encoder.encode("\uBB9B")}).to.throw(Error, "EncodingError U+BB9B");
expect(() => {ms932Encoder.encode("\uBB9C")}).to.throw(Error, "EncodingError U+BB9C");
expect(() => {ms932Encoder.encode("\uBB9D")}).to.throw(Error, "EncodingError U+BB9D");
expect(() => {ms932Encoder.encode("\uBB9E")}).to.throw(Error, "EncodingError U+BB9E");
expect(() => {ms932Encoder.encode("\uBB9F")}).to.throw(Error, "EncodingError U+BB9F");
expect(() => {ms932Encoder.encode("\uBBA0")}).to.throw(Error, "EncodingError U+BBA0");
expect(() => {ms932Encoder.encode("\uBBA1")}).to.throw(Error, "EncodingError U+BBA1");
expect(() => {ms932Encoder.encode("\uBBA2")}).to.throw(Error, "EncodingError U+BBA2");
expect(() => {ms932Encoder.encode("\uBBA3")}).to.throw(Error, "EncodingError U+BBA3");
expect(() => {ms932Encoder.encode("\uBBA4")}).to.throw(Error, "EncodingError U+BBA4");
expect(() => {ms932Encoder.encode("\uBBA5")}).to.throw(Error, "EncodingError U+BBA5");
expect(() => {ms932Encoder.encode("\uBBA6")}).to.throw(Error, "EncodingError U+BBA6");
expect(() => {ms932Encoder.encode("\uBBA7")}).to.throw(Error, "EncodingError U+BBA7");
expect(() => {ms932Encoder.encode("\uBBA8")}).to.throw(Error, "EncodingError U+BBA8");
expect(() => {ms932Encoder.encode("\uBBA9")}).to.throw(Error, "EncodingError U+BBA9");
expect(() => {ms932Encoder.encode("\uBBAA")}).to.throw(Error, "EncodingError U+BBAA");
expect(() => {ms932Encoder.encode("\uBBAB")}).to.throw(Error, "EncodingError U+BBAB");
expect(() => {ms932Encoder.encode("\uBBAC")}).to.throw(Error, "EncodingError U+BBAC");
expect(() => {ms932Encoder.encode("\uBBAD")}).to.throw(Error, "EncodingError U+BBAD");
expect(() => {ms932Encoder.encode("\uBBAE")}).to.throw(Error, "EncodingError U+BBAE");
expect(() => {ms932Encoder.encode("\uBBAF")}).to.throw(Error, "EncodingError U+BBAF");
expect(() => {ms932Encoder.encode("\uBBB0")}).to.throw(Error, "EncodingError U+BBB0");
expect(() => {ms932Encoder.encode("\uBBB1")}).to.throw(Error, "EncodingError U+BBB1");
expect(() => {ms932Encoder.encode("\uBBB2")}).to.throw(Error, "EncodingError U+BBB2");
expect(() => {ms932Encoder.encode("\uBBB3")}).to.throw(Error, "EncodingError U+BBB3");
expect(() => {ms932Encoder.encode("\uBBB4")}).to.throw(Error, "EncodingError U+BBB4");
expect(() => {ms932Encoder.encode("\uBBB5")}).to.throw(Error, "EncodingError U+BBB5");
expect(() => {ms932Encoder.encode("\uBBB6")}).to.throw(Error, "EncodingError U+BBB6");
expect(() => {ms932Encoder.encode("\uBBB7")}).to.throw(Error, "EncodingError U+BBB7");
expect(() => {ms932Encoder.encode("\uBBB8")}).to.throw(Error, "EncodingError U+BBB8");
expect(() => {ms932Encoder.encode("\uBBB9")}).to.throw(Error, "EncodingError U+BBB9");
expect(() => {ms932Encoder.encode("\uBBBA")}).to.throw(Error, "EncodingError U+BBBA");
expect(() => {ms932Encoder.encode("\uBBBB")}).to.throw(Error, "EncodingError U+BBBB");
expect(() => {ms932Encoder.encode("\uBBBC")}).to.throw(Error, "EncodingError U+BBBC");
expect(() => {ms932Encoder.encode("\uBBBD")}).to.throw(Error, "EncodingError U+BBBD");
expect(() => {ms932Encoder.encode("\uBBBE")}).to.throw(Error, "EncodingError U+BBBE");
expect(() => {ms932Encoder.encode("\uBBBF")}).to.throw(Error, "EncodingError U+BBBF");
expect(() => {ms932Encoder.encode("\uBBC0")}).to.throw(Error, "EncodingError U+BBC0");
expect(() => {ms932Encoder.encode("\uBBC1")}).to.throw(Error, "EncodingError U+BBC1");
expect(() => {ms932Encoder.encode("\uBBC2")}).to.throw(Error, "EncodingError U+BBC2");
expect(() => {ms932Encoder.encode("\uBBC3")}).to.throw(Error, "EncodingError U+BBC3");
expect(() => {ms932Encoder.encode("\uBBC4")}).to.throw(Error, "EncodingError U+BBC4");
expect(() => {ms932Encoder.encode("\uBBC5")}).to.throw(Error, "EncodingError U+BBC5");
expect(() => {ms932Encoder.encode("\uBBC6")}).to.throw(Error, "EncodingError U+BBC6");
expect(() => {ms932Encoder.encode("\uBBC7")}).to.throw(Error, "EncodingError U+BBC7");
expect(() => {ms932Encoder.encode("\uBBC8")}).to.throw(Error, "EncodingError U+BBC8");
expect(() => {ms932Encoder.encode("\uBBC9")}).to.throw(Error, "EncodingError U+BBC9");
expect(() => {ms932Encoder.encode("\uBBCA")}).to.throw(Error, "EncodingError U+BBCA");
expect(() => {ms932Encoder.encode("\uBBCB")}).to.throw(Error, "EncodingError U+BBCB");
expect(() => {ms932Encoder.encode("\uBBCC")}).to.throw(Error, "EncodingError U+BBCC");
expect(() => {ms932Encoder.encode("\uBBCD")}).to.throw(Error, "EncodingError U+BBCD");
expect(() => {ms932Encoder.encode("\uBBCE")}).to.throw(Error, "EncodingError U+BBCE");
expect(() => {ms932Encoder.encode("\uBBCF")}).to.throw(Error, "EncodingError U+BBCF");
expect(() => {ms932Encoder.encode("\uBBD0")}).to.throw(Error, "EncodingError U+BBD0");
expect(() => {ms932Encoder.encode("\uBBD1")}).to.throw(Error, "EncodingError U+BBD1");
expect(() => {ms932Encoder.encode("\uBBD2")}).to.throw(Error, "EncodingError U+BBD2");
expect(() => {ms932Encoder.encode("\uBBD3")}).to.throw(Error, "EncodingError U+BBD3");
expect(() => {ms932Encoder.encode("\uBBD4")}).to.throw(Error, "EncodingError U+BBD4");
expect(() => {ms932Encoder.encode("\uBBD5")}).to.throw(Error, "EncodingError U+BBD5");
expect(() => {ms932Encoder.encode("\uBBD6")}).to.throw(Error, "EncodingError U+BBD6");
expect(() => {ms932Encoder.encode("\uBBD7")}).to.throw(Error, "EncodingError U+BBD7");
expect(() => {ms932Encoder.encode("\uBBD8")}).to.throw(Error, "EncodingError U+BBD8");
expect(() => {ms932Encoder.encode("\uBBD9")}).to.throw(Error, "EncodingError U+BBD9");
expect(() => {ms932Encoder.encode("\uBBDA")}).to.throw(Error, "EncodingError U+BBDA");
expect(() => {ms932Encoder.encode("\uBBDB")}).to.throw(Error, "EncodingError U+BBDB");
expect(() => {ms932Encoder.encode("\uBBDC")}).to.throw(Error, "EncodingError U+BBDC");
expect(() => {ms932Encoder.encode("\uBBDD")}).to.throw(Error, "EncodingError U+BBDD");
expect(() => {ms932Encoder.encode("\uBBDE")}).to.throw(Error, "EncodingError U+BBDE");
expect(() => {ms932Encoder.encode("\uBBDF")}).to.throw(Error, "EncodingError U+BBDF");
expect(() => {ms932Encoder.encode("\uBBE0")}).to.throw(Error, "EncodingError U+BBE0");
expect(() => {ms932Encoder.encode("\uBBE1")}).to.throw(Error, "EncodingError U+BBE1");
expect(() => {ms932Encoder.encode("\uBBE2")}).to.throw(Error, "EncodingError U+BBE2");
expect(() => {ms932Encoder.encode("\uBBE3")}).to.throw(Error, "EncodingError U+BBE3");
expect(() => {ms932Encoder.encode("\uBBE4")}).to.throw(Error, "EncodingError U+BBE4");
expect(() => {ms932Encoder.encode("\uBBE5")}).to.throw(Error, "EncodingError U+BBE5");
expect(() => {ms932Encoder.encode("\uBBE6")}).to.throw(Error, "EncodingError U+BBE6");
expect(() => {ms932Encoder.encode("\uBBE7")}).to.throw(Error, "EncodingError U+BBE7");
expect(() => {ms932Encoder.encode("\uBBE8")}).to.throw(Error, "EncodingError U+BBE8");
expect(() => {ms932Encoder.encode("\uBBE9")}).to.throw(Error, "EncodingError U+BBE9");
expect(() => {ms932Encoder.encode("\uBBEA")}).to.throw(Error, "EncodingError U+BBEA");
expect(() => {ms932Encoder.encode("\uBBEB")}).to.throw(Error, "EncodingError U+BBEB");
expect(() => {ms932Encoder.encode("\uBBEC")}).to.throw(Error, "EncodingError U+BBEC");
expect(() => {ms932Encoder.encode("\uBBED")}).to.throw(Error, "EncodingError U+BBED");
expect(() => {ms932Encoder.encode("\uBBEE")}).to.throw(Error, "EncodingError U+BBEE");
expect(() => {ms932Encoder.encode("\uBBEF")}).to.throw(Error, "EncodingError U+BBEF");
expect(() => {ms932Encoder.encode("\uBBF0")}).to.throw(Error, "EncodingError U+BBF0");
expect(() => {ms932Encoder.encode("\uBBF1")}).to.throw(Error, "EncodingError U+BBF1");
expect(() => {ms932Encoder.encode("\uBBF2")}).to.throw(Error, "EncodingError U+BBF2");
expect(() => {ms932Encoder.encode("\uBBF3")}).to.throw(Error, "EncodingError U+BBF3");
expect(() => {ms932Encoder.encode("\uBBF4")}).to.throw(Error, "EncodingError U+BBF4");
expect(() => {ms932Encoder.encode("\uBBF5")}).to.throw(Error, "EncodingError U+BBF5");
expect(() => {ms932Encoder.encode("\uBBF6")}).to.throw(Error, "EncodingError U+BBF6");
expect(() => {ms932Encoder.encode("\uBBF7")}).to.throw(Error, "EncodingError U+BBF7");
expect(() => {ms932Encoder.encode("\uBBF8")}).to.throw(Error, "EncodingError U+BBF8");
expect(() => {ms932Encoder.encode("\uBBF9")}).to.throw(Error, "EncodingError U+BBF9");
expect(() => {ms932Encoder.encode("\uBBFA")}).to.throw(Error, "EncodingError U+BBFA");
expect(() => {ms932Encoder.encode("\uBBFB")}).to.throw(Error, "EncodingError U+BBFB");
expect(() => {ms932Encoder.encode("\uBBFC")}).to.throw(Error, "EncodingError U+BBFC");
expect(() => {ms932Encoder.encode("\uBBFD")}).to.throw(Error, "EncodingError U+BBFD");
expect(() => {ms932Encoder.encode("\uBBFE")}).to.throw(Error, "EncodingError U+BBFE");
expect(() => {ms932Encoder.encode("\uBBFF")}).to.throw(Error, "EncodingError U+BBFF");
expect(() => {ms932Encoder.encode("\uBC00")}).to.throw(Error, "EncodingError U+BC00");
expect(() => {ms932Encoder.encode("\uBC01")}).to.throw(Error, "EncodingError U+BC01");
expect(() => {ms932Encoder.encode("\uBC02")}).to.throw(Error, "EncodingError U+BC02");
expect(() => {ms932Encoder.encode("\uBC03")}).to.throw(Error, "EncodingError U+BC03");
expect(() => {ms932Encoder.encode("\uBC04")}).to.throw(Error, "EncodingError U+BC04");
expect(() => {ms932Encoder.encode("\uBC05")}).to.throw(Error, "EncodingError U+BC05");
expect(() => {ms932Encoder.encode("\uBC06")}).to.throw(Error, "EncodingError U+BC06");
expect(() => {ms932Encoder.encode("\uBC07")}).to.throw(Error, "EncodingError U+BC07");
expect(() => {ms932Encoder.encode("\uBC08")}).to.throw(Error, "EncodingError U+BC08");
expect(() => {ms932Encoder.encode("\uBC09")}).to.throw(Error, "EncodingError U+BC09");
expect(() => {ms932Encoder.encode("\uBC0A")}).to.throw(Error, "EncodingError U+BC0A");
expect(() => {ms932Encoder.encode("\uBC0B")}).to.throw(Error, "EncodingError U+BC0B");
expect(() => {ms932Encoder.encode("\uBC0C")}).to.throw(Error, "EncodingError U+BC0C");
expect(() => {ms932Encoder.encode("\uBC0D")}).to.throw(Error, "EncodingError U+BC0D");
expect(() => {ms932Encoder.encode("\uBC0E")}).to.throw(Error, "EncodingError U+BC0E");
expect(() => {ms932Encoder.encode("\uBC0F")}).to.throw(Error, "EncodingError U+BC0F");
expect(() => {ms932Encoder.encode("\uBC10")}).to.throw(Error, "EncodingError U+BC10");
expect(() => {ms932Encoder.encode("\uBC11")}).to.throw(Error, "EncodingError U+BC11");
expect(() => {ms932Encoder.encode("\uBC12")}).to.throw(Error, "EncodingError U+BC12");
expect(() => {ms932Encoder.encode("\uBC13")}).to.throw(Error, "EncodingError U+BC13");
expect(() => {ms932Encoder.encode("\uBC14")}).to.throw(Error, "EncodingError U+BC14");
expect(() => {ms932Encoder.encode("\uBC15")}).to.throw(Error, "EncodingError U+BC15");
expect(() => {ms932Encoder.encode("\uBC16")}).to.throw(Error, "EncodingError U+BC16");
expect(() => {ms932Encoder.encode("\uBC17")}).to.throw(Error, "EncodingError U+BC17");
expect(() => {ms932Encoder.encode("\uBC18")}).to.throw(Error, "EncodingError U+BC18");
expect(() => {ms932Encoder.encode("\uBC19")}).to.throw(Error, "EncodingError U+BC19");
expect(() => {ms932Encoder.encode("\uBC1A")}).to.throw(Error, "EncodingError U+BC1A");
expect(() => {ms932Encoder.encode("\uBC1B")}).to.throw(Error, "EncodingError U+BC1B");
expect(() => {ms932Encoder.encode("\uBC1C")}).to.throw(Error, "EncodingError U+BC1C");
expect(() => {ms932Encoder.encode("\uBC1D")}).to.throw(Error, "EncodingError U+BC1D");
expect(() => {ms932Encoder.encode("\uBC1E")}).to.throw(Error, "EncodingError U+BC1E");
expect(() => {ms932Encoder.encode("\uBC1F")}).to.throw(Error, "EncodingError U+BC1F");
expect(() => {ms932Encoder.encode("\uBC20")}).to.throw(Error, "EncodingError U+BC20");
expect(() => {ms932Encoder.encode("\uBC21")}).to.throw(Error, "EncodingError U+BC21");
expect(() => {ms932Encoder.encode("\uBC22")}).to.throw(Error, "EncodingError U+BC22");
expect(() => {ms932Encoder.encode("\uBC23")}).to.throw(Error, "EncodingError U+BC23");
expect(() => {ms932Encoder.encode("\uBC24")}).to.throw(Error, "EncodingError U+BC24");
expect(() => {ms932Encoder.encode("\uBC25")}).to.throw(Error, "EncodingError U+BC25");
expect(() => {ms932Encoder.encode("\uBC26")}).to.throw(Error, "EncodingError U+BC26");
expect(() => {ms932Encoder.encode("\uBC27")}).to.throw(Error, "EncodingError U+BC27");
expect(() => {ms932Encoder.encode("\uBC28")}).to.throw(Error, "EncodingError U+BC28");
expect(() => {ms932Encoder.encode("\uBC29")}).to.throw(Error, "EncodingError U+BC29");
expect(() => {ms932Encoder.encode("\uBC2A")}).to.throw(Error, "EncodingError U+BC2A");
expect(() => {ms932Encoder.encode("\uBC2B")}).to.throw(Error, "EncodingError U+BC2B");
expect(() => {ms932Encoder.encode("\uBC2C")}).to.throw(Error, "EncodingError U+BC2C");
expect(() => {ms932Encoder.encode("\uBC2D")}).to.throw(Error, "EncodingError U+BC2D");
expect(() => {ms932Encoder.encode("\uBC2E")}).to.throw(Error, "EncodingError U+BC2E");
expect(() => {ms932Encoder.encode("\uBC2F")}).to.throw(Error, "EncodingError U+BC2F");
expect(() => {ms932Encoder.encode("\uBC30")}).to.throw(Error, "EncodingError U+BC30");
expect(() => {ms932Encoder.encode("\uBC31")}).to.throw(Error, "EncodingError U+BC31");
expect(() => {ms932Encoder.encode("\uBC32")}).to.throw(Error, "EncodingError U+BC32");
expect(() => {ms932Encoder.encode("\uBC33")}).to.throw(Error, "EncodingError U+BC33");
expect(() => {ms932Encoder.encode("\uBC34")}).to.throw(Error, "EncodingError U+BC34");
expect(() => {ms932Encoder.encode("\uBC35")}).to.throw(Error, "EncodingError U+BC35");
expect(() => {ms932Encoder.encode("\uBC36")}).to.throw(Error, "EncodingError U+BC36");
expect(() => {ms932Encoder.encode("\uBC37")}).to.throw(Error, "EncodingError U+BC37");
expect(() => {ms932Encoder.encode("\uBC38")}).to.throw(Error, "EncodingError U+BC38");
expect(() => {ms932Encoder.encode("\uBC39")}).to.throw(Error, "EncodingError U+BC39");
expect(() => {ms932Encoder.encode("\uBC3A")}).to.throw(Error, "EncodingError U+BC3A");
expect(() => {ms932Encoder.encode("\uBC3B")}).to.throw(Error, "EncodingError U+BC3B");
expect(() => {ms932Encoder.encode("\uBC3C")}).to.throw(Error, "EncodingError U+BC3C");
expect(() => {ms932Encoder.encode("\uBC3D")}).to.throw(Error, "EncodingError U+BC3D");
expect(() => {ms932Encoder.encode("\uBC3E")}).to.throw(Error, "EncodingError U+BC3E");
expect(() => {ms932Encoder.encode("\uBC3F")}).to.throw(Error, "EncodingError U+BC3F");
expect(() => {ms932Encoder.encode("\uBC40")}).to.throw(Error, "EncodingError U+BC40");
expect(() => {ms932Encoder.encode("\uBC41")}).to.throw(Error, "EncodingError U+BC41");
expect(() => {ms932Encoder.encode("\uBC42")}).to.throw(Error, "EncodingError U+BC42");
expect(() => {ms932Encoder.encode("\uBC43")}).to.throw(Error, "EncodingError U+BC43");
expect(() => {ms932Encoder.encode("\uBC44")}).to.throw(Error, "EncodingError U+BC44");
expect(() => {ms932Encoder.encode("\uBC45")}).to.throw(Error, "EncodingError U+BC45");
expect(() => {ms932Encoder.encode("\uBC46")}).to.throw(Error, "EncodingError U+BC46");
expect(() => {ms932Encoder.encode("\uBC47")}).to.throw(Error, "EncodingError U+BC47");
expect(() => {ms932Encoder.encode("\uBC48")}).to.throw(Error, "EncodingError U+BC48");
expect(() => {ms932Encoder.encode("\uBC49")}).to.throw(Error, "EncodingError U+BC49");
expect(() => {ms932Encoder.encode("\uBC4A")}).to.throw(Error, "EncodingError U+BC4A");
expect(() => {ms932Encoder.encode("\uBC4B")}).to.throw(Error, "EncodingError U+BC4B");
expect(() => {ms932Encoder.encode("\uBC4C")}).to.throw(Error, "EncodingError U+BC4C");
expect(() => {ms932Encoder.encode("\uBC4D")}).to.throw(Error, "EncodingError U+BC4D");
expect(() => {ms932Encoder.encode("\uBC4E")}).to.throw(Error, "EncodingError U+BC4E");
expect(() => {ms932Encoder.encode("\uBC4F")}).to.throw(Error, "EncodingError U+BC4F");
expect(() => {ms932Encoder.encode("\uBC50")}).to.throw(Error, "EncodingError U+BC50");
expect(() => {ms932Encoder.encode("\uBC51")}).to.throw(Error, "EncodingError U+BC51");
expect(() => {ms932Encoder.encode("\uBC52")}).to.throw(Error, "EncodingError U+BC52");
expect(() => {ms932Encoder.encode("\uBC53")}).to.throw(Error, "EncodingError U+BC53");
expect(() => {ms932Encoder.encode("\uBC54")}).to.throw(Error, "EncodingError U+BC54");
expect(() => {ms932Encoder.encode("\uBC55")}).to.throw(Error, "EncodingError U+BC55");
expect(() => {ms932Encoder.encode("\uBC56")}).to.throw(Error, "EncodingError U+BC56");
expect(() => {ms932Encoder.encode("\uBC57")}).to.throw(Error, "EncodingError U+BC57");
expect(() => {ms932Encoder.encode("\uBC58")}).to.throw(Error, "EncodingError U+BC58");
expect(() => {ms932Encoder.encode("\uBC59")}).to.throw(Error, "EncodingError U+BC59");
expect(() => {ms932Encoder.encode("\uBC5A")}).to.throw(Error, "EncodingError U+BC5A");
expect(() => {ms932Encoder.encode("\uBC5B")}).to.throw(Error, "EncodingError U+BC5B");
expect(() => {ms932Encoder.encode("\uBC5C")}).to.throw(Error, "EncodingError U+BC5C");
expect(() => {ms932Encoder.encode("\uBC5D")}).to.throw(Error, "EncodingError U+BC5D");
expect(() => {ms932Encoder.encode("\uBC5E")}).to.throw(Error, "EncodingError U+BC5E");
expect(() => {ms932Encoder.encode("\uBC5F")}).to.throw(Error, "EncodingError U+BC5F");
expect(() => {ms932Encoder.encode("\uBC60")}).to.throw(Error, "EncodingError U+BC60");
expect(() => {ms932Encoder.encode("\uBC61")}).to.throw(Error, "EncodingError U+BC61");
expect(() => {ms932Encoder.encode("\uBC62")}).to.throw(Error, "EncodingError U+BC62");
expect(() => {ms932Encoder.encode("\uBC63")}).to.throw(Error, "EncodingError U+BC63");
expect(() => {ms932Encoder.encode("\uBC64")}).to.throw(Error, "EncodingError U+BC64");
expect(() => {ms932Encoder.encode("\uBC65")}).to.throw(Error, "EncodingError U+BC65");
expect(() => {ms932Encoder.encode("\uBC66")}).to.throw(Error, "EncodingError U+BC66");
expect(() => {ms932Encoder.encode("\uBC67")}).to.throw(Error, "EncodingError U+BC67");
expect(() => {ms932Encoder.encode("\uBC68")}).to.throw(Error, "EncodingError U+BC68");
expect(() => {ms932Encoder.encode("\uBC69")}).to.throw(Error, "EncodingError U+BC69");
expect(() => {ms932Encoder.encode("\uBC6A")}).to.throw(Error, "EncodingError U+BC6A");
expect(() => {ms932Encoder.encode("\uBC6B")}).to.throw(Error, "EncodingError U+BC6B");
expect(() => {ms932Encoder.encode("\uBC6C")}).to.throw(Error, "EncodingError U+BC6C");
expect(() => {ms932Encoder.encode("\uBC6D")}).to.throw(Error, "EncodingError U+BC6D");
expect(() => {ms932Encoder.encode("\uBC6E")}).to.throw(Error, "EncodingError U+BC6E");
expect(() => {ms932Encoder.encode("\uBC6F")}).to.throw(Error, "EncodingError U+BC6F");
expect(() => {ms932Encoder.encode("\uBC70")}).to.throw(Error, "EncodingError U+BC70");
expect(() => {ms932Encoder.encode("\uBC71")}).to.throw(Error, "EncodingError U+BC71");
expect(() => {ms932Encoder.encode("\uBC72")}).to.throw(Error, "EncodingError U+BC72");
expect(() => {ms932Encoder.encode("\uBC73")}).to.throw(Error, "EncodingError U+BC73");
expect(() => {ms932Encoder.encode("\uBC74")}).to.throw(Error, "EncodingError U+BC74");
expect(() => {ms932Encoder.encode("\uBC75")}).to.throw(Error, "EncodingError U+BC75");
expect(() => {ms932Encoder.encode("\uBC76")}).to.throw(Error, "EncodingError U+BC76");
expect(() => {ms932Encoder.encode("\uBC77")}).to.throw(Error, "EncodingError U+BC77");
expect(() => {ms932Encoder.encode("\uBC78")}).to.throw(Error, "EncodingError U+BC78");
expect(() => {ms932Encoder.encode("\uBC79")}).to.throw(Error, "EncodingError U+BC79");
expect(() => {ms932Encoder.encode("\uBC7A")}).to.throw(Error, "EncodingError U+BC7A");
expect(() => {ms932Encoder.encode("\uBC7B")}).to.throw(Error, "EncodingError U+BC7B");
expect(() => {ms932Encoder.encode("\uBC7C")}).to.throw(Error, "EncodingError U+BC7C");
expect(() => {ms932Encoder.encode("\uBC7D")}).to.throw(Error, "EncodingError U+BC7D");
expect(() => {ms932Encoder.encode("\uBC7E")}).to.throw(Error, "EncodingError U+BC7E");
expect(() => {ms932Encoder.encode("\uBC7F")}).to.throw(Error, "EncodingError U+BC7F");
expect(() => {ms932Encoder.encode("\uBC80")}).to.throw(Error, "EncodingError U+BC80");
expect(() => {ms932Encoder.encode("\uBC81")}).to.throw(Error, "EncodingError U+BC81");
expect(() => {ms932Encoder.encode("\uBC82")}).to.throw(Error, "EncodingError U+BC82");
expect(() => {ms932Encoder.encode("\uBC83")}).to.throw(Error, "EncodingError U+BC83");
expect(() => {ms932Encoder.encode("\uBC84")}).to.throw(Error, "EncodingError U+BC84");
expect(() => {ms932Encoder.encode("\uBC85")}).to.throw(Error, "EncodingError U+BC85");
expect(() => {ms932Encoder.encode("\uBC86")}).to.throw(Error, "EncodingError U+BC86");
expect(() => {ms932Encoder.encode("\uBC87")}).to.throw(Error, "EncodingError U+BC87");
expect(() => {ms932Encoder.encode("\uBC88")}).to.throw(Error, "EncodingError U+BC88");
expect(() => {ms932Encoder.encode("\uBC89")}).to.throw(Error, "EncodingError U+BC89");
expect(() => {ms932Encoder.encode("\uBC8A")}).to.throw(Error, "EncodingError U+BC8A");
expect(() => {ms932Encoder.encode("\uBC8B")}).to.throw(Error, "EncodingError U+BC8B");
expect(() => {ms932Encoder.encode("\uBC8C")}).to.throw(Error, "EncodingError U+BC8C");
expect(() => {ms932Encoder.encode("\uBC8D")}).to.throw(Error, "EncodingError U+BC8D");
expect(() => {ms932Encoder.encode("\uBC8E")}).to.throw(Error, "EncodingError U+BC8E");
expect(() => {ms932Encoder.encode("\uBC8F")}).to.throw(Error, "EncodingError U+BC8F");
expect(() => {ms932Encoder.encode("\uBC90")}).to.throw(Error, "EncodingError U+BC90");
expect(() => {ms932Encoder.encode("\uBC91")}).to.throw(Error, "EncodingError U+BC91");
expect(() => {ms932Encoder.encode("\uBC92")}).to.throw(Error, "EncodingError U+BC92");
expect(() => {ms932Encoder.encode("\uBC93")}).to.throw(Error, "EncodingError U+BC93");
expect(() => {ms932Encoder.encode("\uBC94")}).to.throw(Error, "EncodingError U+BC94");
expect(() => {ms932Encoder.encode("\uBC95")}).to.throw(Error, "EncodingError U+BC95");
expect(() => {ms932Encoder.encode("\uBC96")}).to.throw(Error, "EncodingError U+BC96");
expect(() => {ms932Encoder.encode("\uBC97")}).to.throw(Error, "EncodingError U+BC97");
expect(() => {ms932Encoder.encode("\uBC98")}).to.throw(Error, "EncodingError U+BC98");
expect(() => {ms932Encoder.encode("\uBC99")}).to.throw(Error, "EncodingError U+BC99");
expect(() => {ms932Encoder.encode("\uBC9A")}).to.throw(Error, "EncodingError U+BC9A");
expect(() => {ms932Encoder.encode("\uBC9B")}).to.throw(Error, "EncodingError U+BC9B");
expect(() => {ms932Encoder.encode("\uBC9C")}).to.throw(Error, "EncodingError U+BC9C");
expect(() => {ms932Encoder.encode("\uBC9D")}).to.throw(Error, "EncodingError U+BC9D");
expect(() => {ms932Encoder.encode("\uBC9E")}).to.throw(Error, "EncodingError U+BC9E");
expect(() => {ms932Encoder.encode("\uBC9F")}).to.throw(Error, "EncodingError U+BC9F");
expect(() => {ms932Encoder.encode("\uBCA0")}).to.throw(Error, "EncodingError U+BCA0");
expect(() => {ms932Encoder.encode("\uBCA1")}).to.throw(Error, "EncodingError U+BCA1");
expect(() => {ms932Encoder.encode("\uBCA2")}).to.throw(Error, "EncodingError U+BCA2");
expect(() => {ms932Encoder.encode("\uBCA3")}).to.throw(Error, "EncodingError U+BCA3");
expect(() => {ms932Encoder.encode("\uBCA4")}).to.throw(Error, "EncodingError U+BCA4");
expect(() => {ms932Encoder.encode("\uBCA5")}).to.throw(Error, "EncodingError U+BCA5");
expect(() => {ms932Encoder.encode("\uBCA6")}).to.throw(Error, "EncodingError U+BCA6");
expect(() => {ms932Encoder.encode("\uBCA7")}).to.throw(Error, "EncodingError U+BCA7");
expect(() => {ms932Encoder.encode("\uBCA8")}).to.throw(Error, "EncodingError U+BCA8");
expect(() => {ms932Encoder.encode("\uBCA9")}).to.throw(Error, "EncodingError U+BCA9");
expect(() => {ms932Encoder.encode("\uBCAA")}).to.throw(Error, "EncodingError U+BCAA");
expect(() => {ms932Encoder.encode("\uBCAB")}).to.throw(Error, "EncodingError U+BCAB");
expect(() => {ms932Encoder.encode("\uBCAC")}).to.throw(Error, "EncodingError U+BCAC");
expect(() => {ms932Encoder.encode("\uBCAD")}).to.throw(Error, "EncodingError U+BCAD");
expect(() => {ms932Encoder.encode("\uBCAE")}).to.throw(Error, "EncodingError U+BCAE");
expect(() => {ms932Encoder.encode("\uBCAF")}).to.throw(Error, "EncodingError U+BCAF");
expect(() => {ms932Encoder.encode("\uBCB0")}).to.throw(Error, "EncodingError U+BCB0");
expect(() => {ms932Encoder.encode("\uBCB1")}).to.throw(Error, "EncodingError U+BCB1");
expect(() => {ms932Encoder.encode("\uBCB2")}).to.throw(Error, "EncodingError U+BCB2");
expect(() => {ms932Encoder.encode("\uBCB3")}).to.throw(Error, "EncodingError U+BCB3");
expect(() => {ms932Encoder.encode("\uBCB4")}).to.throw(Error, "EncodingError U+BCB4");
expect(() => {ms932Encoder.encode("\uBCB5")}).to.throw(Error, "EncodingError U+BCB5");
expect(() => {ms932Encoder.encode("\uBCB6")}).to.throw(Error, "EncodingError U+BCB6");
expect(() => {ms932Encoder.encode("\uBCB7")}).to.throw(Error, "EncodingError U+BCB7");
expect(() => {ms932Encoder.encode("\uBCB8")}).to.throw(Error, "EncodingError U+BCB8");
expect(() => {ms932Encoder.encode("\uBCB9")}).to.throw(Error, "EncodingError U+BCB9");
expect(() => {ms932Encoder.encode("\uBCBA")}).to.throw(Error, "EncodingError U+BCBA");
expect(() => {ms932Encoder.encode("\uBCBB")}).to.throw(Error, "EncodingError U+BCBB");
expect(() => {ms932Encoder.encode("\uBCBC")}).to.throw(Error, "EncodingError U+BCBC");
expect(() => {ms932Encoder.encode("\uBCBD")}).to.throw(Error, "EncodingError U+BCBD");
expect(() => {ms932Encoder.encode("\uBCBE")}).to.throw(Error, "EncodingError U+BCBE");
expect(() => {ms932Encoder.encode("\uBCBF")}).to.throw(Error, "EncodingError U+BCBF");
expect(() => {ms932Encoder.encode("\uBCC0")}).to.throw(Error, "EncodingError U+BCC0");
expect(() => {ms932Encoder.encode("\uBCC1")}).to.throw(Error, "EncodingError U+BCC1");
expect(() => {ms932Encoder.encode("\uBCC2")}).to.throw(Error, "EncodingError U+BCC2");
expect(() => {ms932Encoder.encode("\uBCC3")}).to.throw(Error, "EncodingError U+BCC3");
expect(() => {ms932Encoder.encode("\uBCC4")}).to.throw(Error, "EncodingError U+BCC4");
expect(() => {ms932Encoder.encode("\uBCC5")}).to.throw(Error, "EncodingError U+BCC5");
expect(() => {ms932Encoder.encode("\uBCC6")}).to.throw(Error, "EncodingError U+BCC6");
expect(() => {ms932Encoder.encode("\uBCC7")}).to.throw(Error, "EncodingError U+BCC7");
expect(() => {ms932Encoder.encode("\uBCC8")}).to.throw(Error, "EncodingError U+BCC8");
expect(() => {ms932Encoder.encode("\uBCC9")}).to.throw(Error, "EncodingError U+BCC9");
expect(() => {ms932Encoder.encode("\uBCCA")}).to.throw(Error, "EncodingError U+BCCA");
expect(() => {ms932Encoder.encode("\uBCCB")}).to.throw(Error, "EncodingError U+BCCB");
expect(() => {ms932Encoder.encode("\uBCCC")}).to.throw(Error, "EncodingError U+BCCC");
expect(() => {ms932Encoder.encode("\uBCCD")}).to.throw(Error, "EncodingError U+BCCD");
expect(() => {ms932Encoder.encode("\uBCCE")}).to.throw(Error, "EncodingError U+BCCE");
expect(() => {ms932Encoder.encode("\uBCCF")}).to.throw(Error, "EncodingError U+BCCF");
expect(() => {ms932Encoder.encode("\uBCD0")}).to.throw(Error, "EncodingError U+BCD0");
expect(() => {ms932Encoder.encode("\uBCD1")}).to.throw(Error, "EncodingError U+BCD1");
expect(() => {ms932Encoder.encode("\uBCD2")}).to.throw(Error, "EncodingError U+BCD2");
expect(() => {ms932Encoder.encode("\uBCD3")}).to.throw(Error, "EncodingError U+BCD3");
expect(() => {ms932Encoder.encode("\uBCD4")}).to.throw(Error, "EncodingError U+BCD4");
expect(() => {ms932Encoder.encode("\uBCD5")}).to.throw(Error, "EncodingError U+BCD5");
expect(() => {ms932Encoder.encode("\uBCD6")}).to.throw(Error, "EncodingError U+BCD6");
expect(() => {ms932Encoder.encode("\uBCD7")}).to.throw(Error, "EncodingError U+BCD7");
expect(() => {ms932Encoder.encode("\uBCD8")}).to.throw(Error, "EncodingError U+BCD8");
expect(() => {ms932Encoder.encode("\uBCD9")}).to.throw(Error, "EncodingError U+BCD9");
expect(() => {ms932Encoder.encode("\uBCDA")}).to.throw(Error, "EncodingError U+BCDA");
expect(() => {ms932Encoder.encode("\uBCDB")}).to.throw(Error, "EncodingError U+BCDB");
expect(() => {ms932Encoder.encode("\uBCDC")}).to.throw(Error, "EncodingError U+BCDC");
expect(() => {ms932Encoder.encode("\uBCDD")}).to.throw(Error, "EncodingError U+BCDD");
expect(() => {ms932Encoder.encode("\uBCDE")}).to.throw(Error, "EncodingError U+BCDE");
expect(() => {ms932Encoder.encode("\uBCDF")}).to.throw(Error, "EncodingError U+BCDF");
expect(() => {ms932Encoder.encode("\uBCE0")}).to.throw(Error, "EncodingError U+BCE0");
expect(() => {ms932Encoder.encode("\uBCE1")}).to.throw(Error, "EncodingError U+BCE1");
expect(() => {ms932Encoder.encode("\uBCE2")}).to.throw(Error, "EncodingError U+BCE2");
expect(() => {ms932Encoder.encode("\uBCE3")}).to.throw(Error, "EncodingError U+BCE3");
expect(() => {ms932Encoder.encode("\uBCE4")}).to.throw(Error, "EncodingError U+BCE4");
expect(() => {ms932Encoder.encode("\uBCE5")}).to.throw(Error, "EncodingError U+BCE5");
expect(() => {ms932Encoder.encode("\uBCE6")}).to.throw(Error, "EncodingError U+BCE6");
expect(() => {ms932Encoder.encode("\uBCE7")}).to.throw(Error, "EncodingError U+BCE7");
expect(() => {ms932Encoder.encode("\uBCE8")}).to.throw(Error, "EncodingError U+BCE8");
expect(() => {ms932Encoder.encode("\uBCE9")}).to.throw(Error, "EncodingError U+BCE9");
expect(() => {ms932Encoder.encode("\uBCEA")}).to.throw(Error, "EncodingError U+BCEA");
expect(() => {ms932Encoder.encode("\uBCEB")}).to.throw(Error, "EncodingError U+BCEB");
expect(() => {ms932Encoder.encode("\uBCEC")}).to.throw(Error, "EncodingError U+BCEC");
expect(() => {ms932Encoder.encode("\uBCED")}).to.throw(Error, "EncodingError U+BCED");
expect(() => {ms932Encoder.encode("\uBCEE")}).to.throw(Error, "EncodingError U+BCEE");
expect(() => {ms932Encoder.encode("\uBCEF")}).to.throw(Error, "EncodingError U+BCEF");
expect(() => {ms932Encoder.encode("\uBCF0")}).to.throw(Error, "EncodingError U+BCF0");
expect(() => {ms932Encoder.encode("\uBCF1")}).to.throw(Error, "EncodingError U+BCF1");
expect(() => {ms932Encoder.encode("\uBCF2")}).to.throw(Error, "EncodingError U+BCF2");
expect(() => {ms932Encoder.encode("\uBCF3")}).to.throw(Error, "EncodingError U+BCF3");
expect(() => {ms932Encoder.encode("\uBCF4")}).to.throw(Error, "EncodingError U+BCF4");
expect(() => {ms932Encoder.encode("\uBCF5")}).to.throw(Error, "EncodingError U+BCF5");
expect(() => {ms932Encoder.encode("\uBCF6")}).to.throw(Error, "EncodingError U+BCF6");
expect(() => {ms932Encoder.encode("\uBCF7")}).to.throw(Error, "EncodingError U+BCF7");
expect(() => {ms932Encoder.encode("\uBCF8")}).to.throw(Error, "EncodingError U+BCF8");
expect(() => {ms932Encoder.encode("\uBCF9")}).to.throw(Error, "EncodingError U+BCF9");
expect(() => {ms932Encoder.encode("\uBCFA")}).to.throw(Error, "EncodingError U+BCFA");
expect(() => {ms932Encoder.encode("\uBCFB")}).to.throw(Error, "EncodingError U+BCFB");
expect(() => {ms932Encoder.encode("\uBCFC")}).to.throw(Error, "EncodingError U+BCFC");
expect(() => {ms932Encoder.encode("\uBCFD")}).to.throw(Error, "EncodingError U+BCFD");
expect(() => {ms932Encoder.encode("\uBCFE")}).to.throw(Error, "EncodingError U+BCFE");
expect(() => {ms932Encoder.encode("\uBCFF")}).to.throw(Error, "EncodingError U+BCFF");
expect(() => {ms932Encoder.encode("\uBD00")}).to.throw(Error, "EncodingError U+BD00");
expect(() => {ms932Encoder.encode("\uBD01")}).to.throw(Error, "EncodingError U+BD01");
expect(() => {ms932Encoder.encode("\uBD02")}).to.throw(Error, "EncodingError U+BD02");
expect(() => {ms932Encoder.encode("\uBD03")}).to.throw(Error, "EncodingError U+BD03");
expect(() => {ms932Encoder.encode("\uBD04")}).to.throw(Error, "EncodingError U+BD04");
expect(() => {ms932Encoder.encode("\uBD05")}).to.throw(Error, "EncodingError U+BD05");
expect(() => {ms932Encoder.encode("\uBD06")}).to.throw(Error, "EncodingError U+BD06");
expect(() => {ms932Encoder.encode("\uBD07")}).to.throw(Error, "EncodingError U+BD07");
expect(() => {ms932Encoder.encode("\uBD08")}).to.throw(Error, "EncodingError U+BD08");
expect(() => {ms932Encoder.encode("\uBD09")}).to.throw(Error, "EncodingError U+BD09");
expect(() => {ms932Encoder.encode("\uBD0A")}).to.throw(Error, "EncodingError U+BD0A");
expect(() => {ms932Encoder.encode("\uBD0B")}).to.throw(Error, "EncodingError U+BD0B");
expect(() => {ms932Encoder.encode("\uBD0C")}).to.throw(Error, "EncodingError U+BD0C");
expect(() => {ms932Encoder.encode("\uBD0D")}).to.throw(Error, "EncodingError U+BD0D");
expect(() => {ms932Encoder.encode("\uBD0E")}).to.throw(Error, "EncodingError U+BD0E");
expect(() => {ms932Encoder.encode("\uBD0F")}).to.throw(Error, "EncodingError U+BD0F");
expect(() => {ms932Encoder.encode("\uBD10")}).to.throw(Error, "EncodingError U+BD10");
expect(() => {ms932Encoder.encode("\uBD11")}).to.throw(Error, "EncodingError U+BD11");
expect(() => {ms932Encoder.encode("\uBD12")}).to.throw(Error, "EncodingError U+BD12");
expect(() => {ms932Encoder.encode("\uBD13")}).to.throw(Error, "EncodingError U+BD13");
expect(() => {ms932Encoder.encode("\uBD14")}).to.throw(Error, "EncodingError U+BD14");
expect(() => {ms932Encoder.encode("\uBD15")}).to.throw(Error, "EncodingError U+BD15");
expect(() => {ms932Encoder.encode("\uBD16")}).to.throw(Error, "EncodingError U+BD16");
expect(() => {ms932Encoder.encode("\uBD17")}).to.throw(Error, "EncodingError U+BD17");
expect(() => {ms932Encoder.encode("\uBD18")}).to.throw(Error, "EncodingError U+BD18");
expect(() => {ms932Encoder.encode("\uBD19")}).to.throw(Error, "EncodingError U+BD19");
expect(() => {ms932Encoder.encode("\uBD1A")}).to.throw(Error, "EncodingError U+BD1A");
expect(() => {ms932Encoder.encode("\uBD1B")}).to.throw(Error, "EncodingError U+BD1B");
expect(() => {ms932Encoder.encode("\uBD1C")}).to.throw(Error, "EncodingError U+BD1C");
expect(() => {ms932Encoder.encode("\uBD1D")}).to.throw(Error, "EncodingError U+BD1D");
expect(() => {ms932Encoder.encode("\uBD1E")}).to.throw(Error, "EncodingError U+BD1E");
expect(() => {ms932Encoder.encode("\uBD1F")}).to.throw(Error, "EncodingError U+BD1F");
expect(() => {ms932Encoder.encode("\uBD20")}).to.throw(Error, "EncodingError U+BD20");
expect(() => {ms932Encoder.encode("\uBD21")}).to.throw(Error, "EncodingError U+BD21");
expect(() => {ms932Encoder.encode("\uBD22")}).to.throw(Error, "EncodingError U+BD22");
expect(() => {ms932Encoder.encode("\uBD23")}).to.throw(Error, "EncodingError U+BD23");
expect(() => {ms932Encoder.encode("\uBD24")}).to.throw(Error, "EncodingError U+BD24");
expect(() => {ms932Encoder.encode("\uBD25")}).to.throw(Error, "EncodingError U+BD25");
expect(() => {ms932Encoder.encode("\uBD26")}).to.throw(Error, "EncodingError U+BD26");
expect(() => {ms932Encoder.encode("\uBD27")}).to.throw(Error, "EncodingError U+BD27");
expect(() => {ms932Encoder.encode("\uBD28")}).to.throw(Error, "EncodingError U+BD28");
expect(() => {ms932Encoder.encode("\uBD29")}).to.throw(Error, "EncodingError U+BD29");
expect(() => {ms932Encoder.encode("\uBD2A")}).to.throw(Error, "EncodingError U+BD2A");
expect(() => {ms932Encoder.encode("\uBD2B")}).to.throw(Error, "EncodingError U+BD2B");
expect(() => {ms932Encoder.encode("\uBD2C")}).to.throw(Error, "EncodingError U+BD2C");
expect(() => {ms932Encoder.encode("\uBD2D")}).to.throw(Error, "EncodingError U+BD2D");
expect(() => {ms932Encoder.encode("\uBD2E")}).to.throw(Error, "EncodingError U+BD2E");
expect(() => {ms932Encoder.encode("\uBD2F")}).to.throw(Error, "EncodingError U+BD2F");
expect(() => {ms932Encoder.encode("\uBD30")}).to.throw(Error, "EncodingError U+BD30");
expect(() => {ms932Encoder.encode("\uBD31")}).to.throw(Error, "EncodingError U+BD31");
expect(() => {ms932Encoder.encode("\uBD32")}).to.throw(Error, "EncodingError U+BD32");
expect(() => {ms932Encoder.encode("\uBD33")}).to.throw(Error, "EncodingError U+BD33");
expect(() => {ms932Encoder.encode("\uBD34")}).to.throw(Error, "EncodingError U+BD34");
expect(() => {ms932Encoder.encode("\uBD35")}).to.throw(Error, "EncodingError U+BD35");
expect(() => {ms932Encoder.encode("\uBD36")}).to.throw(Error, "EncodingError U+BD36");
expect(() => {ms932Encoder.encode("\uBD37")}).to.throw(Error, "EncodingError U+BD37");
expect(() => {ms932Encoder.encode("\uBD38")}).to.throw(Error, "EncodingError U+BD38");
expect(() => {ms932Encoder.encode("\uBD39")}).to.throw(Error, "EncodingError U+BD39");
expect(() => {ms932Encoder.encode("\uBD3A")}).to.throw(Error, "EncodingError U+BD3A");
expect(() => {ms932Encoder.encode("\uBD3B")}).to.throw(Error, "EncodingError U+BD3B");
expect(() => {ms932Encoder.encode("\uBD3C")}).to.throw(Error, "EncodingError U+BD3C");
expect(() => {ms932Encoder.encode("\uBD3D")}).to.throw(Error, "EncodingError U+BD3D");
expect(() => {ms932Encoder.encode("\uBD3E")}).to.throw(Error, "EncodingError U+BD3E");
expect(() => {ms932Encoder.encode("\uBD3F")}).to.throw(Error, "EncodingError U+BD3F");
expect(() => {ms932Encoder.encode("\uBD40")}).to.throw(Error, "EncodingError U+BD40");
expect(() => {ms932Encoder.encode("\uBD41")}).to.throw(Error, "EncodingError U+BD41");
expect(() => {ms932Encoder.encode("\uBD42")}).to.throw(Error, "EncodingError U+BD42");
expect(() => {ms932Encoder.encode("\uBD43")}).to.throw(Error, "EncodingError U+BD43");
expect(() => {ms932Encoder.encode("\uBD44")}).to.throw(Error, "EncodingError U+BD44");
expect(() => {ms932Encoder.encode("\uBD45")}).to.throw(Error, "EncodingError U+BD45");
expect(() => {ms932Encoder.encode("\uBD46")}).to.throw(Error, "EncodingError U+BD46");
expect(() => {ms932Encoder.encode("\uBD47")}).to.throw(Error, "EncodingError U+BD47");
expect(() => {ms932Encoder.encode("\uBD48")}).to.throw(Error, "EncodingError U+BD48");
expect(() => {ms932Encoder.encode("\uBD49")}).to.throw(Error, "EncodingError U+BD49");
expect(() => {ms932Encoder.encode("\uBD4A")}).to.throw(Error, "EncodingError U+BD4A");
expect(() => {ms932Encoder.encode("\uBD4B")}).to.throw(Error, "EncodingError U+BD4B");
expect(() => {ms932Encoder.encode("\uBD4C")}).to.throw(Error, "EncodingError U+BD4C");
expect(() => {ms932Encoder.encode("\uBD4D")}).to.throw(Error, "EncodingError U+BD4D");
expect(() => {ms932Encoder.encode("\uBD4E")}).to.throw(Error, "EncodingError U+BD4E");
expect(() => {ms932Encoder.encode("\uBD4F")}).to.throw(Error, "EncodingError U+BD4F");
expect(() => {ms932Encoder.encode("\uBD50")}).to.throw(Error, "EncodingError U+BD50");
expect(() => {ms932Encoder.encode("\uBD51")}).to.throw(Error, "EncodingError U+BD51");
expect(() => {ms932Encoder.encode("\uBD52")}).to.throw(Error, "EncodingError U+BD52");
expect(() => {ms932Encoder.encode("\uBD53")}).to.throw(Error, "EncodingError U+BD53");
expect(() => {ms932Encoder.encode("\uBD54")}).to.throw(Error, "EncodingError U+BD54");
expect(() => {ms932Encoder.encode("\uBD55")}).to.throw(Error, "EncodingError U+BD55");
expect(() => {ms932Encoder.encode("\uBD56")}).to.throw(Error, "EncodingError U+BD56");
expect(() => {ms932Encoder.encode("\uBD57")}).to.throw(Error, "EncodingError U+BD57");
expect(() => {ms932Encoder.encode("\uBD58")}).to.throw(Error, "EncodingError U+BD58");
expect(() => {ms932Encoder.encode("\uBD59")}).to.throw(Error, "EncodingError U+BD59");
expect(() => {ms932Encoder.encode("\uBD5A")}).to.throw(Error, "EncodingError U+BD5A");
expect(() => {ms932Encoder.encode("\uBD5B")}).to.throw(Error, "EncodingError U+BD5B");
expect(() => {ms932Encoder.encode("\uBD5C")}).to.throw(Error, "EncodingError U+BD5C");
expect(() => {ms932Encoder.encode("\uBD5D")}).to.throw(Error, "EncodingError U+BD5D");
expect(() => {ms932Encoder.encode("\uBD5E")}).to.throw(Error, "EncodingError U+BD5E");
expect(() => {ms932Encoder.encode("\uBD5F")}).to.throw(Error, "EncodingError U+BD5F");
expect(() => {ms932Encoder.encode("\uBD60")}).to.throw(Error, "EncodingError U+BD60");
expect(() => {ms932Encoder.encode("\uBD61")}).to.throw(Error, "EncodingError U+BD61");
expect(() => {ms932Encoder.encode("\uBD62")}).to.throw(Error, "EncodingError U+BD62");
expect(() => {ms932Encoder.encode("\uBD63")}).to.throw(Error, "EncodingError U+BD63");
expect(() => {ms932Encoder.encode("\uBD64")}).to.throw(Error, "EncodingError U+BD64");
expect(() => {ms932Encoder.encode("\uBD65")}).to.throw(Error, "EncodingError U+BD65");
expect(() => {ms932Encoder.encode("\uBD66")}).to.throw(Error, "EncodingError U+BD66");
expect(() => {ms932Encoder.encode("\uBD67")}).to.throw(Error, "EncodingError U+BD67");
expect(() => {ms932Encoder.encode("\uBD68")}).to.throw(Error, "EncodingError U+BD68");
expect(() => {ms932Encoder.encode("\uBD69")}).to.throw(Error, "EncodingError U+BD69");
expect(() => {ms932Encoder.encode("\uBD6A")}).to.throw(Error, "EncodingError U+BD6A");
expect(() => {ms932Encoder.encode("\uBD6B")}).to.throw(Error, "EncodingError U+BD6B");
expect(() => {ms932Encoder.encode("\uBD6C")}).to.throw(Error, "EncodingError U+BD6C");
expect(() => {ms932Encoder.encode("\uBD6D")}).to.throw(Error, "EncodingError U+BD6D");
expect(() => {ms932Encoder.encode("\uBD6E")}).to.throw(Error, "EncodingError U+BD6E");
expect(() => {ms932Encoder.encode("\uBD6F")}).to.throw(Error, "EncodingError U+BD6F");
expect(() => {ms932Encoder.encode("\uBD70")}).to.throw(Error, "EncodingError U+BD70");
expect(() => {ms932Encoder.encode("\uBD71")}).to.throw(Error, "EncodingError U+BD71");
expect(() => {ms932Encoder.encode("\uBD72")}).to.throw(Error, "EncodingError U+BD72");
expect(() => {ms932Encoder.encode("\uBD73")}).to.throw(Error, "EncodingError U+BD73");
expect(() => {ms932Encoder.encode("\uBD74")}).to.throw(Error, "EncodingError U+BD74");
expect(() => {ms932Encoder.encode("\uBD75")}).to.throw(Error, "EncodingError U+BD75");
expect(() => {ms932Encoder.encode("\uBD76")}).to.throw(Error, "EncodingError U+BD76");
expect(() => {ms932Encoder.encode("\uBD77")}).to.throw(Error, "EncodingError U+BD77");
expect(() => {ms932Encoder.encode("\uBD78")}).to.throw(Error, "EncodingError U+BD78");
expect(() => {ms932Encoder.encode("\uBD79")}).to.throw(Error, "EncodingError U+BD79");
expect(() => {ms932Encoder.encode("\uBD7A")}).to.throw(Error, "EncodingError U+BD7A");
expect(() => {ms932Encoder.encode("\uBD7B")}).to.throw(Error, "EncodingError U+BD7B");
expect(() => {ms932Encoder.encode("\uBD7C")}).to.throw(Error, "EncodingError U+BD7C");
expect(() => {ms932Encoder.encode("\uBD7D")}).to.throw(Error, "EncodingError U+BD7D");
expect(() => {ms932Encoder.encode("\uBD7E")}).to.throw(Error, "EncodingError U+BD7E");
expect(() => {ms932Encoder.encode("\uBD7F")}).to.throw(Error, "EncodingError U+BD7F");
expect(() => {ms932Encoder.encode("\uBD80")}).to.throw(Error, "EncodingError U+BD80");
expect(() => {ms932Encoder.encode("\uBD81")}).to.throw(Error, "EncodingError U+BD81");
expect(() => {ms932Encoder.encode("\uBD82")}).to.throw(Error, "EncodingError U+BD82");
expect(() => {ms932Encoder.encode("\uBD83")}).to.throw(Error, "EncodingError U+BD83");
expect(() => {ms932Encoder.encode("\uBD84")}).to.throw(Error, "EncodingError U+BD84");
expect(() => {ms932Encoder.encode("\uBD85")}).to.throw(Error, "EncodingError U+BD85");
expect(() => {ms932Encoder.encode("\uBD86")}).to.throw(Error, "EncodingError U+BD86");
expect(() => {ms932Encoder.encode("\uBD87")}).to.throw(Error, "EncodingError U+BD87");
expect(() => {ms932Encoder.encode("\uBD88")}).to.throw(Error, "EncodingError U+BD88");
expect(() => {ms932Encoder.encode("\uBD89")}).to.throw(Error, "EncodingError U+BD89");
expect(() => {ms932Encoder.encode("\uBD8A")}).to.throw(Error, "EncodingError U+BD8A");
expect(() => {ms932Encoder.encode("\uBD8B")}).to.throw(Error, "EncodingError U+BD8B");
expect(() => {ms932Encoder.encode("\uBD8C")}).to.throw(Error, "EncodingError U+BD8C");
expect(() => {ms932Encoder.encode("\uBD8D")}).to.throw(Error, "EncodingError U+BD8D");
expect(() => {ms932Encoder.encode("\uBD8E")}).to.throw(Error, "EncodingError U+BD8E");
expect(() => {ms932Encoder.encode("\uBD8F")}).to.throw(Error, "EncodingError U+BD8F");
expect(() => {ms932Encoder.encode("\uBD90")}).to.throw(Error, "EncodingError U+BD90");
expect(() => {ms932Encoder.encode("\uBD91")}).to.throw(Error, "EncodingError U+BD91");
expect(() => {ms932Encoder.encode("\uBD92")}).to.throw(Error, "EncodingError U+BD92");
expect(() => {ms932Encoder.encode("\uBD93")}).to.throw(Error, "EncodingError U+BD93");
expect(() => {ms932Encoder.encode("\uBD94")}).to.throw(Error, "EncodingError U+BD94");
expect(() => {ms932Encoder.encode("\uBD95")}).to.throw(Error, "EncodingError U+BD95");
expect(() => {ms932Encoder.encode("\uBD96")}).to.throw(Error, "EncodingError U+BD96");
expect(() => {ms932Encoder.encode("\uBD97")}).to.throw(Error, "EncodingError U+BD97");
expect(() => {ms932Encoder.encode("\uBD98")}).to.throw(Error, "EncodingError U+BD98");
expect(() => {ms932Encoder.encode("\uBD99")}).to.throw(Error, "EncodingError U+BD99");
expect(() => {ms932Encoder.encode("\uBD9A")}).to.throw(Error, "EncodingError U+BD9A");
expect(() => {ms932Encoder.encode("\uBD9B")}).to.throw(Error, "EncodingError U+BD9B");
expect(() => {ms932Encoder.encode("\uBD9C")}).to.throw(Error, "EncodingError U+BD9C");
expect(() => {ms932Encoder.encode("\uBD9D")}).to.throw(Error, "EncodingError U+BD9D");
expect(() => {ms932Encoder.encode("\uBD9E")}).to.throw(Error, "EncodingError U+BD9E");
expect(() => {ms932Encoder.encode("\uBD9F")}).to.throw(Error, "EncodingError U+BD9F");
expect(() => {ms932Encoder.encode("\uBDA0")}).to.throw(Error, "EncodingError U+BDA0");
expect(() => {ms932Encoder.encode("\uBDA1")}).to.throw(Error, "EncodingError U+BDA1");
expect(() => {ms932Encoder.encode("\uBDA2")}).to.throw(Error, "EncodingError U+BDA2");
expect(() => {ms932Encoder.encode("\uBDA3")}).to.throw(Error, "EncodingError U+BDA3");
expect(() => {ms932Encoder.encode("\uBDA4")}).to.throw(Error, "EncodingError U+BDA4");
expect(() => {ms932Encoder.encode("\uBDA5")}).to.throw(Error, "EncodingError U+BDA5");
expect(() => {ms932Encoder.encode("\uBDA6")}).to.throw(Error, "EncodingError U+BDA6");
expect(() => {ms932Encoder.encode("\uBDA7")}).to.throw(Error, "EncodingError U+BDA7");
expect(() => {ms932Encoder.encode("\uBDA8")}).to.throw(Error, "EncodingError U+BDA8");
expect(() => {ms932Encoder.encode("\uBDA9")}).to.throw(Error, "EncodingError U+BDA9");
expect(() => {ms932Encoder.encode("\uBDAA")}).to.throw(Error, "EncodingError U+BDAA");
expect(() => {ms932Encoder.encode("\uBDAB")}).to.throw(Error, "EncodingError U+BDAB");
expect(() => {ms932Encoder.encode("\uBDAC")}).to.throw(Error, "EncodingError U+BDAC");
expect(() => {ms932Encoder.encode("\uBDAD")}).to.throw(Error, "EncodingError U+BDAD");
expect(() => {ms932Encoder.encode("\uBDAE")}).to.throw(Error, "EncodingError U+BDAE");
expect(() => {ms932Encoder.encode("\uBDAF")}).to.throw(Error, "EncodingError U+BDAF");
expect(() => {ms932Encoder.encode("\uBDB0")}).to.throw(Error, "EncodingError U+BDB0");
expect(() => {ms932Encoder.encode("\uBDB1")}).to.throw(Error, "EncodingError U+BDB1");
expect(() => {ms932Encoder.encode("\uBDB2")}).to.throw(Error, "EncodingError U+BDB2");
expect(() => {ms932Encoder.encode("\uBDB3")}).to.throw(Error, "EncodingError U+BDB3");
expect(() => {ms932Encoder.encode("\uBDB4")}).to.throw(Error, "EncodingError U+BDB4");
expect(() => {ms932Encoder.encode("\uBDB5")}).to.throw(Error, "EncodingError U+BDB5");
expect(() => {ms932Encoder.encode("\uBDB6")}).to.throw(Error, "EncodingError U+BDB6");
expect(() => {ms932Encoder.encode("\uBDB7")}).to.throw(Error, "EncodingError U+BDB7");
expect(() => {ms932Encoder.encode("\uBDB8")}).to.throw(Error, "EncodingError U+BDB8");
expect(() => {ms932Encoder.encode("\uBDB9")}).to.throw(Error, "EncodingError U+BDB9");
expect(() => {ms932Encoder.encode("\uBDBA")}).to.throw(Error, "EncodingError U+BDBA");
expect(() => {ms932Encoder.encode("\uBDBB")}).to.throw(Error, "EncodingError U+BDBB");
expect(() => {ms932Encoder.encode("\uBDBC")}).to.throw(Error, "EncodingError U+BDBC");
expect(() => {ms932Encoder.encode("\uBDBD")}).to.throw(Error, "EncodingError U+BDBD");
expect(() => {ms932Encoder.encode("\uBDBE")}).to.throw(Error, "EncodingError U+BDBE");
expect(() => {ms932Encoder.encode("\uBDBF")}).to.throw(Error, "EncodingError U+BDBF");
expect(() => {ms932Encoder.encode("\uBDC0")}).to.throw(Error, "EncodingError U+BDC0");
expect(() => {ms932Encoder.encode("\uBDC1")}).to.throw(Error, "EncodingError U+BDC1");
expect(() => {ms932Encoder.encode("\uBDC2")}).to.throw(Error, "EncodingError U+BDC2");
expect(() => {ms932Encoder.encode("\uBDC3")}).to.throw(Error, "EncodingError U+BDC3");
expect(() => {ms932Encoder.encode("\uBDC4")}).to.throw(Error, "EncodingError U+BDC4");
expect(() => {ms932Encoder.encode("\uBDC5")}).to.throw(Error, "EncodingError U+BDC5");
expect(() => {ms932Encoder.encode("\uBDC6")}).to.throw(Error, "EncodingError U+BDC6");
expect(() => {ms932Encoder.encode("\uBDC7")}).to.throw(Error, "EncodingError U+BDC7");
expect(() => {ms932Encoder.encode("\uBDC8")}).to.throw(Error, "EncodingError U+BDC8");
expect(() => {ms932Encoder.encode("\uBDC9")}).to.throw(Error, "EncodingError U+BDC9");
expect(() => {ms932Encoder.encode("\uBDCA")}).to.throw(Error, "EncodingError U+BDCA");
expect(() => {ms932Encoder.encode("\uBDCB")}).to.throw(Error, "EncodingError U+BDCB");
expect(() => {ms932Encoder.encode("\uBDCC")}).to.throw(Error, "EncodingError U+BDCC");
expect(() => {ms932Encoder.encode("\uBDCD")}).to.throw(Error, "EncodingError U+BDCD");
expect(() => {ms932Encoder.encode("\uBDCE")}).to.throw(Error, "EncodingError U+BDCE");
expect(() => {ms932Encoder.encode("\uBDCF")}).to.throw(Error, "EncodingError U+BDCF");
expect(() => {ms932Encoder.encode("\uBDD0")}).to.throw(Error, "EncodingError U+BDD0");
expect(() => {ms932Encoder.encode("\uBDD1")}).to.throw(Error, "EncodingError U+BDD1");
expect(() => {ms932Encoder.encode("\uBDD2")}).to.throw(Error, "EncodingError U+BDD2");
expect(() => {ms932Encoder.encode("\uBDD3")}).to.throw(Error, "EncodingError U+BDD3");
expect(() => {ms932Encoder.encode("\uBDD4")}).to.throw(Error, "EncodingError U+BDD4");
expect(() => {ms932Encoder.encode("\uBDD5")}).to.throw(Error, "EncodingError U+BDD5");
expect(() => {ms932Encoder.encode("\uBDD6")}).to.throw(Error, "EncodingError U+BDD6");
expect(() => {ms932Encoder.encode("\uBDD7")}).to.throw(Error, "EncodingError U+BDD7");
expect(() => {ms932Encoder.encode("\uBDD8")}).to.throw(Error, "EncodingError U+BDD8");
expect(() => {ms932Encoder.encode("\uBDD9")}).to.throw(Error, "EncodingError U+BDD9");
expect(() => {ms932Encoder.encode("\uBDDA")}).to.throw(Error, "EncodingError U+BDDA");
expect(() => {ms932Encoder.encode("\uBDDB")}).to.throw(Error, "EncodingError U+BDDB");
expect(() => {ms932Encoder.encode("\uBDDC")}).to.throw(Error, "EncodingError U+BDDC");
expect(() => {ms932Encoder.encode("\uBDDD")}).to.throw(Error, "EncodingError U+BDDD");
expect(() => {ms932Encoder.encode("\uBDDE")}).to.throw(Error, "EncodingError U+BDDE");
expect(() => {ms932Encoder.encode("\uBDDF")}).to.throw(Error, "EncodingError U+BDDF");
expect(() => {ms932Encoder.encode("\uBDE0")}).to.throw(Error, "EncodingError U+BDE0");
expect(() => {ms932Encoder.encode("\uBDE1")}).to.throw(Error, "EncodingError U+BDE1");
expect(() => {ms932Encoder.encode("\uBDE2")}).to.throw(Error, "EncodingError U+BDE2");
expect(() => {ms932Encoder.encode("\uBDE3")}).to.throw(Error, "EncodingError U+BDE3");
expect(() => {ms932Encoder.encode("\uBDE4")}).to.throw(Error, "EncodingError U+BDE4");
expect(() => {ms932Encoder.encode("\uBDE5")}).to.throw(Error, "EncodingError U+BDE5");
expect(() => {ms932Encoder.encode("\uBDE6")}).to.throw(Error, "EncodingError U+BDE6");
expect(() => {ms932Encoder.encode("\uBDE7")}).to.throw(Error, "EncodingError U+BDE7");
expect(() => {ms932Encoder.encode("\uBDE8")}).to.throw(Error, "EncodingError U+BDE8");
expect(() => {ms932Encoder.encode("\uBDE9")}).to.throw(Error, "EncodingError U+BDE9");
expect(() => {ms932Encoder.encode("\uBDEA")}).to.throw(Error, "EncodingError U+BDEA");
expect(() => {ms932Encoder.encode("\uBDEB")}).to.throw(Error, "EncodingError U+BDEB");
expect(() => {ms932Encoder.encode("\uBDEC")}).to.throw(Error, "EncodingError U+BDEC");
expect(() => {ms932Encoder.encode("\uBDED")}).to.throw(Error, "EncodingError U+BDED");
expect(() => {ms932Encoder.encode("\uBDEE")}).to.throw(Error, "EncodingError U+BDEE");
expect(() => {ms932Encoder.encode("\uBDEF")}).to.throw(Error, "EncodingError U+BDEF");
expect(() => {ms932Encoder.encode("\uBDF0")}).to.throw(Error, "EncodingError U+BDF0");
expect(() => {ms932Encoder.encode("\uBDF1")}).to.throw(Error, "EncodingError U+BDF1");
expect(() => {ms932Encoder.encode("\uBDF2")}).to.throw(Error, "EncodingError U+BDF2");
expect(() => {ms932Encoder.encode("\uBDF3")}).to.throw(Error, "EncodingError U+BDF3");
expect(() => {ms932Encoder.encode("\uBDF4")}).to.throw(Error, "EncodingError U+BDF4");
expect(() => {ms932Encoder.encode("\uBDF5")}).to.throw(Error, "EncodingError U+BDF5");
expect(() => {ms932Encoder.encode("\uBDF6")}).to.throw(Error, "EncodingError U+BDF6");
expect(() => {ms932Encoder.encode("\uBDF7")}).to.throw(Error, "EncodingError U+BDF7");
expect(() => {ms932Encoder.encode("\uBDF8")}).to.throw(Error, "EncodingError U+BDF8");
expect(() => {ms932Encoder.encode("\uBDF9")}).to.throw(Error, "EncodingError U+BDF9");
expect(() => {ms932Encoder.encode("\uBDFA")}).to.throw(Error, "EncodingError U+BDFA");
expect(() => {ms932Encoder.encode("\uBDFB")}).to.throw(Error, "EncodingError U+BDFB");
expect(() => {ms932Encoder.encode("\uBDFC")}).to.throw(Error, "EncodingError U+BDFC");
expect(() => {ms932Encoder.encode("\uBDFD")}).to.throw(Error, "EncodingError U+BDFD");
expect(() => {ms932Encoder.encode("\uBDFE")}).to.throw(Error, "EncodingError U+BDFE");
expect(() => {ms932Encoder.encode("\uBDFF")}).to.throw(Error, "EncodingError U+BDFF");
expect(() => {ms932Encoder.encode("\uBE00")}).to.throw(Error, "EncodingError U+BE00");
expect(() => {ms932Encoder.encode("\uBE01")}).to.throw(Error, "EncodingError U+BE01");
expect(() => {ms932Encoder.encode("\uBE02")}).to.throw(Error, "EncodingError U+BE02");
expect(() => {ms932Encoder.encode("\uBE03")}).to.throw(Error, "EncodingError U+BE03");
expect(() => {ms932Encoder.encode("\uBE04")}).to.throw(Error, "EncodingError U+BE04");
expect(() => {ms932Encoder.encode("\uBE05")}).to.throw(Error, "EncodingError U+BE05");
expect(() => {ms932Encoder.encode("\uBE06")}).to.throw(Error, "EncodingError U+BE06");
expect(() => {ms932Encoder.encode("\uBE07")}).to.throw(Error, "EncodingError U+BE07");
expect(() => {ms932Encoder.encode("\uBE08")}).to.throw(Error, "EncodingError U+BE08");
expect(() => {ms932Encoder.encode("\uBE09")}).to.throw(Error, "EncodingError U+BE09");
expect(() => {ms932Encoder.encode("\uBE0A")}).to.throw(Error, "EncodingError U+BE0A");
expect(() => {ms932Encoder.encode("\uBE0B")}).to.throw(Error, "EncodingError U+BE0B");
expect(() => {ms932Encoder.encode("\uBE0C")}).to.throw(Error, "EncodingError U+BE0C");
expect(() => {ms932Encoder.encode("\uBE0D")}).to.throw(Error, "EncodingError U+BE0D");
expect(() => {ms932Encoder.encode("\uBE0E")}).to.throw(Error, "EncodingError U+BE0E");
expect(() => {ms932Encoder.encode("\uBE0F")}).to.throw(Error, "EncodingError U+BE0F");
expect(() => {ms932Encoder.encode("\uBE10")}).to.throw(Error, "EncodingError U+BE10");
expect(() => {ms932Encoder.encode("\uBE11")}).to.throw(Error, "EncodingError U+BE11");
expect(() => {ms932Encoder.encode("\uBE12")}).to.throw(Error, "EncodingError U+BE12");
expect(() => {ms932Encoder.encode("\uBE13")}).to.throw(Error, "EncodingError U+BE13");
expect(() => {ms932Encoder.encode("\uBE14")}).to.throw(Error, "EncodingError U+BE14");
expect(() => {ms932Encoder.encode("\uBE15")}).to.throw(Error, "EncodingError U+BE15");
expect(() => {ms932Encoder.encode("\uBE16")}).to.throw(Error, "EncodingError U+BE16");
expect(() => {ms932Encoder.encode("\uBE17")}).to.throw(Error, "EncodingError U+BE17");
expect(() => {ms932Encoder.encode("\uBE18")}).to.throw(Error, "EncodingError U+BE18");
expect(() => {ms932Encoder.encode("\uBE19")}).to.throw(Error, "EncodingError U+BE19");
expect(() => {ms932Encoder.encode("\uBE1A")}).to.throw(Error, "EncodingError U+BE1A");
expect(() => {ms932Encoder.encode("\uBE1B")}).to.throw(Error, "EncodingError U+BE1B");
expect(() => {ms932Encoder.encode("\uBE1C")}).to.throw(Error, "EncodingError U+BE1C");
expect(() => {ms932Encoder.encode("\uBE1D")}).to.throw(Error, "EncodingError U+BE1D");
expect(() => {ms932Encoder.encode("\uBE1E")}).to.throw(Error, "EncodingError U+BE1E");
expect(() => {ms932Encoder.encode("\uBE1F")}).to.throw(Error, "EncodingError U+BE1F");
expect(() => {ms932Encoder.encode("\uBE20")}).to.throw(Error, "EncodingError U+BE20");
expect(() => {ms932Encoder.encode("\uBE21")}).to.throw(Error, "EncodingError U+BE21");
expect(() => {ms932Encoder.encode("\uBE22")}).to.throw(Error, "EncodingError U+BE22");
expect(() => {ms932Encoder.encode("\uBE23")}).to.throw(Error, "EncodingError U+BE23");
expect(() => {ms932Encoder.encode("\uBE24")}).to.throw(Error, "EncodingError U+BE24");
expect(() => {ms932Encoder.encode("\uBE25")}).to.throw(Error, "EncodingError U+BE25");
expect(() => {ms932Encoder.encode("\uBE26")}).to.throw(Error, "EncodingError U+BE26");
expect(() => {ms932Encoder.encode("\uBE27")}).to.throw(Error, "EncodingError U+BE27");
expect(() => {ms932Encoder.encode("\uBE28")}).to.throw(Error, "EncodingError U+BE28");
expect(() => {ms932Encoder.encode("\uBE29")}).to.throw(Error, "EncodingError U+BE29");
expect(() => {ms932Encoder.encode("\uBE2A")}).to.throw(Error, "EncodingError U+BE2A");
expect(() => {ms932Encoder.encode("\uBE2B")}).to.throw(Error, "EncodingError U+BE2B");
expect(() => {ms932Encoder.encode("\uBE2C")}).to.throw(Error, "EncodingError U+BE2C");
expect(() => {ms932Encoder.encode("\uBE2D")}).to.throw(Error, "EncodingError U+BE2D");
expect(() => {ms932Encoder.encode("\uBE2E")}).to.throw(Error, "EncodingError U+BE2E");
expect(() => {ms932Encoder.encode("\uBE2F")}).to.throw(Error, "EncodingError U+BE2F");
expect(() => {ms932Encoder.encode("\uBE30")}).to.throw(Error, "EncodingError U+BE30");
expect(() => {ms932Encoder.encode("\uBE31")}).to.throw(Error, "EncodingError U+BE31");
expect(() => {ms932Encoder.encode("\uBE32")}).to.throw(Error, "EncodingError U+BE32");
expect(() => {ms932Encoder.encode("\uBE33")}).to.throw(Error, "EncodingError U+BE33");
expect(() => {ms932Encoder.encode("\uBE34")}).to.throw(Error, "EncodingError U+BE34");
expect(() => {ms932Encoder.encode("\uBE35")}).to.throw(Error, "EncodingError U+BE35");
expect(() => {ms932Encoder.encode("\uBE36")}).to.throw(Error, "EncodingError U+BE36");
expect(() => {ms932Encoder.encode("\uBE37")}).to.throw(Error, "EncodingError U+BE37");
expect(() => {ms932Encoder.encode("\uBE38")}).to.throw(Error, "EncodingError U+BE38");
expect(() => {ms932Encoder.encode("\uBE39")}).to.throw(Error, "EncodingError U+BE39");
expect(() => {ms932Encoder.encode("\uBE3A")}).to.throw(Error, "EncodingError U+BE3A");
expect(() => {ms932Encoder.encode("\uBE3B")}).to.throw(Error, "EncodingError U+BE3B");
expect(() => {ms932Encoder.encode("\uBE3C")}).to.throw(Error, "EncodingError U+BE3C");
expect(() => {ms932Encoder.encode("\uBE3D")}).to.throw(Error, "EncodingError U+BE3D");
expect(() => {ms932Encoder.encode("\uBE3E")}).to.throw(Error, "EncodingError U+BE3E");
expect(() => {ms932Encoder.encode("\uBE3F")}).to.throw(Error, "EncodingError U+BE3F");
expect(() => {ms932Encoder.encode("\uBE40")}).to.throw(Error, "EncodingError U+BE40");
expect(() => {ms932Encoder.encode("\uBE41")}).to.throw(Error, "EncodingError U+BE41");
expect(() => {ms932Encoder.encode("\uBE42")}).to.throw(Error, "EncodingError U+BE42");
expect(() => {ms932Encoder.encode("\uBE43")}).to.throw(Error, "EncodingError U+BE43");
expect(() => {ms932Encoder.encode("\uBE44")}).to.throw(Error, "EncodingError U+BE44");
expect(() => {ms932Encoder.encode("\uBE45")}).to.throw(Error, "EncodingError U+BE45");
expect(() => {ms932Encoder.encode("\uBE46")}).to.throw(Error, "EncodingError U+BE46");
expect(() => {ms932Encoder.encode("\uBE47")}).to.throw(Error, "EncodingError U+BE47");
expect(() => {ms932Encoder.encode("\uBE48")}).to.throw(Error, "EncodingError U+BE48");
expect(() => {ms932Encoder.encode("\uBE49")}).to.throw(Error, "EncodingError U+BE49");
expect(() => {ms932Encoder.encode("\uBE4A")}).to.throw(Error, "EncodingError U+BE4A");
expect(() => {ms932Encoder.encode("\uBE4B")}).to.throw(Error, "EncodingError U+BE4B");
expect(() => {ms932Encoder.encode("\uBE4C")}).to.throw(Error, "EncodingError U+BE4C");
expect(() => {ms932Encoder.encode("\uBE4D")}).to.throw(Error, "EncodingError U+BE4D");
expect(() => {ms932Encoder.encode("\uBE4E")}).to.throw(Error, "EncodingError U+BE4E");
expect(() => {ms932Encoder.encode("\uBE4F")}).to.throw(Error, "EncodingError U+BE4F");
expect(() => {ms932Encoder.encode("\uBE50")}).to.throw(Error, "EncodingError U+BE50");
expect(() => {ms932Encoder.encode("\uBE51")}).to.throw(Error, "EncodingError U+BE51");
expect(() => {ms932Encoder.encode("\uBE52")}).to.throw(Error, "EncodingError U+BE52");
expect(() => {ms932Encoder.encode("\uBE53")}).to.throw(Error, "EncodingError U+BE53");
expect(() => {ms932Encoder.encode("\uBE54")}).to.throw(Error, "EncodingError U+BE54");
expect(() => {ms932Encoder.encode("\uBE55")}).to.throw(Error, "EncodingError U+BE55");
expect(() => {ms932Encoder.encode("\uBE56")}).to.throw(Error, "EncodingError U+BE56");
expect(() => {ms932Encoder.encode("\uBE57")}).to.throw(Error, "EncodingError U+BE57");
expect(() => {ms932Encoder.encode("\uBE58")}).to.throw(Error, "EncodingError U+BE58");
expect(() => {ms932Encoder.encode("\uBE59")}).to.throw(Error, "EncodingError U+BE59");
expect(() => {ms932Encoder.encode("\uBE5A")}).to.throw(Error, "EncodingError U+BE5A");
expect(() => {ms932Encoder.encode("\uBE5B")}).to.throw(Error, "EncodingError U+BE5B");
expect(() => {ms932Encoder.encode("\uBE5C")}).to.throw(Error, "EncodingError U+BE5C");
expect(() => {ms932Encoder.encode("\uBE5D")}).to.throw(Error, "EncodingError U+BE5D");
expect(() => {ms932Encoder.encode("\uBE5E")}).to.throw(Error, "EncodingError U+BE5E");
expect(() => {ms932Encoder.encode("\uBE5F")}).to.throw(Error, "EncodingError U+BE5F");
expect(() => {ms932Encoder.encode("\uBE60")}).to.throw(Error, "EncodingError U+BE60");
expect(() => {ms932Encoder.encode("\uBE61")}).to.throw(Error, "EncodingError U+BE61");
expect(() => {ms932Encoder.encode("\uBE62")}).to.throw(Error, "EncodingError U+BE62");
expect(() => {ms932Encoder.encode("\uBE63")}).to.throw(Error, "EncodingError U+BE63");
expect(() => {ms932Encoder.encode("\uBE64")}).to.throw(Error, "EncodingError U+BE64");
expect(() => {ms932Encoder.encode("\uBE65")}).to.throw(Error, "EncodingError U+BE65");
expect(() => {ms932Encoder.encode("\uBE66")}).to.throw(Error, "EncodingError U+BE66");
expect(() => {ms932Encoder.encode("\uBE67")}).to.throw(Error, "EncodingError U+BE67");
expect(() => {ms932Encoder.encode("\uBE68")}).to.throw(Error, "EncodingError U+BE68");
expect(() => {ms932Encoder.encode("\uBE69")}).to.throw(Error, "EncodingError U+BE69");
expect(() => {ms932Encoder.encode("\uBE6A")}).to.throw(Error, "EncodingError U+BE6A");
expect(() => {ms932Encoder.encode("\uBE6B")}).to.throw(Error, "EncodingError U+BE6B");
expect(() => {ms932Encoder.encode("\uBE6C")}).to.throw(Error, "EncodingError U+BE6C");
expect(() => {ms932Encoder.encode("\uBE6D")}).to.throw(Error, "EncodingError U+BE6D");
expect(() => {ms932Encoder.encode("\uBE6E")}).to.throw(Error, "EncodingError U+BE6E");
expect(() => {ms932Encoder.encode("\uBE6F")}).to.throw(Error, "EncodingError U+BE6F");
expect(() => {ms932Encoder.encode("\uBE70")}).to.throw(Error, "EncodingError U+BE70");
expect(() => {ms932Encoder.encode("\uBE71")}).to.throw(Error, "EncodingError U+BE71");
expect(() => {ms932Encoder.encode("\uBE72")}).to.throw(Error, "EncodingError U+BE72");
expect(() => {ms932Encoder.encode("\uBE73")}).to.throw(Error, "EncodingError U+BE73");
expect(() => {ms932Encoder.encode("\uBE74")}).to.throw(Error, "EncodingError U+BE74");
expect(() => {ms932Encoder.encode("\uBE75")}).to.throw(Error, "EncodingError U+BE75");
expect(() => {ms932Encoder.encode("\uBE76")}).to.throw(Error, "EncodingError U+BE76");
expect(() => {ms932Encoder.encode("\uBE77")}).to.throw(Error, "EncodingError U+BE77");
expect(() => {ms932Encoder.encode("\uBE78")}).to.throw(Error, "EncodingError U+BE78");
expect(() => {ms932Encoder.encode("\uBE79")}).to.throw(Error, "EncodingError U+BE79");
expect(() => {ms932Encoder.encode("\uBE7A")}).to.throw(Error, "EncodingError U+BE7A");
expect(() => {ms932Encoder.encode("\uBE7B")}).to.throw(Error, "EncodingError U+BE7B");
expect(() => {ms932Encoder.encode("\uBE7C")}).to.throw(Error, "EncodingError U+BE7C");
expect(() => {ms932Encoder.encode("\uBE7D")}).to.throw(Error, "EncodingError U+BE7D");
expect(() => {ms932Encoder.encode("\uBE7E")}).to.throw(Error, "EncodingError U+BE7E");
expect(() => {ms932Encoder.encode("\uBE7F")}).to.throw(Error, "EncodingError U+BE7F");
expect(() => {ms932Encoder.encode("\uBE80")}).to.throw(Error, "EncodingError U+BE80");
expect(() => {ms932Encoder.encode("\uBE81")}).to.throw(Error, "EncodingError U+BE81");
expect(() => {ms932Encoder.encode("\uBE82")}).to.throw(Error, "EncodingError U+BE82");
expect(() => {ms932Encoder.encode("\uBE83")}).to.throw(Error, "EncodingError U+BE83");
expect(() => {ms932Encoder.encode("\uBE84")}).to.throw(Error, "EncodingError U+BE84");
expect(() => {ms932Encoder.encode("\uBE85")}).to.throw(Error, "EncodingError U+BE85");
expect(() => {ms932Encoder.encode("\uBE86")}).to.throw(Error, "EncodingError U+BE86");
expect(() => {ms932Encoder.encode("\uBE87")}).to.throw(Error, "EncodingError U+BE87");
expect(() => {ms932Encoder.encode("\uBE88")}).to.throw(Error, "EncodingError U+BE88");
expect(() => {ms932Encoder.encode("\uBE89")}).to.throw(Error, "EncodingError U+BE89");
expect(() => {ms932Encoder.encode("\uBE8A")}).to.throw(Error, "EncodingError U+BE8A");
expect(() => {ms932Encoder.encode("\uBE8B")}).to.throw(Error, "EncodingError U+BE8B");
expect(() => {ms932Encoder.encode("\uBE8C")}).to.throw(Error, "EncodingError U+BE8C");
expect(() => {ms932Encoder.encode("\uBE8D")}).to.throw(Error, "EncodingError U+BE8D");
expect(() => {ms932Encoder.encode("\uBE8E")}).to.throw(Error, "EncodingError U+BE8E");
expect(() => {ms932Encoder.encode("\uBE8F")}).to.throw(Error, "EncodingError U+BE8F");
expect(() => {ms932Encoder.encode("\uBE90")}).to.throw(Error, "EncodingError U+BE90");
expect(() => {ms932Encoder.encode("\uBE91")}).to.throw(Error, "EncodingError U+BE91");
expect(() => {ms932Encoder.encode("\uBE92")}).to.throw(Error, "EncodingError U+BE92");
expect(() => {ms932Encoder.encode("\uBE93")}).to.throw(Error, "EncodingError U+BE93");
expect(() => {ms932Encoder.encode("\uBE94")}).to.throw(Error, "EncodingError U+BE94");
expect(() => {ms932Encoder.encode("\uBE95")}).to.throw(Error, "EncodingError U+BE95");
expect(() => {ms932Encoder.encode("\uBE96")}).to.throw(Error, "EncodingError U+BE96");
expect(() => {ms932Encoder.encode("\uBE97")}).to.throw(Error, "EncodingError U+BE97");
expect(() => {ms932Encoder.encode("\uBE98")}).to.throw(Error, "EncodingError U+BE98");
expect(() => {ms932Encoder.encode("\uBE99")}).to.throw(Error, "EncodingError U+BE99");
expect(() => {ms932Encoder.encode("\uBE9A")}).to.throw(Error, "EncodingError U+BE9A");
expect(() => {ms932Encoder.encode("\uBE9B")}).to.throw(Error, "EncodingError U+BE9B");
expect(() => {ms932Encoder.encode("\uBE9C")}).to.throw(Error, "EncodingError U+BE9C");
expect(() => {ms932Encoder.encode("\uBE9D")}).to.throw(Error, "EncodingError U+BE9D");
expect(() => {ms932Encoder.encode("\uBE9E")}).to.throw(Error, "EncodingError U+BE9E");
expect(() => {ms932Encoder.encode("\uBE9F")}).to.throw(Error, "EncodingError U+BE9F");
expect(() => {ms932Encoder.encode("\uBEA0")}).to.throw(Error, "EncodingError U+BEA0");
expect(() => {ms932Encoder.encode("\uBEA1")}).to.throw(Error, "EncodingError U+BEA1");
expect(() => {ms932Encoder.encode("\uBEA2")}).to.throw(Error, "EncodingError U+BEA2");
expect(() => {ms932Encoder.encode("\uBEA3")}).to.throw(Error, "EncodingError U+BEA3");
expect(() => {ms932Encoder.encode("\uBEA4")}).to.throw(Error, "EncodingError U+BEA4");
expect(() => {ms932Encoder.encode("\uBEA5")}).to.throw(Error, "EncodingError U+BEA5");
expect(() => {ms932Encoder.encode("\uBEA6")}).to.throw(Error, "EncodingError U+BEA6");
expect(() => {ms932Encoder.encode("\uBEA7")}).to.throw(Error, "EncodingError U+BEA7");
expect(() => {ms932Encoder.encode("\uBEA8")}).to.throw(Error, "EncodingError U+BEA8");
expect(() => {ms932Encoder.encode("\uBEA9")}).to.throw(Error, "EncodingError U+BEA9");
expect(() => {ms932Encoder.encode("\uBEAA")}).to.throw(Error, "EncodingError U+BEAA");
expect(() => {ms932Encoder.encode("\uBEAB")}).to.throw(Error, "EncodingError U+BEAB");
expect(() => {ms932Encoder.encode("\uBEAC")}).to.throw(Error, "EncodingError U+BEAC");
expect(() => {ms932Encoder.encode("\uBEAD")}).to.throw(Error, "EncodingError U+BEAD");
expect(() => {ms932Encoder.encode("\uBEAE")}).to.throw(Error, "EncodingError U+BEAE");
expect(() => {ms932Encoder.encode("\uBEAF")}).to.throw(Error, "EncodingError U+BEAF");
expect(() => {ms932Encoder.encode("\uBEB0")}).to.throw(Error, "EncodingError U+BEB0");
expect(() => {ms932Encoder.encode("\uBEB1")}).to.throw(Error, "EncodingError U+BEB1");
expect(() => {ms932Encoder.encode("\uBEB2")}).to.throw(Error, "EncodingError U+BEB2");
expect(() => {ms932Encoder.encode("\uBEB3")}).to.throw(Error, "EncodingError U+BEB3");
expect(() => {ms932Encoder.encode("\uBEB4")}).to.throw(Error, "EncodingError U+BEB4");
expect(() => {ms932Encoder.encode("\uBEB5")}).to.throw(Error, "EncodingError U+BEB5");
expect(() => {ms932Encoder.encode("\uBEB6")}).to.throw(Error, "EncodingError U+BEB6");
expect(() => {ms932Encoder.encode("\uBEB7")}).to.throw(Error, "EncodingError U+BEB7");
expect(() => {ms932Encoder.encode("\uBEB8")}).to.throw(Error, "EncodingError U+BEB8");
expect(() => {ms932Encoder.encode("\uBEB9")}).to.throw(Error, "EncodingError U+BEB9");
expect(() => {ms932Encoder.encode("\uBEBA")}).to.throw(Error, "EncodingError U+BEBA");
expect(() => {ms932Encoder.encode("\uBEBB")}).to.throw(Error, "EncodingError U+BEBB");
expect(() => {ms932Encoder.encode("\uBEBC")}).to.throw(Error, "EncodingError U+BEBC");
expect(() => {ms932Encoder.encode("\uBEBD")}).to.throw(Error, "EncodingError U+BEBD");
expect(() => {ms932Encoder.encode("\uBEBE")}).to.throw(Error, "EncodingError U+BEBE");
expect(() => {ms932Encoder.encode("\uBEBF")}).to.throw(Error, "EncodingError U+BEBF");
expect(() => {ms932Encoder.encode("\uBEC0")}).to.throw(Error, "EncodingError U+BEC0");
expect(() => {ms932Encoder.encode("\uBEC1")}).to.throw(Error, "EncodingError U+BEC1");
expect(() => {ms932Encoder.encode("\uBEC2")}).to.throw(Error, "EncodingError U+BEC2");
expect(() => {ms932Encoder.encode("\uBEC3")}).to.throw(Error, "EncodingError U+BEC3");
expect(() => {ms932Encoder.encode("\uBEC4")}).to.throw(Error, "EncodingError U+BEC4");
expect(() => {ms932Encoder.encode("\uBEC5")}).to.throw(Error, "EncodingError U+BEC5");
expect(() => {ms932Encoder.encode("\uBEC6")}).to.throw(Error, "EncodingError U+BEC6");
expect(() => {ms932Encoder.encode("\uBEC7")}).to.throw(Error, "EncodingError U+BEC7");
expect(() => {ms932Encoder.encode("\uBEC8")}).to.throw(Error, "EncodingError U+BEC8");
expect(() => {ms932Encoder.encode("\uBEC9")}).to.throw(Error, "EncodingError U+BEC9");
expect(() => {ms932Encoder.encode("\uBECA")}).to.throw(Error, "EncodingError U+BECA");
expect(() => {ms932Encoder.encode("\uBECB")}).to.throw(Error, "EncodingError U+BECB");
expect(() => {ms932Encoder.encode("\uBECC")}).to.throw(Error, "EncodingError U+BECC");
expect(() => {ms932Encoder.encode("\uBECD")}).to.throw(Error, "EncodingError U+BECD");
expect(() => {ms932Encoder.encode("\uBECE")}).to.throw(Error, "EncodingError U+BECE");
expect(() => {ms932Encoder.encode("\uBECF")}).to.throw(Error, "EncodingError U+BECF");
expect(() => {ms932Encoder.encode("\uBED0")}).to.throw(Error, "EncodingError U+BED0");
expect(() => {ms932Encoder.encode("\uBED1")}).to.throw(Error, "EncodingError U+BED1");
expect(() => {ms932Encoder.encode("\uBED2")}).to.throw(Error, "EncodingError U+BED2");
expect(() => {ms932Encoder.encode("\uBED3")}).to.throw(Error, "EncodingError U+BED3");
expect(() => {ms932Encoder.encode("\uBED4")}).to.throw(Error, "EncodingError U+BED4");
expect(() => {ms932Encoder.encode("\uBED5")}).to.throw(Error, "EncodingError U+BED5");
expect(() => {ms932Encoder.encode("\uBED6")}).to.throw(Error, "EncodingError U+BED6");
expect(() => {ms932Encoder.encode("\uBED7")}).to.throw(Error, "EncodingError U+BED7");
expect(() => {ms932Encoder.encode("\uBED8")}).to.throw(Error, "EncodingError U+BED8");
expect(() => {ms932Encoder.encode("\uBED9")}).to.throw(Error, "EncodingError U+BED9");
expect(() => {ms932Encoder.encode("\uBEDA")}).to.throw(Error, "EncodingError U+BEDA");
expect(() => {ms932Encoder.encode("\uBEDB")}).to.throw(Error, "EncodingError U+BEDB");
expect(() => {ms932Encoder.encode("\uBEDC")}).to.throw(Error, "EncodingError U+BEDC");
expect(() => {ms932Encoder.encode("\uBEDD")}).to.throw(Error, "EncodingError U+BEDD");
expect(() => {ms932Encoder.encode("\uBEDE")}).to.throw(Error, "EncodingError U+BEDE");
expect(() => {ms932Encoder.encode("\uBEDF")}).to.throw(Error, "EncodingError U+BEDF");
expect(() => {ms932Encoder.encode("\uBEE0")}).to.throw(Error, "EncodingError U+BEE0");
expect(() => {ms932Encoder.encode("\uBEE1")}).to.throw(Error, "EncodingError U+BEE1");
expect(() => {ms932Encoder.encode("\uBEE2")}).to.throw(Error, "EncodingError U+BEE2");
expect(() => {ms932Encoder.encode("\uBEE3")}).to.throw(Error, "EncodingError U+BEE3");
expect(() => {ms932Encoder.encode("\uBEE4")}).to.throw(Error, "EncodingError U+BEE4");
expect(() => {ms932Encoder.encode("\uBEE5")}).to.throw(Error, "EncodingError U+BEE5");
expect(() => {ms932Encoder.encode("\uBEE6")}).to.throw(Error, "EncodingError U+BEE6");
expect(() => {ms932Encoder.encode("\uBEE7")}).to.throw(Error, "EncodingError U+BEE7");
expect(() => {ms932Encoder.encode("\uBEE8")}).to.throw(Error, "EncodingError U+BEE8");
expect(() => {ms932Encoder.encode("\uBEE9")}).to.throw(Error, "EncodingError U+BEE9");
expect(() => {ms932Encoder.encode("\uBEEA")}).to.throw(Error, "EncodingError U+BEEA");
expect(() => {ms932Encoder.encode("\uBEEB")}).to.throw(Error, "EncodingError U+BEEB");
expect(() => {ms932Encoder.encode("\uBEEC")}).to.throw(Error, "EncodingError U+BEEC");
expect(() => {ms932Encoder.encode("\uBEED")}).to.throw(Error, "EncodingError U+BEED");
expect(() => {ms932Encoder.encode("\uBEEE")}).to.throw(Error, "EncodingError U+BEEE");
expect(() => {ms932Encoder.encode("\uBEEF")}).to.throw(Error, "EncodingError U+BEEF");
expect(() => {ms932Encoder.encode("\uBEF0")}).to.throw(Error, "EncodingError U+BEF0");
expect(() => {ms932Encoder.encode("\uBEF1")}).to.throw(Error, "EncodingError U+BEF1");
expect(() => {ms932Encoder.encode("\uBEF2")}).to.throw(Error, "EncodingError U+BEF2");
expect(() => {ms932Encoder.encode("\uBEF3")}).to.throw(Error, "EncodingError U+BEF3");
expect(() => {ms932Encoder.encode("\uBEF4")}).to.throw(Error, "EncodingError U+BEF4");
expect(() => {ms932Encoder.encode("\uBEF5")}).to.throw(Error, "EncodingError U+BEF5");
expect(() => {ms932Encoder.encode("\uBEF6")}).to.throw(Error, "EncodingError U+BEF6");
expect(() => {ms932Encoder.encode("\uBEF7")}).to.throw(Error, "EncodingError U+BEF7");
expect(() => {ms932Encoder.encode("\uBEF8")}).to.throw(Error, "EncodingError U+BEF8");
expect(() => {ms932Encoder.encode("\uBEF9")}).to.throw(Error, "EncodingError U+BEF9");
expect(() => {ms932Encoder.encode("\uBEFA")}).to.throw(Error, "EncodingError U+BEFA");
expect(() => {ms932Encoder.encode("\uBEFB")}).to.throw(Error, "EncodingError U+BEFB");
expect(() => {ms932Encoder.encode("\uBEFC")}).to.throw(Error, "EncodingError U+BEFC");
expect(() => {ms932Encoder.encode("\uBEFD")}).to.throw(Error, "EncodingError U+BEFD");
expect(() => {ms932Encoder.encode("\uBEFE")}).to.throw(Error, "EncodingError U+BEFE");
expect(() => {ms932Encoder.encode("\uBEFF")}).to.throw(Error, "EncodingError U+BEFF");
expect(() => {ms932Encoder.encode("\uBF00")}).to.throw(Error, "EncodingError U+BF00");
expect(() => {ms932Encoder.encode("\uBF01")}).to.throw(Error, "EncodingError U+BF01");
expect(() => {ms932Encoder.encode("\uBF02")}).to.throw(Error, "EncodingError U+BF02");
expect(() => {ms932Encoder.encode("\uBF03")}).to.throw(Error, "EncodingError U+BF03");
expect(() => {ms932Encoder.encode("\uBF04")}).to.throw(Error, "EncodingError U+BF04");
expect(() => {ms932Encoder.encode("\uBF05")}).to.throw(Error, "EncodingError U+BF05");
expect(() => {ms932Encoder.encode("\uBF06")}).to.throw(Error, "EncodingError U+BF06");
expect(() => {ms932Encoder.encode("\uBF07")}).to.throw(Error, "EncodingError U+BF07");
expect(() => {ms932Encoder.encode("\uBF08")}).to.throw(Error, "EncodingError U+BF08");
expect(() => {ms932Encoder.encode("\uBF09")}).to.throw(Error, "EncodingError U+BF09");
expect(() => {ms932Encoder.encode("\uBF0A")}).to.throw(Error, "EncodingError U+BF0A");
expect(() => {ms932Encoder.encode("\uBF0B")}).to.throw(Error, "EncodingError U+BF0B");
expect(() => {ms932Encoder.encode("\uBF0C")}).to.throw(Error, "EncodingError U+BF0C");
expect(() => {ms932Encoder.encode("\uBF0D")}).to.throw(Error, "EncodingError U+BF0D");
expect(() => {ms932Encoder.encode("\uBF0E")}).to.throw(Error, "EncodingError U+BF0E");
expect(() => {ms932Encoder.encode("\uBF0F")}).to.throw(Error, "EncodingError U+BF0F");
expect(() => {ms932Encoder.encode("\uBF10")}).to.throw(Error, "EncodingError U+BF10");
expect(() => {ms932Encoder.encode("\uBF11")}).to.throw(Error, "EncodingError U+BF11");
expect(() => {ms932Encoder.encode("\uBF12")}).to.throw(Error, "EncodingError U+BF12");
expect(() => {ms932Encoder.encode("\uBF13")}).to.throw(Error, "EncodingError U+BF13");
expect(() => {ms932Encoder.encode("\uBF14")}).to.throw(Error, "EncodingError U+BF14");
expect(() => {ms932Encoder.encode("\uBF15")}).to.throw(Error, "EncodingError U+BF15");
expect(() => {ms932Encoder.encode("\uBF16")}).to.throw(Error, "EncodingError U+BF16");
expect(() => {ms932Encoder.encode("\uBF17")}).to.throw(Error, "EncodingError U+BF17");
expect(() => {ms932Encoder.encode("\uBF18")}).to.throw(Error, "EncodingError U+BF18");
expect(() => {ms932Encoder.encode("\uBF19")}).to.throw(Error, "EncodingError U+BF19");
expect(() => {ms932Encoder.encode("\uBF1A")}).to.throw(Error, "EncodingError U+BF1A");
expect(() => {ms932Encoder.encode("\uBF1B")}).to.throw(Error, "EncodingError U+BF1B");
expect(() => {ms932Encoder.encode("\uBF1C")}).to.throw(Error, "EncodingError U+BF1C");
expect(() => {ms932Encoder.encode("\uBF1D")}).to.throw(Error, "EncodingError U+BF1D");
expect(() => {ms932Encoder.encode("\uBF1E")}).to.throw(Error, "EncodingError U+BF1E");
expect(() => {ms932Encoder.encode("\uBF1F")}).to.throw(Error, "EncodingError U+BF1F");
expect(() => {ms932Encoder.encode("\uBF20")}).to.throw(Error, "EncodingError U+BF20");
expect(() => {ms932Encoder.encode("\uBF21")}).to.throw(Error, "EncodingError U+BF21");
expect(() => {ms932Encoder.encode("\uBF22")}).to.throw(Error, "EncodingError U+BF22");
expect(() => {ms932Encoder.encode("\uBF23")}).to.throw(Error, "EncodingError U+BF23");
expect(() => {ms932Encoder.encode("\uBF24")}).to.throw(Error, "EncodingError U+BF24");
expect(() => {ms932Encoder.encode("\uBF25")}).to.throw(Error, "EncodingError U+BF25");
expect(() => {ms932Encoder.encode("\uBF26")}).to.throw(Error, "EncodingError U+BF26");
expect(() => {ms932Encoder.encode("\uBF27")}).to.throw(Error, "EncodingError U+BF27");
expect(() => {ms932Encoder.encode("\uBF28")}).to.throw(Error, "EncodingError U+BF28");
expect(() => {ms932Encoder.encode("\uBF29")}).to.throw(Error, "EncodingError U+BF29");
expect(() => {ms932Encoder.encode("\uBF2A")}).to.throw(Error, "EncodingError U+BF2A");
expect(() => {ms932Encoder.encode("\uBF2B")}).to.throw(Error, "EncodingError U+BF2B");
expect(() => {ms932Encoder.encode("\uBF2C")}).to.throw(Error, "EncodingError U+BF2C");
expect(() => {ms932Encoder.encode("\uBF2D")}).to.throw(Error, "EncodingError U+BF2D");
expect(() => {ms932Encoder.encode("\uBF2E")}).to.throw(Error, "EncodingError U+BF2E");
expect(() => {ms932Encoder.encode("\uBF2F")}).to.throw(Error, "EncodingError U+BF2F");
expect(() => {ms932Encoder.encode("\uBF30")}).to.throw(Error, "EncodingError U+BF30");
expect(() => {ms932Encoder.encode("\uBF31")}).to.throw(Error, "EncodingError U+BF31");
expect(() => {ms932Encoder.encode("\uBF32")}).to.throw(Error, "EncodingError U+BF32");
expect(() => {ms932Encoder.encode("\uBF33")}).to.throw(Error, "EncodingError U+BF33");
expect(() => {ms932Encoder.encode("\uBF34")}).to.throw(Error, "EncodingError U+BF34");
expect(() => {ms932Encoder.encode("\uBF35")}).to.throw(Error, "EncodingError U+BF35");
expect(() => {ms932Encoder.encode("\uBF36")}).to.throw(Error, "EncodingError U+BF36");
expect(() => {ms932Encoder.encode("\uBF37")}).to.throw(Error, "EncodingError U+BF37");
expect(() => {ms932Encoder.encode("\uBF38")}).to.throw(Error, "EncodingError U+BF38");
expect(() => {ms932Encoder.encode("\uBF39")}).to.throw(Error, "EncodingError U+BF39");
expect(() => {ms932Encoder.encode("\uBF3A")}).to.throw(Error, "EncodingError U+BF3A");
expect(() => {ms932Encoder.encode("\uBF3B")}).to.throw(Error, "EncodingError U+BF3B");
expect(() => {ms932Encoder.encode("\uBF3C")}).to.throw(Error, "EncodingError U+BF3C");
expect(() => {ms932Encoder.encode("\uBF3D")}).to.throw(Error, "EncodingError U+BF3D");
expect(() => {ms932Encoder.encode("\uBF3E")}).to.throw(Error, "EncodingError U+BF3E");
expect(() => {ms932Encoder.encode("\uBF3F")}).to.throw(Error, "EncodingError U+BF3F");
expect(() => {ms932Encoder.encode("\uBF40")}).to.throw(Error, "EncodingError U+BF40");
expect(() => {ms932Encoder.encode("\uBF41")}).to.throw(Error, "EncodingError U+BF41");
expect(() => {ms932Encoder.encode("\uBF42")}).to.throw(Error, "EncodingError U+BF42");
expect(() => {ms932Encoder.encode("\uBF43")}).to.throw(Error, "EncodingError U+BF43");
expect(() => {ms932Encoder.encode("\uBF44")}).to.throw(Error, "EncodingError U+BF44");
expect(() => {ms932Encoder.encode("\uBF45")}).to.throw(Error, "EncodingError U+BF45");
expect(() => {ms932Encoder.encode("\uBF46")}).to.throw(Error, "EncodingError U+BF46");
expect(() => {ms932Encoder.encode("\uBF47")}).to.throw(Error, "EncodingError U+BF47");
expect(() => {ms932Encoder.encode("\uBF48")}).to.throw(Error, "EncodingError U+BF48");
expect(() => {ms932Encoder.encode("\uBF49")}).to.throw(Error, "EncodingError U+BF49");
expect(() => {ms932Encoder.encode("\uBF4A")}).to.throw(Error, "EncodingError U+BF4A");
expect(() => {ms932Encoder.encode("\uBF4B")}).to.throw(Error, "EncodingError U+BF4B");
expect(() => {ms932Encoder.encode("\uBF4C")}).to.throw(Error, "EncodingError U+BF4C");
expect(() => {ms932Encoder.encode("\uBF4D")}).to.throw(Error, "EncodingError U+BF4D");
expect(() => {ms932Encoder.encode("\uBF4E")}).to.throw(Error, "EncodingError U+BF4E");
expect(() => {ms932Encoder.encode("\uBF4F")}).to.throw(Error, "EncodingError U+BF4F");
expect(() => {ms932Encoder.encode("\uBF50")}).to.throw(Error, "EncodingError U+BF50");
expect(() => {ms932Encoder.encode("\uBF51")}).to.throw(Error, "EncodingError U+BF51");
expect(() => {ms932Encoder.encode("\uBF52")}).to.throw(Error, "EncodingError U+BF52");
expect(() => {ms932Encoder.encode("\uBF53")}).to.throw(Error, "EncodingError U+BF53");
expect(() => {ms932Encoder.encode("\uBF54")}).to.throw(Error, "EncodingError U+BF54");
expect(() => {ms932Encoder.encode("\uBF55")}).to.throw(Error, "EncodingError U+BF55");
expect(() => {ms932Encoder.encode("\uBF56")}).to.throw(Error, "EncodingError U+BF56");
expect(() => {ms932Encoder.encode("\uBF57")}).to.throw(Error, "EncodingError U+BF57");
expect(() => {ms932Encoder.encode("\uBF58")}).to.throw(Error, "EncodingError U+BF58");
expect(() => {ms932Encoder.encode("\uBF59")}).to.throw(Error, "EncodingError U+BF59");
expect(() => {ms932Encoder.encode("\uBF5A")}).to.throw(Error, "EncodingError U+BF5A");
expect(() => {ms932Encoder.encode("\uBF5B")}).to.throw(Error, "EncodingError U+BF5B");
expect(() => {ms932Encoder.encode("\uBF5C")}).to.throw(Error, "EncodingError U+BF5C");
expect(() => {ms932Encoder.encode("\uBF5D")}).to.throw(Error, "EncodingError U+BF5D");
expect(() => {ms932Encoder.encode("\uBF5E")}).to.throw(Error, "EncodingError U+BF5E");
expect(() => {ms932Encoder.encode("\uBF5F")}).to.throw(Error, "EncodingError U+BF5F");
expect(() => {ms932Encoder.encode("\uBF60")}).to.throw(Error, "EncodingError U+BF60");
expect(() => {ms932Encoder.encode("\uBF61")}).to.throw(Error, "EncodingError U+BF61");
expect(() => {ms932Encoder.encode("\uBF62")}).to.throw(Error, "EncodingError U+BF62");
expect(() => {ms932Encoder.encode("\uBF63")}).to.throw(Error, "EncodingError U+BF63");
expect(() => {ms932Encoder.encode("\uBF64")}).to.throw(Error, "EncodingError U+BF64");
expect(() => {ms932Encoder.encode("\uBF65")}).to.throw(Error, "EncodingError U+BF65");
expect(() => {ms932Encoder.encode("\uBF66")}).to.throw(Error, "EncodingError U+BF66");
expect(() => {ms932Encoder.encode("\uBF67")}).to.throw(Error, "EncodingError U+BF67");
expect(() => {ms932Encoder.encode("\uBF68")}).to.throw(Error, "EncodingError U+BF68");
expect(() => {ms932Encoder.encode("\uBF69")}).to.throw(Error, "EncodingError U+BF69");
expect(() => {ms932Encoder.encode("\uBF6A")}).to.throw(Error, "EncodingError U+BF6A");
expect(() => {ms932Encoder.encode("\uBF6B")}).to.throw(Error, "EncodingError U+BF6B");
expect(() => {ms932Encoder.encode("\uBF6C")}).to.throw(Error, "EncodingError U+BF6C");
expect(() => {ms932Encoder.encode("\uBF6D")}).to.throw(Error, "EncodingError U+BF6D");
expect(() => {ms932Encoder.encode("\uBF6E")}).to.throw(Error, "EncodingError U+BF6E");
expect(() => {ms932Encoder.encode("\uBF6F")}).to.throw(Error, "EncodingError U+BF6F");
expect(() => {ms932Encoder.encode("\uBF70")}).to.throw(Error, "EncodingError U+BF70");
expect(() => {ms932Encoder.encode("\uBF71")}).to.throw(Error, "EncodingError U+BF71");
expect(() => {ms932Encoder.encode("\uBF72")}).to.throw(Error, "EncodingError U+BF72");
expect(() => {ms932Encoder.encode("\uBF73")}).to.throw(Error, "EncodingError U+BF73");
expect(() => {ms932Encoder.encode("\uBF74")}).to.throw(Error, "EncodingError U+BF74");
expect(() => {ms932Encoder.encode("\uBF75")}).to.throw(Error, "EncodingError U+BF75");
expect(() => {ms932Encoder.encode("\uBF76")}).to.throw(Error, "EncodingError U+BF76");
expect(() => {ms932Encoder.encode("\uBF77")}).to.throw(Error, "EncodingError U+BF77");
expect(() => {ms932Encoder.encode("\uBF78")}).to.throw(Error, "EncodingError U+BF78");
expect(() => {ms932Encoder.encode("\uBF79")}).to.throw(Error, "EncodingError U+BF79");
expect(() => {ms932Encoder.encode("\uBF7A")}).to.throw(Error, "EncodingError U+BF7A");
expect(() => {ms932Encoder.encode("\uBF7B")}).to.throw(Error, "EncodingError U+BF7B");
expect(() => {ms932Encoder.encode("\uBF7C")}).to.throw(Error, "EncodingError U+BF7C");
expect(() => {ms932Encoder.encode("\uBF7D")}).to.throw(Error, "EncodingError U+BF7D");
expect(() => {ms932Encoder.encode("\uBF7E")}).to.throw(Error, "EncodingError U+BF7E");
expect(() => {ms932Encoder.encode("\uBF7F")}).to.throw(Error, "EncodingError U+BF7F");
expect(() => {ms932Encoder.encode("\uBF80")}).to.throw(Error, "EncodingError U+BF80");
expect(() => {ms932Encoder.encode("\uBF81")}).to.throw(Error, "EncodingError U+BF81");
expect(() => {ms932Encoder.encode("\uBF82")}).to.throw(Error, "EncodingError U+BF82");
expect(() => {ms932Encoder.encode("\uBF83")}).to.throw(Error, "EncodingError U+BF83");
expect(() => {ms932Encoder.encode("\uBF84")}).to.throw(Error, "EncodingError U+BF84");
expect(() => {ms932Encoder.encode("\uBF85")}).to.throw(Error, "EncodingError U+BF85");
expect(() => {ms932Encoder.encode("\uBF86")}).to.throw(Error, "EncodingError U+BF86");
expect(() => {ms932Encoder.encode("\uBF87")}).to.throw(Error, "EncodingError U+BF87");
expect(() => {ms932Encoder.encode("\uBF88")}).to.throw(Error, "EncodingError U+BF88");
expect(() => {ms932Encoder.encode("\uBF89")}).to.throw(Error, "EncodingError U+BF89");
expect(() => {ms932Encoder.encode("\uBF8A")}).to.throw(Error, "EncodingError U+BF8A");
expect(() => {ms932Encoder.encode("\uBF8B")}).to.throw(Error, "EncodingError U+BF8B");
expect(() => {ms932Encoder.encode("\uBF8C")}).to.throw(Error, "EncodingError U+BF8C");
expect(() => {ms932Encoder.encode("\uBF8D")}).to.throw(Error, "EncodingError U+BF8D");
expect(() => {ms932Encoder.encode("\uBF8E")}).to.throw(Error, "EncodingError U+BF8E");
expect(() => {ms932Encoder.encode("\uBF8F")}).to.throw(Error, "EncodingError U+BF8F");
expect(() => {ms932Encoder.encode("\uBF90")}).to.throw(Error, "EncodingError U+BF90");
expect(() => {ms932Encoder.encode("\uBF91")}).to.throw(Error, "EncodingError U+BF91");
expect(() => {ms932Encoder.encode("\uBF92")}).to.throw(Error, "EncodingError U+BF92");
expect(() => {ms932Encoder.encode("\uBF93")}).to.throw(Error, "EncodingError U+BF93");
expect(() => {ms932Encoder.encode("\uBF94")}).to.throw(Error, "EncodingError U+BF94");
expect(() => {ms932Encoder.encode("\uBF95")}).to.throw(Error, "EncodingError U+BF95");
expect(() => {ms932Encoder.encode("\uBF96")}).to.throw(Error, "EncodingError U+BF96");
expect(() => {ms932Encoder.encode("\uBF97")}).to.throw(Error, "EncodingError U+BF97");
expect(() => {ms932Encoder.encode("\uBF98")}).to.throw(Error, "EncodingError U+BF98");
expect(() => {ms932Encoder.encode("\uBF99")}).to.throw(Error, "EncodingError U+BF99");
expect(() => {ms932Encoder.encode("\uBF9A")}).to.throw(Error, "EncodingError U+BF9A");
expect(() => {ms932Encoder.encode("\uBF9B")}).to.throw(Error, "EncodingError U+BF9B");
expect(() => {ms932Encoder.encode("\uBF9C")}).to.throw(Error, "EncodingError U+BF9C");
expect(() => {ms932Encoder.encode("\uBF9D")}).to.throw(Error, "EncodingError U+BF9D");
expect(() => {ms932Encoder.encode("\uBF9E")}).to.throw(Error, "EncodingError U+BF9E");
expect(() => {ms932Encoder.encode("\uBF9F")}).to.throw(Error, "EncodingError U+BF9F");
expect(() => {ms932Encoder.encode("\uBFA0")}).to.throw(Error, "EncodingError U+BFA0");
expect(() => {ms932Encoder.encode("\uBFA1")}).to.throw(Error, "EncodingError U+BFA1");
expect(() => {ms932Encoder.encode("\uBFA2")}).to.throw(Error, "EncodingError U+BFA2");
expect(() => {ms932Encoder.encode("\uBFA3")}).to.throw(Error, "EncodingError U+BFA3");
expect(() => {ms932Encoder.encode("\uBFA4")}).to.throw(Error, "EncodingError U+BFA4");
expect(() => {ms932Encoder.encode("\uBFA5")}).to.throw(Error, "EncodingError U+BFA5");
expect(() => {ms932Encoder.encode("\uBFA6")}).to.throw(Error, "EncodingError U+BFA6");
expect(() => {ms932Encoder.encode("\uBFA7")}).to.throw(Error, "EncodingError U+BFA7");
expect(() => {ms932Encoder.encode("\uBFA8")}).to.throw(Error, "EncodingError U+BFA8");
expect(() => {ms932Encoder.encode("\uBFA9")}).to.throw(Error, "EncodingError U+BFA9");
expect(() => {ms932Encoder.encode("\uBFAA")}).to.throw(Error, "EncodingError U+BFAA");
expect(() => {ms932Encoder.encode("\uBFAB")}).to.throw(Error, "EncodingError U+BFAB");
expect(() => {ms932Encoder.encode("\uBFAC")}).to.throw(Error, "EncodingError U+BFAC");
expect(() => {ms932Encoder.encode("\uBFAD")}).to.throw(Error, "EncodingError U+BFAD");
expect(() => {ms932Encoder.encode("\uBFAE")}).to.throw(Error, "EncodingError U+BFAE");
expect(() => {ms932Encoder.encode("\uBFAF")}).to.throw(Error, "EncodingError U+BFAF");
expect(() => {ms932Encoder.encode("\uBFB0")}).to.throw(Error, "EncodingError U+BFB0");
expect(() => {ms932Encoder.encode("\uBFB1")}).to.throw(Error, "EncodingError U+BFB1");
expect(() => {ms932Encoder.encode("\uBFB2")}).to.throw(Error, "EncodingError U+BFB2");
expect(() => {ms932Encoder.encode("\uBFB3")}).to.throw(Error, "EncodingError U+BFB3");
expect(() => {ms932Encoder.encode("\uBFB4")}).to.throw(Error, "EncodingError U+BFB4");
expect(() => {ms932Encoder.encode("\uBFB5")}).to.throw(Error, "EncodingError U+BFB5");
expect(() => {ms932Encoder.encode("\uBFB6")}).to.throw(Error, "EncodingError U+BFB6");
expect(() => {ms932Encoder.encode("\uBFB7")}).to.throw(Error, "EncodingError U+BFB7");
expect(() => {ms932Encoder.encode("\uBFB8")}).to.throw(Error, "EncodingError U+BFB8");
expect(() => {ms932Encoder.encode("\uBFB9")}).to.throw(Error, "EncodingError U+BFB9");
expect(() => {ms932Encoder.encode("\uBFBA")}).to.throw(Error, "EncodingError U+BFBA");
expect(() => {ms932Encoder.encode("\uBFBB")}).to.throw(Error, "EncodingError U+BFBB");
expect(() => {ms932Encoder.encode("\uBFBC")}).to.throw(Error, "EncodingError U+BFBC");
expect(() => {ms932Encoder.encode("\uBFBD")}).to.throw(Error, "EncodingError U+BFBD");
expect(() => {ms932Encoder.encode("\uBFBE")}).to.throw(Error, "EncodingError U+BFBE");
expect(() => {ms932Encoder.encode("\uBFBF")}).to.throw(Error, "EncodingError U+BFBF");
expect(() => {ms932Encoder.encode("\uBFC0")}).to.throw(Error, "EncodingError U+BFC0");
expect(() => {ms932Encoder.encode("\uBFC1")}).to.throw(Error, "EncodingError U+BFC1");
expect(() => {ms932Encoder.encode("\uBFC2")}).to.throw(Error, "EncodingError U+BFC2");
expect(() => {ms932Encoder.encode("\uBFC3")}).to.throw(Error, "EncodingError U+BFC3");
expect(() => {ms932Encoder.encode("\uBFC4")}).to.throw(Error, "EncodingError U+BFC4");
expect(() => {ms932Encoder.encode("\uBFC5")}).to.throw(Error, "EncodingError U+BFC5");
expect(() => {ms932Encoder.encode("\uBFC6")}).to.throw(Error, "EncodingError U+BFC6");
expect(() => {ms932Encoder.encode("\uBFC7")}).to.throw(Error, "EncodingError U+BFC7");
expect(() => {ms932Encoder.encode("\uBFC8")}).to.throw(Error, "EncodingError U+BFC8");
expect(() => {ms932Encoder.encode("\uBFC9")}).to.throw(Error, "EncodingError U+BFC9");
expect(() => {ms932Encoder.encode("\uBFCA")}).to.throw(Error, "EncodingError U+BFCA");
expect(() => {ms932Encoder.encode("\uBFCB")}).to.throw(Error, "EncodingError U+BFCB");
expect(() => {ms932Encoder.encode("\uBFCC")}).to.throw(Error, "EncodingError U+BFCC");
expect(() => {ms932Encoder.encode("\uBFCD")}).to.throw(Error, "EncodingError U+BFCD");
expect(() => {ms932Encoder.encode("\uBFCE")}).to.throw(Error, "EncodingError U+BFCE");
expect(() => {ms932Encoder.encode("\uBFCF")}).to.throw(Error, "EncodingError U+BFCF");
expect(() => {ms932Encoder.encode("\uBFD0")}).to.throw(Error, "EncodingError U+BFD0");
expect(() => {ms932Encoder.encode("\uBFD1")}).to.throw(Error, "EncodingError U+BFD1");
expect(() => {ms932Encoder.encode("\uBFD2")}).to.throw(Error, "EncodingError U+BFD2");
expect(() => {ms932Encoder.encode("\uBFD3")}).to.throw(Error, "EncodingError U+BFD3");
expect(() => {ms932Encoder.encode("\uBFD4")}).to.throw(Error, "EncodingError U+BFD4");
expect(() => {ms932Encoder.encode("\uBFD5")}).to.throw(Error, "EncodingError U+BFD5");
expect(() => {ms932Encoder.encode("\uBFD6")}).to.throw(Error, "EncodingError U+BFD6");
expect(() => {ms932Encoder.encode("\uBFD7")}).to.throw(Error, "EncodingError U+BFD7");
expect(() => {ms932Encoder.encode("\uBFD8")}).to.throw(Error, "EncodingError U+BFD8");
expect(() => {ms932Encoder.encode("\uBFD9")}).to.throw(Error, "EncodingError U+BFD9");
expect(() => {ms932Encoder.encode("\uBFDA")}).to.throw(Error, "EncodingError U+BFDA");
expect(() => {ms932Encoder.encode("\uBFDB")}).to.throw(Error, "EncodingError U+BFDB");
expect(() => {ms932Encoder.encode("\uBFDC")}).to.throw(Error, "EncodingError U+BFDC");
expect(() => {ms932Encoder.encode("\uBFDD")}).to.throw(Error, "EncodingError U+BFDD");
expect(() => {ms932Encoder.encode("\uBFDE")}).to.throw(Error, "EncodingError U+BFDE");
expect(() => {ms932Encoder.encode("\uBFDF")}).to.throw(Error, "EncodingError U+BFDF");
expect(() => {ms932Encoder.encode("\uBFE0")}).to.throw(Error, "EncodingError U+BFE0");
expect(() => {ms932Encoder.encode("\uBFE1")}).to.throw(Error, "EncodingError U+BFE1");
expect(() => {ms932Encoder.encode("\uBFE2")}).to.throw(Error, "EncodingError U+BFE2");
expect(() => {ms932Encoder.encode("\uBFE3")}).to.throw(Error, "EncodingError U+BFE3");
expect(() => {ms932Encoder.encode("\uBFE4")}).to.throw(Error, "EncodingError U+BFE4");
expect(() => {ms932Encoder.encode("\uBFE5")}).to.throw(Error, "EncodingError U+BFE5");
expect(() => {ms932Encoder.encode("\uBFE6")}).to.throw(Error, "EncodingError U+BFE6");
expect(() => {ms932Encoder.encode("\uBFE7")}).to.throw(Error, "EncodingError U+BFE7");
expect(() => {ms932Encoder.encode("\uBFE8")}).to.throw(Error, "EncodingError U+BFE8");
expect(() => {ms932Encoder.encode("\uBFE9")}).to.throw(Error, "EncodingError U+BFE9");
expect(() => {ms932Encoder.encode("\uBFEA")}).to.throw(Error, "EncodingError U+BFEA");
expect(() => {ms932Encoder.encode("\uBFEB")}).to.throw(Error, "EncodingError U+BFEB");
expect(() => {ms932Encoder.encode("\uBFEC")}).to.throw(Error, "EncodingError U+BFEC");
expect(() => {ms932Encoder.encode("\uBFED")}).to.throw(Error, "EncodingError U+BFED");
expect(() => {ms932Encoder.encode("\uBFEE")}).to.throw(Error, "EncodingError U+BFEE");
expect(() => {ms932Encoder.encode("\uBFEF")}).to.throw(Error, "EncodingError U+BFEF");
expect(() => {ms932Encoder.encode("\uBFF0")}).to.throw(Error, "EncodingError U+BFF0");
expect(() => {ms932Encoder.encode("\uBFF1")}).to.throw(Error, "EncodingError U+BFF1");
expect(() => {ms932Encoder.encode("\uBFF2")}).to.throw(Error, "EncodingError U+BFF2");
expect(() => {ms932Encoder.encode("\uBFF3")}).to.throw(Error, "EncodingError U+BFF3");
expect(() => {ms932Encoder.encode("\uBFF4")}).to.throw(Error, "EncodingError U+BFF4");
expect(() => {ms932Encoder.encode("\uBFF5")}).to.throw(Error, "EncodingError U+BFF5");
expect(() => {ms932Encoder.encode("\uBFF6")}).to.throw(Error, "EncodingError U+BFF6");
expect(() => {ms932Encoder.encode("\uBFF7")}).to.throw(Error, "EncodingError U+BFF7");
expect(() => {ms932Encoder.encode("\uBFF8")}).to.throw(Error, "EncodingError U+BFF8");
expect(() => {ms932Encoder.encode("\uBFF9")}).to.throw(Error, "EncodingError U+BFF9");
expect(() => {ms932Encoder.encode("\uBFFA")}).to.throw(Error, "EncodingError U+BFFA");
expect(() => {ms932Encoder.encode("\uBFFB")}).to.throw(Error, "EncodingError U+BFFB");
expect(() => {ms932Encoder.encode("\uBFFC")}).to.throw(Error, "EncodingError U+BFFC");
expect(() => {ms932Encoder.encode("\uBFFD")}).to.throw(Error, "EncodingError U+BFFD");
expect(() => {ms932Encoder.encode("\uBFFE")}).to.throw(Error, "EncodingError U+BFFE");
expect(() => {ms932Encoder.encode("\uBFFF")}).to.throw(Error, "EncodingError U+BFFF");

  });

});
