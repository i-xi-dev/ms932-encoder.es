import { expect } from '@esm-bundle/chai';
import { Ms932 } from "../../dist/index.js";

describe("Ms932.Encoder.prototype.encode 11", () => {

  it("encode(string) - U+A000-U+AFFF", () => {
    const ms932Encoder = new Ms932.Encoder({fatal:true});

expect(() => {ms932Encoder.encode("\uA000")}).to.throw(Error, "EncodingError U+A000");
expect(() => {ms932Encoder.encode("\uA001")}).to.throw(Error, "EncodingError U+A001");
expect(() => {ms932Encoder.encode("\uA002")}).to.throw(Error, "EncodingError U+A002");
expect(() => {ms932Encoder.encode("\uA003")}).to.throw(Error, "EncodingError U+A003");
expect(() => {ms932Encoder.encode("\uA004")}).to.throw(Error, "EncodingError U+A004");
expect(() => {ms932Encoder.encode("\uA005")}).to.throw(Error, "EncodingError U+A005");
expect(() => {ms932Encoder.encode("\uA006")}).to.throw(Error, "EncodingError U+A006");
expect(() => {ms932Encoder.encode("\uA007")}).to.throw(Error, "EncodingError U+A007");
expect(() => {ms932Encoder.encode("\uA008")}).to.throw(Error, "EncodingError U+A008");
expect(() => {ms932Encoder.encode("\uA009")}).to.throw(Error, "EncodingError U+A009");
expect(() => {ms932Encoder.encode("\uA00A")}).to.throw(Error, "EncodingError U+A00A");
expect(() => {ms932Encoder.encode("\uA00B")}).to.throw(Error, "EncodingError U+A00B");
expect(() => {ms932Encoder.encode("\uA00C")}).to.throw(Error, "EncodingError U+A00C");
expect(() => {ms932Encoder.encode("\uA00D")}).to.throw(Error, "EncodingError U+A00D");
expect(() => {ms932Encoder.encode("\uA00E")}).to.throw(Error, "EncodingError U+A00E");
expect(() => {ms932Encoder.encode("\uA00F")}).to.throw(Error, "EncodingError U+A00F");
expect(() => {ms932Encoder.encode("\uA010")}).to.throw(Error, "EncodingError U+A010");
expect(() => {ms932Encoder.encode("\uA011")}).to.throw(Error, "EncodingError U+A011");
expect(() => {ms932Encoder.encode("\uA012")}).to.throw(Error, "EncodingError U+A012");
expect(() => {ms932Encoder.encode("\uA013")}).to.throw(Error, "EncodingError U+A013");
expect(() => {ms932Encoder.encode("\uA014")}).to.throw(Error, "EncodingError U+A014");
expect(() => {ms932Encoder.encode("\uA015")}).to.throw(Error, "EncodingError U+A015");
expect(() => {ms932Encoder.encode("\uA016")}).to.throw(Error, "EncodingError U+A016");
expect(() => {ms932Encoder.encode("\uA017")}).to.throw(Error, "EncodingError U+A017");
expect(() => {ms932Encoder.encode("\uA018")}).to.throw(Error, "EncodingError U+A018");
expect(() => {ms932Encoder.encode("\uA019")}).to.throw(Error, "EncodingError U+A019");
expect(() => {ms932Encoder.encode("\uA01A")}).to.throw(Error, "EncodingError U+A01A");
expect(() => {ms932Encoder.encode("\uA01B")}).to.throw(Error, "EncodingError U+A01B");
expect(() => {ms932Encoder.encode("\uA01C")}).to.throw(Error, "EncodingError U+A01C");
expect(() => {ms932Encoder.encode("\uA01D")}).to.throw(Error, "EncodingError U+A01D");
expect(() => {ms932Encoder.encode("\uA01E")}).to.throw(Error, "EncodingError U+A01E");
expect(() => {ms932Encoder.encode("\uA01F")}).to.throw(Error, "EncodingError U+A01F");
expect(() => {ms932Encoder.encode("\uA020")}).to.throw(Error, "EncodingError U+A020");
expect(() => {ms932Encoder.encode("\uA021")}).to.throw(Error, "EncodingError U+A021");
expect(() => {ms932Encoder.encode("\uA022")}).to.throw(Error, "EncodingError U+A022");
expect(() => {ms932Encoder.encode("\uA023")}).to.throw(Error, "EncodingError U+A023");
expect(() => {ms932Encoder.encode("\uA024")}).to.throw(Error, "EncodingError U+A024");
expect(() => {ms932Encoder.encode("\uA025")}).to.throw(Error, "EncodingError U+A025");
expect(() => {ms932Encoder.encode("\uA026")}).to.throw(Error, "EncodingError U+A026");
expect(() => {ms932Encoder.encode("\uA027")}).to.throw(Error, "EncodingError U+A027");
expect(() => {ms932Encoder.encode("\uA028")}).to.throw(Error, "EncodingError U+A028");
expect(() => {ms932Encoder.encode("\uA029")}).to.throw(Error, "EncodingError U+A029");
expect(() => {ms932Encoder.encode("\uA02A")}).to.throw(Error, "EncodingError U+A02A");
expect(() => {ms932Encoder.encode("\uA02B")}).to.throw(Error, "EncodingError U+A02B");
expect(() => {ms932Encoder.encode("\uA02C")}).to.throw(Error, "EncodingError U+A02C");
expect(() => {ms932Encoder.encode("\uA02D")}).to.throw(Error, "EncodingError U+A02D");
expect(() => {ms932Encoder.encode("\uA02E")}).to.throw(Error, "EncodingError U+A02E");
expect(() => {ms932Encoder.encode("\uA02F")}).to.throw(Error, "EncodingError U+A02F");
expect(() => {ms932Encoder.encode("\uA030")}).to.throw(Error, "EncodingError U+A030");
expect(() => {ms932Encoder.encode("\uA031")}).to.throw(Error, "EncodingError U+A031");
expect(() => {ms932Encoder.encode("\uA032")}).to.throw(Error, "EncodingError U+A032");
expect(() => {ms932Encoder.encode("\uA033")}).to.throw(Error, "EncodingError U+A033");
expect(() => {ms932Encoder.encode("\uA034")}).to.throw(Error, "EncodingError U+A034");
expect(() => {ms932Encoder.encode("\uA035")}).to.throw(Error, "EncodingError U+A035");
expect(() => {ms932Encoder.encode("\uA036")}).to.throw(Error, "EncodingError U+A036");
expect(() => {ms932Encoder.encode("\uA037")}).to.throw(Error, "EncodingError U+A037");
expect(() => {ms932Encoder.encode("\uA038")}).to.throw(Error, "EncodingError U+A038");
expect(() => {ms932Encoder.encode("\uA039")}).to.throw(Error, "EncodingError U+A039");
expect(() => {ms932Encoder.encode("\uA03A")}).to.throw(Error, "EncodingError U+A03A");
expect(() => {ms932Encoder.encode("\uA03B")}).to.throw(Error, "EncodingError U+A03B");
expect(() => {ms932Encoder.encode("\uA03C")}).to.throw(Error, "EncodingError U+A03C");
expect(() => {ms932Encoder.encode("\uA03D")}).to.throw(Error, "EncodingError U+A03D");
expect(() => {ms932Encoder.encode("\uA03E")}).to.throw(Error, "EncodingError U+A03E");
expect(() => {ms932Encoder.encode("\uA03F")}).to.throw(Error, "EncodingError U+A03F");
expect(() => {ms932Encoder.encode("\uA040")}).to.throw(Error, "EncodingError U+A040");
expect(() => {ms932Encoder.encode("\uA041")}).to.throw(Error, "EncodingError U+A041");
expect(() => {ms932Encoder.encode("\uA042")}).to.throw(Error, "EncodingError U+A042");
expect(() => {ms932Encoder.encode("\uA043")}).to.throw(Error, "EncodingError U+A043");
expect(() => {ms932Encoder.encode("\uA044")}).to.throw(Error, "EncodingError U+A044");
expect(() => {ms932Encoder.encode("\uA045")}).to.throw(Error, "EncodingError U+A045");
expect(() => {ms932Encoder.encode("\uA046")}).to.throw(Error, "EncodingError U+A046");
expect(() => {ms932Encoder.encode("\uA047")}).to.throw(Error, "EncodingError U+A047");
expect(() => {ms932Encoder.encode("\uA048")}).to.throw(Error, "EncodingError U+A048");
expect(() => {ms932Encoder.encode("\uA049")}).to.throw(Error, "EncodingError U+A049");
expect(() => {ms932Encoder.encode("\uA04A")}).to.throw(Error, "EncodingError U+A04A");
expect(() => {ms932Encoder.encode("\uA04B")}).to.throw(Error, "EncodingError U+A04B");
expect(() => {ms932Encoder.encode("\uA04C")}).to.throw(Error, "EncodingError U+A04C");
expect(() => {ms932Encoder.encode("\uA04D")}).to.throw(Error, "EncodingError U+A04D");
expect(() => {ms932Encoder.encode("\uA04E")}).to.throw(Error, "EncodingError U+A04E");
expect(() => {ms932Encoder.encode("\uA04F")}).to.throw(Error, "EncodingError U+A04F");
expect(() => {ms932Encoder.encode("\uA050")}).to.throw(Error, "EncodingError U+A050");
expect(() => {ms932Encoder.encode("\uA051")}).to.throw(Error, "EncodingError U+A051");
expect(() => {ms932Encoder.encode("\uA052")}).to.throw(Error, "EncodingError U+A052");
expect(() => {ms932Encoder.encode("\uA053")}).to.throw(Error, "EncodingError U+A053");
expect(() => {ms932Encoder.encode("\uA054")}).to.throw(Error, "EncodingError U+A054");
expect(() => {ms932Encoder.encode("\uA055")}).to.throw(Error, "EncodingError U+A055");
expect(() => {ms932Encoder.encode("\uA056")}).to.throw(Error, "EncodingError U+A056");
expect(() => {ms932Encoder.encode("\uA057")}).to.throw(Error, "EncodingError U+A057");
expect(() => {ms932Encoder.encode("\uA058")}).to.throw(Error, "EncodingError U+A058");
expect(() => {ms932Encoder.encode("\uA059")}).to.throw(Error, "EncodingError U+A059");
expect(() => {ms932Encoder.encode("\uA05A")}).to.throw(Error, "EncodingError U+A05A");
expect(() => {ms932Encoder.encode("\uA05B")}).to.throw(Error, "EncodingError U+A05B");
expect(() => {ms932Encoder.encode("\uA05C")}).to.throw(Error, "EncodingError U+A05C");
expect(() => {ms932Encoder.encode("\uA05D")}).to.throw(Error, "EncodingError U+A05D");
expect(() => {ms932Encoder.encode("\uA05E")}).to.throw(Error, "EncodingError U+A05E");
expect(() => {ms932Encoder.encode("\uA05F")}).to.throw(Error, "EncodingError U+A05F");
expect(() => {ms932Encoder.encode("\uA060")}).to.throw(Error, "EncodingError U+A060");
expect(() => {ms932Encoder.encode("\uA061")}).to.throw(Error, "EncodingError U+A061");
expect(() => {ms932Encoder.encode("\uA062")}).to.throw(Error, "EncodingError U+A062");
expect(() => {ms932Encoder.encode("\uA063")}).to.throw(Error, "EncodingError U+A063");
expect(() => {ms932Encoder.encode("\uA064")}).to.throw(Error, "EncodingError U+A064");
expect(() => {ms932Encoder.encode("\uA065")}).to.throw(Error, "EncodingError U+A065");
expect(() => {ms932Encoder.encode("\uA066")}).to.throw(Error, "EncodingError U+A066");
expect(() => {ms932Encoder.encode("\uA067")}).to.throw(Error, "EncodingError U+A067");
expect(() => {ms932Encoder.encode("\uA068")}).to.throw(Error, "EncodingError U+A068");
expect(() => {ms932Encoder.encode("\uA069")}).to.throw(Error, "EncodingError U+A069");
expect(() => {ms932Encoder.encode("\uA06A")}).to.throw(Error, "EncodingError U+A06A");
expect(() => {ms932Encoder.encode("\uA06B")}).to.throw(Error, "EncodingError U+A06B");
expect(() => {ms932Encoder.encode("\uA06C")}).to.throw(Error, "EncodingError U+A06C");
expect(() => {ms932Encoder.encode("\uA06D")}).to.throw(Error, "EncodingError U+A06D");
expect(() => {ms932Encoder.encode("\uA06E")}).to.throw(Error, "EncodingError U+A06E");
expect(() => {ms932Encoder.encode("\uA06F")}).to.throw(Error, "EncodingError U+A06F");
expect(() => {ms932Encoder.encode("\uA070")}).to.throw(Error, "EncodingError U+A070");
expect(() => {ms932Encoder.encode("\uA071")}).to.throw(Error, "EncodingError U+A071");
expect(() => {ms932Encoder.encode("\uA072")}).to.throw(Error, "EncodingError U+A072");
expect(() => {ms932Encoder.encode("\uA073")}).to.throw(Error, "EncodingError U+A073");
expect(() => {ms932Encoder.encode("\uA074")}).to.throw(Error, "EncodingError U+A074");
expect(() => {ms932Encoder.encode("\uA075")}).to.throw(Error, "EncodingError U+A075");
expect(() => {ms932Encoder.encode("\uA076")}).to.throw(Error, "EncodingError U+A076");
expect(() => {ms932Encoder.encode("\uA077")}).to.throw(Error, "EncodingError U+A077");
expect(() => {ms932Encoder.encode("\uA078")}).to.throw(Error, "EncodingError U+A078");
expect(() => {ms932Encoder.encode("\uA079")}).to.throw(Error, "EncodingError U+A079");
expect(() => {ms932Encoder.encode("\uA07A")}).to.throw(Error, "EncodingError U+A07A");
expect(() => {ms932Encoder.encode("\uA07B")}).to.throw(Error, "EncodingError U+A07B");
expect(() => {ms932Encoder.encode("\uA07C")}).to.throw(Error, "EncodingError U+A07C");
expect(() => {ms932Encoder.encode("\uA07D")}).to.throw(Error, "EncodingError U+A07D");
expect(() => {ms932Encoder.encode("\uA07E")}).to.throw(Error, "EncodingError U+A07E");
expect(() => {ms932Encoder.encode("\uA07F")}).to.throw(Error, "EncodingError U+A07F");
expect(() => {ms932Encoder.encode("\uA080")}).to.throw(Error, "EncodingError U+A080");
expect(() => {ms932Encoder.encode("\uA081")}).to.throw(Error, "EncodingError U+A081");
expect(() => {ms932Encoder.encode("\uA082")}).to.throw(Error, "EncodingError U+A082");
expect(() => {ms932Encoder.encode("\uA083")}).to.throw(Error, "EncodingError U+A083");
expect(() => {ms932Encoder.encode("\uA084")}).to.throw(Error, "EncodingError U+A084");
expect(() => {ms932Encoder.encode("\uA085")}).to.throw(Error, "EncodingError U+A085");
expect(() => {ms932Encoder.encode("\uA086")}).to.throw(Error, "EncodingError U+A086");
expect(() => {ms932Encoder.encode("\uA087")}).to.throw(Error, "EncodingError U+A087");
expect(() => {ms932Encoder.encode("\uA088")}).to.throw(Error, "EncodingError U+A088");
expect(() => {ms932Encoder.encode("\uA089")}).to.throw(Error, "EncodingError U+A089");
expect(() => {ms932Encoder.encode("\uA08A")}).to.throw(Error, "EncodingError U+A08A");
expect(() => {ms932Encoder.encode("\uA08B")}).to.throw(Error, "EncodingError U+A08B");
expect(() => {ms932Encoder.encode("\uA08C")}).to.throw(Error, "EncodingError U+A08C");
expect(() => {ms932Encoder.encode("\uA08D")}).to.throw(Error, "EncodingError U+A08D");
expect(() => {ms932Encoder.encode("\uA08E")}).to.throw(Error, "EncodingError U+A08E");
expect(() => {ms932Encoder.encode("\uA08F")}).to.throw(Error, "EncodingError U+A08F");
expect(() => {ms932Encoder.encode("\uA090")}).to.throw(Error, "EncodingError U+A090");
expect(() => {ms932Encoder.encode("\uA091")}).to.throw(Error, "EncodingError U+A091");
expect(() => {ms932Encoder.encode("\uA092")}).to.throw(Error, "EncodingError U+A092");
expect(() => {ms932Encoder.encode("\uA093")}).to.throw(Error, "EncodingError U+A093");
expect(() => {ms932Encoder.encode("\uA094")}).to.throw(Error, "EncodingError U+A094");
expect(() => {ms932Encoder.encode("\uA095")}).to.throw(Error, "EncodingError U+A095");
expect(() => {ms932Encoder.encode("\uA096")}).to.throw(Error, "EncodingError U+A096");
expect(() => {ms932Encoder.encode("\uA097")}).to.throw(Error, "EncodingError U+A097");
expect(() => {ms932Encoder.encode("\uA098")}).to.throw(Error, "EncodingError U+A098");
expect(() => {ms932Encoder.encode("\uA099")}).to.throw(Error, "EncodingError U+A099");
expect(() => {ms932Encoder.encode("\uA09A")}).to.throw(Error, "EncodingError U+A09A");
expect(() => {ms932Encoder.encode("\uA09B")}).to.throw(Error, "EncodingError U+A09B");
expect(() => {ms932Encoder.encode("\uA09C")}).to.throw(Error, "EncodingError U+A09C");
expect(() => {ms932Encoder.encode("\uA09D")}).to.throw(Error, "EncodingError U+A09D");
expect(() => {ms932Encoder.encode("\uA09E")}).to.throw(Error, "EncodingError U+A09E");
expect(() => {ms932Encoder.encode("\uA09F")}).to.throw(Error, "EncodingError U+A09F");
expect(() => {ms932Encoder.encode("\uA0A0")}).to.throw(Error, "EncodingError U+A0A0");
expect(() => {ms932Encoder.encode("\uA0A1")}).to.throw(Error, "EncodingError U+A0A1");
expect(() => {ms932Encoder.encode("\uA0A2")}).to.throw(Error, "EncodingError U+A0A2");
expect(() => {ms932Encoder.encode("\uA0A3")}).to.throw(Error, "EncodingError U+A0A3");
expect(() => {ms932Encoder.encode("\uA0A4")}).to.throw(Error, "EncodingError U+A0A4");
expect(() => {ms932Encoder.encode("\uA0A5")}).to.throw(Error, "EncodingError U+A0A5");
expect(() => {ms932Encoder.encode("\uA0A6")}).to.throw(Error, "EncodingError U+A0A6");
expect(() => {ms932Encoder.encode("\uA0A7")}).to.throw(Error, "EncodingError U+A0A7");
expect(() => {ms932Encoder.encode("\uA0A8")}).to.throw(Error, "EncodingError U+A0A8");
expect(() => {ms932Encoder.encode("\uA0A9")}).to.throw(Error, "EncodingError U+A0A9");
expect(() => {ms932Encoder.encode("\uA0AA")}).to.throw(Error, "EncodingError U+A0AA");
expect(() => {ms932Encoder.encode("\uA0AB")}).to.throw(Error, "EncodingError U+A0AB");
expect(() => {ms932Encoder.encode("\uA0AC")}).to.throw(Error, "EncodingError U+A0AC");
expect(() => {ms932Encoder.encode("\uA0AD")}).to.throw(Error, "EncodingError U+A0AD");
expect(() => {ms932Encoder.encode("\uA0AE")}).to.throw(Error, "EncodingError U+A0AE");
expect(() => {ms932Encoder.encode("\uA0AF")}).to.throw(Error, "EncodingError U+A0AF");
expect(() => {ms932Encoder.encode("\uA0B0")}).to.throw(Error, "EncodingError U+A0B0");
expect(() => {ms932Encoder.encode("\uA0B1")}).to.throw(Error, "EncodingError U+A0B1");
expect(() => {ms932Encoder.encode("\uA0B2")}).to.throw(Error, "EncodingError U+A0B2");
expect(() => {ms932Encoder.encode("\uA0B3")}).to.throw(Error, "EncodingError U+A0B3");
expect(() => {ms932Encoder.encode("\uA0B4")}).to.throw(Error, "EncodingError U+A0B4");
expect(() => {ms932Encoder.encode("\uA0B5")}).to.throw(Error, "EncodingError U+A0B5");
expect(() => {ms932Encoder.encode("\uA0B6")}).to.throw(Error, "EncodingError U+A0B6");
expect(() => {ms932Encoder.encode("\uA0B7")}).to.throw(Error, "EncodingError U+A0B7");
expect(() => {ms932Encoder.encode("\uA0B8")}).to.throw(Error, "EncodingError U+A0B8");
expect(() => {ms932Encoder.encode("\uA0B9")}).to.throw(Error, "EncodingError U+A0B9");
expect(() => {ms932Encoder.encode("\uA0BA")}).to.throw(Error, "EncodingError U+A0BA");
expect(() => {ms932Encoder.encode("\uA0BB")}).to.throw(Error, "EncodingError U+A0BB");
expect(() => {ms932Encoder.encode("\uA0BC")}).to.throw(Error, "EncodingError U+A0BC");
expect(() => {ms932Encoder.encode("\uA0BD")}).to.throw(Error, "EncodingError U+A0BD");
expect(() => {ms932Encoder.encode("\uA0BE")}).to.throw(Error, "EncodingError U+A0BE");
expect(() => {ms932Encoder.encode("\uA0BF")}).to.throw(Error, "EncodingError U+A0BF");
expect(() => {ms932Encoder.encode("\uA0C0")}).to.throw(Error, "EncodingError U+A0C0");
expect(() => {ms932Encoder.encode("\uA0C1")}).to.throw(Error, "EncodingError U+A0C1");
expect(() => {ms932Encoder.encode("\uA0C2")}).to.throw(Error, "EncodingError U+A0C2");
expect(() => {ms932Encoder.encode("\uA0C3")}).to.throw(Error, "EncodingError U+A0C3");
expect(() => {ms932Encoder.encode("\uA0C4")}).to.throw(Error, "EncodingError U+A0C4");
expect(() => {ms932Encoder.encode("\uA0C5")}).to.throw(Error, "EncodingError U+A0C5");
expect(() => {ms932Encoder.encode("\uA0C6")}).to.throw(Error, "EncodingError U+A0C6");
expect(() => {ms932Encoder.encode("\uA0C7")}).to.throw(Error, "EncodingError U+A0C7");
expect(() => {ms932Encoder.encode("\uA0C8")}).to.throw(Error, "EncodingError U+A0C8");
expect(() => {ms932Encoder.encode("\uA0C9")}).to.throw(Error, "EncodingError U+A0C9");
expect(() => {ms932Encoder.encode("\uA0CA")}).to.throw(Error, "EncodingError U+A0CA");
expect(() => {ms932Encoder.encode("\uA0CB")}).to.throw(Error, "EncodingError U+A0CB");
expect(() => {ms932Encoder.encode("\uA0CC")}).to.throw(Error, "EncodingError U+A0CC");
expect(() => {ms932Encoder.encode("\uA0CD")}).to.throw(Error, "EncodingError U+A0CD");
expect(() => {ms932Encoder.encode("\uA0CE")}).to.throw(Error, "EncodingError U+A0CE");
expect(() => {ms932Encoder.encode("\uA0CF")}).to.throw(Error, "EncodingError U+A0CF");
expect(() => {ms932Encoder.encode("\uA0D0")}).to.throw(Error, "EncodingError U+A0D0");
expect(() => {ms932Encoder.encode("\uA0D1")}).to.throw(Error, "EncodingError U+A0D1");
expect(() => {ms932Encoder.encode("\uA0D2")}).to.throw(Error, "EncodingError U+A0D2");
expect(() => {ms932Encoder.encode("\uA0D3")}).to.throw(Error, "EncodingError U+A0D3");
expect(() => {ms932Encoder.encode("\uA0D4")}).to.throw(Error, "EncodingError U+A0D4");
expect(() => {ms932Encoder.encode("\uA0D5")}).to.throw(Error, "EncodingError U+A0D5");
expect(() => {ms932Encoder.encode("\uA0D6")}).to.throw(Error, "EncodingError U+A0D6");
expect(() => {ms932Encoder.encode("\uA0D7")}).to.throw(Error, "EncodingError U+A0D7");
expect(() => {ms932Encoder.encode("\uA0D8")}).to.throw(Error, "EncodingError U+A0D8");
expect(() => {ms932Encoder.encode("\uA0D9")}).to.throw(Error, "EncodingError U+A0D9");
expect(() => {ms932Encoder.encode("\uA0DA")}).to.throw(Error, "EncodingError U+A0DA");
expect(() => {ms932Encoder.encode("\uA0DB")}).to.throw(Error, "EncodingError U+A0DB");
expect(() => {ms932Encoder.encode("\uA0DC")}).to.throw(Error, "EncodingError U+A0DC");
expect(() => {ms932Encoder.encode("\uA0DD")}).to.throw(Error, "EncodingError U+A0DD");
expect(() => {ms932Encoder.encode("\uA0DE")}).to.throw(Error, "EncodingError U+A0DE");
expect(() => {ms932Encoder.encode("\uA0DF")}).to.throw(Error, "EncodingError U+A0DF");
expect(() => {ms932Encoder.encode("\uA0E0")}).to.throw(Error, "EncodingError U+A0E0");
expect(() => {ms932Encoder.encode("\uA0E1")}).to.throw(Error, "EncodingError U+A0E1");
expect(() => {ms932Encoder.encode("\uA0E2")}).to.throw(Error, "EncodingError U+A0E2");
expect(() => {ms932Encoder.encode("\uA0E3")}).to.throw(Error, "EncodingError U+A0E3");
expect(() => {ms932Encoder.encode("\uA0E4")}).to.throw(Error, "EncodingError U+A0E4");
expect(() => {ms932Encoder.encode("\uA0E5")}).to.throw(Error, "EncodingError U+A0E5");
expect(() => {ms932Encoder.encode("\uA0E6")}).to.throw(Error, "EncodingError U+A0E6");
expect(() => {ms932Encoder.encode("\uA0E7")}).to.throw(Error, "EncodingError U+A0E7");
expect(() => {ms932Encoder.encode("\uA0E8")}).to.throw(Error, "EncodingError U+A0E8");
expect(() => {ms932Encoder.encode("\uA0E9")}).to.throw(Error, "EncodingError U+A0E9");
expect(() => {ms932Encoder.encode("\uA0EA")}).to.throw(Error, "EncodingError U+A0EA");
expect(() => {ms932Encoder.encode("\uA0EB")}).to.throw(Error, "EncodingError U+A0EB");
expect(() => {ms932Encoder.encode("\uA0EC")}).to.throw(Error, "EncodingError U+A0EC");
expect(() => {ms932Encoder.encode("\uA0ED")}).to.throw(Error, "EncodingError U+A0ED");
expect(() => {ms932Encoder.encode("\uA0EE")}).to.throw(Error, "EncodingError U+A0EE");
expect(() => {ms932Encoder.encode("\uA0EF")}).to.throw(Error, "EncodingError U+A0EF");
expect(() => {ms932Encoder.encode("\uA0F0")}).to.throw(Error, "EncodingError U+A0F0");
expect(() => {ms932Encoder.encode("\uA0F1")}).to.throw(Error, "EncodingError U+A0F1");
expect(() => {ms932Encoder.encode("\uA0F2")}).to.throw(Error, "EncodingError U+A0F2");
expect(() => {ms932Encoder.encode("\uA0F3")}).to.throw(Error, "EncodingError U+A0F3");
expect(() => {ms932Encoder.encode("\uA0F4")}).to.throw(Error, "EncodingError U+A0F4");
expect(() => {ms932Encoder.encode("\uA0F5")}).to.throw(Error, "EncodingError U+A0F5");
expect(() => {ms932Encoder.encode("\uA0F6")}).to.throw(Error, "EncodingError U+A0F6");
expect(() => {ms932Encoder.encode("\uA0F7")}).to.throw(Error, "EncodingError U+A0F7");
expect(() => {ms932Encoder.encode("\uA0F8")}).to.throw(Error, "EncodingError U+A0F8");
expect(() => {ms932Encoder.encode("\uA0F9")}).to.throw(Error, "EncodingError U+A0F9");
expect(() => {ms932Encoder.encode("\uA0FA")}).to.throw(Error, "EncodingError U+A0FA");
expect(() => {ms932Encoder.encode("\uA0FB")}).to.throw(Error, "EncodingError U+A0FB");
expect(() => {ms932Encoder.encode("\uA0FC")}).to.throw(Error, "EncodingError U+A0FC");
expect(() => {ms932Encoder.encode("\uA0FD")}).to.throw(Error, "EncodingError U+A0FD");
expect(() => {ms932Encoder.encode("\uA0FE")}).to.throw(Error, "EncodingError U+A0FE");
expect(() => {ms932Encoder.encode("\uA0FF")}).to.throw(Error, "EncodingError U+A0FF");
expect(() => {ms932Encoder.encode("\uA100")}).to.throw(Error, "EncodingError U+A100");
expect(() => {ms932Encoder.encode("\uA101")}).to.throw(Error, "EncodingError U+A101");
expect(() => {ms932Encoder.encode("\uA102")}).to.throw(Error, "EncodingError U+A102");
expect(() => {ms932Encoder.encode("\uA103")}).to.throw(Error, "EncodingError U+A103");
expect(() => {ms932Encoder.encode("\uA104")}).to.throw(Error, "EncodingError U+A104");
expect(() => {ms932Encoder.encode("\uA105")}).to.throw(Error, "EncodingError U+A105");
expect(() => {ms932Encoder.encode("\uA106")}).to.throw(Error, "EncodingError U+A106");
expect(() => {ms932Encoder.encode("\uA107")}).to.throw(Error, "EncodingError U+A107");
expect(() => {ms932Encoder.encode("\uA108")}).to.throw(Error, "EncodingError U+A108");
expect(() => {ms932Encoder.encode("\uA109")}).to.throw(Error, "EncodingError U+A109");
expect(() => {ms932Encoder.encode("\uA10A")}).to.throw(Error, "EncodingError U+A10A");
expect(() => {ms932Encoder.encode("\uA10B")}).to.throw(Error, "EncodingError U+A10B");
expect(() => {ms932Encoder.encode("\uA10C")}).to.throw(Error, "EncodingError U+A10C");
expect(() => {ms932Encoder.encode("\uA10D")}).to.throw(Error, "EncodingError U+A10D");
expect(() => {ms932Encoder.encode("\uA10E")}).to.throw(Error, "EncodingError U+A10E");
expect(() => {ms932Encoder.encode("\uA10F")}).to.throw(Error, "EncodingError U+A10F");
expect(() => {ms932Encoder.encode("\uA110")}).to.throw(Error, "EncodingError U+A110");
expect(() => {ms932Encoder.encode("\uA111")}).to.throw(Error, "EncodingError U+A111");
expect(() => {ms932Encoder.encode("\uA112")}).to.throw(Error, "EncodingError U+A112");
expect(() => {ms932Encoder.encode("\uA113")}).to.throw(Error, "EncodingError U+A113");
expect(() => {ms932Encoder.encode("\uA114")}).to.throw(Error, "EncodingError U+A114");
expect(() => {ms932Encoder.encode("\uA115")}).to.throw(Error, "EncodingError U+A115");
expect(() => {ms932Encoder.encode("\uA116")}).to.throw(Error, "EncodingError U+A116");
expect(() => {ms932Encoder.encode("\uA117")}).to.throw(Error, "EncodingError U+A117");
expect(() => {ms932Encoder.encode("\uA118")}).to.throw(Error, "EncodingError U+A118");
expect(() => {ms932Encoder.encode("\uA119")}).to.throw(Error, "EncodingError U+A119");
expect(() => {ms932Encoder.encode("\uA11A")}).to.throw(Error, "EncodingError U+A11A");
expect(() => {ms932Encoder.encode("\uA11B")}).to.throw(Error, "EncodingError U+A11B");
expect(() => {ms932Encoder.encode("\uA11C")}).to.throw(Error, "EncodingError U+A11C");
expect(() => {ms932Encoder.encode("\uA11D")}).to.throw(Error, "EncodingError U+A11D");
expect(() => {ms932Encoder.encode("\uA11E")}).to.throw(Error, "EncodingError U+A11E");
expect(() => {ms932Encoder.encode("\uA11F")}).to.throw(Error, "EncodingError U+A11F");
expect(() => {ms932Encoder.encode("\uA120")}).to.throw(Error, "EncodingError U+A120");
expect(() => {ms932Encoder.encode("\uA121")}).to.throw(Error, "EncodingError U+A121");
expect(() => {ms932Encoder.encode("\uA122")}).to.throw(Error, "EncodingError U+A122");
expect(() => {ms932Encoder.encode("\uA123")}).to.throw(Error, "EncodingError U+A123");
expect(() => {ms932Encoder.encode("\uA124")}).to.throw(Error, "EncodingError U+A124");
expect(() => {ms932Encoder.encode("\uA125")}).to.throw(Error, "EncodingError U+A125");
expect(() => {ms932Encoder.encode("\uA126")}).to.throw(Error, "EncodingError U+A126");
expect(() => {ms932Encoder.encode("\uA127")}).to.throw(Error, "EncodingError U+A127");
expect(() => {ms932Encoder.encode("\uA128")}).to.throw(Error, "EncodingError U+A128");
expect(() => {ms932Encoder.encode("\uA129")}).to.throw(Error, "EncodingError U+A129");
expect(() => {ms932Encoder.encode("\uA12A")}).to.throw(Error, "EncodingError U+A12A");
expect(() => {ms932Encoder.encode("\uA12B")}).to.throw(Error, "EncodingError U+A12B");
expect(() => {ms932Encoder.encode("\uA12C")}).to.throw(Error, "EncodingError U+A12C");
expect(() => {ms932Encoder.encode("\uA12D")}).to.throw(Error, "EncodingError U+A12D");
expect(() => {ms932Encoder.encode("\uA12E")}).to.throw(Error, "EncodingError U+A12E");
expect(() => {ms932Encoder.encode("\uA12F")}).to.throw(Error, "EncodingError U+A12F");
expect(() => {ms932Encoder.encode("\uA130")}).to.throw(Error, "EncodingError U+A130");
expect(() => {ms932Encoder.encode("\uA131")}).to.throw(Error, "EncodingError U+A131");
expect(() => {ms932Encoder.encode("\uA132")}).to.throw(Error, "EncodingError U+A132");
expect(() => {ms932Encoder.encode("\uA133")}).to.throw(Error, "EncodingError U+A133");
expect(() => {ms932Encoder.encode("\uA134")}).to.throw(Error, "EncodingError U+A134");
expect(() => {ms932Encoder.encode("\uA135")}).to.throw(Error, "EncodingError U+A135");
expect(() => {ms932Encoder.encode("\uA136")}).to.throw(Error, "EncodingError U+A136");
expect(() => {ms932Encoder.encode("\uA137")}).to.throw(Error, "EncodingError U+A137");
expect(() => {ms932Encoder.encode("\uA138")}).to.throw(Error, "EncodingError U+A138");
expect(() => {ms932Encoder.encode("\uA139")}).to.throw(Error, "EncodingError U+A139");
expect(() => {ms932Encoder.encode("\uA13A")}).to.throw(Error, "EncodingError U+A13A");
expect(() => {ms932Encoder.encode("\uA13B")}).to.throw(Error, "EncodingError U+A13B");
expect(() => {ms932Encoder.encode("\uA13C")}).to.throw(Error, "EncodingError U+A13C");
expect(() => {ms932Encoder.encode("\uA13D")}).to.throw(Error, "EncodingError U+A13D");
expect(() => {ms932Encoder.encode("\uA13E")}).to.throw(Error, "EncodingError U+A13E");
expect(() => {ms932Encoder.encode("\uA13F")}).to.throw(Error, "EncodingError U+A13F");
expect(() => {ms932Encoder.encode("\uA140")}).to.throw(Error, "EncodingError U+A140");
expect(() => {ms932Encoder.encode("\uA141")}).to.throw(Error, "EncodingError U+A141");
expect(() => {ms932Encoder.encode("\uA142")}).to.throw(Error, "EncodingError U+A142");
expect(() => {ms932Encoder.encode("\uA143")}).to.throw(Error, "EncodingError U+A143");
expect(() => {ms932Encoder.encode("\uA144")}).to.throw(Error, "EncodingError U+A144");
expect(() => {ms932Encoder.encode("\uA145")}).to.throw(Error, "EncodingError U+A145");
expect(() => {ms932Encoder.encode("\uA146")}).to.throw(Error, "EncodingError U+A146");
expect(() => {ms932Encoder.encode("\uA147")}).to.throw(Error, "EncodingError U+A147");
expect(() => {ms932Encoder.encode("\uA148")}).to.throw(Error, "EncodingError U+A148");
expect(() => {ms932Encoder.encode("\uA149")}).to.throw(Error, "EncodingError U+A149");
expect(() => {ms932Encoder.encode("\uA14A")}).to.throw(Error, "EncodingError U+A14A");
expect(() => {ms932Encoder.encode("\uA14B")}).to.throw(Error, "EncodingError U+A14B");
expect(() => {ms932Encoder.encode("\uA14C")}).to.throw(Error, "EncodingError U+A14C");
expect(() => {ms932Encoder.encode("\uA14D")}).to.throw(Error, "EncodingError U+A14D");
expect(() => {ms932Encoder.encode("\uA14E")}).to.throw(Error, "EncodingError U+A14E");
expect(() => {ms932Encoder.encode("\uA14F")}).to.throw(Error, "EncodingError U+A14F");
expect(() => {ms932Encoder.encode("\uA150")}).to.throw(Error, "EncodingError U+A150");
expect(() => {ms932Encoder.encode("\uA151")}).to.throw(Error, "EncodingError U+A151");
expect(() => {ms932Encoder.encode("\uA152")}).to.throw(Error, "EncodingError U+A152");
expect(() => {ms932Encoder.encode("\uA153")}).to.throw(Error, "EncodingError U+A153");
expect(() => {ms932Encoder.encode("\uA154")}).to.throw(Error, "EncodingError U+A154");
expect(() => {ms932Encoder.encode("\uA155")}).to.throw(Error, "EncodingError U+A155");
expect(() => {ms932Encoder.encode("\uA156")}).to.throw(Error, "EncodingError U+A156");
expect(() => {ms932Encoder.encode("\uA157")}).to.throw(Error, "EncodingError U+A157");
expect(() => {ms932Encoder.encode("\uA158")}).to.throw(Error, "EncodingError U+A158");
expect(() => {ms932Encoder.encode("\uA159")}).to.throw(Error, "EncodingError U+A159");
expect(() => {ms932Encoder.encode("\uA15A")}).to.throw(Error, "EncodingError U+A15A");
expect(() => {ms932Encoder.encode("\uA15B")}).to.throw(Error, "EncodingError U+A15B");
expect(() => {ms932Encoder.encode("\uA15C")}).to.throw(Error, "EncodingError U+A15C");
expect(() => {ms932Encoder.encode("\uA15D")}).to.throw(Error, "EncodingError U+A15D");
expect(() => {ms932Encoder.encode("\uA15E")}).to.throw(Error, "EncodingError U+A15E");
expect(() => {ms932Encoder.encode("\uA15F")}).to.throw(Error, "EncodingError U+A15F");
expect(() => {ms932Encoder.encode("\uA160")}).to.throw(Error, "EncodingError U+A160");
expect(() => {ms932Encoder.encode("\uA161")}).to.throw(Error, "EncodingError U+A161");
expect(() => {ms932Encoder.encode("\uA162")}).to.throw(Error, "EncodingError U+A162");
expect(() => {ms932Encoder.encode("\uA163")}).to.throw(Error, "EncodingError U+A163");
expect(() => {ms932Encoder.encode("\uA164")}).to.throw(Error, "EncodingError U+A164");
expect(() => {ms932Encoder.encode("\uA165")}).to.throw(Error, "EncodingError U+A165");
expect(() => {ms932Encoder.encode("\uA166")}).to.throw(Error, "EncodingError U+A166");
expect(() => {ms932Encoder.encode("\uA167")}).to.throw(Error, "EncodingError U+A167");
expect(() => {ms932Encoder.encode("\uA168")}).to.throw(Error, "EncodingError U+A168");
expect(() => {ms932Encoder.encode("\uA169")}).to.throw(Error, "EncodingError U+A169");
expect(() => {ms932Encoder.encode("\uA16A")}).to.throw(Error, "EncodingError U+A16A");
expect(() => {ms932Encoder.encode("\uA16B")}).to.throw(Error, "EncodingError U+A16B");
expect(() => {ms932Encoder.encode("\uA16C")}).to.throw(Error, "EncodingError U+A16C");
expect(() => {ms932Encoder.encode("\uA16D")}).to.throw(Error, "EncodingError U+A16D");
expect(() => {ms932Encoder.encode("\uA16E")}).to.throw(Error, "EncodingError U+A16E");
expect(() => {ms932Encoder.encode("\uA16F")}).to.throw(Error, "EncodingError U+A16F");
expect(() => {ms932Encoder.encode("\uA170")}).to.throw(Error, "EncodingError U+A170");
expect(() => {ms932Encoder.encode("\uA171")}).to.throw(Error, "EncodingError U+A171");
expect(() => {ms932Encoder.encode("\uA172")}).to.throw(Error, "EncodingError U+A172");
expect(() => {ms932Encoder.encode("\uA173")}).to.throw(Error, "EncodingError U+A173");
expect(() => {ms932Encoder.encode("\uA174")}).to.throw(Error, "EncodingError U+A174");
expect(() => {ms932Encoder.encode("\uA175")}).to.throw(Error, "EncodingError U+A175");
expect(() => {ms932Encoder.encode("\uA176")}).to.throw(Error, "EncodingError U+A176");
expect(() => {ms932Encoder.encode("\uA177")}).to.throw(Error, "EncodingError U+A177");
expect(() => {ms932Encoder.encode("\uA178")}).to.throw(Error, "EncodingError U+A178");
expect(() => {ms932Encoder.encode("\uA179")}).to.throw(Error, "EncodingError U+A179");
expect(() => {ms932Encoder.encode("\uA17A")}).to.throw(Error, "EncodingError U+A17A");
expect(() => {ms932Encoder.encode("\uA17B")}).to.throw(Error, "EncodingError U+A17B");
expect(() => {ms932Encoder.encode("\uA17C")}).to.throw(Error, "EncodingError U+A17C");
expect(() => {ms932Encoder.encode("\uA17D")}).to.throw(Error, "EncodingError U+A17D");
expect(() => {ms932Encoder.encode("\uA17E")}).to.throw(Error, "EncodingError U+A17E");
expect(() => {ms932Encoder.encode("\uA17F")}).to.throw(Error, "EncodingError U+A17F");
expect(() => {ms932Encoder.encode("\uA180")}).to.throw(Error, "EncodingError U+A180");
expect(() => {ms932Encoder.encode("\uA181")}).to.throw(Error, "EncodingError U+A181");
expect(() => {ms932Encoder.encode("\uA182")}).to.throw(Error, "EncodingError U+A182");
expect(() => {ms932Encoder.encode("\uA183")}).to.throw(Error, "EncodingError U+A183");
expect(() => {ms932Encoder.encode("\uA184")}).to.throw(Error, "EncodingError U+A184");
expect(() => {ms932Encoder.encode("\uA185")}).to.throw(Error, "EncodingError U+A185");
expect(() => {ms932Encoder.encode("\uA186")}).to.throw(Error, "EncodingError U+A186");
expect(() => {ms932Encoder.encode("\uA187")}).to.throw(Error, "EncodingError U+A187");
expect(() => {ms932Encoder.encode("\uA188")}).to.throw(Error, "EncodingError U+A188");
expect(() => {ms932Encoder.encode("\uA189")}).to.throw(Error, "EncodingError U+A189");
expect(() => {ms932Encoder.encode("\uA18A")}).to.throw(Error, "EncodingError U+A18A");
expect(() => {ms932Encoder.encode("\uA18B")}).to.throw(Error, "EncodingError U+A18B");
expect(() => {ms932Encoder.encode("\uA18C")}).to.throw(Error, "EncodingError U+A18C");
expect(() => {ms932Encoder.encode("\uA18D")}).to.throw(Error, "EncodingError U+A18D");
expect(() => {ms932Encoder.encode("\uA18E")}).to.throw(Error, "EncodingError U+A18E");
expect(() => {ms932Encoder.encode("\uA18F")}).to.throw(Error, "EncodingError U+A18F");
expect(() => {ms932Encoder.encode("\uA190")}).to.throw(Error, "EncodingError U+A190");
expect(() => {ms932Encoder.encode("\uA191")}).to.throw(Error, "EncodingError U+A191");
expect(() => {ms932Encoder.encode("\uA192")}).to.throw(Error, "EncodingError U+A192");
expect(() => {ms932Encoder.encode("\uA193")}).to.throw(Error, "EncodingError U+A193");
expect(() => {ms932Encoder.encode("\uA194")}).to.throw(Error, "EncodingError U+A194");
expect(() => {ms932Encoder.encode("\uA195")}).to.throw(Error, "EncodingError U+A195");
expect(() => {ms932Encoder.encode("\uA196")}).to.throw(Error, "EncodingError U+A196");
expect(() => {ms932Encoder.encode("\uA197")}).to.throw(Error, "EncodingError U+A197");
expect(() => {ms932Encoder.encode("\uA198")}).to.throw(Error, "EncodingError U+A198");
expect(() => {ms932Encoder.encode("\uA199")}).to.throw(Error, "EncodingError U+A199");
expect(() => {ms932Encoder.encode("\uA19A")}).to.throw(Error, "EncodingError U+A19A");
expect(() => {ms932Encoder.encode("\uA19B")}).to.throw(Error, "EncodingError U+A19B");
expect(() => {ms932Encoder.encode("\uA19C")}).to.throw(Error, "EncodingError U+A19C");
expect(() => {ms932Encoder.encode("\uA19D")}).to.throw(Error, "EncodingError U+A19D");
expect(() => {ms932Encoder.encode("\uA19E")}).to.throw(Error, "EncodingError U+A19E");
expect(() => {ms932Encoder.encode("\uA19F")}).to.throw(Error, "EncodingError U+A19F");
expect(() => {ms932Encoder.encode("\uA1A0")}).to.throw(Error, "EncodingError U+A1A0");
expect(() => {ms932Encoder.encode("\uA1A1")}).to.throw(Error, "EncodingError U+A1A1");
expect(() => {ms932Encoder.encode("\uA1A2")}).to.throw(Error, "EncodingError U+A1A2");
expect(() => {ms932Encoder.encode("\uA1A3")}).to.throw(Error, "EncodingError U+A1A3");
expect(() => {ms932Encoder.encode("\uA1A4")}).to.throw(Error, "EncodingError U+A1A4");
expect(() => {ms932Encoder.encode("\uA1A5")}).to.throw(Error, "EncodingError U+A1A5");
expect(() => {ms932Encoder.encode("\uA1A6")}).to.throw(Error, "EncodingError U+A1A6");
expect(() => {ms932Encoder.encode("\uA1A7")}).to.throw(Error, "EncodingError U+A1A7");
expect(() => {ms932Encoder.encode("\uA1A8")}).to.throw(Error, "EncodingError U+A1A8");
expect(() => {ms932Encoder.encode("\uA1A9")}).to.throw(Error, "EncodingError U+A1A9");
expect(() => {ms932Encoder.encode("\uA1AA")}).to.throw(Error, "EncodingError U+A1AA");
expect(() => {ms932Encoder.encode("\uA1AB")}).to.throw(Error, "EncodingError U+A1AB");
expect(() => {ms932Encoder.encode("\uA1AC")}).to.throw(Error, "EncodingError U+A1AC");
expect(() => {ms932Encoder.encode("\uA1AD")}).to.throw(Error, "EncodingError U+A1AD");
expect(() => {ms932Encoder.encode("\uA1AE")}).to.throw(Error, "EncodingError U+A1AE");
expect(() => {ms932Encoder.encode("\uA1AF")}).to.throw(Error, "EncodingError U+A1AF");
expect(() => {ms932Encoder.encode("\uA1B0")}).to.throw(Error, "EncodingError U+A1B0");
expect(() => {ms932Encoder.encode("\uA1B1")}).to.throw(Error, "EncodingError U+A1B1");
expect(() => {ms932Encoder.encode("\uA1B2")}).to.throw(Error, "EncodingError U+A1B2");
expect(() => {ms932Encoder.encode("\uA1B3")}).to.throw(Error, "EncodingError U+A1B3");
expect(() => {ms932Encoder.encode("\uA1B4")}).to.throw(Error, "EncodingError U+A1B4");
expect(() => {ms932Encoder.encode("\uA1B5")}).to.throw(Error, "EncodingError U+A1B5");
expect(() => {ms932Encoder.encode("\uA1B6")}).to.throw(Error, "EncodingError U+A1B6");
expect(() => {ms932Encoder.encode("\uA1B7")}).to.throw(Error, "EncodingError U+A1B7");
expect(() => {ms932Encoder.encode("\uA1B8")}).to.throw(Error, "EncodingError U+A1B8");
expect(() => {ms932Encoder.encode("\uA1B9")}).to.throw(Error, "EncodingError U+A1B9");
expect(() => {ms932Encoder.encode("\uA1BA")}).to.throw(Error, "EncodingError U+A1BA");
expect(() => {ms932Encoder.encode("\uA1BB")}).to.throw(Error, "EncodingError U+A1BB");
expect(() => {ms932Encoder.encode("\uA1BC")}).to.throw(Error, "EncodingError U+A1BC");
expect(() => {ms932Encoder.encode("\uA1BD")}).to.throw(Error, "EncodingError U+A1BD");
expect(() => {ms932Encoder.encode("\uA1BE")}).to.throw(Error, "EncodingError U+A1BE");
expect(() => {ms932Encoder.encode("\uA1BF")}).to.throw(Error, "EncodingError U+A1BF");
expect(() => {ms932Encoder.encode("\uA1C0")}).to.throw(Error, "EncodingError U+A1C0");
expect(() => {ms932Encoder.encode("\uA1C1")}).to.throw(Error, "EncodingError U+A1C1");
expect(() => {ms932Encoder.encode("\uA1C2")}).to.throw(Error, "EncodingError U+A1C2");
expect(() => {ms932Encoder.encode("\uA1C3")}).to.throw(Error, "EncodingError U+A1C3");
expect(() => {ms932Encoder.encode("\uA1C4")}).to.throw(Error, "EncodingError U+A1C4");
expect(() => {ms932Encoder.encode("\uA1C5")}).to.throw(Error, "EncodingError U+A1C5");
expect(() => {ms932Encoder.encode("\uA1C6")}).to.throw(Error, "EncodingError U+A1C6");
expect(() => {ms932Encoder.encode("\uA1C7")}).to.throw(Error, "EncodingError U+A1C7");
expect(() => {ms932Encoder.encode("\uA1C8")}).to.throw(Error, "EncodingError U+A1C8");
expect(() => {ms932Encoder.encode("\uA1C9")}).to.throw(Error, "EncodingError U+A1C9");
expect(() => {ms932Encoder.encode("\uA1CA")}).to.throw(Error, "EncodingError U+A1CA");
expect(() => {ms932Encoder.encode("\uA1CB")}).to.throw(Error, "EncodingError U+A1CB");
expect(() => {ms932Encoder.encode("\uA1CC")}).to.throw(Error, "EncodingError U+A1CC");
expect(() => {ms932Encoder.encode("\uA1CD")}).to.throw(Error, "EncodingError U+A1CD");
expect(() => {ms932Encoder.encode("\uA1CE")}).to.throw(Error, "EncodingError U+A1CE");
expect(() => {ms932Encoder.encode("\uA1CF")}).to.throw(Error, "EncodingError U+A1CF");
expect(() => {ms932Encoder.encode("\uA1D0")}).to.throw(Error, "EncodingError U+A1D0");
expect(() => {ms932Encoder.encode("\uA1D1")}).to.throw(Error, "EncodingError U+A1D1");
expect(() => {ms932Encoder.encode("\uA1D2")}).to.throw(Error, "EncodingError U+A1D2");
expect(() => {ms932Encoder.encode("\uA1D3")}).to.throw(Error, "EncodingError U+A1D3");
expect(() => {ms932Encoder.encode("\uA1D4")}).to.throw(Error, "EncodingError U+A1D4");
expect(() => {ms932Encoder.encode("\uA1D5")}).to.throw(Error, "EncodingError U+A1D5");
expect(() => {ms932Encoder.encode("\uA1D6")}).to.throw(Error, "EncodingError U+A1D6");
expect(() => {ms932Encoder.encode("\uA1D7")}).to.throw(Error, "EncodingError U+A1D7");
expect(() => {ms932Encoder.encode("\uA1D8")}).to.throw(Error, "EncodingError U+A1D8");
expect(() => {ms932Encoder.encode("\uA1D9")}).to.throw(Error, "EncodingError U+A1D9");
expect(() => {ms932Encoder.encode("\uA1DA")}).to.throw(Error, "EncodingError U+A1DA");
expect(() => {ms932Encoder.encode("\uA1DB")}).to.throw(Error, "EncodingError U+A1DB");
expect(() => {ms932Encoder.encode("\uA1DC")}).to.throw(Error, "EncodingError U+A1DC");
expect(() => {ms932Encoder.encode("\uA1DD")}).to.throw(Error, "EncodingError U+A1DD");
expect(() => {ms932Encoder.encode("\uA1DE")}).to.throw(Error, "EncodingError U+A1DE");
expect(() => {ms932Encoder.encode("\uA1DF")}).to.throw(Error, "EncodingError U+A1DF");
expect(() => {ms932Encoder.encode("\uA1E0")}).to.throw(Error, "EncodingError U+A1E0");
expect(() => {ms932Encoder.encode("\uA1E1")}).to.throw(Error, "EncodingError U+A1E1");
expect(() => {ms932Encoder.encode("\uA1E2")}).to.throw(Error, "EncodingError U+A1E2");
expect(() => {ms932Encoder.encode("\uA1E3")}).to.throw(Error, "EncodingError U+A1E3");
expect(() => {ms932Encoder.encode("\uA1E4")}).to.throw(Error, "EncodingError U+A1E4");
expect(() => {ms932Encoder.encode("\uA1E5")}).to.throw(Error, "EncodingError U+A1E5");
expect(() => {ms932Encoder.encode("\uA1E6")}).to.throw(Error, "EncodingError U+A1E6");
expect(() => {ms932Encoder.encode("\uA1E7")}).to.throw(Error, "EncodingError U+A1E7");
expect(() => {ms932Encoder.encode("\uA1E8")}).to.throw(Error, "EncodingError U+A1E8");
expect(() => {ms932Encoder.encode("\uA1E9")}).to.throw(Error, "EncodingError U+A1E9");
expect(() => {ms932Encoder.encode("\uA1EA")}).to.throw(Error, "EncodingError U+A1EA");
expect(() => {ms932Encoder.encode("\uA1EB")}).to.throw(Error, "EncodingError U+A1EB");
expect(() => {ms932Encoder.encode("\uA1EC")}).to.throw(Error, "EncodingError U+A1EC");
expect(() => {ms932Encoder.encode("\uA1ED")}).to.throw(Error, "EncodingError U+A1ED");
expect(() => {ms932Encoder.encode("\uA1EE")}).to.throw(Error, "EncodingError U+A1EE");
expect(() => {ms932Encoder.encode("\uA1EF")}).to.throw(Error, "EncodingError U+A1EF");
expect(() => {ms932Encoder.encode("\uA1F0")}).to.throw(Error, "EncodingError U+A1F0");
expect(() => {ms932Encoder.encode("\uA1F1")}).to.throw(Error, "EncodingError U+A1F1");
expect(() => {ms932Encoder.encode("\uA1F2")}).to.throw(Error, "EncodingError U+A1F2");
expect(() => {ms932Encoder.encode("\uA1F3")}).to.throw(Error, "EncodingError U+A1F3");
expect(() => {ms932Encoder.encode("\uA1F4")}).to.throw(Error, "EncodingError U+A1F4");
expect(() => {ms932Encoder.encode("\uA1F5")}).to.throw(Error, "EncodingError U+A1F5");
expect(() => {ms932Encoder.encode("\uA1F6")}).to.throw(Error, "EncodingError U+A1F6");
expect(() => {ms932Encoder.encode("\uA1F7")}).to.throw(Error, "EncodingError U+A1F7");
expect(() => {ms932Encoder.encode("\uA1F8")}).to.throw(Error, "EncodingError U+A1F8");
expect(() => {ms932Encoder.encode("\uA1F9")}).to.throw(Error, "EncodingError U+A1F9");
expect(() => {ms932Encoder.encode("\uA1FA")}).to.throw(Error, "EncodingError U+A1FA");
expect(() => {ms932Encoder.encode("\uA1FB")}).to.throw(Error, "EncodingError U+A1FB");
expect(() => {ms932Encoder.encode("\uA1FC")}).to.throw(Error, "EncodingError U+A1FC");
expect(() => {ms932Encoder.encode("\uA1FD")}).to.throw(Error, "EncodingError U+A1FD");
expect(() => {ms932Encoder.encode("\uA1FE")}).to.throw(Error, "EncodingError U+A1FE");
expect(() => {ms932Encoder.encode("\uA1FF")}).to.throw(Error, "EncodingError U+A1FF");
expect(() => {ms932Encoder.encode("\uA200")}).to.throw(Error, "EncodingError U+A200");
expect(() => {ms932Encoder.encode("\uA201")}).to.throw(Error, "EncodingError U+A201");
expect(() => {ms932Encoder.encode("\uA202")}).to.throw(Error, "EncodingError U+A202");
expect(() => {ms932Encoder.encode("\uA203")}).to.throw(Error, "EncodingError U+A203");
expect(() => {ms932Encoder.encode("\uA204")}).to.throw(Error, "EncodingError U+A204");
expect(() => {ms932Encoder.encode("\uA205")}).to.throw(Error, "EncodingError U+A205");
expect(() => {ms932Encoder.encode("\uA206")}).to.throw(Error, "EncodingError U+A206");
expect(() => {ms932Encoder.encode("\uA207")}).to.throw(Error, "EncodingError U+A207");
expect(() => {ms932Encoder.encode("\uA208")}).to.throw(Error, "EncodingError U+A208");
expect(() => {ms932Encoder.encode("\uA209")}).to.throw(Error, "EncodingError U+A209");
expect(() => {ms932Encoder.encode("\uA20A")}).to.throw(Error, "EncodingError U+A20A");
expect(() => {ms932Encoder.encode("\uA20B")}).to.throw(Error, "EncodingError U+A20B");
expect(() => {ms932Encoder.encode("\uA20C")}).to.throw(Error, "EncodingError U+A20C");
expect(() => {ms932Encoder.encode("\uA20D")}).to.throw(Error, "EncodingError U+A20D");
expect(() => {ms932Encoder.encode("\uA20E")}).to.throw(Error, "EncodingError U+A20E");
expect(() => {ms932Encoder.encode("\uA20F")}).to.throw(Error, "EncodingError U+A20F");
expect(() => {ms932Encoder.encode("\uA210")}).to.throw(Error, "EncodingError U+A210");
expect(() => {ms932Encoder.encode("\uA211")}).to.throw(Error, "EncodingError U+A211");
expect(() => {ms932Encoder.encode("\uA212")}).to.throw(Error, "EncodingError U+A212");
expect(() => {ms932Encoder.encode("\uA213")}).to.throw(Error, "EncodingError U+A213");
expect(() => {ms932Encoder.encode("\uA214")}).to.throw(Error, "EncodingError U+A214");
expect(() => {ms932Encoder.encode("\uA215")}).to.throw(Error, "EncodingError U+A215");
expect(() => {ms932Encoder.encode("\uA216")}).to.throw(Error, "EncodingError U+A216");
expect(() => {ms932Encoder.encode("\uA217")}).to.throw(Error, "EncodingError U+A217");
expect(() => {ms932Encoder.encode("\uA218")}).to.throw(Error, "EncodingError U+A218");
expect(() => {ms932Encoder.encode("\uA219")}).to.throw(Error, "EncodingError U+A219");
expect(() => {ms932Encoder.encode("\uA21A")}).to.throw(Error, "EncodingError U+A21A");
expect(() => {ms932Encoder.encode("\uA21B")}).to.throw(Error, "EncodingError U+A21B");
expect(() => {ms932Encoder.encode("\uA21C")}).to.throw(Error, "EncodingError U+A21C");
expect(() => {ms932Encoder.encode("\uA21D")}).to.throw(Error, "EncodingError U+A21D");
expect(() => {ms932Encoder.encode("\uA21E")}).to.throw(Error, "EncodingError U+A21E");
expect(() => {ms932Encoder.encode("\uA21F")}).to.throw(Error, "EncodingError U+A21F");
expect(() => {ms932Encoder.encode("\uA220")}).to.throw(Error, "EncodingError U+A220");
expect(() => {ms932Encoder.encode("\uA221")}).to.throw(Error, "EncodingError U+A221");
expect(() => {ms932Encoder.encode("\uA222")}).to.throw(Error, "EncodingError U+A222");
expect(() => {ms932Encoder.encode("\uA223")}).to.throw(Error, "EncodingError U+A223");
expect(() => {ms932Encoder.encode("\uA224")}).to.throw(Error, "EncodingError U+A224");
expect(() => {ms932Encoder.encode("\uA225")}).to.throw(Error, "EncodingError U+A225");
expect(() => {ms932Encoder.encode("\uA226")}).to.throw(Error, "EncodingError U+A226");
expect(() => {ms932Encoder.encode("\uA227")}).to.throw(Error, "EncodingError U+A227");
expect(() => {ms932Encoder.encode("\uA228")}).to.throw(Error, "EncodingError U+A228");
expect(() => {ms932Encoder.encode("\uA229")}).to.throw(Error, "EncodingError U+A229");
expect(() => {ms932Encoder.encode("\uA22A")}).to.throw(Error, "EncodingError U+A22A");
expect(() => {ms932Encoder.encode("\uA22B")}).to.throw(Error, "EncodingError U+A22B");
expect(() => {ms932Encoder.encode("\uA22C")}).to.throw(Error, "EncodingError U+A22C");
expect(() => {ms932Encoder.encode("\uA22D")}).to.throw(Error, "EncodingError U+A22D");
expect(() => {ms932Encoder.encode("\uA22E")}).to.throw(Error, "EncodingError U+A22E");
expect(() => {ms932Encoder.encode("\uA22F")}).to.throw(Error, "EncodingError U+A22F");
expect(() => {ms932Encoder.encode("\uA230")}).to.throw(Error, "EncodingError U+A230");
expect(() => {ms932Encoder.encode("\uA231")}).to.throw(Error, "EncodingError U+A231");
expect(() => {ms932Encoder.encode("\uA232")}).to.throw(Error, "EncodingError U+A232");
expect(() => {ms932Encoder.encode("\uA233")}).to.throw(Error, "EncodingError U+A233");
expect(() => {ms932Encoder.encode("\uA234")}).to.throw(Error, "EncodingError U+A234");
expect(() => {ms932Encoder.encode("\uA235")}).to.throw(Error, "EncodingError U+A235");
expect(() => {ms932Encoder.encode("\uA236")}).to.throw(Error, "EncodingError U+A236");
expect(() => {ms932Encoder.encode("\uA237")}).to.throw(Error, "EncodingError U+A237");
expect(() => {ms932Encoder.encode("\uA238")}).to.throw(Error, "EncodingError U+A238");
expect(() => {ms932Encoder.encode("\uA239")}).to.throw(Error, "EncodingError U+A239");
expect(() => {ms932Encoder.encode("\uA23A")}).to.throw(Error, "EncodingError U+A23A");
expect(() => {ms932Encoder.encode("\uA23B")}).to.throw(Error, "EncodingError U+A23B");
expect(() => {ms932Encoder.encode("\uA23C")}).to.throw(Error, "EncodingError U+A23C");
expect(() => {ms932Encoder.encode("\uA23D")}).to.throw(Error, "EncodingError U+A23D");
expect(() => {ms932Encoder.encode("\uA23E")}).to.throw(Error, "EncodingError U+A23E");
expect(() => {ms932Encoder.encode("\uA23F")}).to.throw(Error, "EncodingError U+A23F");
expect(() => {ms932Encoder.encode("\uA240")}).to.throw(Error, "EncodingError U+A240");
expect(() => {ms932Encoder.encode("\uA241")}).to.throw(Error, "EncodingError U+A241");
expect(() => {ms932Encoder.encode("\uA242")}).to.throw(Error, "EncodingError U+A242");
expect(() => {ms932Encoder.encode("\uA243")}).to.throw(Error, "EncodingError U+A243");
expect(() => {ms932Encoder.encode("\uA244")}).to.throw(Error, "EncodingError U+A244");
expect(() => {ms932Encoder.encode("\uA245")}).to.throw(Error, "EncodingError U+A245");
expect(() => {ms932Encoder.encode("\uA246")}).to.throw(Error, "EncodingError U+A246");
expect(() => {ms932Encoder.encode("\uA247")}).to.throw(Error, "EncodingError U+A247");
expect(() => {ms932Encoder.encode("\uA248")}).to.throw(Error, "EncodingError U+A248");
expect(() => {ms932Encoder.encode("\uA249")}).to.throw(Error, "EncodingError U+A249");
expect(() => {ms932Encoder.encode("\uA24A")}).to.throw(Error, "EncodingError U+A24A");
expect(() => {ms932Encoder.encode("\uA24B")}).to.throw(Error, "EncodingError U+A24B");
expect(() => {ms932Encoder.encode("\uA24C")}).to.throw(Error, "EncodingError U+A24C");
expect(() => {ms932Encoder.encode("\uA24D")}).to.throw(Error, "EncodingError U+A24D");
expect(() => {ms932Encoder.encode("\uA24E")}).to.throw(Error, "EncodingError U+A24E");
expect(() => {ms932Encoder.encode("\uA24F")}).to.throw(Error, "EncodingError U+A24F");
expect(() => {ms932Encoder.encode("\uA250")}).to.throw(Error, "EncodingError U+A250");
expect(() => {ms932Encoder.encode("\uA251")}).to.throw(Error, "EncodingError U+A251");
expect(() => {ms932Encoder.encode("\uA252")}).to.throw(Error, "EncodingError U+A252");
expect(() => {ms932Encoder.encode("\uA253")}).to.throw(Error, "EncodingError U+A253");
expect(() => {ms932Encoder.encode("\uA254")}).to.throw(Error, "EncodingError U+A254");
expect(() => {ms932Encoder.encode("\uA255")}).to.throw(Error, "EncodingError U+A255");
expect(() => {ms932Encoder.encode("\uA256")}).to.throw(Error, "EncodingError U+A256");
expect(() => {ms932Encoder.encode("\uA257")}).to.throw(Error, "EncodingError U+A257");
expect(() => {ms932Encoder.encode("\uA258")}).to.throw(Error, "EncodingError U+A258");
expect(() => {ms932Encoder.encode("\uA259")}).to.throw(Error, "EncodingError U+A259");
expect(() => {ms932Encoder.encode("\uA25A")}).to.throw(Error, "EncodingError U+A25A");
expect(() => {ms932Encoder.encode("\uA25B")}).to.throw(Error, "EncodingError U+A25B");
expect(() => {ms932Encoder.encode("\uA25C")}).to.throw(Error, "EncodingError U+A25C");
expect(() => {ms932Encoder.encode("\uA25D")}).to.throw(Error, "EncodingError U+A25D");
expect(() => {ms932Encoder.encode("\uA25E")}).to.throw(Error, "EncodingError U+A25E");
expect(() => {ms932Encoder.encode("\uA25F")}).to.throw(Error, "EncodingError U+A25F");
expect(() => {ms932Encoder.encode("\uA260")}).to.throw(Error, "EncodingError U+A260");
expect(() => {ms932Encoder.encode("\uA261")}).to.throw(Error, "EncodingError U+A261");
expect(() => {ms932Encoder.encode("\uA262")}).to.throw(Error, "EncodingError U+A262");
expect(() => {ms932Encoder.encode("\uA263")}).to.throw(Error, "EncodingError U+A263");
expect(() => {ms932Encoder.encode("\uA264")}).to.throw(Error, "EncodingError U+A264");
expect(() => {ms932Encoder.encode("\uA265")}).to.throw(Error, "EncodingError U+A265");
expect(() => {ms932Encoder.encode("\uA266")}).to.throw(Error, "EncodingError U+A266");
expect(() => {ms932Encoder.encode("\uA267")}).to.throw(Error, "EncodingError U+A267");
expect(() => {ms932Encoder.encode("\uA268")}).to.throw(Error, "EncodingError U+A268");
expect(() => {ms932Encoder.encode("\uA269")}).to.throw(Error, "EncodingError U+A269");
expect(() => {ms932Encoder.encode("\uA26A")}).to.throw(Error, "EncodingError U+A26A");
expect(() => {ms932Encoder.encode("\uA26B")}).to.throw(Error, "EncodingError U+A26B");
expect(() => {ms932Encoder.encode("\uA26C")}).to.throw(Error, "EncodingError U+A26C");
expect(() => {ms932Encoder.encode("\uA26D")}).to.throw(Error, "EncodingError U+A26D");
expect(() => {ms932Encoder.encode("\uA26E")}).to.throw(Error, "EncodingError U+A26E");
expect(() => {ms932Encoder.encode("\uA26F")}).to.throw(Error, "EncodingError U+A26F");
expect(() => {ms932Encoder.encode("\uA270")}).to.throw(Error, "EncodingError U+A270");
expect(() => {ms932Encoder.encode("\uA271")}).to.throw(Error, "EncodingError U+A271");
expect(() => {ms932Encoder.encode("\uA272")}).to.throw(Error, "EncodingError U+A272");
expect(() => {ms932Encoder.encode("\uA273")}).to.throw(Error, "EncodingError U+A273");
expect(() => {ms932Encoder.encode("\uA274")}).to.throw(Error, "EncodingError U+A274");
expect(() => {ms932Encoder.encode("\uA275")}).to.throw(Error, "EncodingError U+A275");
expect(() => {ms932Encoder.encode("\uA276")}).to.throw(Error, "EncodingError U+A276");
expect(() => {ms932Encoder.encode("\uA277")}).to.throw(Error, "EncodingError U+A277");
expect(() => {ms932Encoder.encode("\uA278")}).to.throw(Error, "EncodingError U+A278");
expect(() => {ms932Encoder.encode("\uA279")}).to.throw(Error, "EncodingError U+A279");
expect(() => {ms932Encoder.encode("\uA27A")}).to.throw(Error, "EncodingError U+A27A");
expect(() => {ms932Encoder.encode("\uA27B")}).to.throw(Error, "EncodingError U+A27B");
expect(() => {ms932Encoder.encode("\uA27C")}).to.throw(Error, "EncodingError U+A27C");
expect(() => {ms932Encoder.encode("\uA27D")}).to.throw(Error, "EncodingError U+A27D");
expect(() => {ms932Encoder.encode("\uA27E")}).to.throw(Error, "EncodingError U+A27E");
expect(() => {ms932Encoder.encode("\uA27F")}).to.throw(Error, "EncodingError U+A27F");
expect(() => {ms932Encoder.encode("\uA280")}).to.throw(Error, "EncodingError U+A280");
expect(() => {ms932Encoder.encode("\uA281")}).to.throw(Error, "EncodingError U+A281");
expect(() => {ms932Encoder.encode("\uA282")}).to.throw(Error, "EncodingError U+A282");
expect(() => {ms932Encoder.encode("\uA283")}).to.throw(Error, "EncodingError U+A283");
expect(() => {ms932Encoder.encode("\uA284")}).to.throw(Error, "EncodingError U+A284");
expect(() => {ms932Encoder.encode("\uA285")}).to.throw(Error, "EncodingError U+A285");
expect(() => {ms932Encoder.encode("\uA286")}).to.throw(Error, "EncodingError U+A286");
expect(() => {ms932Encoder.encode("\uA287")}).to.throw(Error, "EncodingError U+A287");
expect(() => {ms932Encoder.encode("\uA288")}).to.throw(Error, "EncodingError U+A288");
expect(() => {ms932Encoder.encode("\uA289")}).to.throw(Error, "EncodingError U+A289");
expect(() => {ms932Encoder.encode("\uA28A")}).to.throw(Error, "EncodingError U+A28A");
expect(() => {ms932Encoder.encode("\uA28B")}).to.throw(Error, "EncodingError U+A28B");
expect(() => {ms932Encoder.encode("\uA28C")}).to.throw(Error, "EncodingError U+A28C");
expect(() => {ms932Encoder.encode("\uA28D")}).to.throw(Error, "EncodingError U+A28D");
expect(() => {ms932Encoder.encode("\uA28E")}).to.throw(Error, "EncodingError U+A28E");
expect(() => {ms932Encoder.encode("\uA28F")}).to.throw(Error, "EncodingError U+A28F");
expect(() => {ms932Encoder.encode("\uA290")}).to.throw(Error, "EncodingError U+A290");
expect(() => {ms932Encoder.encode("\uA291")}).to.throw(Error, "EncodingError U+A291");
expect(() => {ms932Encoder.encode("\uA292")}).to.throw(Error, "EncodingError U+A292");
expect(() => {ms932Encoder.encode("\uA293")}).to.throw(Error, "EncodingError U+A293");
expect(() => {ms932Encoder.encode("\uA294")}).to.throw(Error, "EncodingError U+A294");
expect(() => {ms932Encoder.encode("\uA295")}).to.throw(Error, "EncodingError U+A295");
expect(() => {ms932Encoder.encode("\uA296")}).to.throw(Error, "EncodingError U+A296");
expect(() => {ms932Encoder.encode("\uA297")}).to.throw(Error, "EncodingError U+A297");
expect(() => {ms932Encoder.encode("\uA298")}).to.throw(Error, "EncodingError U+A298");
expect(() => {ms932Encoder.encode("\uA299")}).to.throw(Error, "EncodingError U+A299");
expect(() => {ms932Encoder.encode("\uA29A")}).to.throw(Error, "EncodingError U+A29A");
expect(() => {ms932Encoder.encode("\uA29B")}).to.throw(Error, "EncodingError U+A29B");
expect(() => {ms932Encoder.encode("\uA29C")}).to.throw(Error, "EncodingError U+A29C");
expect(() => {ms932Encoder.encode("\uA29D")}).to.throw(Error, "EncodingError U+A29D");
expect(() => {ms932Encoder.encode("\uA29E")}).to.throw(Error, "EncodingError U+A29E");
expect(() => {ms932Encoder.encode("\uA29F")}).to.throw(Error, "EncodingError U+A29F");
expect(() => {ms932Encoder.encode("\uA2A0")}).to.throw(Error, "EncodingError U+A2A0");
expect(() => {ms932Encoder.encode("\uA2A1")}).to.throw(Error, "EncodingError U+A2A1");
expect(() => {ms932Encoder.encode("\uA2A2")}).to.throw(Error, "EncodingError U+A2A2");
expect(() => {ms932Encoder.encode("\uA2A3")}).to.throw(Error, "EncodingError U+A2A3");
expect(() => {ms932Encoder.encode("\uA2A4")}).to.throw(Error, "EncodingError U+A2A4");
expect(() => {ms932Encoder.encode("\uA2A5")}).to.throw(Error, "EncodingError U+A2A5");
expect(() => {ms932Encoder.encode("\uA2A6")}).to.throw(Error, "EncodingError U+A2A6");
expect(() => {ms932Encoder.encode("\uA2A7")}).to.throw(Error, "EncodingError U+A2A7");
expect(() => {ms932Encoder.encode("\uA2A8")}).to.throw(Error, "EncodingError U+A2A8");
expect(() => {ms932Encoder.encode("\uA2A9")}).to.throw(Error, "EncodingError U+A2A9");
expect(() => {ms932Encoder.encode("\uA2AA")}).to.throw(Error, "EncodingError U+A2AA");
expect(() => {ms932Encoder.encode("\uA2AB")}).to.throw(Error, "EncodingError U+A2AB");
expect(() => {ms932Encoder.encode("\uA2AC")}).to.throw(Error, "EncodingError U+A2AC");
expect(() => {ms932Encoder.encode("\uA2AD")}).to.throw(Error, "EncodingError U+A2AD");
expect(() => {ms932Encoder.encode("\uA2AE")}).to.throw(Error, "EncodingError U+A2AE");
expect(() => {ms932Encoder.encode("\uA2AF")}).to.throw(Error, "EncodingError U+A2AF");
expect(() => {ms932Encoder.encode("\uA2B0")}).to.throw(Error, "EncodingError U+A2B0");
expect(() => {ms932Encoder.encode("\uA2B1")}).to.throw(Error, "EncodingError U+A2B1");
expect(() => {ms932Encoder.encode("\uA2B2")}).to.throw(Error, "EncodingError U+A2B2");
expect(() => {ms932Encoder.encode("\uA2B3")}).to.throw(Error, "EncodingError U+A2B3");
expect(() => {ms932Encoder.encode("\uA2B4")}).to.throw(Error, "EncodingError U+A2B4");
expect(() => {ms932Encoder.encode("\uA2B5")}).to.throw(Error, "EncodingError U+A2B5");
expect(() => {ms932Encoder.encode("\uA2B6")}).to.throw(Error, "EncodingError U+A2B6");
expect(() => {ms932Encoder.encode("\uA2B7")}).to.throw(Error, "EncodingError U+A2B7");
expect(() => {ms932Encoder.encode("\uA2B8")}).to.throw(Error, "EncodingError U+A2B8");
expect(() => {ms932Encoder.encode("\uA2B9")}).to.throw(Error, "EncodingError U+A2B9");
expect(() => {ms932Encoder.encode("\uA2BA")}).to.throw(Error, "EncodingError U+A2BA");
expect(() => {ms932Encoder.encode("\uA2BB")}).to.throw(Error, "EncodingError U+A2BB");
expect(() => {ms932Encoder.encode("\uA2BC")}).to.throw(Error, "EncodingError U+A2BC");
expect(() => {ms932Encoder.encode("\uA2BD")}).to.throw(Error, "EncodingError U+A2BD");
expect(() => {ms932Encoder.encode("\uA2BE")}).to.throw(Error, "EncodingError U+A2BE");
expect(() => {ms932Encoder.encode("\uA2BF")}).to.throw(Error, "EncodingError U+A2BF");
expect(() => {ms932Encoder.encode("\uA2C0")}).to.throw(Error, "EncodingError U+A2C0");
expect(() => {ms932Encoder.encode("\uA2C1")}).to.throw(Error, "EncodingError U+A2C1");
expect(() => {ms932Encoder.encode("\uA2C2")}).to.throw(Error, "EncodingError U+A2C2");
expect(() => {ms932Encoder.encode("\uA2C3")}).to.throw(Error, "EncodingError U+A2C3");
expect(() => {ms932Encoder.encode("\uA2C4")}).to.throw(Error, "EncodingError U+A2C4");
expect(() => {ms932Encoder.encode("\uA2C5")}).to.throw(Error, "EncodingError U+A2C5");
expect(() => {ms932Encoder.encode("\uA2C6")}).to.throw(Error, "EncodingError U+A2C6");
expect(() => {ms932Encoder.encode("\uA2C7")}).to.throw(Error, "EncodingError U+A2C7");
expect(() => {ms932Encoder.encode("\uA2C8")}).to.throw(Error, "EncodingError U+A2C8");
expect(() => {ms932Encoder.encode("\uA2C9")}).to.throw(Error, "EncodingError U+A2C9");
expect(() => {ms932Encoder.encode("\uA2CA")}).to.throw(Error, "EncodingError U+A2CA");
expect(() => {ms932Encoder.encode("\uA2CB")}).to.throw(Error, "EncodingError U+A2CB");
expect(() => {ms932Encoder.encode("\uA2CC")}).to.throw(Error, "EncodingError U+A2CC");
expect(() => {ms932Encoder.encode("\uA2CD")}).to.throw(Error, "EncodingError U+A2CD");
expect(() => {ms932Encoder.encode("\uA2CE")}).to.throw(Error, "EncodingError U+A2CE");
expect(() => {ms932Encoder.encode("\uA2CF")}).to.throw(Error, "EncodingError U+A2CF");
expect(() => {ms932Encoder.encode("\uA2D0")}).to.throw(Error, "EncodingError U+A2D0");
expect(() => {ms932Encoder.encode("\uA2D1")}).to.throw(Error, "EncodingError U+A2D1");
expect(() => {ms932Encoder.encode("\uA2D2")}).to.throw(Error, "EncodingError U+A2D2");
expect(() => {ms932Encoder.encode("\uA2D3")}).to.throw(Error, "EncodingError U+A2D3");
expect(() => {ms932Encoder.encode("\uA2D4")}).to.throw(Error, "EncodingError U+A2D4");
expect(() => {ms932Encoder.encode("\uA2D5")}).to.throw(Error, "EncodingError U+A2D5");
expect(() => {ms932Encoder.encode("\uA2D6")}).to.throw(Error, "EncodingError U+A2D6");
expect(() => {ms932Encoder.encode("\uA2D7")}).to.throw(Error, "EncodingError U+A2D7");
expect(() => {ms932Encoder.encode("\uA2D8")}).to.throw(Error, "EncodingError U+A2D8");
expect(() => {ms932Encoder.encode("\uA2D9")}).to.throw(Error, "EncodingError U+A2D9");
expect(() => {ms932Encoder.encode("\uA2DA")}).to.throw(Error, "EncodingError U+A2DA");
expect(() => {ms932Encoder.encode("\uA2DB")}).to.throw(Error, "EncodingError U+A2DB");
expect(() => {ms932Encoder.encode("\uA2DC")}).to.throw(Error, "EncodingError U+A2DC");
expect(() => {ms932Encoder.encode("\uA2DD")}).to.throw(Error, "EncodingError U+A2DD");
expect(() => {ms932Encoder.encode("\uA2DE")}).to.throw(Error, "EncodingError U+A2DE");
expect(() => {ms932Encoder.encode("\uA2DF")}).to.throw(Error, "EncodingError U+A2DF");
expect(() => {ms932Encoder.encode("\uA2E0")}).to.throw(Error, "EncodingError U+A2E0");
expect(() => {ms932Encoder.encode("\uA2E1")}).to.throw(Error, "EncodingError U+A2E1");
expect(() => {ms932Encoder.encode("\uA2E2")}).to.throw(Error, "EncodingError U+A2E2");
expect(() => {ms932Encoder.encode("\uA2E3")}).to.throw(Error, "EncodingError U+A2E3");
expect(() => {ms932Encoder.encode("\uA2E4")}).to.throw(Error, "EncodingError U+A2E4");
expect(() => {ms932Encoder.encode("\uA2E5")}).to.throw(Error, "EncodingError U+A2E5");
expect(() => {ms932Encoder.encode("\uA2E6")}).to.throw(Error, "EncodingError U+A2E6");
expect(() => {ms932Encoder.encode("\uA2E7")}).to.throw(Error, "EncodingError U+A2E7");
expect(() => {ms932Encoder.encode("\uA2E8")}).to.throw(Error, "EncodingError U+A2E8");
expect(() => {ms932Encoder.encode("\uA2E9")}).to.throw(Error, "EncodingError U+A2E9");
expect(() => {ms932Encoder.encode("\uA2EA")}).to.throw(Error, "EncodingError U+A2EA");
expect(() => {ms932Encoder.encode("\uA2EB")}).to.throw(Error, "EncodingError U+A2EB");
expect(() => {ms932Encoder.encode("\uA2EC")}).to.throw(Error, "EncodingError U+A2EC");
expect(() => {ms932Encoder.encode("\uA2ED")}).to.throw(Error, "EncodingError U+A2ED");
expect(() => {ms932Encoder.encode("\uA2EE")}).to.throw(Error, "EncodingError U+A2EE");
expect(() => {ms932Encoder.encode("\uA2EF")}).to.throw(Error, "EncodingError U+A2EF");
expect(() => {ms932Encoder.encode("\uA2F0")}).to.throw(Error, "EncodingError U+A2F0");
expect(() => {ms932Encoder.encode("\uA2F1")}).to.throw(Error, "EncodingError U+A2F1");
expect(() => {ms932Encoder.encode("\uA2F2")}).to.throw(Error, "EncodingError U+A2F2");
expect(() => {ms932Encoder.encode("\uA2F3")}).to.throw(Error, "EncodingError U+A2F3");
expect(() => {ms932Encoder.encode("\uA2F4")}).to.throw(Error, "EncodingError U+A2F4");
expect(() => {ms932Encoder.encode("\uA2F5")}).to.throw(Error, "EncodingError U+A2F5");
expect(() => {ms932Encoder.encode("\uA2F6")}).to.throw(Error, "EncodingError U+A2F6");
expect(() => {ms932Encoder.encode("\uA2F7")}).to.throw(Error, "EncodingError U+A2F7");
expect(() => {ms932Encoder.encode("\uA2F8")}).to.throw(Error, "EncodingError U+A2F8");
expect(() => {ms932Encoder.encode("\uA2F9")}).to.throw(Error, "EncodingError U+A2F9");
expect(() => {ms932Encoder.encode("\uA2FA")}).to.throw(Error, "EncodingError U+A2FA");
expect(() => {ms932Encoder.encode("\uA2FB")}).to.throw(Error, "EncodingError U+A2FB");
expect(() => {ms932Encoder.encode("\uA2FC")}).to.throw(Error, "EncodingError U+A2FC");
expect(() => {ms932Encoder.encode("\uA2FD")}).to.throw(Error, "EncodingError U+A2FD");
expect(() => {ms932Encoder.encode("\uA2FE")}).to.throw(Error, "EncodingError U+A2FE");
expect(() => {ms932Encoder.encode("\uA2FF")}).to.throw(Error, "EncodingError U+A2FF");
expect(() => {ms932Encoder.encode("\uA300")}).to.throw(Error, "EncodingError U+A300");
expect(() => {ms932Encoder.encode("\uA301")}).to.throw(Error, "EncodingError U+A301");
expect(() => {ms932Encoder.encode("\uA302")}).to.throw(Error, "EncodingError U+A302");
expect(() => {ms932Encoder.encode("\uA303")}).to.throw(Error, "EncodingError U+A303");
expect(() => {ms932Encoder.encode("\uA304")}).to.throw(Error, "EncodingError U+A304");
expect(() => {ms932Encoder.encode("\uA305")}).to.throw(Error, "EncodingError U+A305");
expect(() => {ms932Encoder.encode("\uA306")}).to.throw(Error, "EncodingError U+A306");
expect(() => {ms932Encoder.encode("\uA307")}).to.throw(Error, "EncodingError U+A307");
expect(() => {ms932Encoder.encode("\uA308")}).to.throw(Error, "EncodingError U+A308");
expect(() => {ms932Encoder.encode("\uA309")}).to.throw(Error, "EncodingError U+A309");
expect(() => {ms932Encoder.encode("\uA30A")}).to.throw(Error, "EncodingError U+A30A");
expect(() => {ms932Encoder.encode("\uA30B")}).to.throw(Error, "EncodingError U+A30B");
expect(() => {ms932Encoder.encode("\uA30C")}).to.throw(Error, "EncodingError U+A30C");
expect(() => {ms932Encoder.encode("\uA30D")}).to.throw(Error, "EncodingError U+A30D");
expect(() => {ms932Encoder.encode("\uA30E")}).to.throw(Error, "EncodingError U+A30E");
expect(() => {ms932Encoder.encode("\uA30F")}).to.throw(Error, "EncodingError U+A30F");
expect(() => {ms932Encoder.encode("\uA310")}).to.throw(Error, "EncodingError U+A310");
expect(() => {ms932Encoder.encode("\uA311")}).to.throw(Error, "EncodingError U+A311");
expect(() => {ms932Encoder.encode("\uA312")}).to.throw(Error, "EncodingError U+A312");
expect(() => {ms932Encoder.encode("\uA313")}).to.throw(Error, "EncodingError U+A313");
expect(() => {ms932Encoder.encode("\uA314")}).to.throw(Error, "EncodingError U+A314");
expect(() => {ms932Encoder.encode("\uA315")}).to.throw(Error, "EncodingError U+A315");
expect(() => {ms932Encoder.encode("\uA316")}).to.throw(Error, "EncodingError U+A316");
expect(() => {ms932Encoder.encode("\uA317")}).to.throw(Error, "EncodingError U+A317");
expect(() => {ms932Encoder.encode("\uA318")}).to.throw(Error, "EncodingError U+A318");
expect(() => {ms932Encoder.encode("\uA319")}).to.throw(Error, "EncodingError U+A319");
expect(() => {ms932Encoder.encode("\uA31A")}).to.throw(Error, "EncodingError U+A31A");
expect(() => {ms932Encoder.encode("\uA31B")}).to.throw(Error, "EncodingError U+A31B");
expect(() => {ms932Encoder.encode("\uA31C")}).to.throw(Error, "EncodingError U+A31C");
expect(() => {ms932Encoder.encode("\uA31D")}).to.throw(Error, "EncodingError U+A31D");
expect(() => {ms932Encoder.encode("\uA31E")}).to.throw(Error, "EncodingError U+A31E");
expect(() => {ms932Encoder.encode("\uA31F")}).to.throw(Error, "EncodingError U+A31F");
expect(() => {ms932Encoder.encode("\uA320")}).to.throw(Error, "EncodingError U+A320");
expect(() => {ms932Encoder.encode("\uA321")}).to.throw(Error, "EncodingError U+A321");
expect(() => {ms932Encoder.encode("\uA322")}).to.throw(Error, "EncodingError U+A322");
expect(() => {ms932Encoder.encode("\uA323")}).to.throw(Error, "EncodingError U+A323");
expect(() => {ms932Encoder.encode("\uA324")}).to.throw(Error, "EncodingError U+A324");
expect(() => {ms932Encoder.encode("\uA325")}).to.throw(Error, "EncodingError U+A325");
expect(() => {ms932Encoder.encode("\uA326")}).to.throw(Error, "EncodingError U+A326");
expect(() => {ms932Encoder.encode("\uA327")}).to.throw(Error, "EncodingError U+A327");
expect(() => {ms932Encoder.encode("\uA328")}).to.throw(Error, "EncodingError U+A328");
expect(() => {ms932Encoder.encode("\uA329")}).to.throw(Error, "EncodingError U+A329");
expect(() => {ms932Encoder.encode("\uA32A")}).to.throw(Error, "EncodingError U+A32A");
expect(() => {ms932Encoder.encode("\uA32B")}).to.throw(Error, "EncodingError U+A32B");
expect(() => {ms932Encoder.encode("\uA32C")}).to.throw(Error, "EncodingError U+A32C");
expect(() => {ms932Encoder.encode("\uA32D")}).to.throw(Error, "EncodingError U+A32D");
expect(() => {ms932Encoder.encode("\uA32E")}).to.throw(Error, "EncodingError U+A32E");
expect(() => {ms932Encoder.encode("\uA32F")}).to.throw(Error, "EncodingError U+A32F");
expect(() => {ms932Encoder.encode("\uA330")}).to.throw(Error, "EncodingError U+A330");
expect(() => {ms932Encoder.encode("\uA331")}).to.throw(Error, "EncodingError U+A331");
expect(() => {ms932Encoder.encode("\uA332")}).to.throw(Error, "EncodingError U+A332");
expect(() => {ms932Encoder.encode("\uA333")}).to.throw(Error, "EncodingError U+A333");
expect(() => {ms932Encoder.encode("\uA334")}).to.throw(Error, "EncodingError U+A334");
expect(() => {ms932Encoder.encode("\uA335")}).to.throw(Error, "EncodingError U+A335");
expect(() => {ms932Encoder.encode("\uA336")}).to.throw(Error, "EncodingError U+A336");
expect(() => {ms932Encoder.encode("\uA337")}).to.throw(Error, "EncodingError U+A337");
expect(() => {ms932Encoder.encode("\uA338")}).to.throw(Error, "EncodingError U+A338");
expect(() => {ms932Encoder.encode("\uA339")}).to.throw(Error, "EncodingError U+A339");
expect(() => {ms932Encoder.encode("\uA33A")}).to.throw(Error, "EncodingError U+A33A");
expect(() => {ms932Encoder.encode("\uA33B")}).to.throw(Error, "EncodingError U+A33B");
expect(() => {ms932Encoder.encode("\uA33C")}).to.throw(Error, "EncodingError U+A33C");
expect(() => {ms932Encoder.encode("\uA33D")}).to.throw(Error, "EncodingError U+A33D");
expect(() => {ms932Encoder.encode("\uA33E")}).to.throw(Error, "EncodingError U+A33E");
expect(() => {ms932Encoder.encode("\uA33F")}).to.throw(Error, "EncodingError U+A33F");
expect(() => {ms932Encoder.encode("\uA340")}).to.throw(Error, "EncodingError U+A340");
expect(() => {ms932Encoder.encode("\uA341")}).to.throw(Error, "EncodingError U+A341");
expect(() => {ms932Encoder.encode("\uA342")}).to.throw(Error, "EncodingError U+A342");
expect(() => {ms932Encoder.encode("\uA343")}).to.throw(Error, "EncodingError U+A343");
expect(() => {ms932Encoder.encode("\uA344")}).to.throw(Error, "EncodingError U+A344");
expect(() => {ms932Encoder.encode("\uA345")}).to.throw(Error, "EncodingError U+A345");
expect(() => {ms932Encoder.encode("\uA346")}).to.throw(Error, "EncodingError U+A346");
expect(() => {ms932Encoder.encode("\uA347")}).to.throw(Error, "EncodingError U+A347");
expect(() => {ms932Encoder.encode("\uA348")}).to.throw(Error, "EncodingError U+A348");
expect(() => {ms932Encoder.encode("\uA349")}).to.throw(Error, "EncodingError U+A349");
expect(() => {ms932Encoder.encode("\uA34A")}).to.throw(Error, "EncodingError U+A34A");
expect(() => {ms932Encoder.encode("\uA34B")}).to.throw(Error, "EncodingError U+A34B");
expect(() => {ms932Encoder.encode("\uA34C")}).to.throw(Error, "EncodingError U+A34C");
expect(() => {ms932Encoder.encode("\uA34D")}).to.throw(Error, "EncodingError U+A34D");
expect(() => {ms932Encoder.encode("\uA34E")}).to.throw(Error, "EncodingError U+A34E");
expect(() => {ms932Encoder.encode("\uA34F")}).to.throw(Error, "EncodingError U+A34F");
expect(() => {ms932Encoder.encode("\uA350")}).to.throw(Error, "EncodingError U+A350");
expect(() => {ms932Encoder.encode("\uA351")}).to.throw(Error, "EncodingError U+A351");
expect(() => {ms932Encoder.encode("\uA352")}).to.throw(Error, "EncodingError U+A352");
expect(() => {ms932Encoder.encode("\uA353")}).to.throw(Error, "EncodingError U+A353");
expect(() => {ms932Encoder.encode("\uA354")}).to.throw(Error, "EncodingError U+A354");
expect(() => {ms932Encoder.encode("\uA355")}).to.throw(Error, "EncodingError U+A355");
expect(() => {ms932Encoder.encode("\uA356")}).to.throw(Error, "EncodingError U+A356");
expect(() => {ms932Encoder.encode("\uA357")}).to.throw(Error, "EncodingError U+A357");
expect(() => {ms932Encoder.encode("\uA358")}).to.throw(Error, "EncodingError U+A358");
expect(() => {ms932Encoder.encode("\uA359")}).to.throw(Error, "EncodingError U+A359");
expect(() => {ms932Encoder.encode("\uA35A")}).to.throw(Error, "EncodingError U+A35A");
expect(() => {ms932Encoder.encode("\uA35B")}).to.throw(Error, "EncodingError U+A35B");
expect(() => {ms932Encoder.encode("\uA35C")}).to.throw(Error, "EncodingError U+A35C");
expect(() => {ms932Encoder.encode("\uA35D")}).to.throw(Error, "EncodingError U+A35D");
expect(() => {ms932Encoder.encode("\uA35E")}).to.throw(Error, "EncodingError U+A35E");
expect(() => {ms932Encoder.encode("\uA35F")}).to.throw(Error, "EncodingError U+A35F");
expect(() => {ms932Encoder.encode("\uA360")}).to.throw(Error, "EncodingError U+A360");
expect(() => {ms932Encoder.encode("\uA361")}).to.throw(Error, "EncodingError U+A361");
expect(() => {ms932Encoder.encode("\uA362")}).to.throw(Error, "EncodingError U+A362");
expect(() => {ms932Encoder.encode("\uA363")}).to.throw(Error, "EncodingError U+A363");
expect(() => {ms932Encoder.encode("\uA364")}).to.throw(Error, "EncodingError U+A364");
expect(() => {ms932Encoder.encode("\uA365")}).to.throw(Error, "EncodingError U+A365");
expect(() => {ms932Encoder.encode("\uA366")}).to.throw(Error, "EncodingError U+A366");
expect(() => {ms932Encoder.encode("\uA367")}).to.throw(Error, "EncodingError U+A367");
expect(() => {ms932Encoder.encode("\uA368")}).to.throw(Error, "EncodingError U+A368");
expect(() => {ms932Encoder.encode("\uA369")}).to.throw(Error, "EncodingError U+A369");
expect(() => {ms932Encoder.encode("\uA36A")}).to.throw(Error, "EncodingError U+A36A");
expect(() => {ms932Encoder.encode("\uA36B")}).to.throw(Error, "EncodingError U+A36B");
expect(() => {ms932Encoder.encode("\uA36C")}).to.throw(Error, "EncodingError U+A36C");
expect(() => {ms932Encoder.encode("\uA36D")}).to.throw(Error, "EncodingError U+A36D");
expect(() => {ms932Encoder.encode("\uA36E")}).to.throw(Error, "EncodingError U+A36E");
expect(() => {ms932Encoder.encode("\uA36F")}).to.throw(Error, "EncodingError U+A36F");
expect(() => {ms932Encoder.encode("\uA370")}).to.throw(Error, "EncodingError U+A370");
expect(() => {ms932Encoder.encode("\uA371")}).to.throw(Error, "EncodingError U+A371");
expect(() => {ms932Encoder.encode("\uA372")}).to.throw(Error, "EncodingError U+A372");
expect(() => {ms932Encoder.encode("\uA373")}).to.throw(Error, "EncodingError U+A373");
expect(() => {ms932Encoder.encode("\uA374")}).to.throw(Error, "EncodingError U+A374");
expect(() => {ms932Encoder.encode("\uA375")}).to.throw(Error, "EncodingError U+A375");
expect(() => {ms932Encoder.encode("\uA376")}).to.throw(Error, "EncodingError U+A376");
expect(() => {ms932Encoder.encode("\uA377")}).to.throw(Error, "EncodingError U+A377");
expect(() => {ms932Encoder.encode("\uA378")}).to.throw(Error, "EncodingError U+A378");
expect(() => {ms932Encoder.encode("\uA379")}).to.throw(Error, "EncodingError U+A379");
expect(() => {ms932Encoder.encode("\uA37A")}).to.throw(Error, "EncodingError U+A37A");
expect(() => {ms932Encoder.encode("\uA37B")}).to.throw(Error, "EncodingError U+A37B");
expect(() => {ms932Encoder.encode("\uA37C")}).to.throw(Error, "EncodingError U+A37C");
expect(() => {ms932Encoder.encode("\uA37D")}).to.throw(Error, "EncodingError U+A37D");
expect(() => {ms932Encoder.encode("\uA37E")}).to.throw(Error, "EncodingError U+A37E");
expect(() => {ms932Encoder.encode("\uA37F")}).to.throw(Error, "EncodingError U+A37F");
expect(() => {ms932Encoder.encode("\uA380")}).to.throw(Error, "EncodingError U+A380");
expect(() => {ms932Encoder.encode("\uA381")}).to.throw(Error, "EncodingError U+A381");
expect(() => {ms932Encoder.encode("\uA382")}).to.throw(Error, "EncodingError U+A382");
expect(() => {ms932Encoder.encode("\uA383")}).to.throw(Error, "EncodingError U+A383");
expect(() => {ms932Encoder.encode("\uA384")}).to.throw(Error, "EncodingError U+A384");
expect(() => {ms932Encoder.encode("\uA385")}).to.throw(Error, "EncodingError U+A385");
expect(() => {ms932Encoder.encode("\uA386")}).to.throw(Error, "EncodingError U+A386");
expect(() => {ms932Encoder.encode("\uA387")}).to.throw(Error, "EncodingError U+A387");
expect(() => {ms932Encoder.encode("\uA388")}).to.throw(Error, "EncodingError U+A388");
expect(() => {ms932Encoder.encode("\uA389")}).to.throw(Error, "EncodingError U+A389");
expect(() => {ms932Encoder.encode("\uA38A")}).to.throw(Error, "EncodingError U+A38A");
expect(() => {ms932Encoder.encode("\uA38B")}).to.throw(Error, "EncodingError U+A38B");
expect(() => {ms932Encoder.encode("\uA38C")}).to.throw(Error, "EncodingError U+A38C");
expect(() => {ms932Encoder.encode("\uA38D")}).to.throw(Error, "EncodingError U+A38D");
expect(() => {ms932Encoder.encode("\uA38E")}).to.throw(Error, "EncodingError U+A38E");
expect(() => {ms932Encoder.encode("\uA38F")}).to.throw(Error, "EncodingError U+A38F");
expect(() => {ms932Encoder.encode("\uA390")}).to.throw(Error, "EncodingError U+A390");
expect(() => {ms932Encoder.encode("\uA391")}).to.throw(Error, "EncodingError U+A391");
expect(() => {ms932Encoder.encode("\uA392")}).to.throw(Error, "EncodingError U+A392");
expect(() => {ms932Encoder.encode("\uA393")}).to.throw(Error, "EncodingError U+A393");
expect(() => {ms932Encoder.encode("\uA394")}).to.throw(Error, "EncodingError U+A394");
expect(() => {ms932Encoder.encode("\uA395")}).to.throw(Error, "EncodingError U+A395");
expect(() => {ms932Encoder.encode("\uA396")}).to.throw(Error, "EncodingError U+A396");
expect(() => {ms932Encoder.encode("\uA397")}).to.throw(Error, "EncodingError U+A397");
expect(() => {ms932Encoder.encode("\uA398")}).to.throw(Error, "EncodingError U+A398");
expect(() => {ms932Encoder.encode("\uA399")}).to.throw(Error, "EncodingError U+A399");
expect(() => {ms932Encoder.encode("\uA39A")}).to.throw(Error, "EncodingError U+A39A");
expect(() => {ms932Encoder.encode("\uA39B")}).to.throw(Error, "EncodingError U+A39B");
expect(() => {ms932Encoder.encode("\uA39C")}).to.throw(Error, "EncodingError U+A39C");
expect(() => {ms932Encoder.encode("\uA39D")}).to.throw(Error, "EncodingError U+A39D");
expect(() => {ms932Encoder.encode("\uA39E")}).to.throw(Error, "EncodingError U+A39E");
expect(() => {ms932Encoder.encode("\uA39F")}).to.throw(Error, "EncodingError U+A39F");
expect(() => {ms932Encoder.encode("\uA3A0")}).to.throw(Error, "EncodingError U+A3A0");
expect(() => {ms932Encoder.encode("\uA3A1")}).to.throw(Error, "EncodingError U+A3A1");
expect(() => {ms932Encoder.encode("\uA3A2")}).to.throw(Error, "EncodingError U+A3A2");
expect(() => {ms932Encoder.encode("\uA3A3")}).to.throw(Error, "EncodingError U+A3A3");
expect(() => {ms932Encoder.encode("\uA3A4")}).to.throw(Error, "EncodingError U+A3A4");
expect(() => {ms932Encoder.encode("\uA3A5")}).to.throw(Error, "EncodingError U+A3A5");
expect(() => {ms932Encoder.encode("\uA3A6")}).to.throw(Error, "EncodingError U+A3A6");
expect(() => {ms932Encoder.encode("\uA3A7")}).to.throw(Error, "EncodingError U+A3A7");
expect(() => {ms932Encoder.encode("\uA3A8")}).to.throw(Error, "EncodingError U+A3A8");
expect(() => {ms932Encoder.encode("\uA3A9")}).to.throw(Error, "EncodingError U+A3A9");
expect(() => {ms932Encoder.encode("\uA3AA")}).to.throw(Error, "EncodingError U+A3AA");
expect(() => {ms932Encoder.encode("\uA3AB")}).to.throw(Error, "EncodingError U+A3AB");
expect(() => {ms932Encoder.encode("\uA3AC")}).to.throw(Error, "EncodingError U+A3AC");
expect(() => {ms932Encoder.encode("\uA3AD")}).to.throw(Error, "EncodingError U+A3AD");
expect(() => {ms932Encoder.encode("\uA3AE")}).to.throw(Error, "EncodingError U+A3AE");
expect(() => {ms932Encoder.encode("\uA3AF")}).to.throw(Error, "EncodingError U+A3AF");
expect(() => {ms932Encoder.encode("\uA3B0")}).to.throw(Error, "EncodingError U+A3B0");
expect(() => {ms932Encoder.encode("\uA3B1")}).to.throw(Error, "EncodingError U+A3B1");
expect(() => {ms932Encoder.encode("\uA3B2")}).to.throw(Error, "EncodingError U+A3B2");
expect(() => {ms932Encoder.encode("\uA3B3")}).to.throw(Error, "EncodingError U+A3B3");
expect(() => {ms932Encoder.encode("\uA3B4")}).to.throw(Error, "EncodingError U+A3B4");
expect(() => {ms932Encoder.encode("\uA3B5")}).to.throw(Error, "EncodingError U+A3B5");
expect(() => {ms932Encoder.encode("\uA3B6")}).to.throw(Error, "EncodingError U+A3B6");
expect(() => {ms932Encoder.encode("\uA3B7")}).to.throw(Error, "EncodingError U+A3B7");
expect(() => {ms932Encoder.encode("\uA3B8")}).to.throw(Error, "EncodingError U+A3B8");
expect(() => {ms932Encoder.encode("\uA3B9")}).to.throw(Error, "EncodingError U+A3B9");
expect(() => {ms932Encoder.encode("\uA3BA")}).to.throw(Error, "EncodingError U+A3BA");
expect(() => {ms932Encoder.encode("\uA3BB")}).to.throw(Error, "EncodingError U+A3BB");
expect(() => {ms932Encoder.encode("\uA3BC")}).to.throw(Error, "EncodingError U+A3BC");
expect(() => {ms932Encoder.encode("\uA3BD")}).to.throw(Error, "EncodingError U+A3BD");
expect(() => {ms932Encoder.encode("\uA3BE")}).to.throw(Error, "EncodingError U+A3BE");
expect(() => {ms932Encoder.encode("\uA3BF")}).to.throw(Error, "EncodingError U+A3BF");
expect(() => {ms932Encoder.encode("\uA3C0")}).to.throw(Error, "EncodingError U+A3C0");
expect(() => {ms932Encoder.encode("\uA3C1")}).to.throw(Error, "EncodingError U+A3C1");
expect(() => {ms932Encoder.encode("\uA3C2")}).to.throw(Error, "EncodingError U+A3C2");
expect(() => {ms932Encoder.encode("\uA3C3")}).to.throw(Error, "EncodingError U+A3C3");
expect(() => {ms932Encoder.encode("\uA3C4")}).to.throw(Error, "EncodingError U+A3C4");
expect(() => {ms932Encoder.encode("\uA3C5")}).to.throw(Error, "EncodingError U+A3C5");
expect(() => {ms932Encoder.encode("\uA3C6")}).to.throw(Error, "EncodingError U+A3C6");
expect(() => {ms932Encoder.encode("\uA3C7")}).to.throw(Error, "EncodingError U+A3C7");
expect(() => {ms932Encoder.encode("\uA3C8")}).to.throw(Error, "EncodingError U+A3C8");
expect(() => {ms932Encoder.encode("\uA3C9")}).to.throw(Error, "EncodingError U+A3C9");
expect(() => {ms932Encoder.encode("\uA3CA")}).to.throw(Error, "EncodingError U+A3CA");
expect(() => {ms932Encoder.encode("\uA3CB")}).to.throw(Error, "EncodingError U+A3CB");
expect(() => {ms932Encoder.encode("\uA3CC")}).to.throw(Error, "EncodingError U+A3CC");
expect(() => {ms932Encoder.encode("\uA3CD")}).to.throw(Error, "EncodingError U+A3CD");
expect(() => {ms932Encoder.encode("\uA3CE")}).to.throw(Error, "EncodingError U+A3CE");
expect(() => {ms932Encoder.encode("\uA3CF")}).to.throw(Error, "EncodingError U+A3CF");
expect(() => {ms932Encoder.encode("\uA3D0")}).to.throw(Error, "EncodingError U+A3D0");
expect(() => {ms932Encoder.encode("\uA3D1")}).to.throw(Error, "EncodingError U+A3D1");
expect(() => {ms932Encoder.encode("\uA3D2")}).to.throw(Error, "EncodingError U+A3D2");
expect(() => {ms932Encoder.encode("\uA3D3")}).to.throw(Error, "EncodingError U+A3D3");
expect(() => {ms932Encoder.encode("\uA3D4")}).to.throw(Error, "EncodingError U+A3D4");
expect(() => {ms932Encoder.encode("\uA3D5")}).to.throw(Error, "EncodingError U+A3D5");
expect(() => {ms932Encoder.encode("\uA3D6")}).to.throw(Error, "EncodingError U+A3D6");
expect(() => {ms932Encoder.encode("\uA3D7")}).to.throw(Error, "EncodingError U+A3D7");
expect(() => {ms932Encoder.encode("\uA3D8")}).to.throw(Error, "EncodingError U+A3D8");
expect(() => {ms932Encoder.encode("\uA3D9")}).to.throw(Error, "EncodingError U+A3D9");
expect(() => {ms932Encoder.encode("\uA3DA")}).to.throw(Error, "EncodingError U+A3DA");
expect(() => {ms932Encoder.encode("\uA3DB")}).to.throw(Error, "EncodingError U+A3DB");
expect(() => {ms932Encoder.encode("\uA3DC")}).to.throw(Error, "EncodingError U+A3DC");
expect(() => {ms932Encoder.encode("\uA3DD")}).to.throw(Error, "EncodingError U+A3DD");
expect(() => {ms932Encoder.encode("\uA3DE")}).to.throw(Error, "EncodingError U+A3DE");
expect(() => {ms932Encoder.encode("\uA3DF")}).to.throw(Error, "EncodingError U+A3DF");
expect(() => {ms932Encoder.encode("\uA3E0")}).to.throw(Error, "EncodingError U+A3E0");
expect(() => {ms932Encoder.encode("\uA3E1")}).to.throw(Error, "EncodingError U+A3E1");
expect(() => {ms932Encoder.encode("\uA3E2")}).to.throw(Error, "EncodingError U+A3E2");
expect(() => {ms932Encoder.encode("\uA3E3")}).to.throw(Error, "EncodingError U+A3E3");
expect(() => {ms932Encoder.encode("\uA3E4")}).to.throw(Error, "EncodingError U+A3E4");
expect(() => {ms932Encoder.encode("\uA3E5")}).to.throw(Error, "EncodingError U+A3E5");
expect(() => {ms932Encoder.encode("\uA3E6")}).to.throw(Error, "EncodingError U+A3E6");
expect(() => {ms932Encoder.encode("\uA3E7")}).to.throw(Error, "EncodingError U+A3E7");
expect(() => {ms932Encoder.encode("\uA3E8")}).to.throw(Error, "EncodingError U+A3E8");
expect(() => {ms932Encoder.encode("\uA3E9")}).to.throw(Error, "EncodingError U+A3E9");
expect(() => {ms932Encoder.encode("\uA3EA")}).to.throw(Error, "EncodingError U+A3EA");
expect(() => {ms932Encoder.encode("\uA3EB")}).to.throw(Error, "EncodingError U+A3EB");
expect(() => {ms932Encoder.encode("\uA3EC")}).to.throw(Error, "EncodingError U+A3EC");
expect(() => {ms932Encoder.encode("\uA3ED")}).to.throw(Error, "EncodingError U+A3ED");
expect(() => {ms932Encoder.encode("\uA3EE")}).to.throw(Error, "EncodingError U+A3EE");
expect(() => {ms932Encoder.encode("\uA3EF")}).to.throw(Error, "EncodingError U+A3EF");
expect(() => {ms932Encoder.encode("\uA3F0")}).to.throw(Error, "EncodingError U+A3F0");
expect(() => {ms932Encoder.encode("\uA3F1")}).to.throw(Error, "EncodingError U+A3F1");
expect(() => {ms932Encoder.encode("\uA3F2")}).to.throw(Error, "EncodingError U+A3F2");
expect(() => {ms932Encoder.encode("\uA3F3")}).to.throw(Error, "EncodingError U+A3F3");
expect(() => {ms932Encoder.encode("\uA3F4")}).to.throw(Error, "EncodingError U+A3F4");
expect(() => {ms932Encoder.encode("\uA3F5")}).to.throw(Error, "EncodingError U+A3F5");
expect(() => {ms932Encoder.encode("\uA3F6")}).to.throw(Error, "EncodingError U+A3F6");
expect(() => {ms932Encoder.encode("\uA3F7")}).to.throw(Error, "EncodingError U+A3F7");
expect(() => {ms932Encoder.encode("\uA3F8")}).to.throw(Error, "EncodingError U+A3F8");
expect(() => {ms932Encoder.encode("\uA3F9")}).to.throw(Error, "EncodingError U+A3F9");
expect(() => {ms932Encoder.encode("\uA3FA")}).to.throw(Error, "EncodingError U+A3FA");
expect(() => {ms932Encoder.encode("\uA3FB")}).to.throw(Error, "EncodingError U+A3FB");
expect(() => {ms932Encoder.encode("\uA3FC")}).to.throw(Error, "EncodingError U+A3FC");
expect(() => {ms932Encoder.encode("\uA3FD")}).to.throw(Error, "EncodingError U+A3FD");
expect(() => {ms932Encoder.encode("\uA3FE")}).to.throw(Error, "EncodingError U+A3FE");
expect(() => {ms932Encoder.encode("\uA3FF")}).to.throw(Error, "EncodingError U+A3FF");
expect(() => {ms932Encoder.encode("\uA400")}).to.throw(Error, "EncodingError U+A400");
expect(() => {ms932Encoder.encode("\uA401")}).to.throw(Error, "EncodingError U+A401");
expect(() => {ms932Encoder.encode("\uA402")}).to.throw(Error, "EncodingError U+A402");
expect(() => {ms932Encoder.encode("\uA403")}).to.throw(Error, "EncodingError U+A403");
expect(() => {ms932Encoder.encode("\uA404")}).to.throw(Error, "EncodingError U+A404");
expect(() => {ms932Encoder.encode("\uA405")}).to.throw(Error, "EncodingError U+A405");
expect(() => {ms932Encoder.encode("\uA406")}).to.throw(Error, "EncodingError U+A406");
expect(() => {ms932Encoder.encode("\uA407")}).to.throw(Error, "EncodingError U+A407");
expect(() => {ms932Encoder.encode("\uA408")}).to.throw(Error, "EncodingError U+A408");
expect(() => {ms932Encoder.encode("\uA409")}).to.throw(Error, "EncodingError U+A409");
expect(() => {ms932Encoder.encode("\uA40A")}).to.throw(Error, "EncodingError U+A40A");
expect(() => {ms932Encoder.encode("\uA40B")}).to.throw(Error, "EncodingError U+A40B");
expect(() => {ms932Encoder.encode("\uA40C")}).to.throw(Error, "EncodingError U+A40C");
expect(() => {ms932Encoder.encode("\uA40D")}).to.throw(Error, "EncodingError U+A40D");
expect(() => {ms932Encoder.encode("\uA40E")}).to.throw(Error, "EncodingError U+A40E");
expect(() => {ms932Encoder.encode("\uA40F")}).to.throw(Error, "EncodingError U+A40F");
expect(() => {ms932Encoder.encode("\uA410")}).to.throw(Error, "EncodingError U+A410");
expect(() => {ms932Encoder.encode("\uA411")}).to.throw(Error, "EncodingError U+A411");
expect(() => {ms932Encoder.encode("\uA412")}).to.throw(Error, "EncodingError U+A412");
expect(() => {ms932Encoder.encode("\uA413")}).to.throw(Error, "EncodingError U+A413");
expect(() => {ms932Encoder.encode("\uA414")}).to.throw(Error, "EncodingError U+A414");
expect(() => {ms932Encoder.encode("\uA415")}).to.throw(Error, "EncodingError U+A415");
expect(() => {ms932Encoder.encode("\uA416")}).to.throw(Error, "EncodingError U+A416");
expect(() => {ms932Encoder.encode("\uA417")}).to.throw(Error, "EncodingError U+A417");
expect(() => {ms932Encoder.encode("\uA418")}).to.throw(Error, "EncodingError U+A418");
expect(() => {ms932Encoder.encode("\uA419")}).to.throw(Error, "EncodingError U+A419");
expect(() => {ms932Encoder.encode("\uA41A")}).to.throw(Error, "EncodingError U+A41A");
expect(() => {ms932Encoder.encode("\uA41B")}).to.throw(Error, "EncodingError U+A41B");
expect(() => {ms932Encoder.encode("\uA41C")}).to.throw(Error, "EncodingError U+A41C");
expect(() => {ms932Encoder.encode("\uA41D")}).to.throw(Error, "EncodingError U+A41D");
expect(() => {ms932Encoder.encode("\uA41E")}).to.throw(Error, "EncodingError U+A41E");
expect(() => {ms932Encoder.encode("\uA41F")}).to.throw(Error, "EncodingError U+A41F");
expect(() => {ms932Encoder.encode("\uA420")}).to.throw(Error, "EncodingError U+A420");
expect(() => {ms932Encoder.encode("\uA421")}).to.throw(Error, "EncodingError U+A421");
expect(() => {ms932Encoder.encode("\uA422")}).to.throw(Error, "EncodingError U+A422");
expect(() => {ms932Encoder.encode("\uA423")}).to.throw(Error, "EncodingError U+A423");
expect(() => {ms932Encoder.encode("\uA424")}).to.throw(Error, "EncodingError U+A424");
expect(() => {ms932Encoder.encode("\uA425")}).to.throw(Error, "EncodingError U+A425");
expect(() => {ms932Encoder.encode("\uA426")}).to.throw(Error, "EncodingError U+A426");
expect(() => {ms932Encoder.encode("\uA427")}).to.throw(Error, "EncodingError U+A427");
expect(() => {ms932Encoder.encode("\uA428")}).to.throw(Error, "EncodingError U+A428");
expect(() => {ms932Encoder.encode("\uA429")}).to.throw(Error, "EncodingError U+A429");
expect(() => {ms932Encoder.encode("\uA42A")}).to.throw(Error, "EncodingError U+A42A");
expect(() => {ms932Encoder.encode("\uA42B")}).to.throw(Error, "EncodingError U+A42B");
expect(() => {ms932Encoder.encode("\uA42C")}).to.throw(Error, "EncodingError U+A42C");
expect(() => {ms932Encoder.encode("\uA42D")}).to.throw(Error, "EncodingError U+A42D");
expect(() => {ms932Encoder.encode("\uA42E")}).to.throw(Error, "EncodingError U+A42E");
expect(() => {ms932Encoder.encode("\uA42F")}).to.throw(Error, "EncodingError U+A42F");
expect(() => {ms932Encoder.encode("\uA430")}).to.throw(Error, "EncodingError U+A430");
expect(() => {ms932Encoder.encode("\uA431")}).to.throw(Error, "EncodingError U+A431");
expect(() => {ms932Encoder.encode("\uA432")}).to.throw(Error, "EncodingError U+A432");
expect(() => {ms932Encoder.encode("\uA433")}).to.throw(Error, "EncodingError U+A433");
expect(() => {ms932Encoder.encode("\uA434")}).to.throw(Error, "EncodingError U+A434");
expect(() => {ms932Encoder.encode("\uA435")}).to.throw(Error, "EncodingError U+A435");
expect(() => {ms932Encoder.encode("\uA436")}).to.throw(Error, "EncodingError U+A436");
expect(() => {ms932Encoder.encode("\uA437")}).to.throw(Error, "EncodingError U+A437");
expect(() => {ms932Encoder.encode("\uA438")}).to.throw(Error, "EncodingError U+A438");
expect(() => {ms932Encoder.encode("\uA439")}).to.throw(Error, "EncodingError U+A439");
expect(() => {ms932Encoder.encode("\uA43A")}).to.throw(Error, "EncodingError U+A43A");
expect(() => {ms932Encoder.encode("\uA43B")}).to.throw(Error, "EncodingError U+A43B");
expect(() => {ms932Encoder.encode("\uA43C")}).to.throw(Error, "EncodingError U+A43C");
expect(() => {ms932Encoder.encode("\uA43D")}).to.throw(Error, "EncodingError U+A43D");
expect(() => {ms932Encoder.encode("\uA43E")}).to.throw(Error, "EncodingError U+A43E");
expect(() => {ms932Encoder.encode("\uA43F")}).to.throw(Error, "EncodingError U+A43F");
expect(() => {ms932Encoder.encode("\uA440")}).to.throw(Error, "EncodingError U+A440");
expect(() => {ms932Encoder.encode("\uA441")}).to.throw(Error, "EncodingError U+A441");
expect(() => {ms932Encoder.encode("\uA442")}).to.throw(Error, "EncodingError U+A442");
expect(() => {ms932Encoder.encode("\uA443")}).to.throw(Error, "EncodingError U+A443");
expect(() => {ms932Encoder.encode("\uA444")}).to.throw(Error, "EncodingError U+A444");
expect(() => {ms932Encoder.encode("\uA445")}).to.throw(Error, "EncodingError U+A445");
expect(() => {ms932Encoder.encode("\uA446")}).to.throw(Error, "EncodingError U+A446");
expect(() => {ms932Encoder.encode("\uA447")}).to.throw(Error, "EncodingError U+A447");
expect(() => {ms932Encoder.encode("\uA448")}).to.throw(Error, "EncodingError U+A448");
expect(() => {ms932Encoder.encode("\uA449")}).to.throw(Error, "EncodingError U+A449");
expect(() => {ms932Encoder.encode("\uA44A")}).to.throw(Error, "EncodingError U+A44A");
expect(() => {ms932Encoder.encode("\uA44B")}).to.throw(Error, "EncodingError U+A44B");
expect(() => {ms932Encoder.encode("\uA44C")}).to.throw(Error, "EncodingError U+A44C");
expect(() => {ms932Encoder.encode("\uA44D")}).to.throw(Error, "EncodingError U+A44D");
expect(() => {ms932Encoder.encode("\uA44E")}).to.throw(Error, "EncodingError U+A44E");
expect(() => {ms932Encoder.encode("\uA44F")}).to.throw(Error, "EncodingError U+A44F");
expect(() => {ms932Encoder.encode("\uA450")}).to.throw(Error, "EncodingError U+A450");
expect(() => {ms932Encoder.encode("\uA451")}).to.throw(Error, "EncodingError U+A451");
expect(() => {ms932Encoder.encode("\uA452")}).to.throw(Error, "EncodingError U+A452");
expect(() => {ms932Encoder.encode("\uA453")}).to.throw(Error, "EncodingError U+A453");
expect(() => {ms932Encoder.encode("\uA454")}).to.throw(Error, "EncodingError U+A454");
expect(() => {ms932Encoder.encode("\uA455")}).to.throw(Error, "EncodingError U+A455");
expect(() => {ms932Encoder.encode("\uA456")}).to.throw(Error, "EncodingError U+A456");
expect(() => {ms932Encoder.encode("\uA457")}).to.throw(Error, "EncodingError U+A457");
expect(() => {ms932Encoder.encode("\uA458")}).to.throw(Error, "EncodingError U+A458");
expect(() => {ms932Encoder.encode("\uA459")}).to.throw(Error, "EncodingError U+A459");
expect(() => {ms932Encoder.encode("\uA45A")}).to.throw(Error, "EncodingError U+A45A");
expect(() => {ms932Encoder.encode("\uA45B")}).to.throw(Error, "EncodingError U+A45B");
expect(() => {ms932Encoder.encode("\uA45C")}).to.throw(Error, "EncodingError U+A45C");
expect(() => {ms932Encoder.encode("\uA45D")}).to.throw(Error, "EncodingError U+A45D");
expect(() => {ms932Encoder.encode("\uA45E")}).to.throw(Error, "EncodingError U+A45E");
expect(() => {ms932Encoder.encode("\uA45F")}).to.throw(Error, "EncodingError U+A45F");
expect(() => {ms932Encoder.encode("\uA460")}).to.throw(Error, "EncodingError U+A460");
expect(() => {ms932Encoder.encode("\uA461")}).to.throw(Error, "EncodingError U+A461");
expect(() => {ms932Encoder.encode("\uA462")}).to.throw(Error, "EncodingError U+A462");
expect(() => {ms932Encoder.encode("\uA463")}).to.throw(Error, "EncodingError U+A463");
expect(() => {ms932Encoder.encode("\uA464")}).to.throw(Error, "EncodingError U+A464");
expect(() => {ms932Encoder.encode("\uA465")}).to.throw(Error, "EncodingError U+A465");
expect(() => {ms932Encoder.encode("\uA466")}).to.throw(Error, "EncodingError U+A466");
expect(() => {ms932Encoder.encode("\uA467")}).to.throw(Error, "EncodingError U+A467");
expect(() => {ms932Encoder.encode("\uA468")}).to.throw(Error, "EncodingError U+A468");
expect(() => {ms932Encoder.encode("\uA469")}).to.throw(Error, "EncodingError U+A469");
expect(() => {ms932Encoder.encode("\uA46A")}).to.throw(Error, "EncodingError U+A46A");
expect(() => {ms932Encoder.encode("\uA46B")}).to.throw(Error, "EncodingError U+A46B");
expect(() => {ms932Encoder.encode("\uA46C")}).to.throw(Error, "EncodingError U+A46C");
expect(() => {ms932Encoder.encode("\uA46D")}).to.throw(Error, "EncodingError U+A46D");
expect(() => {ms932Encoder.encode("\uA46E")}).to.throw(Error, "EncodingError U+A46E");
expect(() => {ms932Encoder.encode("\uA46F")}).to.throw(Error, "EncodingError U+A46F");
expect(() => {ms932Encoder.encode("\uA470")}).to.throw(Error, "EncodingError U+A470");
expect(() => {ms932Encoder.encode("\uA471")}).to.throw(Error, "EncodingError U+A471");
expect(() => {ms932Encoder.encode("\uA472")}).to.throw(Error, "EncodingError U+A472");
expect(() => {ms932Encoder.encode("\uA473")}).to.throw(Error, "EncodingError U+A473");
expect(() => {ms932Encoder.encode("\uA474")}).to.throw(Error, "EncodingError U+A474");
expect(() => {ms932Encoder.encode("\uA475")}).to.throw(Error, "EncodingError U+A475");
expect(() => {ms932Encoder.encode("\uA476")}).to.throw(Error, "EncodingError U+A476");
expect(() => {ms932Encoder.encode("\uA477")}).to.throw(Error, "EncodingError U+A477");
expect(() => {ms932Encoder.encode("\uA478")}).to.throw(Error, "EncodingError U+A478");
expect(() => {ms932Encoder.encode("\uA479")}).to.throw(Error, "EncodingError U+A479");
expect(() => {ms932Encoder.encode("\uA47A")}).to.throw(Error, "EncodingError U+A47A");
expect(() => {ms932Encoder.encode("\uA47B")}).to.throw(Error, "EncodingError U+A47B");
expect(() => {ms932Encoder.encode("\uA47C")}).to.throw(Error, "EncodingError U+A47C");
expect(() => {ms932Encoder.encode("\uA47D")}).to.throw(Error, "EncodingError U+A47D");
expect(() => {ms932Encoder.encode("\uA47E")}).to.throw(Error, "EncodingError U+A47E");
expect(() => {ms932Encoder.encode("\uA47F")}).to.throw(Error, "EncodingError U+A47F");
expect(() => {ms932Encoder.encode("\uA480")}).to.throw(Error, "EncodingError U+A480");
expect(() => {ms932Encoder.encode("\uA481")}).to.throw(Error, "EncodingError U+A481");
expect(() => {ms932Encoder.encode("\uA482")}).to.throw(Error, "EncodingError U+A482");
expect(() => {ms932Encoder.encode("\uA483")}).to.throw(Error, "EncodingError U+A483");
expect(() => {ms932Encoder.encode("\uA484")}).to.throw(Error, "EncodingError U+A484");
expect(() => {ms932Encoder.encode("\uA485")}).to.throw(Error, "EncodingError U+A485");
expect(() => {ms932Encoder.encode("\uA486")}).to.throw(Error, "EncodingError U+A486");
expect(() => {ms932Encoder.encode("\uA487")}).to.throw(Error, "EncodingError U+A487");
expect(() => {ms932Encoder.encode("\uA488")}).to.throw(Error, "EncodingError U+A488");
expect(() => {ms932Encoder.encode("\uA489")}).to.throw(Error, "EncodingError U+A489");
expect(() => {ms932Encoder.encode("\uA48A")}).to.throw(Error, "EncodingError U+A48A");
expect(() => {ms932Encoder.encode("\uA48B")}).to.throw(Error, "EncodingError U+A48B");
expect(() => {ms932Encoder.encode("\uA48C")}).to.throw(Error, "EncodingError U+A48C");
expect(() => {ms932Encoder.encode("\uA48D")}).to.throw(Error, "EncodingError U+A48D");
expect(() => {ms932Encoder.encode("\uA48E")}).to.throw(Error, "EncodingError U+A48E");
expect(() => {ms932Encoder.encode("\uA48F")}).to.throw(Error, "EncodingError U+A48F");
expect(() => {ms932Encoder.encode("\uA490")}).to.throw(Error, "EncodingError U+A490");
expect(() => {ms932Encoder.encode("\uA491")}).to.throw(Error, "EncodingError U+A491");
expect(() => {ms932Encoder.encode("\uA492")}).to.throw(Error, "EncodingError U+A492");
expect(() => {ms932Encoder.encode("\uA493")}).to.throw(Error, "EncodingError U+A493");
expect(() => {ms932Encoder.encode("\uA494")}).to.throw(Error, "EncodingError U+A494");
expect(() => {ms932Encoder.encode("\uA495")}).to.throw(Error, "EncodingError U+A495");
expect(() => {ms932Encoder.encode("\uA496")}).to.throw(Error, "EncodingError U+A496");
expect(() => {ms932Encoder.encode("\uA497")}).to.throw(Error, "EncodingError U+A497");
expect(() => {ms932Encoder.encode("\uA498")}).to.throw(Error, "EncodingError U+A498");
expect(() => {ms932Encoder.encode("\uA499")}).to.throw(Error, "EncodingError U+A499");
expect(() => {ms932Encoder.encode("\uA49A")}).to.throw(Error, "EncodingError U+A49A");
expect(() => {ms932Encoder.encode("\uA49B")}).to.throw(Error, "EncodingError U+A49B");
expect(() => {ms932Encoder.encode("\uA49C")}).to.throw(Error, "EncodingError U+A49C");
expect(() => {ms932Encoder.encode("\uA49D")}).to.throw(Error, "EncodingError U+A49D");
expect(() => {ms932Encoder.encode("\uA49E")}).to.throw(Error, "EncodingError U+A49E");
expect(() => {ms932Encoder.encode("\uA49F")}).to.throw(Error, "EncodingError U+A49F");
expect(() => {ms932Encoder.encode("\uA4A0")}).to.throw(Error, "EncodingError U+A4A0");
expect(() => {ms932Encoder.encode("\uA4A1")}).to.throw(Error, "EncodingError U+A4A1");
expect(() => {ms932Encoder.encode("\uA4A2")}).to.throw(Error, "EncodingError U+A4A2");
expect(() => {ms932Encoder.encode("\uA4A3")}).to.throw(Error, "EncodingError U+A4A3");
expect(() => {ms932Encoder.encode("\uA4A4")}).to.throw(Error, "EncodingError U+A4A4");
expect(() => {ms932Encoder.encode("\uA4A5")}).to.throw(Error, "EncodingError U+A4A5");
expect(() => {ms932Encoder.encode("\uA4A6")}).to.throw(Error, "EncodingError U+A4A6");
expect(() => {ms932Encoder.encode("\uA4A7")}).to.throw(Error, "EncodingError U+A4A7");
expect(() => {ms932Encoder.encode("\uA4A8")}).to.throw(Error, "EncodingError U+A4A8");
expect(() => {ms932Encoder.encode("\uA4A9")}).to.throw(Error, "EncodingError U+A4A9");
expect(() => {ms932Encoder.encode("\uA4AA")}).to.throw(Error, "EncodingError U+A4AA");
expect(() => {ms932Encoder.encode("\uA4AB")}).to.throw(Error, "EncodingError U+A4AB");
expect(() => {ms932Encoder.encode("\uA4AC")}).to.throw(Error, "EncodingError U+A4AC");
expect(() => {ms932Encoder.encode("\uA4AD")}).to.throw(Error, "EncodingError U+A4AD");
expect(() => {ms932Encoder.encode("\uA4AE")}).to.throw(Error, "EncodingError U+A4AE");
expect(() => {ms932Encoder.encode("\uA4AF")}).to.throw(Error, "EncodingError U+A4AF");
expect(() => {ms932Encoder.encode("\uA4B0")}).to.throw(Error, "EncodingError U+A4B0");
expect(() => {ms932Encoder.encode("\uA4B1")}).to.throw(Error, "EncodingError U+A4B1");
expect(() => {ms932Encoder.encode("\uA4B2")}).to.throw(Error, "EncodingError U+A4B2");
expect(() => {ms932Encoder.encode("\uA4B3")}).to.throw(Error, "EncodingError U+A4B3");
expect(() => {ms932Encoder.encode("\uA4B4")}).to.throw(Error, "EncodingError U+A4B4");
expect(() => {ms932Encoder.encode("\uA4B5")}).to.throw(Error, "EncodingError U+A4B5");
expect(() => {ms932Encoder.encode("\uA4B6")}).to.throw(Error, "EncodingError U+A4B6");
expect(() => {ms932Encoder.encode("\uA4B7")}).to.throw(Error, "EncodingError U+A4B7");
expect(() => {ms932Encoder.encode("\uA4B8")}).to.throw(Error, "EncodingError U+A4B8");
expect(() => {ms932Encoder.encode("\uA4B9")}).to.throw(Error, "EncodingError U+A4B9");
expect(() => {ms932Encoder.encode("\uA4BA")}).to.throw(Error, "EncodingError U+A4BA");
expect(() => {ms932Encoder.encode("\uA4BB")}).to.throw(Error, "EncodingError U+A4BB");
expect(() => {ms932Encoder.encode("\uA4BC")}).to.throw(Error, "EncodingError U+A4BC");
expect(() => {ms932Encoder.encode("\uA4BD")}).to.throw(Error, "EncodingError U+A4BD");
expect(() => {ms932Encoder.encode("\uA4BE")}).to.throw(Error, "EncodingError U+A4BE");
expect(() => {ms932Encoder.encode("\uA4BF")}).to.throw(Error, "EncodingError U+A4BF");
expect(() => {ms932Encoder.encode("\uA4C0")}).to.throw(Error, "EncodingError U+A4C0");
expect(() => {ms932Encoder.encode("\uA4C1")}).to.throw(Error, "EncodingError U+A4C1");
expect(() => {ms932Encoder.encode("\uA4C2")}).to.throw(Error, "EncodingError U+A4C2");
expect(() => {ms932Encoder.encode("\uA4C3")}).to.throw(Error, "EncodingError U+A4C3");
expect(() => {ms932Encoder.encode("\uA4C4")}).to.throw(Error, "EncodingError U+A4C4");
expect(() => {ms932Encoder.encode("\uA4C5")}).to.throw(Error, "EncodingError U+A4C5");
expect(() => {ms932Encoder.encode("\uA4C6")}).to.throw(Error, "EncodingError U+A4C6");
expect(() => {ms932Encoder.encode("\uA4C7")}).to.throw(Error, "EncodingError U+A4C7");
expect(() => {ms932Encoder.encode("\uA4C8")}).to.throw(Error, "EncodingError U+A4C8");
expect(() => {ms932Encoder.encode("\uA4C9")}).to.throw(Error, "EncodingError U+A4C9");
expect(() => {ms932Encoder.encode("\uA4CA")}).to.throw(Error, "EncodingError U+A4CA");
expect(() => {ms932Encoder.encode("\uA4CB")}).to.throw(Error, "EncodingError U+A4CB");
expect(() => {ms932Encoder.encode("\uA4CC")}).to.throw(Error, "EncodingError U+A4CC");
expect(() => {ms932Encoder.encode("\uA4CD")}).to.throw(Error, "EncodingError U+A4CD");
expect(() => {ms932Encoder.encode("\uA4CE")}).to.throw(Error, "EncodingError U+A4CE");
expect(() => {ms932Encoder.encode("\uA4CF")}).to.throw(Error, "EncodingError U+A4CF");
expect(() => {ms932Encoder.encode("\uA4D0")}).to.throw(Error, "EncodingError U+A4D0");
expect(() => {ms932Encoder.encode("\uA4D1")}).to.throw(Error, "EncodingError U+A4D1");
expect(() => {ms932Encoder.encode("\uA4D2")}).to.throw(Error, "EncodingError U+A4D2");
expect(() => {ms932Encoder.encode("\uA4D3")}).to.throw(Error, "EncodingError U+A4D3");
expect(() => {ms932Encoder.encode("\uA4D4")}).to.throw(Error, "EncodingError U+A4D4");
expect(() => {ms932Encoder.encode("\uA4D5")}).to.throw(Error, "EncodingError U+A4D5");
expect(() => {ms932Encoder.encode("\uA4D6")}).to.throw(Error, "EncodingError U+A4D6");
expect(() => {ms932Encoder.encode("\uA4D7")}).to.throw(Error, "EncodingError U+A4D7");
expect(() => {ms932Encoder.encode("\uA4D8")}).to.throw(Error, "EncodingError U+A4D8");
expect(() => {ms932Encoder.encode("\uA4D9")}).to.throw(Error, "EncodingError U+A4D9");
expect(() => {ms932Encoder.encode("\uA4DA")}).to.throw(Error, "EncodingError U+A4DA");
expect(() => {ms932Encoder.encode("\uA4DB")}).to.throw(Error, "EncodingError U+A4DB");
expect(() => {ms932Encoder.encode("\uA4DC")}).to.throw(Error, "EncodingError U+A4DC");
expect(() => {ms932Encoder.encode("\uA4DD")}).to.throw(Error, "EncodingError U+A4DD");
expect(() => {ms932Encoder.encode("\uA4DE")}).to.throw(Error, "EncodingError U+A4DE");
expect(() => {ms932Encoder.encode("\uA4DF")}).to.throw(Error, "EncodingError U+A4DF");
expect(() => {ms932Encoder.encode("\uA4E0")}).to.throw(Error, "EncodingError U+A4E0");
expect(() => {ms932Encoder.encode("\uA4E1")}).to.throw(Error, "EncodingError U+A4E1");
expect(() => {ms932Encoder.encode("\uA4E2")}).to.throw(Error, "EncodingError U+A4E2");
expect(() => {ms932Encoder.encode("\uA4E3")}).to.throw(Error, "EncodingError U+A4E3");
expect(() => {ms932Encoder.encode("\uA4E4")}).to.throw(Error, "EncodingError U+A4E4");
expect(() => {ms932Encoder.encode("\uA4E5")}).to.throw(Error, "EncodingError U+A4E5");
expect(() => {ms932Encoder.encode("\uA4E6")}).to.throw(Error, "EncodingError U+A4E6");
expect(() => {ms932Encoder.encode("\uA4E7")}).to.throw(Error, "EncodingError U+A4E7");
expect(() => {ms932Encoder.encode("\uA4E8")}).to.throw(Error, "EncodingError U+A4E8");
expect(() => {ms932Encoder.encode("\uA4E9")}).to.throw(Error, "EncodingError U+A4E9");
expect(() => {ms932Encoder.encode("\uA4EA")}).to.throw(Error, "EncodingError U+A4EA");
expect(() => {ms932Encoder.encode("\uA4EB")}).to.throw(Error, "EncodingError U+A4EB");
expect(() => {ms932Encoder.encode("\uA4EC")}).to.throw(Error, "EncodingError U+A4EC");
expect(() => {ms932Encoder.encode("\uA4ED")}).to.throw(Error, "EncodingError U+A4ED");
expect(() => {ms932Encoder.encode("\uA4EE")}).to.throw(Error, "EncodingError U+A4EE");
expect(() => {ms932Encoder.encode("\uA4EF")}).to.throw(Error, "EncodingError U+A4EF");
expect(() => {ms932Encoder.encode("\uA4F0")}).to.throw(Error, "EncodingError U+A4F0");
expect(() => {ms932Encoder.encode("\uA4F1")}).to.throw(Error, "EncodingError U+A4F1");
expect(() => {ms932Encoder.encode("\uA4F2")}).to.throw(Error, "EncodingError U+A4F2");
expect(() => {ms932Encoder.encode("\uA4F3")}).to.throw(Error, "EncodingError U+A4F3");
expect(() => {ms932Encoder.encode("\uA4F4")}).to.throw(Error, "EncodingError U+A4F4");
expect(() => {ms932Encoder.encode("\uA4F5")}).to.throw(Error, "EncodingError U+A4F5");
expect(() => {ms932Encoder.encode("\uA4F6")}).to.throw(Error, "EncodingError U+A4F6");
expect(() => {ms932Encoder.encode("\uA4F7")}).to.throw(Error, "EncodingError U+A4F7");
expect(() => {ms932Encoder.encode("\uA4F8")}).to.throw(Error, "EncodingError U+A4F8");
expect(() => {ms932Encoder.encode("\uA4F9")}).to.throw(Error, "EncodingError U+A4F9");
expect(() => {ms932Encoder.encode("\uA4FA")}).to.throw(Error, "EncodingError U+A4FA");
expect(() => {ms932Encoder.encode("\uA4FB")}).to.throw(Error, "EncodingError U+A4FB");
expect(() => {ms932Encoder.encode("\uA4FC")}).to.throw(Error, "EncodingError U+A4FC");
expect(() => {ms932Encoder.encode("\uA4FD")}).to.throw(Error, "EncodingError U+A4FD");
expect(() => {ms932Encoder.encode("\uA4FE")}).to.throw(Error, "EncodingError U+A4FE");
expect(() => {ms932Encoder.encode("\uA4FF")}).to.throw(Error, "EncodingError U+A4FF");
expect(() => {ms932Encoder.encode("\uA500")}).to.throw(Error, "EncodingError U+A500");
expect(() => {ms932Encoder.encode("\uA501")}).to.throw(Error, "EncodingError U+A501");
expect(() => {ms932Encoder.encode("\uA502")}).to.throw(Error, "EncodingError U+A502");
expect(() => {ms932Encoder.encode("\uA503")}).to.throw(Error, "EncodingError U+A503");
expect(() => {ms932Encoder.encode("\uA504")}).to.throw(Error, "EncodingError U+A504");
expect(() => {ms932Encoder.encode("\uA505")}).to.throw(Error, "EncodingError U+A505");
expect(() => {ms932Encoder.encode("\uA506")}).to.throw(Error, "EncodingError U+A506");
expect(() => {ms932Encoder.encode("\uA507")}).to.throw(Error, "EncodingError U+A507");
expect(() => {ms932Encoder.encode("\uA508")}).to.throw(Error, "EncodingError U+A508");
expect(() => {ms932Encoder.encode("\uA509")}).to.throw(Error, "EncodingError U+A509");
expect(() => {ms932Encoder.encode("\uA50A")}).to.throw(Error, "EncodingError U+A50A");
expect(() => {ms932Encoder.encode("\uA50B")}).to.throw(Error, "EncodingError U+A50B");
expect(() => {ms932Encoder.encode("\uA50C")}).to.throw(Error, "EncodingError U+A50C");
expect(() => {ms932Encoder.encode("\uA50D")}).to.throw(Error, "EncodingError U+A50D");
expect(() => {ms932Encoder.encode("\uA50E")}).to.throw(Error, "EncodingError U+A50E");
expect(() => {ms932Encoder.encode("\uA50F")}).to.throw(Error, "EncodingError U+A50F");
expect(() => {ms932Encoder.encode("\uA510")}).to.throw(Error, "EncodingError U+A510");
expect(() => {ms932Encoder.encode("\uA511")}).to.throw(Error, "EncodingError U+A511");
expect(() => {ms932Encoder.encode("\uA512")}).to.throw(Error, "EncodingError U+A512");
expect(() => {ms932Encoder.encode("\uA513")}).to.throw(Error, "EncodingError U+A513");
expect(() => {ms932Encoder.encode("\uA514")}).to.throw(Error, "EncodingError U+A514");
expect(() => {ms932Encoder.encode("\uA515")}).to.throw(Error, "EncodingError U+A515");
expect(() => {ms932Encoder.encode("\uA516")}).to.throw(Error, "EncodingError U+A516");
expect(() => {ms932Encoder.encode("\uA517")}).to.throw(Error, "EncodingError U+A517");
expect(() => {ms932Encoder.encode("\uA518")}).to.throw(Error, "EncodingError U+A518");
expect(() => {ms932Encoder.encode("\uA519")}).to.throw(Error, "EncodingError U+A519");
expect(() => {ms932Encoder.encode("\uA51A")}).to.throw(Error, "EncodingError U+A51A");
expect(() => {ms932Encoder.encode("\uA51B")}).to.throw(Error, "EncodingError U+A51B");
expect(() => {ms932Encoder.encode("\uA51C")}).to.throw(Error, "EncodingError U+A51C");
expect(() => {ms932Encoder.encode("\uA51D")}).to.throw(Error, "EncodingError U+A51D");
expect(() => {ms932Encoder.encode("\uA51E")}).to.throw(Error, "EncodingError U+A51E");
expect(() => {ms932Encoder.encode("\uA51F")}).to.throw(Error, "EncodingError U+A51F");
expect(() => {ms932Encoder.encode("\uA520")}).to.throw(Error, "EncodingError U+A520");
expect(() => {ms932Encoder.encode("\uA521")}).to.throw(Error, "EncodingError U+A521");
expect(() => {ms932Encoder.encode("\uA522")}).to.throw(Error, "EncodingError U+A522");
expect(() => {ms932Encoder.encode("\uA523")}).to.throw(Error, "EncodingError U+A523");
expect(() => {ms932Encoder.encode("\uA524")}).to.throw(Error, "EncodingError U+A524");
expect(() => {ms932Encoder.encode("\uA525")}).to.throw(Error, "EncodingError U+A525");
expect(() => {ms932Encoder.encode("\uA526")}).to.throw(Error, "EncodingError U+A526");
expect(() => {ms932Encoder.encode("\uA527")}).to.throw(Error, "EncodingError U+A527");
expect(() => {ms932Encoder.encode("\uA528")}).to.throw(Error, "EncodingError U+A528");
expect(() => {ms932Encoder.encode("\uA529")}).to.throw(Error, "EncodingError U+A529");
expect(() => {ms932Encoder.encode("\uA52A")}).to.throw(Error, "EncodingError U+A52A");
expect(() => {ms932Encoder.encode("\uA52B")}).to.throw(Error, "EncodingError U+A52B");
expect(() => {ms932Encoder.encode("\uA52C")}).to.throw(Error, "EncodingError U+A52C");
expect(() => {ms932Encoder.encode("\uA52D")}).to.throw(Error, "EncodingError U+A52D");
expect(() => {ms932Encoder.encode("\uA52E")}).to.throw(Error, "EncodingError U+A52E");
expect(() => {ms932Encoder.encode("\uA52F")}).to.throw(Error, "EncodingError U+A52F");
expect(() => {ms932Encoder.encode("\uA530")}).to.throw(Error, "EncodingError U+A530");
expect(() => {ms932Encoder.encode("\uA531")}).to.throw(Error, "EncodingError U+A531");
expect(() => {ms932Encoder.encode("\uA532")}).to.throw(Error, "EncodingError U+A532");
expect(() => {ms932Encoder.encode("\uA533")}).to.throw(Error, "EncodingError U+A533");
expect(() => {ms932Encoder.encode("\uA534")}).to.throw(Error, "EncodingError U+A534");
expect(() => {ms932Encoder.encode("\uA535")}).to.throw(Error, "EncodingError U+A535");
expect(() => {ms932Encoder.encode("\uA536")}).to.throw(Error, "EncodingError U+A536");
expect(() => {ms932Encoder.encode("\uA537")}).to.throw(Error, "EncodingError U+A537");
expect(() => {ms932Encoder.encode("\uA538")}).to.throw(Error, "EncodingError U+A538");
expect(() => {ms932Encoder.encode("\uA539")}).to.throw(Error, "EncodingError U+A539");
expect(() => {ms932Encoder.encode("\uA53A")}).to.throw(Error, "EncodingError U+A53A");
expect(() => {ms932Encoder.encode("\uA53B")}).to.throw(Error, "EncodingError U+A53B");
expect(() => {ms932Encoder.encode("\uA53C")}).to.throw(Error, "EncodingError U+A53C");
expect(() => {ms932Encoder.encode("\uA53D")}).to.throw(Error, "EncodingError U+A53D");
expect(() => {ms932Encoder.encode("\uA53E")}).to.throw(Error, "EncodingError U+A53E");
expect(() => {ms932Encoder.encode("\uA53F")}).to.throw(Error, "EncodingError U+A53F");
expect(() => {ms932Encoder.encode("\uA540")}).to.throw(Error, "EncodingError U+A540");
expect(() => {ms932Encoder.encode("\uA541")}).to.throw(Error, "EncodingError U+A541");
expect(() => {ms932Encoder.encode("\uA542")}).to.throw(Error, "EncodingError U+A542");
expect(() => {ms932Encoder.encode("\uA543")}).to.throw(Error, "EncodingError U+A543");
expect(() => {ms932Encoder.encode("\uA544")}).to.throw(Error, "EncodingError U+A544");
expect(() => {ms932Encoder.encode("\uA545")}).to.throw(Error, "EncodingError U+A545");
expect(() => {ms932Encoder.encode("\uA546")}).to.throw(Error, "EncodingError U+A546");
expect(() => {ms932Encoder.encode("\uA547")}).to.throw(Error, "EncodingError U+A547");
expect(() => {ms932Encoder.encode("\uA548")}).to.throw(Error, "EncodingError U+A548");
expect(() => {ms932Encoder.encode("\uA549")}).to.throw(Error, "EncodingError U+A549");
expect(() => {ms932Encoder.encode("\uA54A")}).to.throw(Error, "EncodingError U+A54A");
expect(() => {ms932Encoder.encode("\uA54B")}).to.throw(Error, "EncodingError U+A54B");
expect(() => {ms932Encoder.encode("\uA54C")}).to.throw(Error, "EncodingError U+A54C");
expect(() => {ms932Encoder.encode("\uA54D")}).to.throw(Error, "EncodingError U+A54D");
expect(() => {ms932Encoder.encode("\uA54E")}).to.throw(Error, "EncodingError U+A54E");
expect(() => {ms932Encoder.encode("\uA54F")}).to.throw(Error, "EncodingError U+A54F");
expect(() => {ms932Encoder.encode("\uA550")}).to.throw(Error, "EncodingError U+A550");
expect(() => {ms932Encoder.encode("\uA551")}).to.throw(Error, "EncodingError U+A551");
expect(() => {ms932Encoder.encode("\uA552")}).to.throw(Error, "EncodingError U+A552");
expect(() => {ms932Encoder.encode("\uA553")}).to.throw(Error, "EncodingError U+A553");
expect(() => {ms932Encoder.encode("\uA554")}).to.throw(Error, "EncodingError U+A554");
expect(() => {ms932Encoder.encode("\uA555")}).to.throw(Error, "EncodingError U+A555");
expect(() => {ms932Encoder.encode("\uA556")}).to.throw(Error, "EncodingError U+A556");
expect(() => {ms932Encoder.encode("\uA557")}).to.throw(Error, "EncodingError U+A557");
expect(() => {ms932Encoder.encode("\uA558")}).to.throw(Error, "EncodingError U+A558");
expect(() => {ms932Encoder.encode("\uA559")}).to.throw(Error, "EncodingError U+A559");
expect(() => {ms932Encoder.encode("\uA55A")}).to.throw(Error, "EncodingError U+A55A");
expect(() => {ms932Encoder.encode("\uA55B")}).to.throw(Error, "EncodingError U+A55B");
expect(() => {ms932Encoder.encode("\uA55C")}).to.throw(Error, "EncodingError U+A55C");
expect(() => {ms932Encoder.encode("\uA55D")}).to.throw(Error, "EncodingError U+A55D");
expect(() => {ms932Encoder.encode("\uA55E")}).to.throw(Error, "EncodingError U+A55E");
expect(() => {ms932Encoder.encode("\uA55F")}).to.throw(Error, "EncodingError U+A55F");
expect(() => {ms932Encoder.encode("\uA560")}).to.throw(Error, "EncodingError U+A560");
expect(() => {ms932Encoder.encode("\uA561")}).to.throw(Error, "EncodingError U+A561");
expect(() => {ms932Encoder.encode("\uA562")}).to.throw(Error, "EncodingError U+A562");
expect(() => {ms932Encoder.encode("\uA563")}).to.throw(Error, "EncodingError U+A563");
expect(() => {ms932Encoder.encode("\uA564")}).to.throw(Error, "EncodingError U+A564");
expect(() => {ms932Encoder.encode("\uA565")}).to.throw(Error, "EncodingError U+A565");
expect(() => {ms932Encoder.encode("\uA566")}).to.throw(Error, "EncodingError U+A566");
expect(() => {ms932Encoder.encode("\uA567")}).to.throw(Error, "EncodingError U+A567");
expect(() => {ms932Encoder.encode("\uA568")}).to.throw(Error, "EncodingError U+A568");
expect(() => {ms932Encoder.encode("\uA569")}).to.throw(Error, "EncodingError U+A569");
expect(() => {ms932Encoder.encode("\uA56A")}).to.throw(Error, "EncodingError U+A56A");
expect(() => {ms932Encoder.encode("\uA56B")}).to.throw(Error, "EncodingError U+A56B");
expect(() => {ms932Encoder.encode("\uA56C")}).to.throw(Error, "EncodingError U+A56C");
expect(() => {ms932Encoder.encode("\uA56D")}).to.throw(Error, "EncodingError U+A56D");
expect(() => {ms932Encoder.encode("\uA56E")}).to.throw(Error, "EncodingError U+A56E");
expect(() => {ms932Encoder.encode("\uA56F")}).to.throw(Error, "EncodingError U+A56F");
expect(() => {ms932Encoder.encode("\uA570")}).to.throw(Error, "EncodingError U+A570");
expect(() => {ms932Encoder.encode("\uA571")}).to.throw(Error, "EncodingError U+A571");
expect(() => {ms932Encoder.encode("\uA572")}).to.throw(Error, "EncodingError U+A572");
expect(() => {ms932Encoder.encode("\uA573")}).to.throw(Error, "EncodingError U+A573");
expect(() => {ms932Encoder.encode("\uA574")}).to.throw(Error, "EncodingError U+A574");
expect(() => {ms932Encoder.encode("\uA575")}).to.throw(Error, "EncodingError U+A575");
expect(() => {ms932Encoder.encode("\uA576")}).to.throw(Error, "EncodingError U+A576");
expect(() => {ms932Encoder.encode("\uA577")}).to.throw(Error, "EncodingError U+A577");
expect(() => {ms932Encoder.encode("\uA578")}).to.throw(Error, "EncodingError U+A578");
expect(() => {ms932Encoder.encode("\uA579")}).to.throw(Error, "EncodingError U+A579");
expect(() => {ms932Encoder.encode("\uA57A")}).to.throw(Error, "EncodingError U+A57A");
expect(() => {ms932Encoder.encode("\uA57B")}).to.throw(Error, "EncodingError U+A57B");
expect(() => {ms932Encoder.encode("\uA57C")}).to.throw(Error, "EncodingError U+A57C");
expect(() => {ms932Encoder.encode("\uA57D")}).to.throw(Error, "EncodingError U+A57D");
expect(() => {ms932Encoder.encode("\uA57E")}).to.throw(Error, "EncodingError U+A57E");
expect(() => {ms932Encoder.encode("\uA57F")}).to.throw(Error, "EncodingError U+A57F");
expect(() => {ms932Encoder.encode("\uA580")}).to.throw(Error, "EncodingError U+A580");
expect(() => {ms932Encoder.encode("\uA581")}).to.throw(Error, "EncodingError U+A581");
expect(() => {ms932Encoder.encode("\uA582")}).to.throw(Error, "EncodingError U+A582");
expect(() => {ms932Encoder.encode("\uA583")}).to.throw(Error, "EncodingError U+A583");
expect(() => {ms932Encoder.encode("\uA584")}).to.throw(Error, "EncodingError U+A584");
expect(() => {ms932Encoder.encode("\uA585")}).to.throw(Error, "EncodingError U+A585");
expect(() => {ms932Encoder.encode("\uA586")}).to.throw(Error, "EncodingError U+A586");
expect(() => {ms932Encoder.encode("\uA587")}).to.throw(Error, "EncodingError U+A587");
expect(() => {ms932Encoder.encode("\uA588")}).to.throw(Error, "EncodingError U+A588");
expect(() => {ms932Encoder.encode("\uA589")}).to.throw(Error, "EncodingError U+A589");
expect(() => {ms932Encoder.encode("\uA58A")}).to.throw(Error, "EncodingError U+A58A");
expect(() => {ms932Encoder.encode("\uA58B")}).to.throw(Error, "EncodingError U+A58B");
expect(() => {ms932Encoder.encode("\uA58C")}).to.throw(Error, "EncodingError U+A58C");
expect(() => {ms932Encoder.encode("\uA58D")}).to.throw(Error, "EncodingError U+A58D");
expect(() => {ms932Encoder.encode("\uA58E")}).to.throw(Error, "EncodingError U+A58E");
expect(() => {ms932Encoder.encode("\uA58F")}).to.throw(Error, "EncodingError U+A58F");
expect(() => {ms932Encoder.encode("\uA590")}).to.throw(Error, "EncodingError U+A590");
expect(() => {ms932Encoder.encode("\uA591")}).to.throw(Error, "EncodingError U+A591");
expect(() => {ms932Encoder.encode("\uA592")}).to.throw(Error, "EncodingError U+A592");
expect(() => {ms932Encoder.encode("\uA593")}).to.throw(Error, "EncodingError U+A593");
expect(() => {ms932Encoder.encode("\uA594")}).to.throw(Error, "EncodingError U+A594");
expect(() => {ms932Encoder.encode("\uA595")}).to.throw(Error, "EncodingError U+A595");
expect(() => {ms932Encoder.encode("\uA596")}).to.throw(Error, "EncodingError U+A596");
expect(() => {ms932Encoder.encode("\uA597")}).to.throw(Error, "EncodingError U+A597");
expect(() => {ms932Encoder.encode("\uA598")}).to.throw(Error, "EncodingError U+A598");
expect(() => {ms932Encoder.encode("\uA599")}).to.throw(Error, "EncodingError U+A599");
expect(() => {ms932Encoder.encode("\uA59A")}).to.throw(Error, "EncodingError U+A59A");
expect(() => {ms932Encoder.encode("\uA59B")}).to.throw(Error, "EncodingError U+A59B");
expect(() => {ms932Encoder.encode("\uA59C")}).to.throw(Error, "EncodingError U+A59C");
expect(() => {ms932Encoder.encode("\uA59D")}).to.throw(Error, "EncodingError U+A59D");
expect(() => {ms932Encoder.encode("\uA59E")}).to.throw(Error, "EncodingError U+A59E");
expect(() => {ms932Encoder.encode("\uA59F")}).to.throw(Error, "EncodingError U+A59F");
expect(() => {ms932Encoder.encode("\uA5A0")}).to.throw(Error, "EncodingError U+A5A0");
expect(() => {ms932Encoder.encode("\uA5A1")}).to.throw(Error, "EncodingError U+A5A1");
expect(() => {ms932Encoder.encode("\uA5A2")}).to.throw(Error, "EncodingError U+A5A2");
expect(() => {ms932Encoder.encode("\uA5A3")}).to.throw(Error, "EncodingError U+A5A3");
expect(() => {ms932Encoder.encode("\uA5A4")}).to.throw(Error, "EncodingError U+A5A4");
expect(() => {ms932Encoder.encode("\uA5A5")}).to.throw(Error, "EncodingError U+A5A5");
expect(() => {ms932Encoder.encode("\uA5A6")}).to.throw(Error, "EncodingError U+A5A6");
expect(() => {ms932Encoder.encode("\uA5A7")}).to.throw(Error, "EncodingError U+A5A7");
expect(() => {ms932Encoder.encode("\uA5A8")}).to.throw(Error, "EncodingError U+A5A8");
expect(() => {ms932Encoder.encode("\uA5A9")}).to.throw(Error, "EncodingError U+A5A9");
expect(() => {ms932Encoder.encode("\uA5AA")}).to.throw(Error, "EncodingError U+A5AA");
expect(() => {ms932Encoder.encode("\uA5AB")}).to.throw(Error, "EncodingError U+A5AB");
expect(() => {ms932Encoder.encode("\uA5AC")}).to.throw(Error, "EncodingError U+A5AC");
expect(() => {ms932Encoder.encode("\uA5AD")}).to.throw(Error, "EncodingError U+A5AD");
expect(() => {ms932Encoder.encode("\uA5AE")}).to.throw(Error, "EncodingError U+A5AE");
expect(() => {ms932Encoder.encode("\uA5AF")}).to.throw(Error, "EncodingError U+A5AF");
expect(() => {ms932Encoder.encode("\uA5B0")}).to.throw(Error, "EncodingError U+A5B0");
expect(() => {ms932Encoder.encode("\uA5B1")}).to.throw(Error, "EncodingError U+A5B1");
expect(() => {ms932Encoder.encode("\uA5B2")}).to.throw(Error, "EncodingError U+A5B2");
expect(() => {ms932Encoder.encode("\uA5B3")}).to.throw(Error, "EncodingError U+A5B3");
expect(() => {ms932Encoder.encode("\uA5B4")}).to.throw(Error, "EncodingError U+A5B4");
expect(() => {ms932Encoder.encode("\uA5B5")}).to.throw(Error, "EncodingError U+A5B5");
expect(() => {ms932Encoder.encode("\uA5B6")}).to.throw(Error, "EncodingError U+A5B6");
expect(() => {ms932Encoder.encode("\uA5B7")}).to.throw(Error, "EncodingError U+A5B7");
expect(() => {ms932Encoder.encode("\uA5B8")}).to.throw(Error, "EncodingError U+A5B8");
expect(() => {ms932Encoder.encode("\uA5B9")}).to.throw(Error, "EncodingError U+A5B9");
expect(() => {ms932Encoder.encode("\uA5BA")}).to.throw(Error, "EncodingError U+A5BA");
expect(() => {ms932Encoder.encode("\uA5BB")}).to.throw(Error, "EncodingError U+A5BB");
expect(() => {ms932Encoder.encode("\uA5BC")}).to.throw(Error, "EncodingError U+A5BC");
expect(() => {ms932Encoder.encode("\uA5BD")}).to.throw(Error, "EncodingError U+A5BD");
expect(() => {ms932Encoder.encode("\uA5BE")}).to.throw(Error, "EncodingError U+A5BE");
expect(() => {ms932Encoder.encode("\uA5BF")}).to.throw(Error, "EncodingError U+A5BF");
expect(() => {ms932Encoder.encode("\uA5C0")}).to.throw(Error, "EncodingError U+A5C0");
expect(() => {ms932Encoder.encode("\uA5C1")}).to.throw(Error, "EncodingError U+A5C1");
expect(() => {ms932Encoder.encode("\uA5C2")}).to.throw(Error, "EncodingError U+A5C2");
expect(() => {ms932Encoder.encode("\uA5C3")}).to.throw(Error, "EncodingError U+A5C3");
expect(() => {ms932Encoder.encode("\uA5C4")}).to.throw(Error, "EncodingError U+A5C4");
expect(() => {ms932Encoder.encode("\uA5C5")}).to.throw(Error, "EncodingError U+A5C5");
expect(() => {ms932Encoder.encode("\uA5C6")}).to.throw(Error, "EncodingError U+A5C6");
expect(() => {ms932Encoder.encode("\uA5C7")}).to.throw(Error, "EncodingError U+A5C7");
expect(() => {ms932Encoder.encode("\uA5C8")}).to.throw(Error, "EncodingError U+A5C8");
expect(() => {ms932Encoder.encode("\uA5C9")}).to.throw(Error, "EncodingError U+A5C9");
expect(() => {ms932Encoder.encode("\uA5CA")}).to.throw(Error, "EncodingError U+A5CA");
expect(() => {ms932Encoder.encode("\uA5CB")}).to.throw(Error, "EncodingError U+A5CB");
expect(() => {ms932Encoder.encode("\uA5CC")}).to.throw(Error, "EncodingError U+A5CC");
expect(() => {ms932Encoder.encode("\uA5CD")}).to.throw(Error, "EncodingError U+A5CD");
expect(() => {ms932Encoder.encode("\uA5CE")}).to.throw(Error, "EncodingError U+A5CE");
expect(() => {ms932Encoder.encode("\uA5CF")}).to.throw(Error, "EncodingError U+A5CF");
expect(() => {ms932Encoder.encode("\uA5D0")}).to.throw(Error, "EncodingError U+A5D0");
expect(() => {ms932Encoder.encode("\uA5D1")}).to.throw(Error, "EncodingError U+A5D1");
expect(() => {ms932Encoder.encode("\uA5D2")}).to.throw(Error, "EncodingError U+A5D2");
expect(() => {ms932Encoder.encode("\uA5D3")}).to.throw(Error, "EncodingError U+A5D3");
expect(() => {ms932Encoder.encode("\uA5D4")}).to.throw(Error, "EncodingError U+A5D4");
expect(() => {ms932Encoder.encode("\uA5D5")}).to.throw(Error, "EncodingError U+A5D5");
expect(() => {ms932Encoder.encode("\uA5D6")}).to.throw(Error, "EncodingError U+A5D6");
expect(() => {ms932Encoder.encode("\uA5D7")}).to.throw(Error, "EncodingError U+A5D7");
expect(() => {ms932Encoder.encode("\uA5D8")}).to.throw(Error, "EncodingError U+A5D8");
expect(() => {ms932Encoder.encode("\uA5D9")}).to.throw(Error, "EncodingError U+A5D9");
expect(() => {ms932Encoder.encode("\uA5DA")}).to.throw(Error, "EncodingError U+A5DA");
expect(() => {ms932Encoder.encode("\uA5DB")}).to.throw(Error, "EncodingError U+A5DB");
expect(() => {ms932Encoder.encode("\uA5DC")}).to.throw(Error, "EncodingError U+A5DC");
expect(() => {ms932Encoder.encode("\uA5DD")}).to.throw(Error, "EncodingError U+A5DD");
expect(() => {ms932Encoder.encode("\uA5DE")}).to.throw(Error, "EncodingError U+A5DE");
expect(() => {ms932Encoder.encode("\uA5DF")}).to.throw(Error, "EncodingError U+A5DF");
expect(() => {ms932Encoder.encode("\uA5E0")}).to.throw(Error, "EncodingError U+A5E0");
expect(() => {ms932Encoder.encode("\uA5E1")}).to.throw(Error, "EncodingError U+A5E1");
expect(() => {ms932Encoder.encode("\uA5E2")}).to.throw(Error, "EncodingError U+A5E2");
expect(() => {ms932Encoder.encode("\uA5E3")}).to.throw(Error, "EncodingError U+A5E3");
expect(() => {ms932Encoder.encode("\uA5E4")}).to.throw(Error, "EncodingError U+A5E4");
expect(() => {ms932Encoder.encode("\uA5E5")}).to.throw(Error, "EncodingError U+A5E5");
expect(() => {ms932Encoder.encode("\uA5E6")}).to.throw(Error, "EncodingError U+A5E6");
expect(() => {ms932Encoder.encode("\uA5E7")}).to.throw(Error, "EncodingError U+A5E7");
expect(() => {ms932Encoder.encode("\uA5E8")}).to.throw(Error, "EncodingError U+A5E8");
expect(() => {ms932Encoder.encode("\uA5E9")}).to.throw(Error, "EncodingError U+A5E9");
expect(() => {ms932Encoder.encode("\uA5EA")}).to.throw(Error, "EncodingError U+A5EA");
expect(() => {ms932Encoder.encode("\uA5EB")}).to.throw(Error, "EncodingError U+A5EB");
expect(() => {ms932Encoder.encode("\uA5EC")}).to.throw(Error, "EncodingError U+A5EC");
expect(() => {ms932Encoder.encode("\uA5ED")}).to.throw(Error, "EncodingError U+A5ED");
expect(() => {ms932Encoder.encode("\uA5EE")}).to.throw(Error, "EncodingError U+A5EE");
expect(() => {ms932Encoder.encode("\uA5EF")}).to.throw(Error, "EncodingError U+A5EF");
expect(() => {ms932Encoder.encode("\uA5F0")}).to.throw(Error, "EncodingError U+A5F0");
expect(() => {ms932Encoder.encode("\uA5F1")}).to.throw(Error, "EncodingError U+A5F1");
expect(() => {ms932Encoder.encode("\uA5F2")}).to.throw(Error, "EncodingError U+A5F2");
expect(() => {ms932Encoder.encode("\uA5F3")}).to.throw(Error, "EncodingError U+A5F3");
expect(() => {ms932Encoder.encode("\uA5F4")}).to.throw(Error, "EncodingError U+A5F4");
expect(() => {ms932Encoder.encode("\uA5F5")}).to.throw(Error, "EncodingError U+A5F5");
expect(() => {ms932Encoder.encode("\uA5F6")}).to.throw(Error, "EncodingError U+A5F6");
expect(() => {ms932Encoder.encode("\uA5F7")}).to.throw(Error, "EncodingError U+A5F7");
expect(() => {ms932Encoder.encode("\uA5F8")}).to.throw(Error, "EncodingError U+A5F8");
expect(() => {ms932Encoder.encode("\uA5F9")}).to.throw(Error, "EncodingError U+A5F9");
expect(() => {ms932Encoder.encode("\uA5FA")}).to.throw(Error, "EncodingError U+A5FA");
expect(() => {ms932Encoder.encode("\uA5FB")}).to.throw(Error, "EncodingError U+A5FB");
expect(() => {ms932Encoder.encode("\uA5FC")}).to.throw(Error, "EncodingError U+A5FC");
expect(() => {ms932Encoder.encode("\uA5FD")}).to.throw(Error, "EncodingError U+A5FD");
expect(() => {ms932Encoder.encode("\uA5FE")}).to.throw(Error, "EncodingError U+A5FE");
expect(() => {ms932Encoder.encode("\uA5FF")}).to.throw(Error, "EncodingError U+A5FF");
expect(() => {ms932Encoder.encode("\uA600")}).to.throw(Error, "EncodingError U+A600");
expect(() => {ms932Encoder.encode("\uA601")}).to.throw(Error, "EncodingError U+A601");
expect(() => {ms932Encoder.encode("\uA602")}).to.throw(Error, "EncodingError U+A602");
expect(() => {ms932Encoder.encode("\uA603")}).to.throw(Error, "EncodingError U+A603");
expect(() => {ms932Encoder.encode("\uA604")}).to.throw(Error, "EncodingError U+A604");
expect(() => {ms932Encoder.encode("\uA605")}).to.throw(Error, "EncodingError U+A605");
expect(() => {ms932Encoder.encode("\uA606")}).to.throw(Error, "EncodingError U+A606");
expect(() => {ms932Encoder.encode("\uA607")}).to.throw(Error, "EncodingError U+A607");
expect(() => {ms932Encoder.encode("\uA608")}).to.throw(Error, "EncodingError U+A608");
expect(() => {ms932Encoder.encode("\uA609")}).to.throw(Error, "EncodingError U+A609");
expect(() => {ms932Encoder.encode("\uA60A")}).to.throw(Error, "EncodingError U+A60A");
expect(() => {ms932Encoder.encode("\uA60B")}).to.throw(Error, "EncodingError U+A60B");
expect(() => {ms932Encoder.encode("\uA60C")}).to.throw(Error, "EncodingError U+A60C");
expect(() => {ms932Encoder.encode("\uA60D")}).to.throw(Error, "EncodingError U+A60D");
expect(() => {ms932Encoder.encode("\uA60E")}).to.throw(Error, "EncodingError U+A60E");
expect(() => {ms932Encoder.encode("\uA60F")}).to.throw(Error, "EncodingError U+A60F");
expect(() => {ms932Encoder.encode("\uA610")}).to.throw(Error, "EncodingError U+A610");
expect(() => {ms932Encoder.encode("\uA611")}).to.throw(Error, "EncodingError U+A611");
expect(() => {ms932Encoder.encode("\uA612")}).to.throw(Error, "EncodingError U+A612");
expect(() => {ms932Encoder.encode("\uA613")}).to.throw(Error, "EncodingError U+A613");
expect(() => {ms932Encoder.encode("\uA614")}).to.throw(Error, "EncodingError U+A614");
expect(() => {ms932Encoder.encode("\uA615")}).to.throw(Error, "EncodingError U+A615");
expect(() => {ms932Encoder.encode("\uA616")}).to.throw(Error, "EncodingError U+A616");
expect(() => {ms932Encoder.encode("\uA617")}).to.throw(Error, "EncodingError U+A617");
expect(() => {ms932Encoder.encode("\uA618")}).to.throw(Error, "EncodingError U+A618");
expect(() => {ms932Encoder.encode("\uA619")}).to.throw(Error, "EncodingError U+A619");
expect(() => {ms932Encoder.encode("\uA61A")}).to.throw(Error, "EncodingError U+A61A");
expect(() => {ms932Encoder.encode("\uA61B")}).to.throw(Error, "EncodingError U+A61B");
expect(() => {ms932Encoder.encode("\uA61C")}).to.throw(Error, "EncodingError U+A61C");
expect(() => {ms932Encoder.encode("\uA61D")}).to.throw(Error, "EncodingError U+A61D");
expect(() => {ms932Encoder.encode("\uA61E")}).to.throw(Error, "EncodingError U+A61E");
expect(() => {ms932Encoder.encode("\uA61F")}).to.throw(Error, "EncodingError U+A61F");
expect(() => {ms932Encoder.encode("\uA620")}).to.throw(Error, "EncodingError U+A620");
expect(() => {ms932Encoder.encode("\uA621")}).to.throw(Error, "EncodingError U+A621");
expect(() => {ms932Encoder.encode("\uA622")}).to.throw(Error, "EncodingError U+A622");
expect(() => {ms932Encoder.encode("\uA623")}).to.throw(Error, "EncodingError U+A623");
expect(() => {ms932Encoder.encode("\uA624")}).to.throw(Error, "EncodingError U+A624");
expect(() => {ms932Encoder.encode("\uA625")}).to.throw(Error, "EncodingError U+A625");
expect(() => {ms932Encoder.encode("\uA626")}).to.throw(Error, "EncodingError U+A626");
expect(() => {ms932Encoder.encode("\uA627")}).to.throw(Error, "EncodingError U+A627");
expect(() => {ms932Encoder.encode("\uA628")}).to.throw(Error, "EncodingError U+A628");
expect(() => {ms932Encoder.encode("\uA629")}).to.throw(Error, "EncodingError U+A629");
expect(() => {ms932Encoder.encode("\uA62A")}).to.throw(Error, "EncodingError U+A62A");
expect(() => {ms932Encoder.encode("\uA62B")}).to.throw(Error, "EncodingError U+A62B");
expect(() => {ms932Encoder.encode("\uA62C")}).to.throw(Error, "EncodingError U+A62C");
expect(() => {ms932Encoder.encode("\uA62D")}).to.throw(Error, "EncodingError U+A62D");
expect(() => {ms932Encoder.encode("\uA62E")}).to.throw(Error, "EncodingError U+A62E");
expect(() => {ms932Encoder.encode("\uA62F")}).to.throw(Error, "EncodingError U+A62F");
expect(() => {ms932Encoder.encode("\uA630")}).to.throw(Error, "EncodingError U+A630");
expect(() => {ms932Encoder.encode("\uA631")}).to.throw(Error, "EncodingError U+A631");
expect(() => {ms932Encoder.encode("\uA632")}).to.throw(Error, "EncodingError U+A632");
expect(() => {ms932Encoder.encode("\uA633")}).to.throw(Error, "EncodingError U+A633");
expect(() => {ms932Encoder.encode("\uA634")}).to.throw(Error, "EncodingError U+A634");
expect(() => {ms932Encoder.encode("\uA635")}).to.throw(Error, "EncodingError U+A635");
expect(() => {ms932Encoder.encode("\uA636")}).to.throw(Error, "EncodingError U+A636");
expect(() => {ms932Encoder.encode("\uA637")}).to.throw(Error, "EncodingError U+A637");
expect(() => {ms932Encoder.encode("\uA638")}).to.throw(Error, "EncodingError U+A638");
expect(() => {ms932Encoder.encode("\uA639")}).to.throw(Error, "EncodingError U+A639");
expect(() => {ms932Encoder.encode("\uA63A")}).to.throw(Error, "EncodingError U+A63A");
expect(() => {ms932Encoder.encode("\uA63B")}).to.throw(Error, "EncodingError U+A63B");
expect(() => {ms932Encoder.encode("\uA63C")}).to.throw(Error, "EncodingError U+A63C");
expect(() => {ms932Encoder.encode("\uA63D")}).to.throw(Error, "EncodingError U+A63D");
expect(() => {ms932Encoder.encode("\uA63E")}).to.throw(Error, "EncodingError U+A63E");
expect(() => {ms932Encoder.encode("\uA63F")}).to.throw(Error, "EncodingError U+A63F");
expect(() => {ms932Encoder.encode("\uA640")}).to.throw(Error, "EncodingError U+A640");
expect(() => {ms932Encoder.encode("\uA641")}).to.throw(Error, "EncodingError U+A641");
expect(() => {ms932Encoder.encode("\uA642")}).to.throw(Error, "EncodingError U+A642");
expect(() => {ms932Encoder.encode("\uA643")}).to.throw(Error, "EncodingError U+A643");
expect(() => {ms932Encoder.encode("\uA644")}).to.throw(Error, "EncodingError U+A644");
expect(() => {ms932Encoder.encode("\uA645")}).to.throw(Error, "EncodingError U+A645");
expect(() => {ms932Encoder.encode("\uA646")}).to.throw(Error, "EncodingError U+A646");
expect(() => {ms932Encoder.encode("\uA647")}).to.throw(Error, "EncodingError U+A647");
expect(() => {ms932Encoder.encode("\uA648")}).to.throw(Error, "EncodingError U+A648");
expect(() => {ms932Encoder.encode("\uA649")}).to.throw(Error, "EncodingError U+A649");
expect(() => {ms932Encoder.encode("\uA64A")}).to.throw(Error, "EncodingError U+A64A");
expect(() => {ms932Encoder.encode("\uA64B")}).to.throw(Error, "EncodingError U+A64B");
expect(() => {ms932Encoder.encode("\uA64C")}).to.throw(Error, "EncodingError U+A64C");
expect(() => {ms932Encoder.encode("\uA64D")}).to.throw(Error, "EncodingError U+A64D");
expect(() => {ms932Encoder.encode("\uA64E")}).to.throw(Error, "EncodingError U+A64E");
expect(() => {ms932Encoder.encode("\uA64F")}).to.throw(Error, "EncodingError U+A64F");
expect(() => {ms932Encoder.encode("\uA650")}).to.throw(Error, "EncodingError U+A650");
expect(() => {ms932Encoder.encode("\uA651")}).to.throw(Error, "EncodingError U+A651");
expect(() => {ms932Encoder.encode("\uA652")}).to.throw(Error, "EncodingError U+A652");
expect(() => {ms932Encoder.encode("\uA653")}).to.throw(Error, "EncodingError U+A653");
expect(() => {ms932Encoder.encode("\uA654")}).to.throw(Error, "EncodingError U+A654");
expect(() => {ms932Encoder.encode("\uA655")}).to.throw(Error, "EncodingError U+A655");
expect(() => {ms932Encoder.encode("\uA656")}).to.throw(Error, "EncodingError U+A656");
expect(() => {ms932Encoder.encode("\uA657")}).to.throw(Error, "EncodingError U+A657");
expect(() => {ms932Encoder.encode("\uA658")}).to.throw(Error, "EncodingError U+A658");
expect(() => {ms932Encoder.encode("\uA659")}).to.throw(Error, "EncodingError U+A659");
expect(() => {ms932Encoder.encode("\uA65A")}).to.throw(Error, "EncodingError U+A65A");
expect(() => {ms932Encoder.encode("\uA65B")}).to.throw(Error, "EncodingError U+A65B");
expect(() => {ms932Encoder.encode("\uA65C")}).to.throw(Error, "EncodingError U+A65C");
expect(() => {ms932Encoder.encode("\uA65D")}).to.throw(Error, "EncodingError U+A65D");
expect(() => {ms932Encoder.encode("\uA65E")}).to.throw(Error, "EncodingError U+A65E");
expect(() => {ms932Encoder.encode("\uA65F")}).to.throw(Error, "EncodingError U+A65F");
expect(() => {ms932Encoder.encode("\uA660")}).to.throw(Error, "EncodingError U+A660");
expect(() => {ms932Encoder.encode("\uA661")}).to.throw(Error, "EncodingError U+A661");
expect(() => {ms932Encoder.encode("\uA662")}).to.throw(Error, "EncodingError U+A662");
expect(() => {ms932Encoder.encode("\uA663")}).to.throw(Error, "EncodingError U+A663");
expect(() => {ms932Encoder.encode("\uA664")}).to.throw(Error, "EncodingError U+A664");
expect(() => {ms932Encoder.encode("\uA665")}).to.throw(Error, "EncodingError U+A665");
expect(() => {ms932Encoder.encode("\uA666")}).to.throw(Error, "EncodingError U+A666");
expect(() => {ms932Encoder.encode("\uA667")}).to.throw(Error, "EncodingError U+A667");
expect(() => {ms932Encoder.encode("\uA668")}).to.throw(Error, "EncodingError U+A668");
expect(() => {ms932Encoder.encode("\uA669")}).to.throw(Error, "EncodingError U+A669");
expect(() => {ms932Encoder.encode("\uA66A")}).to.throw(Error, "EncodingError U+A66A");
expect(() => {ms932Encoder.encode("\uA66B")}).to.throw(Error, "EncodingError U+A66B");
expect(() => {ms932Encoder.encode("\uA66C")}).to.throw(Error, "EncodingError U+A66C");
expect(() => {ms932Encoder.encode("\uA66D")}).to.throw(Error, "EncodingError U+A66D");
expect(() => {ms932Encoder.encode("\uA66E")}).to.throw(Error, "EncodingError U+A66E");
expect(() => {ms932Encoder.encode("\uA66F")}).to.throw(Error, "EncodingError U+A66F");
expect(() => {ms932Encoder.encode("\uA670")}).to.throw(Error, "EncodingError U+A670");
expect(() => {ms932Encoder.encode("\uA671")}).to.throw(Error, "EncodingError U+A671");
expect(() => {ms932Encoder.encode("\uA672")}).to.throw(Error, "EncodingError U+A672");
expect(() => {ms932Encoder.encode("\uA673")}).to.throw(Error, "EncodingError U+A673");
expect(() => {ms932Encoder.encode("\uA674")}).to.throw(Error, "EncodingError U+A674");
expect(() => {ms932Encoder.encode("\uA675")}).to.throw(Error, "EncodingError U+A675");
expect(() => {ms932Encoder.encode("\uA676")}).to.throw(Error, "EncodingError U+A676");
expect(() => {ms932Encoder.encode("\uA677")}).to.throw(Error, "EncodingError U+A677");
expect(() => {ms932Encoder.encode("\uA678")}).to.throw(Error, "EncodingError U+A678");
expect(() => {ms932Encoder.encode("\uA679")}).to.throw(Error, "EncodingError U+A679");
expect(() => {ms932Encoder.encode("\uA67A")}).to.throw(Error, "EncodingError U+A67A");
expect(() => {ms932Encoder.encode("\uA67B")}).to.throw(Error, "EncodingError U+A67B");
expect(() => {ms932Encoder.encode("\uA67C")}).to.throw(Error, "EncodingError U+A67C");
expect(() => {ms932Encoder.encode("\uA67D")}).to.throw(Error, "EncodingError U+A67D");
expect(() => {ms932Encoder.encode("\uA67E")}).to.throw(Error, "EncodingError U+A67E");
expect(() => {ms932Encoder.encode("\uA67F")}).to.throw(Error, "EncodingError U+A67F");
expect(() => {ms932Encoder.encode("\uA680")}).to.throw(Error, "EncodingError U+A680");
expect(() => {ms932Encoder.encode("\uA681")}).to.throw(Error, "EncodingError U+A681");
expect(() => {ms932Encoder.encode("\uA682")}).to.throw(Error, "EncodingError U+A682");
expect(() => {ms932Encoder.encode("\uA683")}).to.throw(Error, "EncodingError U+A683");
expect(() => {ms932Encoder.encode("\uA684")}).to.throw(Error, "EncodingError U+A684");
expect(() => {ms932Encoder.encode("\uA685")}).to.throw(Error, "EncodingError U+A685");
expect(() => {ms932Encoder.encode("\uA686")}).to.throw(Error, "EncodingError U+A686");
expect(() => {ms932Encoder.encode("\uA687")}).to.throw(Error, "EncodingError U+A687");
expect(() => {ms932Encoder.encode("\uA688")}).to.throw(Error, "EncodingError U+A688");
expect(() => {ms932Encoder.encode("\uA689")}).to.throw(Error, "EncodingError U+A689");
expect(() => {ms932Encoder.encode("\uA68A")}).to.throw(Error, "EncodingError U+A68A");
expect(() => {ms932Encoder.encode("\uA68B")}).to.throw(Error, "EncodingError U+A68B");
expect(() => {ms932Encoder.encode("\uA68C")}).to.throw(Error, "EncodingError U+A68C");
expect(() => {ms932Encoder.encode("\uA68D")}).to.throw(Error, "EncodingError U+A68D");
expect(() => {ms932Encoder.encode("\uA68E")}).to.throw(Error, "EncodingError U+A68E");
expect(() => {ms932Encoder.encode("\uA68F")}).to.throw(Error, "EncodingError U+A68F");
expect(() => {ms932Encoder.encode("\uA690")}).to.throw(Error, "EncodingError U+A690");
expect(() => {ms932Encoder.encode("\uA691")}).to.throw(Error, "EncodingError U+A691");
expect(() => {ms932Encoder.encode("\uA692")}).to.throw(Error, "EncodingError U+A692");
expect(() => {ms932Encoder.encode("\uA693")}).to.throw(Error, "EncodingError U+A693");
expect(() => {ms932Encoder.encode("\uA694")}).to.throw(Error, "EncodingError U+A694");
expect(() => {ms932Encoder.encode("\uA695")}).to.throw(Error, "EncodingError U+A695");
expect(() => {ms932Encoder.encode("\uA696")}).to.throw(Error, "EncodingError U+A696");
expect(() => {ms932Encoder.encode("\uA697")}).to.throw(Error, "EncodingError U+A697");
expect(() => {ms932Encoder.encode("\uA698")}).to.throw(Error, "EncodingError U+A698");
expect(() => {ms932Encoder.encode("\uA699")}).to.throw(Error, "EncodingError U+A699");
expect(() => {ms932Encoder.encode("\uA69A")}).to.throw(Error, "EncodingError U+A69A");
expect(() => {ms932Encoder.encode("\uA69B")}).to.throw(Error, "EncodingError U+A69B");
expect(() => {ms932Encoder.encode("\uA69C")}).to.throw(Error, "EncodingError U+A69C");
expect(() => {ms932Encoder.encode("\uA69D")}).to.throw(Error, "EncodingError U+A69D");
expect(() => {ms932Encoder.encode("\uA69E")}).to.throw(Error, "EncodingError U+A69E");
expect(() => {ms932Encoder.encode("\uA69F")}).to.throw(Error, "EncodingError U+A69F");
expect(() => {ms932Encoder.encode("\uA6A0")}).to.throw(Error, "EncodingError U+A6A0");
expect(() => {ms932Encoder.encode("\uA6A1")}).to.throw(Error, "EncodingError U+A6A1");
expect(() => {ms932Encoder.encode("\uA6A2")}).to.throw(Error, "EncodingError U+A6A2");
expect(() => {ms932Encoder.encode("\uA6A3")}).to.throw(Error, "EncodingError U+A6A3");
expect(() => {ms932Encoder.encode("\uA6A4")}).to.throw(Error, "EncodingError U+A6A4");
expect(() => {ms932Encoder.encode("\uA6A5")}).to.throw(Error, "EncodingError U+A6A5");
expect(() => {ms932Encoder.encode("\uA6A6")}).to.throw(Error, "EncodingError U+A6A6");
expect(() => {ms932Encoder.encode("\uA6A7")}).to.throw(Error, "EncodingError U+A6A7");
expect(() => {ms932Encoder.encode("\uA6A8")}).to.throw(Error, "EncodingError U+A6A8");
expect(() => {ms932Encoder.encode("\uA6A9")}).to.throw(Error, "EncodingError U+A6A9");
expect(() => {ms932Encoder.encode("\uA6AA")}).to.throw(Error, "EncodingError U+A6AA");
expect(() => {ms932Encoder.encode("\uA6AB")}).to.throw(Error, "EncodingError U+A6AB");
expect(() => {ms932Encoder.encode("\uA6AC")}).to.throw(Error, "EncodingError U+A6AC");
expect(() => {ms932Encoder.encode("\uA6AD")}).to.throw(Error, "EncodingError U+A6AD");
expect(() => {ms932Encoder.encode("\uA6AE")}).to.throw(Error, "EncodingError U+A6AE");
expect(() => {ms932Encoder.encode("\uA6AF")}).to.throw(Error, "EncodingError U+A6AF");
expect(() => {ms932Encoder.encode("\uA6B0")}).to.throw(Error, "EncodingError U+A6B0");
expect(() => {ms932Encoder.encode("\uA6B1")}).to.throw(Error, "EncodingError U+A6B1");
expect(() => {ms932Encoder.encode("\uA6B2")}).to.throw(Error, "EncodingError U+A6B2");
expect(() => {ms932Encoder.encode("\uA6B3")}).to.throw(Error, "EncodingError U+A6B3");
expect(() => {ms932Encoder.encode("\uA6B4")}).to.throw(Error, "EncodingError U+A6B4");
expect(() => {ms932Encoder.encode("\uA6B5")}).to.throw(Error, "EncodingError U+A6B5");
expect(() => {ms932Encoder.encode("\uA6B6")}).to.throw(Error, "EncodingError U+A6B6");
expect(() => {ms932Encoder.encode("\uA6B7")}).to.throw(Error, "EncodingError U+A6B7");
expect(() => {ms932Encoder.encode("\uA6B8")}).to.throw(Error, "EncodingError U+A6B8");
expect(() => {ms932Encoder.encode("\uA6B9")}).to.throw(Error, "EncodingError U+A6B9");
expect(() => {ms932Encoder.encode("\uA6BA")}).to.throw(Error, "EncodingError U+A6BA");
expect(() => {ms932Encoder.encode("\uA6BB")}).to.throw(Error, "EncodingError U+A6BB");
expect(() => {ms932Encoder.encode("\uA6BC")}).to.throw(Error, "EncodingError U+A6BC");
expect(() => {ms932Encoder.encode("\uA6BD")}).to.throw(Error, "EncodingError U+A6BD");
expect(() => {ms932Encoder.encode("\uA6BE")}).to.throw(Error, "EncodingError U+A6BE");
expect(() => {ms932Encoder.encode("\uA6BF")}).to.throw(Error, "EncodingError U+A6BF");
expect(() => {ms932Encoder.encode("\uA6C0")}).to.throw(Error, "EncodingError U+A6C0");
expect(() => {ms932Encoder.encode("\uA6C1")}).to.throw(Error, "EncodingError U+A6C1");
expect(() => {ms932Encoder.encode("\uA6C2")}).to.throw(Error, "EncodingError U+A6C2");
expect(() => {ms932Encoder.encode("\uA6C3")}).to.throw(Error, "EncodingError U+A6C3");
expect(() => {ms932Encoder.encode("\uA6C4")}).to.throw(Error, "EncodingError U+A6C4");
expect(() => {ms932Encoder.encode("\uA6C5")}).to.throw(Error, "EncodingError U+A6C5");
expect(() => {ms932Encoder.encode("\uA6C6")}).to.throw(Error, "EncodingError U+A6C6");
expect(() => {ms932Encoder.encode("\uA6C7")}).to.throw(Error, "EncodingError U+A6C7");
expect(() => {ms932Encoder.encode("\uA6C8")}).to.throw(Error, "EncodingError U+A6C8");
expect(() => {ms932Encoder.encode("\uA6C9")}).to.throw(Error, "EncodingError U+A6C9");
expect(() => {ms932Encoder.encode("\uA6CA")}).to.throw(Error, "EncodingError U+A6CA");
expect(() => {ms932Encoder.encode("\uA6CB")}).to.throw(Error, "EncodingError U+A6CB");
expect(() => {ms932Encoder.encode("\uA6CC")}).to.throw(Error, "EncodingError U+A6CC");
expect(() => {ms932Encoder.encode("\uA6CD")}).to.throw(Error, "EncodingError U+A6CD");
expect(() => {ms932Encoder.encode("\uA6CE")}).to.throw(Error, "EncodingError U+A6CE");
expect(() => {ms932Encoder.encode("\uA6CF")}).to.throw(Error, "EncodingError U+A6CF");
expect(() => {ms932Encoder.encode("\uA6D0")}).to.throw(Error, "EncodingError U+A6D0");
expect(() => {ms932Encoder.encode("\uA6D1")}).to.throw(Error, "EncodingError U+A6D1");
expect(() => {ms932Encoder.encode("\uA6D2")}).to.throw(Error, "EncodingError U+A6D2");
expect(() => {ms932Encoder.encode("\uA6D3")}).to.throw(Error, "EncodingError U+A6D3");
expect(() => {ms932Encoder.encode("\uA6D4")}).to.throw(Error, "EncodingError U+A6D4");
expect(() => {ms932Encoder.encode("\uA6D5")}).to.throw(Error, "EncodingError U+A6D5");
expect(() => {ms932Encoder.encode("\uA6D6")}).to.throw(Error, "EncodingError U+A6D6");
expect(() => {ms932Encoder.encode("\uA6D7")}).to.throw(Error, "EncodingError U+A6D7");
expect(() => {ms932Encoder.encode("\uA6D8")}).to.throw(Error, "EncodingError U+A6D8");
expect(() => {ms932Encoder.encode("\uA6D9")}).to.throw(Error, "EncodingError U+A6D9");
expect(() => {ms932Encoder.encode("\uA6DA")}).to.throw(Error, "EncodingError U+A6DA");
expect(() => {ms932Encoder.encode("\uA6DB")}).to.throw(Error, "EncodingError U+A6DB");
expect(() => {ms932Encoder.encode("\uA6DC")}).to.throw(Error, "EncodingError U+A6DC");
expect(() => {ms932Encoder.encode("\uA6DD")}).to.throw(Error, "EncodingError U+A6DD");
expect(() => {ms932Encoder.encode("\uA6DE")}).to.throw(Error, "EncodingError U+A6DE");
expect(() => {ms932Encoder.encode("\uA6DF")}).to.throw(Error, "EncodingError U+A6DF");
expect(() => {ms932Encoder.encode("\uA6E0")}).to.throw(Error, "EncodingError U+A6E0");
expect(() => {ms932Encoder.encode("\uA6E1")}).to.throw(Error, "EncodingError U+A6E1");
expect(() => {ms932Encoder.encode("\uA6E2")}).to.throw(Error, "EncodingError U+A6E2");
expect(() => {ms932Encoder.encode("\uA6E3")}).to.throw(Error, "EncodingError U+A6E3");
expect(() => {ms932Encoder.encode("\uA6E4")}).to.throw(Error, "EncodingError U+A6E4");
expect(() => {ms932Encoder.encode("\uA6E5")}).to.throw(Error, "EncodingError U+A6E5");
expect(() => {ms932Encoder.encode("\uA6E6")}).to.throw(Error, "EncodingError U+A6E6");
expect(() => {ms932Encoder.encode("\uA6E7")}).to.throw(Error, "EncodingError U+A6E7");
expect(() => {ms932Encoder.encode("\uA6E8")}).to.throw(Error, "EncodingError U+A6E8");
expect(() => {ms932Encoder.encode("\uA6E9")}).to.throw(Error, "EncodingError U+A6E9");
expect(() => {ms932Encoder.encode("\uA6EA")}).to.throw(Error, "EncodingError U+A6EA");
expect(() => {ms932Encoder.encode("\uA6EB")}).to.throw(Error, "EncodingError U+A6EB");
expect(() => {ms932Encoder.encode("\uA6EC")}).to.throw(Error, "EncodingError U+A6EC");
expect(() => {ms932Encoder.encode("\uA6ED")}).to.throw(Error, "EncodingError U+A6ED");
expect(() => {ms932Encoder.encode("\uA6EE")}).to.throw(Error, "EncodingError U+A6EE");
expect(() => {ms932Encoder.encode("\uA6EF")}).to.throw(Error, "EncodingError U+A6EF");
expect(() => {ms932Encoder.encode("\uA6F0")}).to.throw(Error, "EncodingError U+A6F0");
expect(() => {ms932Encoder.encode("\uA6F1")}).to.throw(Error, "EncodingError U+A6F1");
expect(() => {ms932Encoder.encode("\uA6F2")}).to.throw(Error, "EncodingError U+A6F2");
expect(() => {ms932Encoder.encode("\uA6F3")}).to.throw(Error, "EncodingError U+A6F3");
expect(() => {ms932Encoder.encode("\uA6F4")}).to.throw(Error, "EncodingError U+A6F4");
expect(() => {ms932Encoder.encode("\uA6F5")}).to.throw(Error, "EncodingError U+A6F5");
expect(() => {ms932Encoder.encode("\uA6F6")}).to.throw(Error, "EncodingError U+A6F6");
expect(() => {ms932Encoder.encode("\uA6F7")}).to.throw(Error, "EncodingError U+A6F7");
expect(() => {ms932Encoder.encode("\uA6F8")}).to.throw(Error, "EncodingError U+A6F8");
expect(() => {ms932Encoder.encode("\uA6F9")}).to.throw(Error, "EncodingError U+A6F9");
expect(() => {ms932Encoder.encode("\uA6FA")}).to.throw(Error, "EncodingError U+A6FA");
expect(() => {ms932Encoder.encode("\uA6FB")}).to.throw(Error, "EncodingError U+A6FB");
expect(() => {ms932Encoder.encode("\uA6FC")}).to.throw(Error, "EncodingError U+A6FC");
expect(() => {ms932Encoder.encode("\uA6FD")}).to.throw(Error, "EncodingError U+A6FD");
expect(() => {ms932Encoder.encode("\uA6FE")}).to.throw(Error, "EncodingError U+A6FE");
expect(() => {ms932Encoder.encode("\uA6FF")}).to.throw(Error, "EncodingError U+A6FF");
expect(() => {ms932Encoder.encode("\uA700")}).to.throw(Error, "EncodingError U+A700");
expect(() => {ms932Encoder.encode("\uA701")}).to.throw(Error, "EncodingError U+A701");
expect(() => {ms932Encoder.encode("\uA702")}).to.throw(Error, "EncodingError U+A702");
expect(() => {ms932Encoder.encode("\uA703")}).to.throw(Error, "EncodingError U+A703");
expect(() => {ms932Encoder.encode("\uA704")}).to.throw(Error, "EncodingError U+A704");
expect(() => {ms932Encoder.encode("\uA705")}).to.throw(Error, "EncodingError U+A705");
expect(() => {ms932Encoder.encode("\uA706")}).to.throw(Error, "EncodingError U+A706");
expect(() => {ms932Encoder.encode("\uA707")}).to.throw(Error, "EncodingError U+A707");
expect(() => {ms932Encoder.encode("\uA708")}).to.throw(Error, "EncodingError U+A708");
expect(() => {ms932Encoder.encode("\uA709")}).to.throw(Error, "EncodingError U+A709");
expect(() => {ms932Encoder.encode("\uA70A")}).to.throw(Error, "EncodingError U+A70A");
expect(() => {ms932Encoder.encode("\uA70B")}).to.throw(Error, "EncodingError U+A70B");
expect(() => {ms932Encoder.encode("\uA70C")}).to.throw(Error, "EncodingError U+A70C");
expect(() => {ms932Encoder.encode("\uA70D")}).to.throw(Error, "EncodingError U+A70D");
expect(() => {ms932Encoder.encode("\uA70E")}).to.throw(Error, "EncodingError U+A70E");
expect(() => {ms932Encoder.encode("\uA70F")}).to.throw(Error, "EncodingError U+A70F");
expect(() => {ms932Encoder.encode("\uA710")}).to.throw(Error, "EncodingError U+A710");
expect(() => {ms932Encoder.encode("\uA711")}).to.throw(Error, "EncodingError U+A711");
expect(() => {ms932Encoder.encode("\uA712")}).to.throw(Error, "EncodingError U+A712");
expect(() => {ms932Encoder.encode("\uA713")}).to.throw(Error, "EncodingError U+A713");
expect(() => {ms932Encoder.encode("\uA714")}).to.throw(Error, "EncodingError U+A714");
expect(() => {ms932Encoder.encode("\uA715")}).to.throw(Error, "EncodingError U+A715");
expect(() => {ms932Encoder.encode("\uA716")}).to.throw(Error, "EncodingError U+A716");
expect(() => {ms932Encoder.encode("\uA717")}).to.throw(Error, "EncodingError U+A717");
expect(() => {ms932Encoder.encode("\uA718")}).to.throw(Error, "EncodingError U+A718");
expect(() => {ms932Encoder.encode("\uA719")}).to.throw(Error, "EncodingError U+A719");
expect(() => {ms932Encoder.encode("\uA71A")}).to.throw(Error, "EncodingError U+A71A");
expect(() => {ms932Encoder.encode("\uA71B")}).to.throw(Error, "EncodingError U+A71B");
expect(() => {ms932Encoder.encode("\uA71C")}).to.throw(Error, "EncodingError U+A71C");
expect(() => {ms932Encoder.encode("\uA71D")}).to.throw(Error, "EncodingError U+A71D");
expect(() => {ms932Encoder.encode("\uA71E")}).to.throw(Error, "EncodingError U+A71E");
expect(() => {ms932Encoder.encode("\uA71F")}).to.throw(Error, "EncodingError U+A71F");
expect(() => {ms932Encoder.encode("\uA720")}).to.throw(Error, "EncodingError U+A720");
expect(() => {ms932Encoder.encode("\uA721")}).to.throw(Error, "EncodingError U+A721");
expect(() => {ms932Encoder.encode("\uA722")}).to.throw(Error, "EncodingError U+A722");
expect(() => {ms932Encoder.encode("\uA723")}).to.throw(Error, "EncodingError U+A723");
expect(() => {ms932Encoder.encode("\uA724")}).to.throw(Error, "EncodingError U+A724");
expect(() => {ms932Encoder.encode("\uA725")}).to.throw(Error, "EncodingError U+A725");
expect(() => {ms932Encoder.encode("\uA726")}).to.throw(Error, "EncodingError U+A726");
expect(() => {ms932Encoder.encode("\uA727")}).to.throw(Error, "EncodingError U+A727");
expect(() => {ms932Encoder.encode("\uA728")}).to.throw(Error, "EncodingError U+A728");
expect(() => {ms932Encoder.encode("\uA729")}).to.throw(Error, "EncodingError U+A729");
expect(() => {ms932Encoder.encode("\uA72A")}).to.throw(Error, "EncodingError U+A72A");
expect(() => {ms932Encoder.encode("\uA72B")}).to.throw(Error, "EncodingError U+A72B");
expect(() => {ms932Encoder.encode("\uA72C")}).to.throw(Error, "EncodingError U+A72C");
expect(() => {ms932Encoder.encode("\uA72D")}).to.throw(Error, "EncodingError U+A72D");
expect(() => {ms932Encoder.encode("\uA72E")}).to.throw(Error, "EncodingError U+A72E");
expect(() => {ms932Encoder.encode("\uA72F")}).to.throw(Error, "EncodingError U+A72F");
expect(() => {ms932Encoder.encode("\uA730")}).to.throw(Error, "EncodingError U+A730");
expect(() => {ms932Encoder.encode("\uA731")}).to.throw(Error, "EncodingError U+A731");
expect(() => {ms932Encoder.encode("\uA732")}).to.throw(Error, "EncodingError U+A732");
expect(() => {ms932Encoder.encode("\uA733")}).to.throw(Error, "EncodingError U+A733");
expect(() => {ms932Encoder.encode("\uA734")}).to.throw(Error, "EncodingError U+A734");
expect(() => {ms932Encoder.encode("\uA735")}).to.throw(Error, "EncodingError U+A735");
expect(() => {ms932Encoder.encode("\uA736")}).to.throw(Error, "EncodingError U+A736");
expect(() => {ms932Encoder.encode("\uA737")}).to.throw(Error, "EncodingError U+A737");
expect(() => {ms932Encoder.encode("\uA738")}).to.throw(Error, "EncodingError U+A738");
expect(() => {ms932Encoder.encode("\uA739")}).to.throw(Error, "EncodingError U+A739");
expect(() => {ms932Encoder.encode("\uA73A")}).to.throw(Error, "EncodingError U+A73A");
expect(() => {ms932Encoder.encode("\uA73B")}).to.throw(Error, "EncodingError U+A73B");
expect(() => {ms932Encoder.encode("\uA73C")}).to.throw(Error, "EncodingError U+A73C");
expect(() => {ms932Encoder.encode("\uA73D")}).to.throw(Error, "EncodingError U+A73D");
expect(() => {ms932Encoder.encode("\uA73E")}).to.throw(Error, "EncodingError U+A73E");
expect(() => {ms932Encoder.encode("\uA73F")}).to.throw(Error, "EncodingError U+A73F");
expect(() => {ms932Encoder.encode("\uA740")}).to.throw(Error, "EncodingError U+A740");
expect(() => {ms932Encoder.encode("\uA741")}).to.throw(Error, "EncodingError U+A741");
expect(() => {ms932Encoder.encode("\uA742")}).to.throw(Error, "EncodingError U+A742");
expect(() => {ms932Encoder.encode("\uA743")}).to.throw(Error, "EncodingError U+A743");
expect(() => {ms932Encoder.encode("\uA744")}).to.throw(Error, "EncodingError U+A744");
expect(() => {ms932Encoder.encode("\uA745")}).to.throw(Error, "EncodingError U+A745");
expect(() => {ms932Encoder.encode("\uA746")}).to.throw(Error, "EncodingError U+A746");
expect(() => {ms932Encoder.encode("\uA747")}).to.throw(Error, "EncodingError U+A747");
expect(() => {ms932Encoder.encode("\uA748")}).to.throw(Error, "EncodingError U+A748");
expect(() => {ms932Encoder.encode("\uA749")}).to.throw(Error, "EncodingError U+A749");
expect(() => {ms932Encoder.encode("\uA74A")}).to.throw(Error, "EncodingError U+A74A");
expect(() => {ms932Encoder.encode("\uA74B")}).to.throw(Error, "EncodingError U+A74B");
expect(() => {ms932Encoder.encode("\uA74C")}).to.throw(Error, "EncodingError U+A74C");
expect(() => {ms932Encoder.encode("\uA74D")}).to.throw(Error, "EncodingError U+A74D");
expect(() => {ms932Encoder.encode("\uA74E")}).to.throw(Error, "EncodingError U+A74E");
expect(() => {ms932Encoder.encode("\uA74F")}).to.throw(Error, "EncodingError U+A74F");
expect(() => {ms932Encoder.encode("\uA750")}).to.throw(Error, "EncodingError U+A750");
expect(() => {ms932Encoder.encode("\uA751")}).to.throw(Error, "EncodingError U+A751");
expect(() => {ms932Encoder.encode("\uA752")}).to.throw(Error, "EncodingError U+A752");
expect(() => {ms932Encoder.encode("\uA753")}).to.throw(Error, "EncodingError U+A753");
expect(() => {ms932Encoder.encode("\uA754")}).to.throw(Error, "EncodingError U+A754");
expect(() => {ms932Encoder.encode("\uA755")}).to.throw(Error, "EncodingError U+A755");
expect(() => {ms932Encoder.encode("\uA756")}).to.throw(Error, "EncodingError U+A756");
expect(() => {ms932Encoder.encode("\uA757")}).to.throw(Error, "EncodingError U+A757");
expect(() => {ms932Encoder.encode("\uA758")}).to.throw(Error, "EncodingError U+A758");
expect(() => {ms932Encoder.encode("\uA759")}).to.throw(Error, "EncodingError U+A759");
expect(() => {ms932Encoder.encode("\uA75A")}).to.throw(Error, "EncodingError U+A75A");
expect(() => {ms932Encoder.encode("\uA75B")}).to.throw(Error, "EncodingError U+A75B");
expect(() => {ms932Encoder.encode("\uA75C")}).to.throw(Error, "EncodingError U+A75C");
expect(() => {ms932Encoder.encode("\uA75D")}).to.throw(Error, "EncodingError U+A75D");
expect(() => {ms932Encoder.encode("\uA75E")}).to.throw(Error, "EncodingError U+A75E");
expect(() => {ms932Encoder.encode("\uA75F")}).to.throw(Error, "EncodingError U+A75F");
expect(() => {ms932Encoder.encode("\uA760")}).to.throw(Error, "EncodingError U+A760");
expect(() => {ms932Encoder.encode("\uA761")}).to.throw(Error, "EncodingError U+A761");
expect(() => {ms932Encoder.encode("\uA762")}).to.throw(Error, "EncodingError U+A762");
expect(() => {ms932Encoder.encode("\uA763")}).to.throw(Error, "EncodingError U+A763");
expect(() => {ms932Encoder.encode("\uA764")}).to.throw(Error, "EncodingError U+A764");
expect(() => {ms932Encoder.encode("\uA765")}).to.throw(Error, "EncodingError U+A765");
expect(() => {ms932Encoder.encode("\uA766")}).to.throw(Error, "EncodingError U+A766");
expect(() => {ms932Encoder.encode("\uA767")}).to.throw(Error, "EncodingError U+A767");
expect(() => {ms932Encoder.encode("\uA768")}).to.throw(Error, "EncodingError U+A768");
expect(() => {ms932Encoder.encode("\uA769")}).to.throw(Error, "EncodingError U+A769");
expect(() => {ms932Encoder.encode("\uA76A")}).to.throw(Error, "EncodingError U+A76A");
expect(() => {ms932Encoder.encode("\uA76B")}).to.throw(Error, "EncodingError U+A76B");
expect(() => {ms932Encoder.encode("\uA76C")}).to.throw(Error, "EncodingError U+A76C");
expect(() => {ms932Encoder.encode("\uA76D")}).to.throw(Error, "EncodingError U+A76D");
expect(() => {ms932Encoder.encode("\uA76E")}).to.throw(Error, "EncodingError U+A76E");
expect(() => {ms932Encoder.encode("\uA76F")}).to.throw(Error, "EncodingError U+A76F");
expect(() => {ms932Encoder.encode("\uA770")}).to.throw(Error, "EncodingError U+A770");
expect(() => {ms932Encoder.encode("\uA771")}).to.throw(Error, "EncodingError U+A771");
expect(() => {ms932Encoder.encode("\uA772")}).to.throw(Error, "EncodingError U+A772");
expect(() => {ms932Encoder.encode("\uA773")}).to.throw(Error, "EncodingError U+A773");
expect(() => {ms932Encoder.encode("\uA774")}).to.throw(Error, "EncodingError U+A774");
expect(() => {ms932Encoder.encode("\uA775")}).to.throw(Error, "EncodingError U+A775");
expect(() => {ms932Encoder.encode("\uA776")}).to.throw(Error, "EncodingError U+A776");
expect(() => {ms932Encoder.encode("\uA777")}).to.throw(Error, "EncodingError U+A777");
expect(() => {ms932Encoder.encode("\uA778")}).to.throw(Error, "EncodingError U+A778");
expect(() => {ms932Encoder.encode("\uA779")}).to.throw(Error, "EncodingError U+A779");
expect(() => {ms932Encoder.encode("\uA77A")}).to.throw(Error, "EncodingError U+A77A");
expect(() => {ms932Encoder.encode("\uA77B")}).to.throw(Error, "EncodingError U+A77B");
expect(() => {ms932Encoder.encode("\uA77C")}).to.throw(Error, "EncodingError U+A77C");
expect(() => {ms932Encoder.encode("\uA77D")}).to.throw(Error, "EncodingError U+A77D");
expect(() => {ms932Encoder.encode("\uA77E")}).to.throw(Error, "EncodingError U+A77E");
expect(() => {ms932Encoder.encode("\uA77F")}).to.throw(Error, "EncodingError U+A77F");
expect(() => {ms932Encoder.encode("\uA780")}).to.throw(Error, "EncodingError U+A780");
expect(() => {ms932Encoder.encode("\uA781")}).to.throw(Error, "EncodingError U+A781");
expect(() => {ms932Encoder.encode("\uA782")}).to.throw(Error, "EncodingError U+A782");
expect(() => {ms932Encoder.encode("\uA783")}).to.throw(Error, "EncodingError U+A783");
expect(() => {ms932Encoder.encode("\uA784")}).to.throw(Error, "EncodingError U+A784");
expect(() => {ms932Encoder.encode("\uA785")}).to.throw(Error, "EncodingError U+A785");
expect(() => {ms932Encoder.encode("\uA786")}).to.throw(Error, "EncodingError U+A786");
expect(() => {ms932Encoder.encode("\uA787")}).to.throw(Error, "EncodingError U+A787");
expect(() => {ms932Encoder.encode("\uA788")}).to.throw(Error, "EncodingError U+A788");
expect(() => {ms932Encoder.encode("\uA789")}).to.throw(Error, "EncodingError U+A789");
expect(() => {ms932Encoder.encode("\uA78A")}).to.throw(Error, "EncodingError U+A78A");
expect(() => {ms932Encoder.encode("\uA78B")}).to.throw(Error, "EncodingError U+A78B");
expect(() => {ms932Encoder.encode("\uA78C")}).to.throw(Error, "EncodingError U+A78C");
expect(() => {ms932Encoder.encode("\uA78D")}).to.throw(Error, "EncodingError U+A78D");
expect(() => {ms932Encoder.encode("\uA78E")}).to.throw(Error, "EncodingError U+A78E");
expect(() => {ms932Encoder.encode("\uA78F")}).to.throw(Error, "EncodingError U+A78F");
expect(() => {ms932Encoder.encode("\uA790")}).to.throw(Error, "EncodingError U+A790");
expect(() => {ms932Encoder.encode("\uA791")}).to.throw(Error, "EncodingError U+A791");
expect(() => {ms932Encoder.encode("\uA792")}).to.throw(Error, "EncodingError U+A792");
expect(() => {ms932Encoder.encode("\uA793")}).to.throw(Error, "EncodingError U+A793");
expect(() => {ms932Encoder.encode("\uA794")}).to.throw(Error, "EncodingError U+A794");
expect(() => {ms932Encoder.encode("\uA795")}).to.throw(Error, "EncodingError U+A795");
expect(() => {ms932Encoder.encode("\uA796")}).to.throw(Error, "EncodingError U+A796");
expect(() => {ms932Encoder.encode("\uA797")}).to.throw(Error, "EncodingError U+A797");
expect(() => {ms932Encoder.encode("\uA798")}).to.throw(Error, "EncodingError U+A798");
expect(() => {ms932Encoder.encode("\uA799")}).to.throw(Error, "EncodingError U+A799");
expect(() => {ms932Encoder.encode("\uA79A")}).to.throw(Error, "EncodingError U+A79A");
expect(() => {ms932Encoder.encode("\uA79B")}).to.throw(Error, "EncodingError U+A79B");
expect(() => {ms932Encoder.encode("\uA79C")}).to.throw(Error, "EncodingError U+A79C");
expect(() => {ms932Encoder.encode("\uA79D")}).to.throw(Error, "EncodingError U+A79D");
expect(() => {ms932Encoder.encode("\uA79E")}).to.throw(Error, "EncodingError U+A79E");
expect(() => {ms932Encoder.encode("\uA79F")}).to.throw(Error, "EncodingError U+A79F");
expect(() => {ms932Encoder.encode("\uA7A0")}).to.throw(Error, "EncodingError U+A7A0");
expect(() => {ms932Encoder.encode("\uA7A1")}).to.throw(Error, "EncodingError U+A7A1");
expect(() => {ms932Encoder.encode("\uA7A2")}).to.throw(Error, "EncodingError U+A7A2");
expect(() => {ms932Encoder.encode("\uA7A3")}).to.throw(Error, "EncodingError U+A7A3");
expect(() => {ms932Encoder.encode("\uA7A4")}).to.throw(Error, "EncodingError U+A7A4");
expect(() => {ms932Encoder.encode("\uA7A5")}).to.throw(Error, "EncodingError U+A7A5");
expect(() => {ms932Encoder.encode("\uA7A6")}).to.throw(Error, "EncodingError U+A7A6");
expect(() => {ms932Encoder.encode("\uA7A7")}).to.throw(Error, "EncodingError U+A7A7");
expect(() => {ms932Encoder.encode("\uA7A8")}).to.throw(Error, "EncodingError U+A7A8");
expect(() => {ms932Encoder.encode("\uA7A9")}).to.throw(Error, "EncodingError U+A7A9");
expect(() => {ms932Encoder.encode("\uA7AA")}).to.throw(Error, "EncodingError U+A7AA");
expect(() => {ms932Encoder.encode("\uA7AB")}).to.throw(Error, "EncodingError U+A7AB");
expect(() => {ms932Encoder.encode("\uA7AC")}).to.throw(Error, "EncodingError U+A7AC");
expect(() => {ms932Encoder.encode("\uA7AD")}).to.throw(Error, "EncodingError U+A7AD");
expect(() => {ms932Encoder.encode("\uA7AE")}).to.throw(Error, "EncodingError U+A7AE");
expect(() => {ms932Encoder.encode("\uA7AF")}).to.throw(Error, "EncodingError U+A7AF");
expect(() => {ms932Encoder.encode("\uA7B0")}).to.throw(Error, "EncodingError U+A7B0");
expect(() => {ms932Encoder.encode("\uA7B1")}).to.throw(Error, "EncodingError U+A7B1");
expect(() => {ms932Encoder.encode("\uA7B2")}).to.throw(Error, "EncodingError U+A7B2");
expect(() => {ms932Encoder.encode("\uA7B3")}).to.throw(Error, "EncodingError U+A7B3");
expect(() => {ms932Encoder.encode("\uA7B4")}).to.throw(Error, "EncodingError U+A7B4");
expect(() => {ms932Encoder.encode("\uA7B5")}).to.throw(Error, "EncodingError U+A7B5");
expect(() => {ms932Encoder.encode("\uA7B6")}).to.throw(Error, "EncodingError U+A7B6");
expect(() => {ms932Encoder.encode("\uA7B7")}).to.throw(Error, "EncodingError U+A7B7");
expect(() => {ms932Encoder.encode("\uA7B8")}).to.throw(Error, "EncodingError U+A7B8");
expect(() => {ms932Encoder.encode("\uA7B9")}).to.throw(Error, "EncodingError U+A7B9");
expect(() => {ms932Encoder.encode("\uA7BA")}).to.throw(Error, "EncodingError U+A7BA");
expect(() => {ms932Encoder.encode("\uA7BB")}).to.throw(Error, "EncodingError U+A7BB");
expect(() => {ms932Encoder.encode("\uA7BC")}).to.throw(Error, "EncodingError U+A7BC");
expect(() => {ms932Encoder.encode("\uA7BD")}).to.throw(Error, "EncodingError U+A7BD");
expect(() => {ms932Encoder.encode("\uA7BE")}).to.throw(Error, "EncodingError U+A7BE");
expect(() => {ms932Encoder.encode("\uA7BF")}).to.throw(Error, "EncodingError U+A7BF");
expect(() => {ms932Encoder.encode("\uA7C0")}).to.throw(Error, "EncodingError U+A7C0");
expect(() => {ms932Encoder.encode("\uA7C1")}).to.throw(Error, "EncodingError U+A7C1");
expect(() => {ms932Encoder.encode("\uA7C2")}).to.throw(Error, "EncodingError U+A7C2");
expect(() => {ms932Encoder.encode("\uA7C3")}).to.throw(Error, "EncodingError U+A7C3");
expect(() => {ms932Encoder.encode("\uA7C4")}).to.throw(Error, "EncodingError U+A7C4");
expect(() => {ms932Encoder.encode("\uA7C5")}).to.throw(Error, "EncodingError U+A7C5");
expect(() => {ms932Encoder.encode("\uA7C6")}).to.throw(Error, "EncodingError U+A7C6");
expect(() => {ms932Encoder.encode("\uA7C7")}).to.throw(Error, "EncodingError U+A7C7");
expect(() => {ms932Encoder.encode("\uA7C8")}).to.throw(Error, "EncodingError U+A7C8");
expect(() => {ms932Encoder.encode("\uA7C9")}).to.throw(Error, "EncodingError U+A7C9");
expect(() => {ms932Encoder.encode("\uA7CA")}).to.throw(Error, "EncodingError U+A7CA");
expect(() => {ms932Encoder.encode("\uA7CB")}).to.throw(Error, "EncodingError U+A7CB");
expect(() => {ms932Encoder.encode("\uA7CC")}).to.throw(Error, "EncodingError U+A7CC");
expect(() => {ms932Encoder.encode("\uA7CD")}).to.throw(Error, "EncodingError U+A7CD");
expect(() => {ms932Encoder.encode("\uA7CE")}).to.throw(Error, "EncodingError U+A7CE");
expect(() => {ms932Encoder.encode("\uA7CF")}).to.throw(Error, "EncodingError U+A7CF");
expect(() => {ms932Encoder.encode("\uA7D0")}).to.throw(Error, "EncodingError U+A7D0");
expect(() => {ms932Encoder.encode("\uA7D1")}).to.throw(Error, "EncodingError U+A7D1");
expect(() => {ms932Encoder.encode("\uA7D2")}).to.throw(Error, "EncodingError U+A7D2");
expect(() => {ms932Encoder.encode("\uA7D3")}).to.throw(Error, "EncodingError U+A7D3");
expect(() => {ms932Encoder.encode("\uA7D4")}).to.throw(Error, "EncodingError U+A7D4");
expect(() => {ms932Encoder.encode("\uA7D5")}).to.throw(Error, "EncodingError U+A7D5");
expect(() => {ms932Encoder.encode("\uA7D6")}).to.throw(Error, "EncodingError U+A7D6");
expect(() => {ms932Encoder.encode("\uA7D7")}).to.throw(Error, "EncodingError U+A7D7");
expect(() => {ms932Encoder.encode("\uA7D8")}).to.throw(Error, "EncodingError U+A7D8");
expect(() => {ms932Encoder.encode("\uA7D9")}).to.throw(Error, "EncodingError U+A7D9");
expect(() => {ms932Encoder.encode("\uA7DA")}).to.throw(Error, "EncodingError U+A7DA");
expect(() => {ms932Encoder.encode("\uA7DB")}).to.throw(Error, "EncodingError U+A7DB");
expect(() => {ms932Encoder.encode("\uA7DC")}).to.throw(Error, "EncodingError U+A7DC");
expect(() => {ms932Encoder.encode("\uA7DD")}).to.throw(Error, "EncodingError U+A7DD");
expect(() => {ms932Encoder.encode("\uA7DE")}).to.throw(Error, "EncodingError U+A7DE");
expect(() => {ms932Encoder.encode("\uA7DF")}).to.throw(Error, "EncodingError U+A7DF");
expect(() => {ms932Encoder.encode("\uA7E0")}).to.throw(Error, "EncodingError U+A7E0");
expect(() => {ms932Encoder.encode("\uA7E1")}).to.throw(Error, "EncodingError U+A7E1");
expect(() => {ms932Encoder.encode("\uA7E2")}).to.throw(Error, "EncodingError U+A7E2");
expect(() => {ms932Encoder.encode("\uA7E3")}).to.throw(Error, "EncodingError U+A7E3");
expect(() => {ms932Encoder.encode("\uA7E4")}).to.throw(Error, "EncodingError U+A7E4");
expect(() => {ms932Encoder.encode("\uA7E5")}).to.throw(Error, "EncodingError U+A7E5");
expect(() => {ms932Encoder.encode("\uA7E6")}).to.throw(Error, "EncodingError U+A7E6");
expect(() => {ms932Encoder.encode("\uA7E7")}).to.throw(Error, "EncodingError U+A7E7");
expect(() => {ms932Encoder.encode("\uA7E8")}).to.throw(Error, "EncodingError U+A7E8");
expect(() => {ms932Encoder.encode("\uA7E9")}).to.throw(Error, "EncodingError U+A7E9");
expect(() => {ms932Encoder.encode("\uA7EA")}).to.throw(Error, "EncodingError U+A7EA");
expect(() => {ms932Encoder.encode("\uA7EB")}).to.throw(Error, "EncodingError U+A7EB");
expect(() => {ms932Encoder.encode("\uA7EC")}).to.throw(Error, "EncodingError U+A7EC");
expect(() => {ms932Encoder.encode("\uA7ED")}).to.throw(Error, "EncodingError U+A7ED");
expect(() => {ms932Encoder.encode("\uA7EE")}).to.throw(Error, "EncodingError U+A7EE");
expect(() => {ms932Encoder.encode("\uA7EF")}).to.throw(Error, "EncodingError U+A7EF");
expect(() => {ms932Encoder.encode("\uA7F0")}).to.throw(Error, "EncodingError U+A7F0");
expect(() => {ms932Encoder.encode("\uA7F1")}).to.throw(Error, "EncodingError U+A7F1");
expect(() => {ms932Encoder.encode("\uA7F2")}).to.throw(Error, "EncodingError U+A7F2");
expect(() => {ms932Encoder.encode("\uA7F3")}).to.throw(Error, "EncodingError U+A7F3");
expect(() => {ms932Encoder.encode("\uA7F4")}).to.throw(Error, "EncodingError U+A7F4");
expect(() => {ms932Encoder.encode("\uA7F5")}).to.throw(Error, "EncodingError U+A7F5");
expect(() => {ms932Encoder.encode("\uA7F6")}).to.throw(Error, "EncodingError U+A7F6");
expect(() => {ms932Encoder.encode("\uA7F7")}).to.throw(Error, "EncodingError U+A7F7");
expect(() => {ms932Encoder.encode("\uA7F8")}).to.throw(Error, "EncodingError U+A7F8");
expect(() => {ms932Encoder.encode("\uA7F9")}).to.throw(Error, "EncodingError U+A7F9");
expect(() => {ms932Encoder.encode("\uA7FA")}).to.throw(Error, "EncodingError U+A7FA");
expect(() => {ms932Encoder.encode("\uA7FB")}).to.throw(Error, "EncodingError U+A7FB");
expect(() => {ms932Encoder.encode("\uA7FC")}).to.throw(Error, "EncodingError U+A7FC");
expect(() => {ms932Encoder.encode("\uA7FD")}).to.throw(Error, "EncodingError U+A7FD");
expect(() => {ms932Encoder.encode("\uA7FE")}).to.throw(Error, "EncodingError U+A7FE");
expect(() => {ms932Encoder.encode("\uA7FF")}).to.throw(Error, "EncodingError U+A7FF");
expect(() => {ms932Encoder.encode("\uA800")}).to.throw(Error, "EncodingError U+A800");
expect(() => {ms932Encoder.encode("\uA801")}).to.throw(Error, "EncodingError U+A801");
expect(() => {ms932Encoder.encode("\uA802")}).to.throw(Error, "EncodingError U+A802");
expect(() => {ms932Encoder.encode("\uA803")}).to.throw(Error, "EncodingError U+A803");
expect(() => {ms932Encoder.encode("\uA804")}).to.throw(Error, "EncodingError U+A804");
expect(() => {ms932Encoder.encode("\uA805")}).to.throw(Error, "EncodingError U+A805");
expect(() => {ms932Encoder.encode("\uA806")}).to.throw(Error, "EncodingError U+A806");
expect(() => {ms932Encoder.encode("\uA807")}).to.throw(Error, "EncodingError U+A807");
expect(() => {ms932Encoder.encode("\uA808")}).to.throw(Error, "EncodingError U+A808");
expect(() => {ms932Encoder.encode("\uA809")}).to.throw(Error, "EncodingError U+A809");
expect(() => {ms932Encoder.encode("\uA80A")}).to.throw(Error, "EncodingError U+A80A");
expect(() => {ms932Encoder.encode("\uA80B")}).to.throw(Error, "EncodingError U+A80B");
expect(() => {ms932Encoder.encode("\uA80C")}).to.throw(Error, "EncodingError U+A80C");
expect(() => {ms932Encoder.encode("\uA80D")}).to.throw(Error, "EncodingError U+A80D");
expect(() => {ms932Encoder.encode("\uA80E")}).to.throw(Error, "EncodingError U+A80E");
expect(() => {ms932Encoder.encode("\uA80F")}).to.throw(Error, "EncodingError U+A80F");
expect(() => {ms932Encoder.encode("\uA810")}).to.throw(Error, "EncodingError U+A810");
expect(() => {ms932Encoder.encode("\uA811")}).to.throw(Error, "EncodingError U+A811");
expect(() => {ms932Encoder.encode("\uA812")}).to.throw(Error, "EncodingError U+A812");
expect(() => {ms932Encoder.encode("\uA813")}).to.throw(Error, "EncodingError U+A813");
expect(() => {ms932Encoder.encode("\uA814")}).to.throw(Error, "EncodingError U+A814");
expect(() => {ms932Encoder.encode("\uA815")}).to.throw(Error, "EncodingError U+A815");
expect(() => {ms932Encoder.encode("\uA816")}).to.throw(Error, "EncodingError U+A816");
expect(() => {ms932Encoder.encode("\uA817")}).to.throw(Error, "EncodingError U+A817");
expect(() => {ms932Encoder.encode("\uA818")}).to.throw(Error, "EncodingError U+A818");
expect(() => {ms932Encoder.encode("\uA819")}).to.throw(Error, "EncodingError U+A819");
expect(() => {ms932Encoder.encode("\uA81A")}).to.throw(Error, "EncodingError U+A81A");
expect(() => {ms932Encoder.encode("\uA81B")}).to.throw(Error, "EncodingError U+A81B");
expect(() => {ms932Encoder.encode("\uA81C")}).to.throw(Error, "EncodingError U+A81C");
expect(() => {ms932Encoder.encode("\uA81D")}).to.throw(Error, "EncodingError U+A81D");
expect(() => {ms932Encoder.encode("\uA81E")}).to.throw(Error, "EncodingError U+A81E");
expect(() => {ms932Encoder.encode("\uA81F")}).to.throw(Error, "EncodingError U+A81F");
expect(() => {ms932Encoder.encode("\uA820")}).to.throw(Error, "EncodingError U+A820");
expect(() => {ms932Encoder.encode("\uA821")}).to.throw(Error, "EncodingError U+A821");
expect(() => {ms932Encoder.encode("\uA822")}).to.throw(Error, "EncodingError U+A822");
expect(() => {ms932Encoder.encode("\uA823")}).to.throw(Error, "EncodingError U+A823");
expect(() => {ms932Encoder.encode("\uA824")}).to.throw(Error, "EncodingError U+A824");
expect(() => {ms932Encoder.encode("\uA825")}).to.throw(Error, "EncodingError U+A825");
expect(() => {ms932Encoder.encode("\uA826")}).to.throw(Error, "EncodingError U+A826");
expect(() => {ms932Encoder.encode("\uA827")}).to.throw(Error, "EncodingError U+A827");
expect(() => {ms932Encoder.encode("\uA828")}).to.throw(Error, "EncodingError U+A828");
expect(() => {ms932Encoder.encode("\uA829")}).to.throw(Error, "EncodingError U+A829");
expect(() => {ms932Encoder.encode("\uA82A")}).to.throw(Error, "EncodingError U+A82A");
expect(() => {ms932Encoder.encode("\uA82B")}).to.throw(Error, "EncodingError U+A82B");
expect(() => {ms932Encoder.encode("\uA82C")}).to.throw(Error, "EncodingError U+A82C");
expect(() => {ms932Encoder.encode("\uA82D")}).to.throw(Error, "EncodingError U+A82D");
expect(() => {ms932Encoder.encode("\uA82E")}).to.throw(Error, "EncodingError U+A82E");
expect(() => {ms932Encoder.encode("\uA82F")}).to.throw(Error, "EncodingError U+A82F");
expect(() => {ms932Encoder.encode("\uA830")}).to.throw(Error, "EncodingError U+A830");
expect(() => {ms932Encoder.encode("\uA831")}).to.throw(Error, "EncodingError U+A831");
expect(() => {ms932Encoder.encode("\uA832")}).to.throw(Error, "EncodingError U+A832");
expect(() => {ms932Encoder.encode("\uA833")}).to.throw(Error, "EncodingError U+A833");
expect(() => {ms932Encoder.encode("\uA834")}).to.throw(Error, "EncodingError U+A834");
expect(() => {ms932Encoder.encode("\uA835")}).to.throw(Error, "EncodingError U+A835");
expect(() => {ms932Encoder.encode("\uA836")}).to.throw(Error, "EncodingError U+A836");
expect(() => {ms932Encoder.encode("\uA837")}).to.throw(Error, "EncodingError U+A837");
expect(() => {ms932Encoder.encode("\uA838")}).to.throw(Error, "EncodingError U+A838");
expect(() => {ms932Encoder.encode("\uA839")}).to.throw(Error, "EncodingError U+A839");
expect(() => {ms932Encoder.encode("\uA83A")}).to.throw(Error, "EncodingError U+A83A");
expect(() => {ms932Encoder.encode("\uA83B")}).to.throw(Error, "EncodingError U+A83B");
expect(() => {ms932Encoder.encode("\uA83C")}).to.throw(Error, "EncodingError U+A83C");
expect(() => {ms932Encoder.encode("\uA83D")}).to.throw(Error, "EncodingError U+A83D");
expect(() => {ms932Encoder.encode("\uA83E")}).to.throw(Error, "EncodingError U+A83E");
expect(() => {ms932Encoder.encode("\uA83F")}).to.throw(Error, "EncodingError U+A83F");
expect(() => {ms932Encoder.encode("\uA840")}).to.throw(Error, "EncodingError U+A840");
expect(() => {ms932Encoder.encode("\uA841")}).to.throw(Error, "EncodingError U+A841");
expect(() => {ms932Encoder.encode("\uA842")}).to.throw(Error, "EncodingError U+A842");
expect(() => {ms932Encoder.encode("\uA843")}).to.throw(Error, "EncodingError U+A843");
expect(() => {ms932Encoder.encode("\uA844")}).to.throw(Error, "EncodingError U+A844");
expect(() => {ms932Encoder.encode("\uA845")}).to.throw(Error, "EncodingError U+A845");
expect(() => {ms932Encoder.encode("\uA846")}).to.throw(Error, "EncodingError U+A846");
expect(() => {ms932Encoder.encode("\uA847")}).to.throw(Error, "EncodingError U+A847");
expect(() => {ms932Encoder.encode("\uA848")}).to.throw(Error, "EncodingError U+A848");
expect(() => {ms932Encoder.encode("\uA849")}).to.throw(Error, "EncodingError U+A849");
expect(() => {ms932Encoder.encode("\uA84A")}).to.throw(Error, "EncodingError U+A84A");
expect(() => {ms932Encoder.encode("\uA84B")}).to.throw(Error, "EncodingError U+A84B");
expect(() => {ms932Encoder.encode("\uA84C")}).to.throw(Error, "EncodingError U+A84C");
expect(() => {ms932Encoder.encode("\uA84D")}).to.throw(Error, "EncodingError U+A84D");
expect(() => {ms932Encoder.encode("\uA84E")}).to.throw(Error, "EncodingError U+A84E");
expect(() => {ms932Encoder.encode("\uA84F")}).to.throw(Error, "EncodingError U+A84F");
expect(() => {ms932Encoder.encode("\uA850")}).to.throw(Error, "EncodingError U+A850");
expect(() => {ms932Encoder.encode("\uA851")}).to.throw(Error, "EncodingError U+A851");
expect(() => {ms932Encoder.encode("\uA852")}).to.throw(Error, "EncodingError U+A852");
expect(() => {ms932Encoder.encode("\uA853")}).to.throw(Error, "EncodingError U+A853");
expect(() => {ms932Encoder.encode("\uA854")}).to.throw(Error, "EncodingError U+A854");
expect(() => {ms932Encoder.encode("\uA855")}).to.throw(Error, "EncodingError U+A855");
expect(() => {ms932Encoder.encode("\uA856")}).to.throw(Error, "EncodingError U+A856");
expect(() => {ms932Encoder.encode("\uA857")}).to.throw(Error, "EncodingError U+A857");
expect(() => {ms932Encoder.encode("\uA858")}).to.throw(Error, "EncodingError U+A858");
expect(() => {ms932Encoder.encode("\uA859")}).to.throw(Error, "EncodingError U+A859");
expect(() => {ms932Encoder.encode("\uA85A")}).to.throw(Error, "EncodingError U+A85A");
expect(() => {ms932Encoder.encode("\uA85B")}).to.throw(Error, "EncodingError U+A85B");
expect(() => {ms932Encoder.encode("\uA85C")}).to.throw(Error, "EncodingError U+A85C");
expect(() => {ms932Encoder.encode("\uA85D")}).to.throw(Error, "EncodingError U+A85D");
expect(() => {ms932Encoder.encode("\uA85E")}).to.throw(Error, "EncodingError U+A85E");
expect(() => {ms932Encoder.encode("\uA85F")}).to.throw(Error, "EncodingError U+A85F");
expect(() => {ms932Encoder.encode("\uA860")}).to.throw(Error, "EncodingError U+A860");
expect(() => {ms932Encoder.encode("\uA861")}).to.throw(Error, "EncodingError U+A861");
expect(() => {ms932Encoder.encode("\uA862")}).to.throw(Error, "EncodingError U+A862");
expect(() => {ms932Encoder.encode("\uA863")}).to.throw(Error, "EncodingError U+A863");
expect(() => {ms932Encoder.encode("\uA864")}).to.throw(Error, "EncodingError U+A864");
expect(() => {ms932Encoder.encode("\uA865")}).to.throw(Error, "EncodingError U+A865");
expect(() => {ms932Encoder.encode("\uA866")}).to.throw(Error, "EncodingError U+A866");
expect(() => {ms932Encoder.encode("\uA867")}).to.throw(Error, "EncodingError U+A867");
expect(() => {ms932Encoder.encode("\uA868")}).to.throw(Error, "EncodingError U+A868");
expect(() => {ms932Encoder.encode("\uA869")}).to.throw(Error, "EncodingError U+A869");
expect(() => {ms932Encoder.encode("\uA86A")}).to.throw(Error, "EncodingError U+A86A");
expect(() => {ms932Encoder.encode("\uA86B")}).to.throw(Error, "EncodingError U+A86B");
expect(() => {ms932Encoder.encode("\uA86C")}).to.throw(Error, "EncodingError U+A86C");
expect(() => {ms932Encoder.encode("\uA86D")}).to.throw(Error, "EncodingError U+A86D");
expect(() => {ms932Encoder.encode("\uA86E")}).to.throw(Error, "EncodingError U+A86E");
expect(() => {ms932Encoder.encode("\uA86F")}).to.throw(Error, "EncodingError U+A86F");
expect(() => {ms932Encoder.encode("\uA870")}).to.throw(Error, "EncodingError U+A870");
expect(() => {ms932Encoder.encode("\uA871")}).to.throw(Error, "EncodingError U+A871");
expect(() => {ms932Encoder.encode("\uA872")}).to.throw(Error, "EncodingError U+A872");
expect(() => {ms932Encoder.encode("\uA873")}).to.throw(Error, "EncodingError U+A873");
expect(() => {ms932Encoder.encode("\uA874")}).to.throw(Error, "EncodingError U+A874");
expect(() => {ms932Encoder.encode("\uA875")}).to.throw(Error, "EncodingError U+A875");
expect(() => {ms932Encoder.encode("\uA876")}).to.throw(Error, "EncodingError U+A876");
expect(() => {ms932Encoder.encode("\uA877")}).to.throw(Error, "EncodingError U+A877");
expect(() => {ms932Encoder.encode("\uA878")}).to.throw(Error, "EncodingError U+A878");
expect(() => {ms932Encoder.encode("\uA879")}).to.throw(Error, "EncodingError U+A879");
expect(() => {ms932Encoder.encode("\uA87A")}).to.throw(Error, "EncodingError U+A87A");
expect(() => {ms932Encoder.encode("\uA87B")}).to.throw(Error, "EncodingError U+A87B");
expect(() => {ms932Encoder.encode("\uA87C")}).to.throw(Error, "EncodingError U+A87C");
expect(() => {ms932Encoder.encode("\uA87D")}).to.throw(Error, "EncodingError U+A87D");
expect(() => {ms932Encoder.encode("\uA87E")}).to.throw(Error, "EncodingError U+A87E");
expect(() => {ms932Encoder.encode("\uA87F")}).to.throw(Error, "EncodingError U+A87F");
expect(() => {ms932Encoder.encode("\uA880")}).to.throw(Error, "EncodingError U+A880");
expect(() => {ms932Encoder.encode("\uA881")}).to.throw(Error, "EncodingError U+A881");
expect(() => {ms932Encoder.encode("\uA882")}).to.throw(Error, "EncodingError U+A882");
expect(() => {ms932Encoder.encode("\uA883")}).to.throw(Error, "EncodingError U+A883");
expect(() => {ms932Encoder.encode("\uA884")}).to.throw(Error, "EncodingError U+A884");
expect(() => {ms932Encoder.encode("\uA885")}).to.throw(Error, "EncodingError U+A885");
expect(() => {ms932Encoder.encode("\uA886")}).to.throw(Error, "EncodingError U+A886");
expect(() => {ms932Encoder.encode("\uA887")}).to.throw(Error, "EncodingError U+A887");
expect(() => {ms932Encoder.encode("\uA888")}).to.throw(Error, "EncodingError U+A888");
expect(() => {ms932Encoder.encode("\uA889")}).to.throw(Error, "EncodingError U+A889");
expect(() => {ms932Encoder.encode("\uA88A")}).to.throw(Error, "EncodingError U+A88A");
expect(() => {ms932Encoder.encode("\uA88B")}).to.throw(Error, "EncodingError U+A88B");
expect(() => {ms932Encoder.encode("\uA88C")}).to.throw(Error, "EncodingError U+A88C");
expect(() => {ms932Encoder.encode("\uA88D")}).to.throw(Error, "EncodingError U+A88D");
expect(() => {ms932Encoder.encode("\uA88E")}).to.throw(Error, "EncodingError U+A88E");
expect(() => {ms932Encoder.encode("\uA88F")}).to.throw(Error, "EncodingError U+A88F");
expect(() => {ms932Encoder.encode("\uA890")}).to.throw(Error, "EncodingError U+A890");
expect(() => {ms932Encoder.encode("\uA891")}).to.throw(Error, "EncodingError U+A891");
expect(() => {ms932Encoder.encode("\uA892")}).to.throw(Error, "EncodingError U+A892");
expect(() => {ms932Encoder.encode("\uA893")}).to.throw(Error, "EncodingError U+A893");
expect(() => {ms932Encoder.encode("\uA894")}).to.throw(Error, "EncodingError U+A894");
expect(() => {ms932Encoder.encode("\uA895")}).to.throw(Error, "EncodingError U+A895");
expect(() => {ms932Encoder.encode("\uA896")}).to.throw(Error, "EncodingError U+A896");
expect(() => {ms932Encoder.encode("\uA897")}).to.throw(Error, "EncodingError U+A897");
expect(() => {ms932Encoder.encode("\uA898")}).to.throw(Error, "EncodingError U+A898");
expect(() => {ms932Encoder.encode("\uA899")}).to.throw(Error, "EncodingError U+A899");
expect(() => {ms932Encoder.encode("\uA89A")}).to.throw(Error, "EncodingError U+A89A");
expect(() => {ms932Encoder.encode("\uA89B")}).to.throw(Error, "EncodingError U+A89B");
expect(() => {ms932Encoder.encode("\uA89C")}).to.throw(Error, "EncodingError U+A89C");
expect(() => {ms932Encoder.encode("\uA89D")}).to.throw(Error, "EncodingError U+A89D");
expect(() => {ms932Encoder.encode("\uA89E")}).to.throw(Error, "EncodingError U+A89E");
expect(() => {ms932Encoder.encode("\uA89F")}).to.throw(Error, "EncodingError U+A89F");
expect(() => {ms932Encoder.encode("\uA8A0")}).to.throw(Error, "EncodingError U+A8A0");
expect(() => {ms932Encoder.encode("\uA8A1")}).to.throw(Error, "EncodingError U+A8A1");
expect(() => {ms932Encoder.encode("\uA8A2")}).to.throw(Error, "EncodingError U+A8A2");
expect(() => {ms932Encoder.encode("\uA8A3")}).to.throw(Error, "EncodingError U+A8A3");
expect(() => {ms932Encoder.encode("\uA8A4")}).to.throw(Error, "EncodingError U+A8A4");
expect(() => {ms932Encoder.encode("\uA8A5")}).to.throw(Error, "EncodingError U+A8A5");
expect(() => {ms932Encoder.encode("\uA8A6")}).to.throw(Error, "EncodingError U+A8A6");
expect(() => {ms932Encoder.encode("\uA8A7")}).to.throw(Error, "EncodingError U+A8A7");
expect(() => {ms932Encoder.encode("\uA8A8")}).to.throw(Error, "EncodingError U+A8A8");
expect(() => {ms932Encoder.encode("\uA8A9")}).to.throw(Error, "EncodingError U+A8A9");
expect(() => {ms932Encoder.encode("\uA8AA")}).to.throw(Error, "EncodingError U+A8AA");
expect(() => {ms932Encoder.encode("\uA8AB")}).to.throw(Error, "EncodingError U+A8AB");
expect(() => {ms932Encoder.encode("\uA8AC")}).to.throw(Error, "EncodingError U+A8AC");
expect(() => {ms932Encoder.encode("\uA8AD")}).to.throw(Error, "EncodingError U+A8AD");
expect(() => {ms932Encoder.encode("\uA8AE")}).to.throw(Error, "EncodingError U+A8AE");
expect(() => {ms932Encoder.encode("\uA8AF")}).to.throw(Error, "EncodingError U+A8AF");
expect(() => {ms932Encoder.encode("\uA8B0")}).to.throw(Error, "EncodingError U+A8B0");
expect(() => {ms932Encoder.encode("\uA8B1")}).to.throw(Error, "EncodingError U+A8B1");
expect(() => {ms932Encoder.encode("\uA8B2")}).to.throw(Error, "EncodingError U+A8B2");
expect(() => {ms932Encoder.encode("\uA8B3")}).to.throw(Error, "EncodingError U+A8B3");
expect(() => {ms932Encoder.encode("\uA8B4")}).to.throw(Error, "EncodingError U+A8B4");
expect(() => {ms932Encoder.encode("\uA8B5")}).to.throw(Error, "EncodingError U+A8B5");
expect(() => {ms932Encoder.encode("\uA8B6")}).to.throw(Error, "EncodingError U+A8B6");
expect(() => {ms932Encoder.encode("\uA8B7")}).to.throw(Error, "EncodingError U+A8B7");
expect(() => {ms932Encoder.encode("\uA8B8")}).to.throw(Error, "EncodingError U+A8B8");
expect(() => {ms932Encoder.encode("\uA8B9")}).to.throw(Error, "EncodingError U+A8B9");
expect(() => {ms932Encoder.encode("\uA8BA")}).to.throw(Error, "EncodingError U+A8BA");
expect(() => {ms932Encoder.encode("\uA8BB")}).to.throw(Error, "EncodingError U+A8BB");
expect(() => {ms932Encoder.encode("\uA8BC")}).to.throw(Error, "EncodingError U+A8BC");
expect(() => {ms932Encoder.encode("\uA8BD")}).to.throw(Error, "EncodingError U+A8BD");
expect(() => {ms932Encoder.encode("\uA8BE")}).to.throw(Error, "EncodingError U+A8BE");
expect(() => {ms932Encoder.encode("\uA8BF")}).to.throw(Error, "EncodingError U+A8BF");
expect(() => {ms932Encoder.encode("\uA8C0")}).to.throw(Error, "EncodingError U+A8C0");
expect(() => {ms932Encoder.encode("\uA8C1")}).to.throw(Error, "EncodingError U+A8C1");
expect(() => {ms932Encoder.encode("\uA8C2")}).to.throw(Error, "EncodingError U+A8C2");
expect(() => {ms932Encoder.encode("\uA8C3")}).to.throw(Error, "EncodingError U+A8C3");
expect(() => {ms932Encoder.encode("\uA8C4")}).to.throw(Error, "EncodingError U+A8C4");
expect(() => {ms932Encoder.encode("\uA8C5")}).to.throw(Error, "EncodingError U+A8C5");
expect(() => {ms932Encoder.encode("\uA8C6")}).to.throw(Error, "EncodingError U+A8C6");
expect(() => {ms932Encoder.encode("\uA8C7")}).to.throw(Error, "EncodingError U+A8C7");
expect(() => {ms932Encoder.encode("\uA8C8")}).to.throw(Error, "EncodingError U+A8C8");
expect(() => {ms932Encoder.encode("\uA8C9")}).to.throw(Error, "EncodingError U+A8C9");
expect(() => {ms932Encoder.encode("\uA8CA")}).to.throw(Error, "EncodingError U+A8CA");
expect(() => {ms932Encoder.encode("\uA8CB")}).to.throw(Error, "EncodingError U+A8CB");
expect(() => {ms932Encoder.encode("\uA8CC")}).to.throw(Error, "EncodingError U+A8CC");
expect(() => {ms932Encoder.encode("\uA8CD")}).to.throw(Error, "EncodingError U+A8CD");
expect(() => {ms932Encoder.encode("\uA8CE")}).to.throw(Error, "EncodingError U+A8CE");
expect(() => {ms932Encoder.encode("\uA8CF")}).to.throw(Error, "EncodingError U+A8CF");
expect(() => {ms932Encoder.encode("\uA8D0")}).to.throw(Error, "EncodingError U+A8D0");
expect(() => {ms932Encoder.encode("\uA8D1")}).to.throw(Error, "EncodingError U+A8D1");
expect(() => {ms932Encoder.encode("\uA8D2")}).to.throw(Error, "EncodingError U+A8D2");
expect(() => {ms932Encoder.encode("\uA8D3")}).to.throw(Error, "EncodingError U+A8D3");
expect(() => {ms932Encoder.encode("\uA8D4")}).to.throw(Error, "EncodingError U+A8D4");
expect(() => {ms932Encoder.encode("\uA8D5")}).to.throw(Error, "EncodingError U+A8D5");
expect(() => {ms932Encoder.encode("\uA8D6")}).to.throw(Error, "EncodingError U+A8D6");
expect(() => {ms932Encoder.encode("\uA8D7")}).to.throw(Error, "EncodingError U+A8D7");
expect(() => {ms932Encoder.encode("\uA8D8")}).to.throw(Error, "EncodingError U+A8D8");
expect(() => {ms932Encoder.encode("\uA8D9")}).to.throw(Error, "EncodingError U+A8D9");
expect(() => {ms932Encoder.encode("\uA8DA")}).to.throw(Error, "EncodingError U+A8DA");
expect(() => {ms932Encoder.encode("\uA8DB")}).to.throw(Error, "EncodingError U+A8DB");
expect(() => {ms932Encoder.encode("\uA8DC")}).to.throw(Error, "EncodingError U+A8DC");
expect(() => {ms932Encoder.encode("\uA8DD")}).to.throw(Error, "EncodingError U+A8DD");
expect(() => {ms932Encoder.encode("\uA8DE")}).to.throw(Error, "EncodingError U+A8DE");
expect(() => {ms932Encoder.encode("\uA8DF")}).to.throw(Error, "EncodingError U+A8DF");
expect(() => {ms932Encoder.encode("\uA8E0")}).to.throw(Error, "EncodingError U+A8E0");
expect(() => {ms932Encoder.encode("\uA8E1")}).to.throw(Error, "EncodingError U+A8E1");
expect(() => {ms932Encoder.encode("\uA8E2")}).to.throw(Error, "EncodingError U+A8E2");
expect(() => {ms932Encoder.encode("\uA8E3")}).to.throw(Error, "EncodingError U+A8E3");
expect(() => {ms932Encoder.encode("\uA8E4")}).to.throw(Error, "EncodingError U+A8E4");
expect(() => {ms932Encoder.encode("\uA8E5")}).to.throw(Error, "EncodingError U+A8E5");
expect(() => {ms932Encoder.encode("\uA8E6")}).to.throw(Error, "EncodingError U+A8E6");
expect(() => {ms932Encoder.encode("\uA8E7")}).to.throw(Error, "EncodingError U+A8E7");
expect(() => {ms932Encoder.encode("\uA8E8")}).to.throw(Error, "EncodingError U+A8E8");
expect(() => {ms932Encoder.encode("\uA8E9")}).to.throw(Error, "EncodingError U+A8E9");
expect(() => {ms932Encoder.encode("\uA8EA")}).to.throw(Error, "EncodingError U+A8EA");
expect(() => {ms932Encoder.encode("\uA8EB")}).to.throw(Error, "EncodingError U+A8EB");
expect(() => {ms932Encoder.encode("\uA8EC")}).to.throw(Error, "EncodingError U+A8EC");
expect(() => {ms932Encoder.encode("\uA8ED")}).to.throw(Error, "EncodingError U+A8ED");
expect(() => {ms932Encoder.encode("\uA8EE")}).to.throw(Error, "EncodingError U+A8EE");
expect(() => {ms932Encoder.encode("\uA8EF")}).to.throw(Error, "EncodingError U+A8EF");
expect(() => {ms932Encoder.encode("\uA8F0")}).to.throw(Error, "EncodingError U+A8F0");
expect(() => {ms932Encoder.encode("\uA8F1")}).to.throw(Error, "EncodingError U+A8F1");
expect(() => {ms932Encoder.encode("\uA8F2")}).to.throw(Error, "EncodingError U+A8F2");
expect(() => {ms932Encoder.encode("\uA8F3")}).to.throw(Error, "EncodingError U+A8F3");
expect(() => {ms932Encoder.encode("\uA8F4")}).to.throw(Error, "EncodingError U+A8F4");
expect(() => {ms932Encoder.encode("\uA8F5")}).to.throw(Error, "EncodingError U+A8F5");
expect(() => {ms932Encoder.encode("\uA8F6")}).to.throw(Error, "EncodingError U+A8F6");
expect(() => {ms932Encoder.encode("\uA8F7")}).to.throw(Error, "EncodingError U+A8F7");
expect(() => {ms932Encoder.encode("\uA8F8")}).to.throw(Error, "EncodingError U+A8F8");
expect(() => {ms932Encoder.encode("\uA8F9")}).to.throw(Error, "EncodingError U+A8F9");
expect(() => {ms932Encoder.encode("\uA8FA")}).to.throw(Error, "EncodingError U+A8FA");
expect(() => {ms932Encoder.encode("\uA8FB")}).to.throw(Error, "EncodingError U+A8FB");
expect(() => {ms932Encoder.encode("\uA8FC")}).to.throw(Error, "EncodingError U+A8FC");
expect(() => {ms932Encoder.encode("\uA8FD")}).to.throw(Error, "EncodingError U+A8FD");
expect(() => {ms932Encoder.encode("\uA8FE")}).to.throw(Error, "EncodingError U+A8FE");
expect(() => {ms932Encoder.encode("\uA8FF")}).to.throw(Error, "EncodingError U+A8FF");
expect(() => {ms932Encoder.encode("\uA900")}).to.throw(Error, "EncodingError U+A900");
expect(() => {ms932Encoder.encode("\uA901")}).to.throw(Error, "EncodingError U+A901");
expect(() => {ms932Encoder.encode("\uA902")}).to.throw(Error, "EncodingError U+A902");
expect(() => {ms932Encoder.encode("\uA903")}).to.throw(Error, "EncodingError U+A903");
expect(() => {ms932Encoder.encode("\uA904")}).to.throw(Error, "EncodingError U+A904");
expect(() => {ms932Encoder.encode("\uA905")}).to.throw(Error, "EncodingError U+A905");
expect(() => {ms932Encoder.encode("\uA906")}).to.throw(Error, "EncodingError U+A906");
expect(() => {ms932Encoder.encode("\uA907")}).to.throw(Error, "EncodingError U+A907");
expect(() => {ms932Encoder.encode("\uA908")}).to.throw(Error, "EncodingError U+A908");
expect(() => {ms932Encoder.encode("\uA909")}).to.throw(Error, "EncodingError U+A909");
expect(() => {ms932Encoder.encode("\uA90A")}).to.throw(Error, "EncodingError U+A90A");
expect(() => {ms932Encoder.encode("\uA90B")}).to.throw(Error, "EncodingError U+A90B");
expect(() => {ms932Encoder.encode("\uA90C")}).to.throw(Error, "EncodingError U+A90C");
expect(() => {ms932Encoder.encode("\uA90D")}).to.throw(Error, "EncodingError U+A90D");
expect(() => {ms932Encoder.encode("\uA90E")}).to.throw(Error, "EncodingError U+A90E");
expect(() => {ms932Encoder.encode("\uA90F")}).to.throw(Error, "EncodingError U+A90F");
expect(() => {ms932Encoder.encode("\uA910")}).to.throw(Error, "EncodingError U+A910");
expect(() => {ms932Encoder.encode("\uA911")}).to.throw(Error, "EncodingError U+A911");
expect(() => {ms932Encoder.encode("\uA912")}).to.throw(Error, "EncodingError U+A912");
expect(() => {ms932Encoder.encode("\uA913")}).to.throw(Error, "EncodingError U+A913");
expect(() => {ms932Encoder.encode("\uA914")}).to.throw(Error, "EncodingError U+A914");
expect(() => {ms932Encoder.encode("\uA915")}).to.throw(Error, "EncodingError U+A915");
expect(() => {ms932Encoder.encode("\uA916")}).to.throw(Error, "EncodingError U+A916");
expect(() => {ms932Encoder.encode("\uA917")}).to.throw(Error, "EncodingError U+A917");
expect(() => {ms932Encoder.encode("\uA918")}).to.throw(Error, "EncodingError U+A918");
expect(() => {ms932Encoder.encode("\uA919")}).to.throw(Error, "EncodingError U+A919");
expect(() => {ms932Encoder.encode("\uA91A")}).to.throw(Error, "EncodingError U+A91A");
expect(() => {ms932Encoder.encode("\uA91B")}).to.throw(Error, "EncodingError U+A91B");
expect(() => {ms932Encoder.encode("\uA91C")}).to.throw(Error, "EncodingError U+A91C");
expect(() => {ms932Encoder.encode("\uA91D")}).to.throw(Error, "EncodingError U+A91D");
expect(() => {ms932Encoder.encode("\uA91E")}).to.throw(Error, "EncodingError U+A91E");
expect(() => {ms932Encoder.encode("\uA91F")}).to.throw(Error, "EncodingError U+A91F");
expect(() => {ms932Encoder.encode("\uA920")}).to.throw(Error, "EncodingError U+A920");
expect(() => {ms932Encoder.encode("\uA921")}).to.throw(Error, "EncodingError U+A921");
expect(() => {ms932Encoder.encode("\uA922")}).to.throw(Error, "EncodingError U+A922");
expect(() => {ms932Encoder.encode("\uA923")}).to.throw(Error, "EncodingError U+A923");
expect(() => {ms932Encoder.encode("\uA924")}).to.throw(Error, "EncodingError U+A924");
expect(() => {ms932Encoder.encode("\uA925")}).to.throw(Error, "EncodingError U+A925");
expect(() => {ms932Encoder.encode("\uA926")}).to.throw(Error, "EncodingError U+A926");
expect(() => {ms932Encoder.encode("\uA927")}).to.throw(Error, "EncodingError U+A927");
expect(() => {ms932Encoder.encode("\uA928")}).to.throw(Error, "EncodingError U+A928");
expect(() => {ms932Encoder.encode("\uA929")}).to.throw(Error, "EncodingError U+A929");
expect(() => {ms932Encoder.encode("\uA92A")}).to.throw(Error, "EncodingError U+A92A");
expect(() => {ms932Encoder.encode("\uA92B")}).to.throw(Error, "EncodingError U+A92B");
expect(() => {ms932Encoder.encode("\uA92C")}).to.throw(Error, "EncodingError U+A92C");
expect(() => {ms932Encoder.encode("\uA92D")}).to.throw(Error, "EncodingError U+A92D");
expect(() => {ms932Encoder.encode("\uA92E")}).to.throw(Error, "EncodingError U+A92E");
expect(() => {ms932Encoder.encode("\uA92F")}).to.throw(Error, "EncodingError U+A92F");
expect(() => {ms932Encoder.encode("\uA930")}).to.throw(Error, "EncodingError U+A930");
expect(() => {ms932Encoder.encode("\uA931")}).to.throw(Error, "EncodingError U+A931");
expect(() => {ms932Encoder.encode("\uA932")}).to.throw(Error, "EncodingError U+A932");
expect(() => {ms932Encoder.encode("\uA933")}).to.throw(Error, "EncodingError U+A933");
expect(() => {ms932Encoder.encode("\uA934")}).to.throw(Error, "EncodingError U+A934");
expect(() => {ms932Encoder.encode("\uA935")}).to.throw(Error, "EncodingError U+A935");
expect(() => {ms932Encoder.encode("\uA936")}).to.throw(Error, "EncodingError U+A936");
expect(() => {ms932Encoder.encode("\uA937")}).to.throw(Error, "EncodingError U+A937");
expect(() => {ms932Encoder.encode("\uA938")}).to.throw(Error, "EncodingError U+A938");
expect(() => {ms932Encoder.encode("\uA939")}).to.throw(Error, "EncodingError U+A939");
expect(() => {ms932Encoder.encode("\uA93A")}).to.throw(Error, "EncodingError U+A93A");
expect(() => {ms932Encoder.encode("\uA93B")}).to.throw(Error, "EncodingError U+A93B");
expect(() => {ms932Encoder.encode("\uA93C")}).to.throw(Error, "EncodingError U+A93C");
expect(() => {ms932Encoder.encode("\uA93D")}).to.throw(Error, "EncodingError U+A93D");
expect(() => {ms932Encoder.encode("\uA93E")}).to.throw(Error, "EncodingError U+A93E");
expect(() => {ms932Encoder.encode("\uA93F")}).to.throw(Error, "EncodingError U+A93F");
expect(() => {ms932Encoder.encode("\uA940")}).to.throw(Error, "EncodingError U+A940");
expect(() => {ms932Encoder.encode("\uA941")}).to.throw(Error, "EncodingError U+A941");
expect(() => {ms932Encoder.encode("\uA942")}).to.throw(Error, "EncodingError U+A942");
expect(() => {ms932Encoder.encode("\uA943")}).to.throw(Error, "EncodingError U+A943");
expect(() => {ms932Encoder.encode("\uA944")}).to.throw(Error, "EncodingError U+A944");
expect(() => {ms932Encoder.encode("\uA945")}).to.throw(Error, "EncodingError U+A945");
expect(() => {ms932Encoder.encode("\uA946")}).to.throw(Error, "EncodingError U+A946");
expect(() => {ms932Encoder.encode("\uA947")}).to.throw(Error, "EncodingError U+A947");
expect(() => {ms932Encoder.encode("\uA948")}).to.throw(Error, "EncodingError U+A948");
expect(() => {ms932Encoder.encode("\uA949")}).to.throw(Error, "EncodingError U+A949");
expect(() => {ms932Encoder.encode("\uA94A")}).to.throw(Error, "EncodingError U+A94A");
expect(() => {ms932Encoder.encode("\uA94B")}).to.throw(Error, "EncodingError U+A94B");
expect(() => {ms932Encoder.encode("\uA94C")}).to.throw(Error, "EncodingError U+A94C");
expect(() => {ms932Encoder.encode("\uA94D")}).to.throw(Error, "EncodingError U+A94D");
expect(() => {ms932Encoder.encode("\uA94E")}).to.throw(Error, "EncodingError U+A94E");
expect(() => {ms932Encoder.encode("\uA94F")}).to.throw(Error, "EncodingError U+A94F");
expect(() => {ms932Encoder.encode("\uA950")}).to.throw(Error, "EncodingError U+A950");
expect(() => {ms932Encoder.encode("\uA951")}).to.throw(Error, "EncodingError U+A951");
expect(() => {ms932Encoder.encode("\uA952")}).to.throw(Error, "EncodingError U+A952");
expect(() => {ms932Encoder.encode("\uA953")}).to.throw(Error, "EncodingError U+A953");
expect(() => {ms932Encoder.encode("\uA954")}).to.throw(Error, "EncodingError U+A954");
expect(() => {ms932Encoder.encode("\uA955")}).to.throw(Error, "EncodingError U+A955");
expect(() => {ms932Encoder.encode("\uA956")}).to.throw(Error, "EncodingError U+A956");
expect(() => {ms932Encoder.encode("\uA957")}).to.throw(Error, "EncodingError U+A957");
expect(() => {ms932Encoder.encode("\uA958")}).to.throw(Error, "EncodingError U+A958");
expect(() => {ms932Encoder.encode("\uA959")}).to.throw(Error, "EncodingError U+A959");
expect(() => {ms932Encoder.encode("\uA95A")}).to.throw(Error, "EncodingError U+A95A");
expect(() => {ms932Encoder.encode("\uA95B")}).to.throw(Error, "EncodingError U+A95B");
expect(() => {ms932Encoder.encode("\uA95C")}).to.throw(Error, "EncodingError U+A95C");
expect(() => {ms932Encoder.encode("\uA95D")}).to.throw(Error, "EncodingError U+A95D");
expect(() => {ms932Encoder.encode("\uA95E")}).to.throw(Error, "EncodingError U+A95E");
expect(() => {ms932Encoder.encode("\uA95F")}).to.throw(Error, "EncodingError U+A95F");
expect(() => {ms932Encoder.encode("\uA960")}).to.throw(Error, "EncodingError U+A960");
expect(() => {ms932Encoder.encode("\uA961")}).to.throw(Error, "EncodingError U+A961");
expect(() => {ms932Encoder.encode("\uA962")}).to.throw(Error, "EncodingError U+A962");
expect(() => {ms932Encoder.encode("\uA963")}).to.throw(Error, "EncodingError U+A963");
expect(() => {ms932Encoder.encode("\uA964")}).to.throw(Error, "EncodingError U+A964");
expect(() => {ms932Encoder.encode("\uA965")}).to.throw(Error, "EncodingError U+A965");
expect(() => {ms932Encoder.encode("\uA966")}).to.throw(Error, "EncodingError U+A966");
expect(() => {ms932Encoder.encode("\uA967")}).to.throw(Error, "EncodingError U+A967");
expect(() => {ms932Encoder.encode("\uA968")}).to.throw(Error, "EncodingError U+A968");
expect(() => {ms932Encoder.encode("\uA969")}).to.throw(Error, "EncodingError U+A969");
expect(() => {ms932Encoder.encode("\uA96A")}).to.throw(Error, "EncodingError U+A96A");
expect(() => {ms932Encoder.encode("\uA96B")}).to.throw(Error, "EncodingError U+A96B");
expect(() => {ms932Encoder.encode("\uA96C")}).to.throw(Error, "EncodingError U+A96C");
expect(() => {ms932Encoder.encode("\uA96D")}).to.throw(Error, "EncodingError U+A96D");
expect(() => {ms932Encoder.encode("\uA96E")}).to.throw(Error, "EncodingError U+A96E");
expect(() => {ms932Encoder.encode("\uA96F")}).to.throw(Error, "EncodingError U+A96F");
expect(() => {ms932Encoder.encode("\uA970")}).to.throw(Error, "EncodingError U+A970");
expect(() => {ms932Encoder.encode("\uA971")}).to.throw(Error, "EncodingError U+A971");
expect(() => {ms932Encoder.encode("\uA972")}).to.throw(Error, "EncodingError U+A972");
expect(() => {ms932Encoder.encode("\uA973")}).to.throw(Error, "EncodingError U+A973");
expect(() => {ms932Encoder.encode("\uA974")}).to.throw(Error, "EncodingError U+A974");
expect(() => {ms932Encoder.encode("\uA975")}).to.throw(Error, "EncodingError U+A975");
expect(() => {ms932Encoder.encode("\uA976")}).to.throw(Error, "EncodingError U+A976");
expect(() => {ms932Encoder.encode("\uA977")}).to.throw(Error, "EncodingError U+A977");
expect(() => {ms932Encoder.encode("\uA978")}).to.throw(Error, "EncodingError U+A978");
expect(() => {ms932Encoder.encode("\uA979")}).to.throw(Error, "EncodingError U+A979");
expect(() => {ms932Encoder.encode("\uA97A")}).to.throw(Error, "EncodingError U+A97A");
expect(() => {ms932Encoder.encode("\uA97B")}).to.throw(Error, "EncodingError U+A97B");
expect(() => {ms932Encoder.encode("\uA97C")}).to.throw(Error, "EncodingError U+A97C");
expect(() => {ms932Encoder.encode("\uA97D")}).to.throw(Error, "EncodingError U+A97D");
expect(() => {ms932Encoder.encode("\uA97E")}).to.throw(Error, "EncodingError U+A97E");
expect(() => {ms932Encoder.encode("\uA97F")}).to.throw(Error, "EncodingError U+A97F");
expect(() => {ms932Encoder.encode("\uA980")}).to.throw(Error, "EncodingError U+A980");
expect(() => {ms932Encoder.encode("\uA981")}).to.throw(Error, "EncodingError U+A981");
expect(() => {ms932Encoder.encode("\uA982")}).to.throw(Error, "EncodingError U+A982");
expect(() => {ms932Encoder.encode("\uA983")}).to.throw(Error, "EncodingError U+A983");
expect(() => {ms932Encoder.encode("\uA984")}).to.throw(Error, "EncodingError U+A984");
expect(() => {ms932Encoder.encode("\uA985")}).to.throw(Error, "EncodingError U+A985");
expect(() => {ms932Encoder.encode("\uA986")}).to.throw(Error, "EncodingError U+A986");
expect(() => {ms932Encoder.encode("\uA987")}).to.throw(Error, "EncodingError U+A987");
expect(() => {ms932Encoder.encode("\uA988")}).to.throw(Error, "EncodingError U+A988");
expect(() => {ms932Encoder.encode("\uA989")}).to.throw(Error, "EncodingError U+A989");
expect(() => {ms932Encoder.encode("\uA98A")}).to.throw(Error, "EncodingError U+A98A");
expect(() => {ms932Encoder.encode("\uA98B")}).to.throw(Error, "EncodingError U+A98B");
expect(() => {ms932Encoder.encode("\uA98C")}).to.throw(Error, "EncodingError U+A98C");
expect(() => {ms932Encoder.encode("\uA98D")}).to.throw(Error, "EncodingError U+A98D");
expect(() => {ms932Encoder.encode("\uA98E")}).to.throw(Error, "EncodingError U+A98E");
expect(() => {ms932Encoder.encode("\uA98F")}).to.throw(Error, "EncodingError U+A98F");
expect(() => {ms932Encoder.encode("\uA990")}).to.throw(Error, "EncodingError U+A990");
expect(() => {ms932Encoder.encode("\uA991")}).to.throw(Error, "EncodingError U+A991");
expect(() => {ms932Encoder.encode("\uA992")}).to.throw(Error, "EncodingError U+A992");
expect(() => {ms932Encoder.encode("\uA993")}).to.throw(Error, "EncodingError U+A993");
expect(() => {ms932Encoder.encode("\uA994")}).to.throw(Error, "EncodingError U+A994");
expect(() => {ms932Encoder.encode("\uA995")}).to.throw(Error, "EncodingError U+A995");
expect(() => {ms932Encoder.encode("\uA996")}).to.throw(Error, "EncodingError U+A996");
expect(() => {ms932Encoder.encode("\uA997")}).to.throw(Error, "EncodingError U+A997");
expect(() => {ms932Encoder.encode("\uA998")}).to.throw(Error, "EncodingError U+A998");
expect(() => {ms932Encoder.encode("\uA999")}).to.throw(Error, "EncodingError U+A999");
expect(() => {ms932Encoder.encode("\uA99A")}).to.throw(Error, "EncodingError U+A99A");
expect(() => {ms932Encoder.encode("\uA99B")}).to.throw(Error, "EncodingError U+A99B");
expect(() => {ms932Encoder.encode("\uA99C")}).to.throw(Error, "EncodingError U+A99C");
expect(() => {ms932Encoder.encode("\uA99D")}).to.throw(Error, "EncodingError U+A99D");
expect(() => {ms932Encoder.encode("\uA99E")}).to.throw(Error, "EncodingError U+A99E");
expect(() => {ms932Encoder.encode("\uA99F")}).to.throw(Error, "EncodingError U+A99F");
expect(() => {ms932Encoder.encode("\uA9A0")}).to.throw(Error, "EncodingError U+A9A0");
expect(() => {ms932Encoder.encode("\uA9A1")}).to.throw(Error, "EncodingError U+A9A1");
expect(() => {ms932Encoder.encode("\uA9A2")}).to.throw(Error, "EncodingError U+A9A2");
expect(() => {ms932Encoder.encode("\uA9A3")}).to.throw(Error, "EncodingError U+A9A3");
expect(() => {ms932Encoder.encode("\uA9A4")}).to.throw(Error, "EncodingError U+A9A4");
expect(() => {ms932Encoder.encode("\uA9A5")}).to.throw(Error, "EncodingError U+A9A5");
expect(() => {ms932Encoder.encode("\uA9A6")}).to.throw(Error, "EncodingError U+A9A6");
expect(() => {ms932Encoder.encode("\uA9A7")}).to.throw(Error, "EncodingError U+A9A7");
expect(() => {ms932Encoder.encode("\uA9A8")}).to.throw(Error, "EncodingError U+A9A8");
expect(() => {ms932Encoder.encode("\uA9A9")}).to.throw(Error, "EncodingError U+A9A9");
expect(() => {ms932Encoder.encode("\uA9AA")}).to.throw(Error, "EncodingError U+A9AA");
expect(() => {ms932Encoder.encode("\uA9AB")}).to.throw(Error, "EncodingError U+A9AB");
expect(() => {ms932Encoder.encode("\uA9AC")}).to.throw(Error, "EncodingError U+A9AC");
expect(() => {ms932Encoder.encode("\uA9AD")}).to.throw(Error, "EncodingError U+A9AD");
expect(() => {ms932Encoder.encode("\uA9AE")}).to.throw(Error, "EncodingError U+A9AE");
expect(() => {ms932Encoder.encode("\uA9AF")}).to.throw(Error, "EncodingError U+A9AF");
expect(() => {ms932Encoder.encode("\uA9B0")}).to.throw(Error, "EncodingError U+A9B0");
expect(() => {ms932Encoder.encode("\uA9B1")}).to.throw(Error, "EncodingError U+A9B1");
expect(() => {ms932Encoder.encode("\uA9B2")}).to.throw(Error, "EncodingError U+A9B2");
expect(() => {ms932Encoder.encode("\uA9B3")}).to.throw(Error, "EncodingError U+A9B3");
expect(() => {ms932Encoder.encode("\uA9B4")}).to.throw(Error, "EncodingError U+A9B4");
expect(() => {ms932Encoder.encode("\uA9B5")}).to.throw(Error, "EncodingError U+A9B5");
expect(() => {ms932Encoder.encode("\uA9B6")}).to.throw(Error, "EncodingError U+A9B6");
expect(() => {ms932Encoder.encode("\uA9B7")}).to.throw(Error, "EncodingError U+A9B7");
expect(() => {ms932Encoder.encode("\uA9B8")}).to.throw(Error, "EncodingError U+A9B8");
expect(() => {ms932Encoder.encode("\uA9B9")}).to.throw(Error, "EncodingError U+A9B9");
expect(() => {ms932Encoder.encode("\uA9BA")}).to.throw(Error, "EncodingError U+A9BA");
expect(() => {ms932Encoder.encode("\uA9BB")}).to.throw(Error, "EncodingError U+A9BB");
expect(() => {ms932Encoder.encode("\uA9BC")}).to.throw(Error, "EncodingError U+A9BC");
expect(() => {ms932Encoder.encode("\uA9BD")}).to.throw(Error, "EncodingError U+A9BD");
expect(() => {ms932Encoder.encode("\uA9BE")}).to.throw(Error, "EncodingError U+A9BE");
expect(() => {ms932Encoder.encode("\uA9BF")}).to.throw(Error, "EncodingError U+A9BF");
expect(() => {ms932Encoder.encode("\uA9C0")}).to.throw(Error, "EncodingError U+A9C0");
expect(() => {ms932Encoder.encode("\uA9C1")}).to.throw(Error, "EncodingError U+A9C1");
expect(() => {ms932Encoder.encode("\uA9C2")}).to.throw(Error, "EncodingError U+A9C2");
expect(() => {ms932Encoder.encode("\uA9C3")}).to.throw(Error, "EncodingError U+A9C3");
expect(() => {ms932Encoder.encode("\uA9C4")}).to.throw(Error, "EncodingError U+A9C4");
expect(() => {ms932Encoder.encode("\uA9C5")}).to.throw(Error, "EncodingError U+A9C5");
expect(() => {ms932Encoder.encode("\uA9C6")}).to.throw(Error, "EncodingError U+A9C6");
expect(() => {ms932Encoder.encode("\uA9C7")}).to.throw(Error, "EncodingError U+A9C7");
expect(() => {ms932Encoder.encode("\uA9C8")}).to.throw(Error, "EncodingError U+A9C8");
expect(() => {ms932Encoder.encode("\uA9C9")}).to.throw(Error, "EncodingError U+A9C9");
expect(() => {ms932Encoder.encode("\uA9CA")}).to.throw(Error, "EncodingError U+A9CA");
expect(() => {ms932Encoder.encode("\uA9CB")}).to.throw(Error, "EncodingError U+A9CB");
expect(() => {ms932Encoder.encode("\uA9CC")}).to.throw(Error, "EncodingError U+A9CC");
expect(() => {ms932Encoder.encode("\uA9CD")}).to.throw(Error, "EncodingError U+A9CD");
expect(() => {ms932Encoder.encode("\uA9CE")}).to.throw(Error, "EncodingError U+A9CE");
expect(() => {ms932Encoder.encode("\uA9CF")}).to.throw(Error, "EncodingError U+A9CF");
expect(() => {ms932Encoder.encode("\uA9D0")}).to.throw(Error, "EncodingError U+A9D0");
expect(() => {ms932Encoder.encode("\uA9D1")}).to.throw(Error, "EncodingError U+A9D1");
expect(() => {ms932Encoder.encode("\uA9D2")}).to.throw(Error, "EncodingError U+A9D2");
expect(() => {ms932Encoder.encode("\uA9D3")}).to.throw(Error, "EncodingError U+A9D3");
expect(() => {ms932Encoder.encode("\uA9D4")}).to.throw(Error, "EncodingError U+A9D4");
expect(() => {ms932Encoder.encode("\uA9D5")}).to.throw(Error, "EncodingError U+A9D5");
expect(() => {ms932Encoder.encode("\uA9D6")}).to.throw(Error, "EncodingError U+A9D6");
expect(() => {ms932Encoder.encode("\uA9D7")}).to.throw(Error, "EncodingError U+A9D7");
expect(() => {ms932Encoder.encode("\uA9D8")}).to.throw(Error, "EncodingError U+A9D8");
expect(() => {ms932Encoder.encode("\uA9D9")}).to.throw(Error, "EncodingError U+A9D9");
expect(() => {ms932Encoder.encode("\uA9DA")}).to.throw(Error, "EncodingError U+A9DA");
expect(() => {ms932Encoder.encode("\uA9DB")}).to.throw(Error, "EncodingError U+A9DB");
expect(() => {ms932Encoder.encode("\uA9DC")}).to.throw(Error, "EncodingError U+A9DC");
expect(() => {ms932Encoder.encode("\uA9DD")}).to.throw(Error, "EncodingError U+A9DD");
expect(() => {ms932Encoder.encode("\uA9DE")}).to.throw(Error, "EncodingError U+A9DE");
expect(() => {ms932Encoder.encode("\uA9DF")}).to.throw(Error, "EncodingError U+A9DF");
expect(() => {ms932Encoder.encode("\uA9E0")}).to.throw(Error, "EncodingError U+A9E0");
expect(() => {ms932Encoder.encode("\uA9E1")}).to.throw(Error, "EncodingError U+A9E1");
expect(() => {ms932Encoder.encode("\uA9E2")}).to.throw(Error, "EncodingError U+A9E2");
expect(() => {ms932Encoder.encode("\uA9E3")}).to.throw(Error, "EncodingError U+A9E3");
expect(() => {ms932Encoder.encode("\uA9E4")}).to.throw(Error, "EncodingError U+A9E4");
expect(() => {ms932Encoder.encode("\uA9E5")}).to.throw(Error, "EncodingError U+A9E5");
expect(() => {ms932Encoder.encode("\uA9E6")}).to.throw(Error, "EncodingError U+A9E6");
expect(() => {ms932Encoder.encode("\uA9E7")}).to.throw(Error, "EncodingError U+A9E7");
expect(() => {ms932Encoder.encode("\uA9E8")}).to.throw(Error, "EncodingError U+A9E8");
expect(() => {ms932Encoder.encode("\uA9E9")}).to.throw(Error, "EncodingError U+A9E9");
expect(() => {ms932Encoder.encode("\uA9EA")}).to.throw(Error, "EncodingError U+A9EA");
expect(() => {ms932Encoder.encode("\uA9EB")}).to.throw(Error, "EncodingError U+A9EB");
expect(() => {ms932Encoder.encode("\uA9EC")}).to.throw(Error, "EncodingError U+A9EC");
expect(() => {ms932Encoder.encode("\uA9ED")}).to.throw(Error, "EncodingError U+A9ED");
expect(() => {ms932Encoder.encode("\uA9EE")}).to.throw(Error, "EncodingError U+A9EE");
expect(() => {ms932Encoder.encode("\uA9EF")}).to.throw(Error, "EncodingError U+A9EF");
expect(() => {ms932Encoder.encode("\uA9F0")}).to.throw(Error, "EncodingError U+A9F0");
expect(() => {ms932Encoder.encode("\uA9F1")}).to.throw(Error, "EncodingError U+A9F1");
expect(() => {ms932Encoder.encode("\uA9F2")}).to.throw(Error, "EncodingError U+A9F2");
expect(() => {ms932Encoder.encode("\uA9F3")}).to.throw(Error, "EncodingError U+A9F3");
expect(() => {ms932Encoder.encode("\uA9F4")}).to.throw(Error, "EncodingError U+A9F4");
expect(() => {ms932Encoder.encode("\uA9F5")}).to.throw(Error, "EncodingError U+A9F5");
expect(() => {ms932Encoder.encode("\uA9F6")}).to.throw(Error, "EncodingError U+A9F6");
expect(() => {ms932Encoder.encode("\uA9F7")}).to.throw(Error, "EncodingError U+A9F7");
expect(() => {ms932Encoder.encode("\uA9F8")}).to.throw(Error, "EncodingError U+A9F8");
expect(() => {ms932Encoder.encode("\uA9F9")}).to.throw(Error, "EncodingError U+A9F9");
expect(() => {ms932Encoder.encode("\uA9FA")}).to.throw(Error, "EncodingError U+A9FA");
expect(() => {ms932Encoder.encode("\uA9FB")}).to.throw(Error, "EncodingError U+A9FB");
expect(() => {ms932Encoder.encode("\uA9FC")}).to.throw(Error, "EncodingError U+A9FC");
expect(() => {ms932Encoder.encode("\uA9FD")}).to.throw(Error, "EncodingError U+A9FD");
expect(() => {ms932Encoder.encode("\uA9FE")}).to.throw(Error, "EncodingError U+A9FE");
expect(() => {ms932Encoder.encode("\uA9FF")}).to.throw(Error, "EncodingError U+A9FF");
expect(() => {ms932Encoder.encode("\uAA00")}).to.throw(Error, "EncodingError U+AA00");
expect(() => {ms932Encoder.encode("\uAA01")}).to.throw(Error, "EncodingError U+AA01");
expect(() => {ms932Encoder.encode("\uAA02")}).to.throw(Error, "EncodingError U+AA02");
expect(() => {ms932Encoder.encode("\uAA03")}).to.throw(Error, "EncodingError U+AA03");
expect(() => {ms932Encoder.encode("\uAA04")}).to.throw(Error, "EncodingError U+AA04");
expect(() => {ms932Encoder.encode("\uAA05")}).to.throw(Error, "EncodingError U+AA05");
expect(() => {ms932Encoder.encode("\uAA06")}).to.throw(Error, "EncodingError U+AA06");
expect(() => {ms932Encoder.encode("\uAA07")}).to.throw(Error, "EncodingError U+AA07");
expect(() => {ms932Encoder.encode("\uAA08")}).to.throw(Error, "EncodingError U+AA08");
expect(() => {ms932Encoder.encode("\uAA09")}).to.throw(Error, "EncodingError U+AA09");
expect(() => {ms932Encoder.encode("\uAA0A")}).to.throw(Error, "EncodingError U+AA0A");
expect(() => {ms932Encoder.encode("\uAA0B")}).to.throw(Error, "EncodingError U+AA0B");
expect(() => {ms932Encoder.encode("\uAA0C")}).to.throw(Error, "EncodingError U+AA0C");
expect(() => {ms932Encoder.encode("\uAA0D")}).to.throw(Error, "EncodingError U+AA0D");
expect(() => {ms932Encoder.encode("\uAA0E")}).to.throw(Error, "EncodingError U+AA0E");
expect(() => {ms932Encoder.encode("\uAA0F")}).to.throw(Error, "EncodingError U+AA0F");
expect(() => {ms932Encoder.encode("\uAA10")}).to.throw(Error, "EncodingError U+AA10");
expect(() => {ms932Encoder.encode("\uAA11")}).to.throw(Error, "EncodingError U+AA11");
expect(() => {ms932Encoder.encode("\uAA12")}).to.throw(Error, "EncodingError U+AA12");
expect(() => {ms932Encoder.encode("\uAA13")}).to.throw(Error, "EncodingError U+AA13");
expect(() => {ms932Encoder.encode("\uAA14")}).to.throw(Error, "EncodingError U+AA14");
expect(() => {ms932Encoder.encode("\uAA15")}).to.throw(Error, "EncodingError U+AA15");
expect(() => {ms932Encoder.encode("\uAA16")}).to.throw(Error, "EncodingError U+AA16");
expect(() => {ms932Encoder.encode("\uAA17")}).to.throw(Error, "EncodingError U+AA17");
expect(() => {ms932Encoder.encode("\uAA18")}).to.throw(Error, "EncodingError U+AA18");
expect(() => {ms932Encoder.encode("\uAA19")}).to.throw(Error, "EncodingError U+AA19");
expect(() => {ms932Encoder.encode("\uAA1A")}).to.throw(Error, "EncodingError U+AA1A");
expect(() => {ms932Encoder.encode("\uAA1B")}).to.throw(Error, "EncodingError U+AA1B");
expect(() => {ms932Encoder.encode("\uAA1C")}).to.throw(Error, "EncodingError U+AA1C");
expect(() => {ms932Encoder.encode("\uAA1D")}).to.throw(Error, "EncodingError U+AA1D");
expect(() => {ms932Encoder.encode("\uAA1E")}).to.throw(Error, "EncodingError U+AA1E");
expect(() => {ms932Encoder.encode("\uAA1F")}).to.throw(Error, "EncodingError U+AA1F");
expect(() => {ms932Encoder.encode("\uAA20")}).to.throw(Error, "EncodingError U+AA20");
expect(() => {ms932Encoder.encode("\uAA21")}).to.throw(Error, "EncodingError U+AA21");
expect(() => {ms932Encoder.encode("\uAA22")}).to.throw(Error, "EncodingError U+AA22");
expect(() => {ms932Encoder.encode("\uAA23")}).to.throw(Error, "EncodingError U+AA23");
expect(() => {ms932Encoder.encode("\uAA24")}).to.throw(Error, "EncodingError U+AA24");
expect(() => {ms932Encoder.encode("\uAA25")}).to.throw(Error, "EncodingError U+AA25");
expect(() => {ms932Encoder.encode("\uAA26")}).to.throw(Error, "EncodingError U+AA26");
expect(() => {ms932Encoder.encode("\uAA27")}).to.throw(Error, "EncodingError U+AA27");
expect(() => {ms932Encoder.encode("\uAA28")}).to.throw(Error, "EncodingError U+AA28");
expect(() => {ms932Encoder.encode("\uAA29")}).to.throw(Error, "EncodingError U+AA29");
expect(() => {ms932Encoder.encode("\uAA2A")}).to.throw(Error, "EncodingError U+AA2A");
expect(() => {ms932Encoder.encode("\uAA2B")}).to.throw(Error, "EncodingError U+AA2B");
expect(() => {ms932Encoder.encode("\uAA2C")}).to.throw(Error, "EncodingError U+AA2C");
expect(() => {ms932Encoder.encode("\uAA2D")}).to.throw(Error, "EncodingError U+AA2D");
expect(() => {ms932Encoder.encode("\uAA2E")}).to.throw(Error, "EncodingError U+AA2E");
expect(() => {ms932Encoder.encode("\uAA2F")}).to.throw(Error, "EncodingError U+AA2F");
expect(() => {ms932Encoder.encode("\uAA30")}).to.throw(Error, "EncodingError U+AA30");
expect(() => {ms932Encoder.encode("\uAA31")}).to.throw(Error, "EncodingError U+AA31");
expect(() => {ms932Encoder.encode("\uAA32")}).to.throw(Error, "EncodingError U+AA32");
expect(() => {ms932Encoder.encode("\uAA33")}).to.throw(Error, "EncodingError U+AA33");
expect(() => {ms932Encoder.encode("\uAA34")}).to.throw(Error, "EncodingError U+AA34");
expect(() => {ms932Encoder.encode("\uAA35")}).to.throw(Error, "EncodingError U+AA35");
expect(() => {ms932Encoder.encode("\uAA36")}).to.throw(Error, "EncodingError U+AA36");
expect(() => {ms932Encoder.encode("\uAA37")}).to.throw(Error, "EncodingError U+AA37");
expect(() => {ms932Encoder.encode("\uAA38")}).to.throw(Error, "EncodingError U+AA38");
expect(() => {ms932Encoder.encode("\uAA39")}).to.throw(Error, "EncodingError U+AA39");
expect(() => {ms932Encoder.encode("\uAA3A")}).to.throw(Error, "EncodingError U+AA3A");
expect(() => {ms932Encoder.encode("\uAA3B")}).to.throw(Error, "EncodingError U+AA3B");
expect(() => {ms932Encoder.encode("\uAA3C")}).to.throw(Error, "EncodingError U+AA3C");
expect(() => {ms932Encoder.encode("\uAA3D")}).to.throw(Error, "EncodingError U+AA3D");
expect(() => {ms932Encoder.encode("\uAA3E")}).to.throw(Error, "EncodingError U+AA3E");
expect(() => {ms932Encoder.encode("\uAA3F")}).to.throw(Error, "EncodingError U+AA3F");
expect(() => {ms932Encoder.encode("\uAA40")}).to.throw(Error, "EncodingError U+AA40");
expect(() => {ms932Encoder.encode("\uAA41")}).to.throw(Error, "EncodingError U+AA41");
expect(() => {ms932Encoder.encode("\uAA42")}).to.throw(Error, "EncodingError U+AA42");
expect(() => {ms932Encoder.encode("\uAA43")}).to.throw(Error, "EncodingError U+AA43");
expect(() => {ms932Encoder.encode("\uAA44")}).to.throw(Error, "EncodingError U+AA44");
expect(() => {ms932Encoder.encode("\uAA45")}).to.throw(Error, "EncodingError U+AA45");
expect(() => {ms932Encoder.encode("\uAA46")}).to.throw(Error, "EncodingError U+AA46");
expect(() => {ms932Encoder.encode("\uAA47")}).to.throw(Error, "EncodingError U+AA47");
expect(() => {ms932Encoder.encode("\uAA48")}).to.throw(Error, "EncodingError U+AA48");
expect(() => {ms932Encoder.encode("\uAA49")}).to.throw(Error, "EncodingError U+AA49");
expect(() => {ms932Encoder.encode("\uAA4A")}).to.throw(Error, "EncodingError U+AA4A");
expect(() => {ms932Encoder.encode("\uAA4B")}).to.throw(Error, "EncodingError U+AA4B");
expect(() => {ms932Encoder.encode("\uAA4C")}).to.throw(Error, "EncodingError U+AA4C");
expect(() => {ms932Encoder.encode("\uAA4D")}).to.throw(Error, "EncodingError U+AA4D");
expect(() => {ms932Encoder.encode("\uAA4E")}).to.throw(Error, "EncodingError U+AA4E");
expect(() => {ms932Encoder.encode("\uAA4F")}).to.throw(Error, "EncodingError U+AA4F");
expect(() => {ms932Encoder.encode("\uAA50")}).to.throw(Error, "EncodingError U+AA50");
expect(() => {ms932Encoder.encode("\uAA51")}).to.throw(Error, "EncodingError U+AA51");
expect(() => {ms932Encoder.encode("\uAA52")}).to.throw(Error, "EncodingError U+AA52");
expect(() => {ms932Encoder.encode("\uAA53")}).to.throw(Error, "EncodingError U+AA53");
expect(() => {ms932Encoder.encode("\uAA54")}).to.throw(Error, "EncodingError U+AA54");
expect(() => {ms932Encoder.encode("\uAA55")}).to.throw(Error, "EncodingError U+AA55");
expect(() => {ms932Encoder.encode("\uAA56")}).to.throw(Error, "EncodingError U+AA56");
expect(() => {ms932Encoder.encode("\uAA57")}).to.throw(Error, "EncodingError U+AA57");
expect(() => {ms932Encoder.encode("\uAA58")}).to.throw(Error, "EncodingError U+AA58");
expect(() => {ms932Encoder.encode("\uAA59")}).to.throw(Error, "EncodingError U+AA59");
expect(() => {ms932Encoder.encode("\uAA5A")}).to.throw(Error, "EncodingError U+AA5A");
expect(() => {ms932Encoder.encode("\uAA5B")}).to.throw(Error, "EncodingError U+AA5B");
expect(() => {ms932Encoder.encode("\uAA5C")}).to.throw(Error, "EncodingError U+AA5C");
expect(() => {ms932Encoder.encode("\uAA5D")}).to.throw(Error, "EncodingError U+AA5D");
expect(() => {ms932Encoder.encode("\uAA5E")}).to.throw(Error, "EncodingError U+AA5E");
expect(() => {ms932Encoder.encode("\uAA5F")}).to.throw(Error, "EncodingError U+AA5F");
expect(() => {ms932Encoder.encode("\uAA60")}).to.throw(Error, "EncodingError U+AA60");
expect(() => {ms932Encoder.encode("\uAA61")}).to.throw(Error, "EncodingError U+AA61");
expect(() => {ms932Encoder.encode("\uAA62")}).to.throw(Error, "EncodingError U+AA62");
expect(() => {ms932Encoder.encode("\uAA63")}).to.throw(Error, "EncodingError U+AA63");
expect(() => {ms932Encoder.encode("\uAA64")}).to.throw(Error, "EncodingError U+AA64");
expect(() => {ms932Encoder.encode("\uAA65")}).to.throw(Error, "EncodingError U+AA65");
expect(() => {ms932Encoder.encode("\uAA66")}).to.throw(Error, "EncodingError U+AA66");
expect(() => {ms932Encoder.encode("\uAA67")}).to.throw(Error, "EncodingError U+AA67");
expect(() => {ms932Encoder.encode("\uAA68")}).to.throw(Error, "EncodingError U+AA68");
expect(() => {ms932Encoder.encode("\uAA69")}).to.throw(Error, "EncodingError U+AA69");
expect(() => {ms932Encoder.encode("\uAA6A")}).to.throw(Error, "EncodingError U+AA6A");
expect(() => {ms932Encoder.encode("\uAA6B")}).to.throw(Error, "EncodingError U+AA6B");
expect(() => {ms932Encoder.encode("\uAA6C")}).to.throw(Error, "EncodingError U+AA6C");
expect(() => {ms932Encoder.encode("\uAA6D")}).to.throw(Error, "EncodingError U+AA6D");
expect(() => {ms932Encoder.encode("\uAA6E")}).to.throw(Error, "EncodingError U+AA6E");
expect(() => {ms932Encoder.encode("\uAA6F")}).to.throw(Error, "EncodingError U+AA6F");
expect(() => {ms932Encoder.encode("\uAA70")}).to.throw(Error, "EncodingError U+AA70");
expect(() => {ms932Encoder.encode("\uAA71")}).to.throw(Error, "EncodingError U+AA71");
expect(() => {ms932Encoder.encode("\uAA72")}).to.throw(Error, "EncodingError U+AA72");
expect(() => {ms932Encoder.encode("\uAA73")}).to.throw(Error, "EncodingError U+AA73");
expect(() => {ms932Encoder.encode("\uAA74")}).to.throw(Error, "EncodingError U+AA74");
expect(() => {ms932Encoder.encode("\uAA75")}).to.throw(Error, "EncodingError U+AA75");
expect(() => {ms932Encoder.encode("\uAA76")}).to.throw(Error, "EncodingError U+AA76");
expect(() => {ms932Encoder.encode("\uAA77")}).to.throw(Error, "EncodingError U+AA77");
expect(() => {ms932Encoder.encode("\uAA78")}).to.throw(Error, "EncodingError U+AA78");
expect(() => {ms932Encoder.encode("\uAA79")}).to.throw(Error, "EncodingError U+AA79");
expect(() => {ms932Encoder.encode("\uAA7A")}).to.throw(Error, "EncodingError U+AA7A");
expect(() => {ms932Encoder.encode("\uAA7B")}).to.throw(Error, "EncodingError U+AA7B");
expect(() => {ms932Encoder.encode("\uAA7C")}).to.throw(Error, "EncodingError U+AA7C");
expect(() => {ms932Encoder.encode("\uAA7D")}).to.throw(Error, "EncodingError U+AA7D");
expect(() => {ms932Encoder.encode("\uAA7E")}).to.throw(Error, "EncodingError U+AA7E");
expect(() => {ms932Encoder.encode("\uAA7F")}).to.throw(Error, "EncodingError U+AA7F");
expect(() => {ms932Encoder.encode("\uAA80")}).to.throw(Error, "EncodingError U+AA80");
expect(() => {ms932Encoder.encode("\uAA81")}).to.throw(Error, "EncodingError U+AA81");
expect(() => {ms932Encoder.encode("\uAA82")}).to.throw(Error, "EncodingError U+AA82");
expect(() => {ms932Encoder.encode("\uAA83")}).to.throw(Error, "EncodingError U+AA83");
expect(() => {ms932Encoder.encode("\uAA84")}).to.throw(Error, "EncodingError U+AA84");
expect(() => {ms932Encoder.encode("\uAA85")}).to.throw(Error, "EncodingError U+AA85");
expect(() => {ms932Encoder.encode("\uAA86")}).to.throw(Error, "EncodingError U+AA86");
expect(() => {ms932Encoder.encode("\uAA87")}).to.throw(Error, "EncodingError U+AA87");
expect(() => {ms932Encoder.encode("\uAA88")}).to.throw(Error, "EncodingError U+AA88");
expect(() => {ms932Encoder.encode("\uAA89")}).to.throw(Error, "EncodingError U+AA89");
expect(() => {ms932Encoder.encode("\uAA8A")}).to.throw(Error, "EncodingError U+AA8A");
expect(() => {ms932Encoder.encode("\uAA8B")}).to.throw(Error, "EncodingError U+AA8B");
expect(() => {ms932Encoder.encode("\uAA8C")}).to.throw(Error, "EncodingError U+AA8C");
expect(() => {ms932Encoder.encode("\uAA8D")}).to.throw(Error, "EncodingError U+AA8D");
expect(() => {ms932Encoder.encode("\uAA8E")}).to.throw(Error, "EncodingError U+AA8E");
expect(() => {ms932Encoder.encode("\uAA8F")}).to.throw(Error, "EncodingError U+AA8F");
expect(() => {ms932Encoder.encode("\uAA90")}).to.throw(Error, "EncodingError U+AA90");
expect(() => {ms932Encoder.encode("\uAA91")}).to.throw(Error, "EncodingError U+AA91");
expect(() => {ms932Encoder.encode("\uAA92")}).to.throw(Error, "EncodingError U+AA92");
expect(() => {ms932Encoder.encode("\uAA93")}).to.throw(Error, "EncodingError U+AA93");
expect(() => {ms932Encoder.encode("\uAA94")}).to.throw(Error, "EncodingError U+AA94");
expect(() => {ms932Encoder.encode("\uAA95")}).to.throw(Error, "EncodingError U+AA95");
expect(() => {ms932Encoder.encode("\uAA96")}).to.throw(Error, "EncodingError U+AA96");
expect(() => {ms932Encoder.encode("\uAA97")}).to.throw(Error, "EncodingError U+AA97");
expect(() => {ms932Encoder.encode("\uAA98")}).to.throw(Error, "EncodingError U+AA98");
expect(() => {ms932Encoder.encode("\uAA99")}).to.throw(Error, "EncodingError U+AA99");
expect(() => {ms932Encoder.encode("\uAA9A")}).to.throw(Error, "EncodingError U+AA9A");
expect(() => {ms932Encoder.encode("\uAA9B")}).to.throw(Error, "EncodingError U+AA9B");
expect(() => {ms932Encoder.encode("\uAA9C")}).to.throw(Error, "EncodingError U+AA9C");
expect(() => {ms932Encoder.encode("\uAA9D")}).to.throw(Error, "EncodingError U+AA9D");
expect(() => {ms932Encoder.encode("\uAA9E")}).to.throw(Error, "EncodingError U+AA9E");
expect(() => {ms932Encoder.encode("\uAA9F")}).to.throw(Error, "EncodingError U+AA9F");
expect(() => {ms932Encoder.encode("\uAAA0")}).to.throw(Error, "EncodingError U+AAA0");
expect(() => {ms932Encoder.encode("\uAAA1")}).to.throw(Error, "EncodingError U+AAA1");
expect(() => {ms932Encoder.encode("\uAAA2")}).to.throw(Error, "EncodingError U+AAA2");
expect(() => {ms932Encoder.encode("\uAAA3")}).to.throw(Error, "EncodingError U+AAA3");
expect(() => {ms932Encoder.encode("\uAAA4")}).to.throw(Error, "EncodingError U+AAA4");
expect(() => {ms932Encoder.encode("\uAAA5")}).to.throw(Error, "EncodingError U+AAA5");
expect(() => {ms932Encoder.encode("\uAAA6")}).to.throw(Error, "EncodingError U+AAA6");
expect(() => {ms932Encoder.encode("\uAAA7")}).to.throw(Error, "EncodingError U+AAA7");
expect(() => {ms932Encoder.encode("\uAAA8")}).to.throw(Error, "EncodingError U+AAA8");
expect(() => {ms932Encoder.encode("\uAAA9")}).to.throw(Error, "EncodingError U+AAA9");
expect(() => {ms932Encoder.encode("\uAAAA")}).to.throw(Error, "EncodingError U+AAAA");
expect(() => {ms932Encoder.encode("\uAAAB")}).to.throw(Error, "EncodingError U+AAAB");
expect(() => {ms932Encoder.encode("\uAAAC")}).to.throw(Error, "EncodingError U+AAAC");
expect(() => {ms932Encoder.encode("\uAAAD")}).to.throw(Error, "EncodingError U+AAAD");
expect(() => {ms932Encoder.encode("\uAAAE")}).to.throw(Error, "EncodingError U+AAAE");
expect(() => {ms932Encoder.encode("\uAAAF")}).to.throw(Error, "EncodingError U+AAAF");
expect(() => {ms932Encoder.encode("\uAAB0")}).to.throw(Error, "EncodingError U+AAB0");
expect(() => {ms932Encoder.encode("\uAAB1")}).to.throw(Error, "EncodingError U+AAB1");
expect(() => {ms932Encoder.encode("\uAAB2")}).to.throw(Error, "EncodingError U+AAB2");
expect(() => {ms932Encoder.encode("\uAAB3")}).to.throw(Error, "EncodingError U+AAB3");
expect(() => {ms932Encoder.encode("\uAAB4")}).to.throw(Error, "EncodingError U+AAB4");
expect(() => {ms932Encoder.encode("\uAAB5")}).to.throw(Error, "EncodingError U+AAB5");
expect(() => {ms932Encoder.encode("\uAAB6")}).to.throw(Error, "EncodingError U+AAB6");
expect(() => {ms932Encoder.encode("\uAAB7")}).to.throw(Error, "EncodingError U+AAB7");
expect(() => {ms932Encoder.encode("\uAAB8")}).to.throw(Error, "EncodingError U+AAB8");
expect(() => {ms932Encoder.encode("\uAAB9")}).to.throw(Error, "EncodingError U+AAB9");
expect(() => {ms932Encoder.encode("\uAABA")}).to.throw(Error, "EncodingError U+AABA");
expect(() => {ms932Encoder.encode("\uAABB")}).to.throw(Error, "EncodingError U+AABB");
expect(() => {ms932Encoder.encode("\uAABC")}).to.throw(Error, "EncodingError U+AABC");
expect(() => {ms932Encoder.encode("\uAABD")}).to.throw(Error, "EncodingError U+AABD");
expect(() => {ms932Encoder.encode("\uAABE")}).to.throw(Error, "EncodingError U+AABE");
expect(() => {ms932Encoder.encode("\uAABF")}).to.throw(Error, "EncodingError U+AABF");
expect(() => {ms932Encoder.encode("\uAAC0")}).to.throw(Error, "EncodingError U+AAC0");
expect(() => {ms932Encoder.encode("\uAAC1")}).to.throw(Error, "EncodingError U+AAC1");
expect(() => {ms932Encoder.encode("\uAAC2")}).to.throw(Error, "EncodingError U+AAC2");
expect(() => {ms932Encoder.encode("\uAAC3")}).to.throw(Error, "EncodingError U+AAC3");
expect(() => {ms932Encoder.encode("\uAAC4")}).to.throw(Error, "EncodingError U+AAC4");
expect(() => {ms932Encoder.encode("\uAAC5")}).to.throw(Error, "EncodingError U+AAC5");
expect(() => {ms932Encoder.encode("\uAAC6")}).to.throw(Error, "EncodingError U+AAC6");
expect(() => {ms932Encoder.encode("\uAAC7")}).to.throw(Error, "EncodingError U+AAC7");
expect(() => {ms932Encoder.encode("\uAAC8")}).to.throw(Error, "EncodingError U+AAC8");
expect(() => {ms932Encoder.encode("\uAAC9")}).to.throw(Error, "EncodingError U+AAC9");
expect(() => {ms932Encoder.encode("\uAACA")}).to.throw(Error, "EncodingError U+AACA");
expect(() => {ms932Encoder.encode("\uAACB")}).to.throw(Error, "EncodingError U+AACB");
expect(() => {ms932Encoder.encode("\uAACC")}).to.throw(Error, "EncodingError U+AACC");
expect(() => {ms932Encoder.encode("\uAACD")}).to.throw(Error, "EncodingError U+AACD");
expect(() => {ms932Encoder.encode("\uAACE")}).to.throw(Error, "EncodingError U+AACE");
expect(() => {ms932Encoder.encode("\uAACF")}).to.throw(Error, "EncodingError U+AACF");
expect(() => {ms932Encoder.encode("\uAAD0")}).to.throw(Error, "EncodingError U+AAD0");
expect(() => {ms932Encoder.encode("\uAAD1")}).to.throw(Error, "EncodingError U+AAD1");
expect(() => {ms932Encoder.encode("\uAAD2")}).to.throw(Error, "EncodingError U+AAD2");
expect(() => {ms932Encoder.encode("\uAAD3")}).to.throw(Error, "EncodingError U+AAD3");
expect(() => {ms932Encoder.encode("\uAAD4")}).to.throw(Error, "EncodingError U+AAD4");
expect(() => {ms932Encoder.encode("\uAAD5")}).to.throw(Error, "EncodingError U+AAD5");
expect(() => {ms932Encoder.encode("\uAAD6")}).to.throw(Error, "EncodingError U+AAD6");
expect(() => {ms932Encoder.encode("\uAAD7")}).to.throw(Error, "EncodingError U+AAD7");
expect(() => {ms932Encoder.encode("\uAAD8")}).to.throw(Error, "EncodingError U+AAD8");
expect(() => {ms932Encoder.encode("\uAAD9")}).to.throw(Error, "EncodingError U+AAD9");
expect(() => {ms932Encoder.encode("\uAADA")}).to.throw(Error, "EncodingError U+AADA");
expect(() => {ms932Encoder.encode("\uAADB")}).to.throw(Error, "EncodingError U+AADB");
expect(() => {ms932Encoder.encode("\uAADC")}).to.throw(Error, "EncodingError U+AADC");
expect(() => {ms932Encoder.encode("\uAADD")}).to.throw(Error, "EncodingError U+AADD");
expect(() => {ms932Encoder.encode("\uAADE")}).to.throw(Error, "EncodingError U+AADE");
expect(() => {ms932Encoder.encode("\uAADF")}).to.throw(Error, "EncodingError U+AADF");
expect(() => {ms932Encoder.encode("\uAAE0")}).to.throw(Error, "EncodingError U+AAE0");
expect(() => {ms932Encoder.encode("\uAAE1")}).to.throw(Error, "EncodingError U+AAE1");
expect(() => {ms932Encoder.encode("\uAAE2")}).to.throw(Error, "EncodingError U+AAE2");
expect(() => {ms932Encoder.encode("\uAAE3")}).to.throw(Error, "EncodingError U+AAE3");
expect(() => {ms932Encoder.encode("\uAAE4")}).to.throw(Error, "EncodingError U+AAE4");
expect(() => {ms932Encoder.encode("\uAAE5")}).to.throw(Error, "EncodingError U+AAE5");
expect(() => {ms932Encoder.encode("\uAAE6")}).to.throw(Error, "EncodingError U+AAE6");
expect(() => {ms932Encoder.encode("\uAAE7")}).to.throw(Error, "EncodingError U+AAE7");
expect(() => {ms932Encoder.encode("\uAAE8")}).to.throw(Error, "EncodingError U+AAE8");
expect(() => {ms932Encoder.encode("\uAAE9")}).to.throw(Error, "EncodingError U+AAE9");
expect(() => {ms932Encoder.encode("\uAAEA")}).to.throw(Error, "EncodingError U+AAEA");
expect(() => {ms932Encoder.encode("\uAAEB")}).to.throw(Error, "EncodingError U+AAEB");
expect(() => {ms932Encoder.encode("\uAAEC")}).to.throw(Error, "EncodingError U+AAEC");
expect(() => {ms932Encoder.encode("\uAAED")}).to.throw(Error, "EncodingError U+AAED");
expect(() => {ms932Encoder.encode("\uAAEE")}).to.throw(Error, "EncodingError U+AAEE");
expect(() => {ms932Encoder.encode("\uAAEF")}).to.throw(Error, "EncodingError U+AAEF");
expect(() => {ms932Encoder.encode("\uAAF0")}).to.throw(Error, "EncodingError U+AAF0");
expect(() => {ms932Encoder.encode("\uAAF1")}).to.throw(Error, "EncodingError U+AAF1");
expect(() => {ms932Encoder.encode("\uAAF2")}).to.throw(Error, "EncodingError U+AAF2");
expect(() => {ms932Encoder.encode("\uAAF3")}).to.throw(Error, "EncodingError U+AAF3");
expect(() => {ms932Encoder.encode("\uAAF4")}).to.throw(Error, "EncodingError U+AAF4");
expect(() => {ms932Encoder.encode("\uAAF5")}).to.throw(Error, "EncodingError U+AAF5");
expect(() => {ms932Encoder.encode("\uAAF6")}).to.throw(Error, "EncodingError U+AAF6");
expect(() => {ms932Encoder.encode("\uAAF7")}).to.throw(Error, "EncodingError U+AAF7");
expect(() => {ms932Encoder.encode("\uAAF8")}).to.throw(Error, "EncodingError U+AAF8");
expect(() => {ms932Encoder.encode("\uAAF9")}).to.throw(Error, "EncodingError U+AAF9");
expect(() => {ms932Encoder.encode("\uAAFA")}).to.throw(Error, "EncodingError U+AAFA");
expect(() => {ms932Encoder.encode("\uAAFB")}).to.throw(Error, "EncodingError U+AAFB");
expect(() => {ms932Encoder.encode("\uAAFC")}).to.throw(Error, "EncodingError U+AAFC");
expect(() => {ms932Encoder.encode("\uAAFD")}).to.throw(Error, "EncodingError U+AAFD");
expect(() => {ms932Encoder.encode("\uAAFE")}).to.throw(Error, "EncodingError U+AAFE");
expect(() => {ms932Encoder.encode("\uAAFF")}).to.throw(Error, "EncodingError U+AAFF");
expect(() => {ms932Encoder.encode("\uAB00")}).to.throw(Error, "EncodingError U+AB00");
expect(() => {ms932Encoder.encode("\uAB01")}).to.throw(Error, "EncodingError U+AB01");
expect(() => {ms932Encoder.encode("\uAB02")}).to.throw(Error, "EncodingError U+AB02");
expect(() => {ms932Encoder.encode("\uAB03")}).to.throw(Error, "EncodingError U+AB03");
expect(() => {ms932Encoder.encode("\uAB04")}).to.throw(Error, "EncodingError U+AB04");
expect(() => {ms932Encoder.encode("\uAB05")}).to.throw(Error, "EncodingError U+AB05");
expect(() => {ms932Encoder.encode("\uAB06")}).to.throw(Error, "EncodingError U+AB06");
expect(() => {ms932Encoder.encode("\uAB07")}).to.throw(Error, "EncodingError U+AB07");
expect(() => {ms932Encoder.encode("\uAB08")}).to.throw(Error, "EncodingError U+AB08");
expect(() => {ms932Encoder.encode("\uAB09")}).to.throw(Error, "EncodingError U+AB09");
expect(() => {ms932Encoder.encode("\uAB0A")}).to.throw(Error, "EncodingError U+AB0A");
expect(() => {ms932Encoder.encode("\uAB0B")}).to.throw(Error, "EncodingError U+AB0B");
expect(() => {ms932Encoder.encode("\uAB0C")}).to.throw(Error, "EncodingError U+AB0C");
expect(() => {ms932Encoder.encode("\uAB0D")}).to.throw(Error, "EncodingError U+AB0D");
expect(() => {ms932Encoder.encode("\uAB0E")}).to.throw(Error, "EncodingError U+AB0E");
expect(() => {ms932Encoder.encode("\uAB0F")}).to.throw(Error, "EncodingError U+AB0F");
expect(() => {ms932Encoder.encode("\uAB10")}).to.throw(Error, "EncodingError U+AB10");
expect(() => {ms932Encoder.encode("\uAB11")}).to.throw(Error, "EncodingError U+AB11");
expect(() => {ms932Encoder.encode("\uAB12")}).to.throw(Error, "EncodingError U+AB12");
expect(() => {ms932Encoder.encode("\uAB13")}).to.throw(Error, "EncodingError U+AB13");
expect(() => {ms932Encoder.encode("\uAB14")}).to.throw(Error, "EncodingError U+AB14");
expect(() => {ms932Encoder.encode("\uAB15")}).to.throw(Error, "EncodingError U+AB15");
expect(() => {ms932Encoder.encode("\uAB16")}).to.throw(Error, "EncodingError U+AB16");
expect(() => {ms932Encoder.encode("\uAB17")}).to.throw(Error, "EncodingError U+AB17");
expect(() => {ms932Encoder.encode("\uAB18")}).to.throw(Error, "EncodingError U+AB18");
expect(() => {ms932Encoder.encode("\uAB19")}).to.throw(Error, "EncodingError U+AB19");
expect(() => {ms932Encoder.encode("\uAB1A")}).to.throw(Error, "EncodingError U+AB1A");
expect(() => {ms932Encoder.encode("\uAB1B")}).to.throw(Error, "EncodingError U+AB1B");
expect(() => {ms932Encoder.encode("\uAB1C")}).to.throw(Error, "EncodingError U+AB1C");
expect(() => {ms932Encoder.encode("\uAB1D")}).to.throw(Error, "EncodingError U+AB1D");
expect(() => {ms932Encoder.encode("\uAB1E")}).to.throw(Error, "EncodingError U+AB1E");
expect(() => {ms932Encoder.encode("\uAB1F")}).to.throw(Error, "EncodingError U+AB1F");
expect(() => {ms932Encoder.encode("\uAB20")}).to.throw(Error, "EncodingError U+AB20");
expect(() => {ms932Encoder.encode("\uAB21")}).to.throw(Error, "EncodingError U+AB21");
expect(() => {ms932Encoder.encode("\uAB22")}).to.throw(Error, "EncodingError U+AB22");
expect(() => {ms932Encoder.encode("\uAB23")}).to.throw(Error, "EncodingError U+AB23");
expect(() => {ms932Encoder.encode("\uAB24")}).to.throw(Error, "EncodingError U+AB24");
expect(() => {ms932Encoder.encode("\uAB25")}).to.throw(Error, "EncodingError U+AB25");
expect(() => {ms932Encoder.encode("\uAB26")}).to.throw(Error, "EncodingError U+AB26");
expect(() => {ms932Encoder.encode("\uAB27")}).to.throw(Error, "EncodingError U+AB27");
expect(() => {ms932Encoder.encode("\uAB28")}).to.throw(Error, "EncodingError U+AB28");
expect(() => {ms932Encoder.encode("\uAB29")}).to.throw(Error, "EncodingError U+AB29");
expect(() => {ms932Encoder.encode("\uAB2A")}).to.throw(Error, "EncodingError U+AB2A");
expect(() => {ms932Encoder.encode("\uAB2B")}).to.throw(Error, "EncodingError U+AB2B");
expect(() => {ms932Encoder.encode("\uAB2C")}).to.throw(Error, "EncodingError U+AB2C");
expect(() => {ms932Encoder.encode("\uAB2D")}).to.throw(Error, "EncodingError U+AB2D");
expect(() => {ms932Encoder.encode("\uAB2E")}).to.throw(Error, "EncodingError U+AB2E");
expect(() => {ms932Encoder.encode("\uAB2F")}).to.throw(Error, "EncodingError U+AB2F");
expect(() => {ms932Encoder.encode("\uAB30")}).to.throw(Error, "EncodingError U+AB30");
expect(() => {ms932Encoder.encode("\uAB31")}).to.throw(Error, "EncodingError U+AB31");
expect(() => {ms932Encoder.encode("\uAB32")}).to.throw(Error, "EncodingError U+AB32");
expect(() => {ms932Encoder.encode("\uAB33")}).to.throw(Error, "EncodingError U+AB33");
expect(() => {ms932Encoder.encode("\uAB34")}).to.throw(Error, "EncodingError U+AB34");
expect(() => {ms932Encoder.encode("\uAB35")}).to.throw(Error, "EncodingError U+AB35");
expect(() => {ms932Encoder.encode("\uAB36")}).to.throw(Error, "EncodingError U+AB36");
expect(() => {ms932Encoder.encode("\uAB37")}).to.throw(Error, "EncodingError U+AB37");
expect(() => {ms932Encoder.encode("\uAB38")}).to.throw(Error, "EncodingError U+AB38");
expect(() => {ms932Encoder.encode("\uAB39")}).to.throw(Error, "EncodingError U+AB39");
expect(() => {ms932Encoder.encode("\uAB3A")}).to.throw(Error, "EncodingError U+AB3A");
expect(() => {ms932Encoder.encode("\uAB3B")}).to.throw(Error, "EncodingError U+AB3B");
expect(() => {ms932Encoder.encode("\uAB3C")}).to.throw(Error, "EncodingError U+AB3C");
expect(() => {ms932Encoder.encode("\uAB3D")}).to.throw(Error, "EncodingError U+AB3D");
expect(() => {ms932Encoder.encode("\uAB3E")}).to.throw(Error, "EncodingError U+AB3E");
expect(() => {ms932Encoder.encode("\uAB3F")}).to.throw(Error, "EncodingError U+AB3F");
expect(() => {ms932Encoder.encode("\uAB40")}).to.throw(Error, "EncodingError U+AB40");
expect(() => {ms932Encoder.encode("\uAB41")}).to.throw(Error, "EncodingError U+AB41");
expect(() => {ms932Encoder.encode("\uAB42")}).to.throw(Error, "EncodingError U+AB42");
expect(() => {ms932Encoder.encode("\uAB43")}).to.throw(Error, "EncodingError U+AB43");
expect(() => {ms932Encoder.encode("\uAB44")}).to.throw(Error, "EncodingError U+AB44");
expect(() => {ms932Encoder.encode("\uAB45")}).to.throw(Error, "EncodingError U+AB45");
expect(() => {ms932Encoder.encode("\uAB46")}).to.throw(Error, "EncodingError U+AB46");
expect(() => {ms932Encoder.encode("\uAB47")}).to.throw(Error, "EncodingError U+AB47");
expect(() => {ms932Encoder.encode("\uAB48")}).to.throw(Error, "EncodingError U+AB48");
expect(() => {ms932Encoder.encode("\uAB49")}).to.throw(Error, "EncodingError U+AB49");
expect(() => {ms932Encoder.encode("\uAB4A")}).to.throw(Error, "EncodingError U+AB4A");
expect(() => {ms932Encoder.encode("\uAB4B")}).to.throw(Error, "EncodingError U+AB4B");
expect(() => {ms932Encoder.encode("\uAB4C")}).to.throw(Error, "EncodingError U+AB4C");
expect(() => {ms932Encoder.encode("\uAB4D")}).to.throw(Error, "EncodingError U+AB4D");
expect(() => {ms932Encoder.encode("\uAB4E")}).to.throw(Error, "EncodingError U+AB4E");
expect(() => {ms932Encoder.encode("\uAB4F")}).to.throw(Error, "EncodingError U+AB4F");
expect(() => {ms932Encoder.encode("\uAB50")}).to.throw(Error, "EncodingError U+AB50");
expect(() => {ms932Encoder.encode("\uAB51")}).to.throw(Error, "EncodingError U+AB51");
expect(() => {ms932Encoder.encode("\uAB52")}).to.throw(Error, "EncodingError U+AB52");
expect(() => {ms932Encoder.encode("\uAB53")}).to.throw(Error, "EncodingError U+AB53");
expect(() => {ms932Encoder.encode("\uAB54")}).to.throw(Error, "EncodingError U+AB54");
expect(() => {ms932Encoder.encode("\uAB55")}).to.throw(Error, "EncodingError U+AB55");
expect(() => {ms932Encoder.encode("\uAB56")}).to.throw(Error, "EncodingError U+AB56");
expect(() => {ms932Encoder.encode("\uAB57")}).to.throw(Error, "EncodingError U+AB57");
expect(() => {ms932Encoder.encode("\uAB58")}).to.throw(Error, "EncodingError U+AB58");
expect(() => {ms932Encoder.encode("\uAB59")}).to.throw(Error, "EncodingError U+AB59");
expect(() => {ms932Encoder.encode("\uAB5A")}).to.throw(Error, "EncodingError U+AB5A");
expect(() => {ms932Encoder.encode("\uAB5B")}).to.throw(Error, "EncodingError U+AB5B");
expect(() => {ms932Encoder.encode("\uAB5C")}).to.throw(Error, "EncodingError U+AB5C");
expect(() => {ms932Encoder.encode("\uAB5D")}).to.throw(Error, "EncodingError U+AB5D");
expect(() => {ms932Encoder.encode("\uAB5E")}).to.throw(Error, "EncodingError U+AB5E");
expect(() => {ms932Encoder.encode("\uAB5F")}).to.throw(Error, "EncodingError U+AB5F");
expect(() => {ms932Encoder.encode("\uAB60")}).to.throw(Error, "EncodingError U+AB60");
expect(() => {ms932Encoder.encode("\uAB61")}).to.throw(Error, "EncodingError U+AB61");
expect(() => {ms932Encoder.encode("\uAB62")}).to.throw(Error, "EncodingError U+AB62");
expect(() => {ms932Encoder.encode("\uAB63")}).to.throw(Error, "EncodingError U+AB63");
expect(() => {ms932Encoder.encode("\uAB64")}).to.throw(Error, "EncodingError U+AB64");
expect(() => {ms932Encoder.encode("\uAB65")}).to.throw(Error, "EncodingError U+AB65");
expect(() => {ms932Encoder.encode("\uAB66")}).to.throw(Error, "EncodingError U+AB66");
expect(() => {ms932Encoder.encode("\uAB67")}).to.throw(Error, "EncodingError U+AB67");
expect(() => {ms932Encoder.encode("\uAB68")}).to.throw(Error, "EncodingError U+AB68");
expect(() => {ms932Encoder.encode("\uAB69")}).to.throw(Error, "EncodingError U+AB69");
expect(() => {ms932Encoder.encode("\uAB6A")}).to.throw(Error, "EncodingError U+AB6A");
expect(() => {ms932Encoder.encode("\uAB6B")}).to.throw(Error, "EncodingError U+AB6B");
expect(() => {ms932Encoder.encode("\uAB6C")}).to.throw(Error, "EncodingError U+AB6C");
expect(() => {ms932Encoder.encode("\uAB6D")}).to.throw(Error, "EncodingError U+AB6D");
expect(() => {ms932Encoder.encode("\uAB6E")}).to.throw(Error, "EncodingError U+AB6E");
expect(() => {ms932Encoder.encode("\uAB6F")}).to.throw(Error, "EncodingError U+AB6F");
expect(() => {ms932Encoder.encode("\uAB70")}).to.throw(Error, "EncodingError U+AB70");
expect(() => {ms932Encoder.encode("\uAB71")}).to.throw(Error, "EncodingError U+AB71");
expect(() => {ms932Encoder.encode("\uAB72")}).to.throw(Error, "EncodingError U+AB72");
expect(() => {ms932Encoder.encode("\uAB73")}).to.throw(Error, "EncodingError U+AB73");
expect(() => {ms932Encoder.encode("\uAB74")}).to.throw(Error, "EncodingError U+AB74");
expect(() => {ms932Encoder.encode("\uAB75")}).to.throw(Error, "EncodingError U+AB75");
expect(() => {ms932Encoder.encode("\uAB76")}).to.throw(Error, "EncodingError U+AB76");
expect(() => {ms932Encoder.encode("\uAB77")}).to.throw(Error, "EncodingError U+AB77");
expect(() => {ms932Encoder.encode("\uAB78")}).to.throw(Error, "EncodingError U+AB78");
expect(() => {ms932Encoder.encode("\uAB79")}).to.throw(Error, "EncodingError U+AB79");
expect(() => {ms932Encoder.encode("\uAB7A")}).to.throw(Error, "EncodingError U+AB7A");
expect(() => {ms932Encoder.encode("\uAB7B")}).to.throw(Error, "EncodingError U+AB7B");
expect(() => {ms932Encoder.encode("\uAB7C")}).to.throw(Error, "EncodingError U+AB7C");
expect(() => {ms932Encoder.encode("\uAB7D")}).to.throw(Error, "EncodingError U+AB7D");
expect(() => {ms932Encoder.encode("\uAB7E")}).to.throw(Error, "EncodingError U+AB7E");
expect(() => {ms932Encoder.encode("\uAB7F")}).to.throw(Error, "EncodingError U+AB7F");
expect(() => {ms932Encoder.encode("\uAB80")}).to.throw(Error, "EncodingError U+AB80");
expect(() => {ms932Encoder.encode("\uAB81")}).to.throw(Error, "EncodingError U+AB81");
expect(() => {ms932Encoder.encode("\uAB82")}).to.throw(Error, "EncodingError U+AB82");
expect(() => {ms932Encoder.encode("\uAB83")}).to.throw(Error, "EncodingError U+AB83");
expect(() => {ms932Encoder.encode("\uAB84")}).to.throw(Error, "EncodingError U+AB84");
expect(() => {ms932Encoder.encode("\uAB85")}).to.throw(Error, "EncodingError U+AB85");
expect(() => {ms932Encoder.encode("\uAB86")}).to.throw(Error, "EncodingError U+AB86");
expect(() => {ms932Encoder.encode("\uAB87")}).to.throw(Error, "EncodingError U+AB87");
expect(() => {ms932Encoder.encode("\uAB88")}).to.throw(Error, "EncodingError U+AB88");
expect(() => {ms932Encoder.encode("\uAB89")}).to.throw(Error, "EncodingError U+AB89");
expect(() => {ms932Encoder.encode("\uAB8A")}).to.throw(Error, "EncodingError U+AB8A");
expect(() => {ms932Encoder.encode("\uAB8B")}).to.throw(Error, "EncodingError U+AB8B");
expect(() => {ms932Encoder.encode("\uAB8C")}).to.throw(Error, "EncodingError U+AB8C");
expect(() => {ms932Encoder.encode("\uAB8D")}).to.throw(Error, "EncodingError U+AB8D");
expect(() => {ms932Encoder.encode("\uAB8E")}).to.throw(Error, "EncodingError U+AB8E");
expect(() => {ms932Encoder.encode("\uAB8F")}).to.throw(Error, "EncodingError U+AB8F");
expect(() => {ms932Encoder.encode("\uAB90")}).to.throw(Error, "EncodingError U+AB90");
expect(() => {ms932Encoder.encode("\uAB91")}).to.throw(Error, "EncodingError U+AB91");
expect(() => {ms932Encoder.encode("\uAB92")}).to.throw(Error, "EncodingError U+AB92");
expect(() => {ms932Encoder.encode("\uAB93")}).to.throw(Error, "EncodingError U+AB93");
expect(() => {ms932Encoder.encode("\uAB94")}).to.throw(Error, "EncodingError U+AB94");
expect(() => {ms932Encoder.encode("\uAB95")}).to.throw(Error, "EncodingError U+AB95");
expect(() => {ms932Encoder.encode("\uAB96")}).to.throw(Error, "EncodingError U+AB96");
expect(() => {ms932Encoder.encode("\uAB97")}).to.throw(Error, "EncodingError U+AB97");
expect(() => {ms932Encoder.encode("\uAB98")}).to.throw(Error, "EncodingError U+AB98");
expect(() => {ms932Encoder.encode("\uAB99")}).to.throw(Error, "EncodingError U+AB99");
expect(() => {ms932Encoder.encode("\uAB9A")}).to.throw(Error, "EncodingError U+AB9A");
expect(() => {ms932Encoder.encode("\uAB9B")}).to.throw(Error, "EncodingError U+AB9B");
expect(() => {ms932Encoder.encode("\uAB9C")}).to.throw(Error, "EncodingError U+AB9C");
expect(() => {ms932Encoder.encode("\uAB9D")}).to.throw(Error, "EncodingError U+AB9D");
expect(() => {ms932Encoder.encode("\uAB9E")}).to.throw(Error, "EncodingError U+AB9E");
expect(() => {ms932Encoder.encode("\uAB9F")}).to.throw(Error, "EncodingError U+AB9F");
expect(() => {ms932Encoder.encode("\uABA0")}).to.throw(Error, "EncodingError U+ABA0");
expect(() => {ms932Encoder.encode("\uABA1")}).to.throw(Error, "EncodingError U+ABA1");
expect(() => {ms932Encoder.encode("\uABA2")}).to.throw(Error, "EncodingError U+ABA2");
expect(() => {ms932Encoder.encode("\uABA3")}).to.throw(Error, "EncodingError U+ABA3");
expect(() => {ms932Encoder.encode("\uABA4")}).to.throw(Error, "EncodingError U+ABA4");
expect(() => {ms932Encoder.encode("\uABA5")}).to.throw(Error, "EncodingError U+ABA5");
expect(() => {ms932Encoder.encode("\uABA6")}).to.throw(Error, "EncodingError U+ABA6");
expect(() => {ms932Encoder.encode("\uABA7")}).to.throw(Error, "EncodingError U+ABA7");
expect(() => {ms932Encoder.encode("\uABA8")}).to.throw(Error, "EncodingError U+ABA8");
expect(() => {ms932Encoder.encode("\uABA9")}).to.throw(Error, "EncodingError U+ABA9");
expect(() => {ms932Encoder.encode("\uABAA")}).to.throw(Error, "EncodingError U+ABAA");
expect(() => {ms932Encoder.encode("\uABAB")}).to.throw(Error, "EncodingError U+ABAB");
expect(() => {ms932Encoder.encode("\uABAC")}).to.throw(Error, "EncodingError U+ABAC");
expect(() => {ms932Encoder.encode("\uABAD")}).to.throw(Error, "EncodingError U+ABAD");
expect(() => {ms932Encoder.encode("\uABAE")}).to.throw(Error, "EncodingError U+ABAE");
expect(() => {ms932Encoder.encode("\uABAF")}).to.throw(Error, "EncodingError U+ABAF");
expect(() => {ms932Encoder.encode("\uABB0")}).to.throw(Error, "EncodingError U+ABB0");
expect(() => {ms932Encoder.encode("\uABB1")}).to.throw(Error, "EncodingError U+ABB1");
expect(() => {ms932Encoder.encode("\uABB2")}).to.throw(Error, "EncodingError U+ABB2");
expect(() => {ms932Encoder.encode("\uABB3")}).to.throw(Error, "EncodingError U+ABB3");
expect(() => {ms932Encoder.encode("\uABB4")}).to.throw(Error, "EncodingError U+ABB4");
expect(() => {ms932Encoder.encode("\uABB5")}).to.throw(Error, "EncodingError U+ABB5");
expect(() => {ms932Encoder.encode("\uABB6")}).to.throw(Error, "EncodingError U+ABB6");
expect(() => {ms932Encoder.encode("\uABB7")}).to.throw(Error, "EncodingError U+ABB7");
expect(() => {ms932Encoder.encode("\uABB8")}).to.throw(Error, "EncodingError U+ABB8");
expect(() => {ms932Encoder.encode("\uABB9")}).to.throw(Error, "EncodingError U+ABB9");
expect(() => {ms932Encoder.encode("\uABBA")}).to.throw(Error, "EncodingError U+ABBA");
expect(() => {ms932Encoder.encode("\uABBB")}).to.throw(Error, "EncodingError U+ABBB");
expect(() => {ms932Encoder.encode("\uABBC")}).to.throw(Error, "EncodingError U+ABBC");
expect(() => {ms932Encoder.encode("\uABBD")}).to.throw(Error, "EncodingError U+ABBD");
expect(() => {ms932Encoder.encode("\uABBE")}).to.throw(Error, "EncodingError U+ABBE");
expect(() => {ms932Encoder.encode("\uABBF")}).to.throw(Error, "EncodingError U+ABBF");
expect(() => {ms932Encoder.encode("\uABC0")}).to.throw(Error, "EncodingError U+ABC0");
expect(() => {ms932Encoder.encode("\uABC1")}).to.throw(Error, "EncodingError U+ABC1");
expect(() => {ms932Encoder.encode("\uABC2")}).to.throw(Error, "EncodingError U+ABC2");
expect(() => {ms932Encoder.encode("\uABC3")}).to.throw(Error, "EncodingError U+ABC3");
expect(() => {ms932Encoder.encode("\uABC4")}).to.throw(Error, "EncodingError U+ABC4");
expect(() => {ms932Encoder.encode("\uABC5")}).to.throw(Error, "EncodingError U+ABC5");
expect(() => {ms932Encoder.encode("\uABC6")}).to.throw(Error, "EncodingError U+ABC6");
expect(() => {ms932Encoder.encode("\uABC7")}).to.throw(Error, "EncodingError U+ABC7");
expect(() => {ms932Encoder.encode("\uABC8")}).to.throw(Error, "EncodingError U+ABC8");
expect(() => {ms932Encoder.encode("\uABC9")}).to.throw(Error, "EncodingError U+ABC9");
expect(() => {ms932Encoder.encode("\uABCA")}).to.throw(Error, "EncodingError U+ABCA");
expect(() => {ms932Encoder.encode("\uABCB")}).to.throw(Error, "EncodingError U+ABCB");
expect(() => {ms932Encoder.encode("\uABCC")}).to.throw(Error, "EncodingError U+ABCC");
expect(() => {ms932Encoder.encode("\uABCD")}).to.throw(Error, "EncodingError U+ABCD");
expect(() => {ms932Encoder.encode("\uABCE")}).to.throw(Error, "EncodingError U+ABCE");
expect(() => {ms932Encoder.encode("\uABCF")}).to.throw(Error, "EncodingError U+ABCF");
expect(() => {ms932Encoder.encode("\uABD0")}).to.throw(Error, "EncodingError U+ABD0");
expect(() => {ms932Encoder.encode("\uABD1")}).to.throw(Error, "EncodingError U+ABD1");
expect(() => {ms932Encoder.encode("\uABD2")}).to.throw(Error, "EncodingError U+ABD2");
expect(() => {ms932Encoder.encode("\uABD3")}).to.throw(Error, "EncodingError U+ABD3");
expect(() => {ms932Encoder.encode("\uABD4")}).to.throw(Error, "EncodingError U+ABD4");
expect(() => {ms932Encoder.encode("\uABD5")}).to.throw(Error, "EncodingError U+ABD5");
expect(() => {ms932Encoder.encode("\uABD6")}).to.throw(Error, "EncodingError U+ABD6");
expect(() => {ms932Encoder.encode("\uABD7")}).to.throw(Error, "EncodingError U+ABD7");
expect(() => {ms932Encoder.encode("\uABD8")}).to.throw(Error, "EncodingError U+ABD8");
expect(() => {ms932Encoder.encode("\uABD9")}).to.throw(Error, "EncodingError U+ABD9");
expect(() => {ms932Encoder.encode("\uABDA")}).to.throw(Error, "EncodingError U+ABDA");
expect(() => {ms932Encoder.encode("\uABDB")}).to.throw(Error, "EncodingError U+ABDB");
expect(() => {ms932Encoder.encode("\uABDC")}).to.throw(Error, "EncodingError U+ABDC");
expect(() => {ms932Encoder.encode("\uABDD")}).to.throw(Error, "EncodingError U+ABDD");
expect(() => {ms932Encoder.encode("\uABDE")}).to.throw(Error, "EncodingError U+ABDE");
expect(() => {ms932Encoder.encode("\uABDF")}).to.throw(Error, "EncodingError U+ABDF");
expect(() => {ms932Encoder.encode("\uABE0")}).to.throw(Error, "EncodingError U+ABE0");
expect(() => {ms932Encoder.encode("\uABE1")}).to.throw(Error, "EncodingError U+ABE1");
expect(() => {ms932Encoder.encode("\uABE2")}).to.throw(Error, "EncodingError U+ABE2");
expect(() => {ms932Encoder.encode("\uABE3")}).to.throw(Error, "EncodingError U+ABE3");
expect(() => {ms932Encoder.encode("\uABE4")}).to.throw(Error, "EncodingError U+ABE4");
expect(() => {ms932Encoder.encode("\uABE5")}).to.throw(Error, "EncodingError U+ABE5");
expect(() => {ms932Encoder.encode("\uABE6")}).to.throw(Error, "EncodingError U+ABE6");
expect(() => {ms932Encoder.encode("\uABE7")}).to.throw(Error, "EncodingError U+ABE7");
expect(() => {ms932Encoder.encode("\uABE8")}).to.throw(Error, "EncodingError U+ABE8");
expect(() => {ms932Encoder.encode("\uABE9")}).to.throw(Error, "EncodingError U+ABE9");
expect(() => {ms932Encoder.encode("\uABEA")}).to.throw(Error, "EncodingError U+ABEA");
expect(() => {ms932Encoder.encode("\uABEB")}).to.throw(Error, "EncodingError U+ABEB");
expect(() => {ms932Encoder.encode("\uABEC")}).to.throw(Error, "EncodingError U+ABEC");
expect(() => {ms932Encoder.encode("\uABED")}).to.throw(Error, "EncodingError U+ABED");
expect(() => {ms932Encoder.encode("\uABEE")}).to.throw(Error, "EncodingError U+ABEE");
expect(() => {ms932Encoder.encode("\uABEF")}).to.throw(Error, "EncodingError U+ABEF");
expect(() => {ms932Encoder.encode("\uABF0")}).to.throw(Error, "EncodingError U+ABF0");
expect(() => {ms932Encoder.encode("\uABF1")}).to.throw(Error, "EncodingError U+ABF1");
expect(() => {ms932Encoder.encode("\uABF2")}).to.throw(Error, "EncodingError U+ABF2");
expect(() => {ms932Encoder.encode("\uABF3")}).to.throw(Error, "EncodingError U+ABF3");
expect(() => {ms932Encoder.encode("\uABF4")}).to.throw(Error, "EncodingError U+ABF4");
expect(() => {ms932Encoder.encode("\uABF5")}).to.throw(Error, "EncodingError U+ABF5");
expect(() => {ms932Encoder.encode("\uABF6")}).to.throw(Error, "EncodingError U+ABF6");
expect(() => {ms932Encoder.encode("\uABF7")}).to.throw(Error, "EncodingError U+ABF7");
expect(() => {ms932Encoder.encode("\uABF8")}).to.throw(Error, "EncodingError U+ABF8");
expect(() => {ms932Encoder.encode("\uABF9")}).to.throw(Error, "EncodingError U+ABF9");
expect(() => {ms932Encoder.encode("\uABFA")}).to.throw(Error, "EncodingError U+ABFA");
expect(() => {ms932Encoder.encode("\uABFB")}).to.throw(Error, "EncodingError U+ABFB");
expect(() => {ms932Encoder.encode("\uABFC")}).to.throw(Error, "EncodingError U+ABFC");
expect(() => {ms932Encoder.encode("\uABFD")}).to.throw(Error, "EncodingError U+ABFD");
expect(() => {ms932Encoder.encode("\uABFE")}).to.throw(Error, "EncodingError U+ABFE");
expect(() => {ms932Encoder.encode("\uABFF")}).to.throw(Error, "EncodingError U+ABFF");
expect(() => {ms932Encoder.encode("\uAC00")}).to.throw(Error, "EncodingError U+AC00");
expect(() => {ms932Encoder.encode("\uAC01")}).to.throw(Error, "EncodingError U+AC01");
expect(() => {ms932Encoder.encode("\uAC02")}).to.throw(Error, "EncodingError U+AC02");
expect(() => {ms932Encoder.encode("\uAC03")}).to.throw(Error, "EncodingError U+AC03");
expect(() => {ms932Encoder.encode("\uAC04")}).to.throw(Error, "EncodingError U+AC04");
expect(() => {ms932Encoder.encode("\uAC05")}).to.throw(Error, "EncodingError U+AC05");
expect(() => {ms932Encoder.encode("\uAC06")}).to.throw(Error, "EncodingError U+AC06");
expect(() => {ms932Encoder.encode("\uAC07")}).to.throw(Error, "EncodingError U+AC07");
expect(() => {ms932Encoder.encode("\uAC08")}).to.throw(Error, "EncodingError U+AC08");
expect(() => {ms932Encoder.encode("\uAC09")}).to.throw(Error, "EncodingError U+AC09");
expect(() => {ms932Encoder.encode("\uAC0A")}).to.throw(Error, "EncodingError U+AC0A");
expect(() => {ms932Encoder.encode("\uAC0B")}).to.throw(Error, "EncodingError U+AC0B");
expect(() => {ms932Encoder.encode("\uAC0C")}).to.throw(Error, "EncodingError U+AC0C");
expect(() => {ms932Encoder.encode("\uAC0D")}).to.throw(Error, "EncodingError U+AC0D");
expect(() => {ms932Encoder.encode("\uAC0E")}).to.throw(Error, "EncodingError U+AC0E");
expect(() => {ms932Encoder.encode("\uAC0F")}).to.throw(Error, "EncodingError U+AC0F");
expect(() => {ms932Encoder.encode("\uAC10")}).to.throw(Error, "EncodingError U+AC10");
expect(() => {ms932Encoder.encode("\uAC11")}).to.throw(Error, "EncodingError U+AC11");
expect(() => {ms932Encoder.encode("\uAC12")}).to.throw(Error, "EncodingError U+AC12");
expect(() => {ms932Encoder.encode("\uAC13")}).to.throw(Error, "EncodingError U+AC13");
expect(() => {ms932Encoder.encode("\uAC14")}).to.throw(Error, "EncodingError U+AC14");
expect(() => {ms932Encoder.encode("\uAC15")}).to.throw(Error, "EncodingError U+AC15");
expect(() => {ms932Encoder.encode("\uAC16")}).to.throw(Error, "EncodingError U+AC16");
expect(() => {ms932Encoder.encode("\uAC17")}).to.throw(Error, "EncodingError U+AC17");
expect(() => {ms932Encoder.encode("\uAC18")}).to.throw(Error, "EncodingError U+AC18");
expect(() => {ms932Encoder.encode("\uAC19")}).to.throw(Error, "EncodingError U+AC19");
expect(() => {ms932Encoder.encode("\uAC1A")}).to.throw(Error, "EncodingError U+AC1A");
expect(() => {ms932Encoder.encode("\uAC1B")}).to.throw(Error, "EncodingError U+AC1B");
expect(() => {ms932Encoder.encode("\uAC1C")}).to.throw(Error, "EncodingError U+AC1C");
expect(() => {ms932Encoder.encode("\uAC1D")}).to.throw(Error, "EncodingError U+AC1D");
expect(() => {ms932Encoder.encode("\uAC1E")}).to.throw(Error, "EncodingError U+AC1E");
expect(() => {ms932Encoder.encode("\uAC1F")}).to.throw(Error, "EncodingError U+AC1F");
expect(() => {ms932Encoder.encode("\uAC20")}).to.throw(Error, "EncodingError U+AC20");
expect(() => {ms932Encoder.encode("\uAC21")}).to.throw(Error, "EncodingError U+AC21");
expect(() => {ms932Encoder.encode("\uAC22")}).to.throw(Error, "EncodingError U+AC22");
expect(() => {ms932Encoder.encode("\uAC23")}).to.throw(Error, "EncodingError U+AC23");
expect(() => {ms932Encoder.encode("\uAC24")}).to.throw(Error, "EncodingError U+AC24");
expect(() => {ms932Encoder.encode("\uAC25")}).to.throw(Error, "EncodingError U+AC25");
expect(() => {ms932Encoder.encode("\uAC26")}).to.throw(Error, "EncodingError U+AC26");
expect(() => {ms932Encoder.encode("\uAC27")}).to.throw(Error, "EncodingError U+AC27");
expect(() => {ms932Encoder.encode("\uAC28")}).to.throw(Error, "EncodingError U+AC28");
expect(() => {ms932Encoder.encode("\uAC29")}).to.throw(Error, "EncodingError U+AC29");
expect(() => {ms932Encoder.encode("\uAC2A")}).to.throw(Error, "EncodingError U+AC2A");
expect(() => {ms932Encoder.encode("\uAC2B")}).to.throw(Error, "EncodingError U+AC2B");
expect(() => {ms932Encoder.encode("\uAC2C")}).to.throw(Error, "EncodingError U+AC2C");
expect(() => {ms932Encoder.encode("\uAC2D")}).to.throw(Error, "EncodingError U+AC2D");
expect(() => {ms932Encoder.encode("\uAC2E")}).to.throw(Error, "EncodingError U+AC2E");
expect(() => {ms932Encoder.encode("\uAC2F")}).to.throw(Error, "EncodingError U+AC2F");
expect(() => {ms932Encoder.encode("\uAC30")}).to.throw(Error, "EncodingError U+AC30");
expect(() => {ms932Encoder.encode("\uAC31")}).to.throw(Error, "EncodingError U+AC31");
expect(() => {ms932Encoder.encode("\uAC32")}).to.throw(Error, "EncodingError U+AC32");
expect(() => {ms932Encoder.encode("\uAC33")}).to.throw(Error, "EncodingError U+AC33");
expect(() => {ms932Encoder.encode("\uAC34")}).to.throw(Error, "EncodingError U+AC34");
expect(() => {ms932Encoder.encode("\uAC35")}).to.throw(Error, "EncodingError U+AC35");
expect(() => {ms932Encoder.encode("\uAC36")}).to.throw(Error, "EncodingError U+AC36");
expect(() => {ms932Encoder.encode("\uAC37")}).to.throw(Error, "EncodingError U+AC37");
expect(() => {ms932Encoder.encode("\uAC38")}).to.throw(Error, "EncodingError U+AC38");
expect(() => {ms932Encoder.encode("\uAC39")}).to.throw(Error, "EncodingError U+AC39");
expect(() => {ms932Encoder.encode("\uAC3A")}).to.throw(Error, "EncodingError U+AC3A");
expect(() => {ms932Encoder.encode("\uAC3B")}).to.throw(Error, "EncodingError U+AC3B");
expect(() => {ms932Encoder.encode("\uAC3C")}).to.throw(Error, "EncodingError U+AC3C");
expect(() => {ms932Encoder.encode("\uAC3D")}).to.throw(Error, "EncodingError U+AC3D");
expect(() => {ms932Encoder.encode("\uAC3E")}).to.throw(Error, "EncodingError U+AC3E");
expect(() => {ms932Encoder.encode("\uAC3F")}).to.throw(Error, "EncodingError U+AC3F");
expect(() => {ms932Encoder.encode("\uAC40")}).to.throw(Error, "EncodingError U+AC40");
expect(() => {ms932Encoder.encode("\uAC41")}).to.throw(Error, "EncodingError U+AC41");
expect(() => {ms932Encoder.encode("\uAC42")}).to.throw(Error, "EncodingError U+AC42");
expect(() => {ms932Encoder.encode("\uAC43")}).to.throw(Error, "EncodingError U+AC43");
expect(() => {ms932Encoder.encode("\uAC44")}).to.throw(Error, "EncodingError U+AC44");
expect(() => {ms932Encoder.encode("\uAC45")}).to.throw(Error, "EncodingError U+AC45");
expect(() => {ms932Encoder.encode("\uAC46")}).to.throw(Error, "EncodingError U+AC46");
expect(() => {ms932Encoder.encode("\uAC47")}).to.throw(Error, "EncodingError U+AC47");
expect(() => {ms932Encoder.encode("\uAC48")}).to.throw(Error, "EncodingError U+AC48");
expect(() => {ms932Encoder.encode("\uAC49")}).to.throw(Error, "EncodingError U+AC49");
expect(() => {ms932Encoder.encode("\uAC4A")}).to.throw(Error, "EncodingError U+AC4A");
expect(() => {ms932Encoder.encode("\uAC4B")}).to.throw(Error, "EncodingError U+AC4B");
expect(() => {ms932Encoder.encode("\uAC4C")}).to.throw(Error, "EncodingError U+AC4C");
expect(() => {ms932Encoder.encode("\uAC4D")}).to.throw(Error, "EncodingError U+AC4D");
expect(() => {ms932Encoder.encode("\uAC4E")}).to.throw(Error, "EncodingError U+AC4E");
expect(() => {ms932Encoder.encode("\uAC4F")}).to.throw(Error, "EncodingError U+AC4F");
expect(() => {ms932Encoder.encode("\uAC50")}).to.throw(Error, "EncodingError U+AC50");
expect(() => {ms932Encoder.encode("\uAC51")}).to.throw(Error, "EncodingError U+AC51");
expect(() => {ms932Encoder.encode("\uAC52")}).to.throw(Error, "EncodingError U+AC52");
expect(() => {ms932Encoder.encode("\uAC53")}).to.throw(Error, "EncodingError U+AC53");
expect(() => {ms932Encoder.encode("\uAC54")}).to.throw(Error, "EncodingError U+AC54");
expect(() => {ms932Encoder.encode("\uAC55")}).to.throw(Error, "EncodingError U+AC55");
expect(() => {ms932Encoder.encode("\uAC56")}).to.throw(Error, "EncodingError U+AC56");
expect(() => {ms932Encoder.encode("\uAC57")}).to.throw(Error, "EncodingError U+AC57");
expect(() => {ms932Encoder.encode("\uAC58")}).to.throw(Error, "EncodingError U+AC58");
expect(() => {ms932Encoder.encode("\uAC59")}).to.throw(Error, "EncodingError U+AC59");
expect(() => {ms932Encoder.encode("\uAC5A")}).to.throw(Error, "EncodingError U+AC5A");
expect(() => {ms932Encoder.encode("\uAC5B")}).to.throw(Error, "EncodingError U+AC5B");
expect(() => {ms932Encoder.encode("\uAC5C")}).to.throw(Error, "EncodingError U+AC5C");
expect(() => {ms932Encoder.encode("\uAC5D")}).to.throw(Error, "EncodingError U+AC5D");
expect(() => {ms932Encoder.encode("\uAC5E")}).to.throw(Error, "EncodingError U+AC5E");
expect(() => {ms932Encoder.encode("\uAC5F")}).to.throw(Error, "EncodingError U+AC5F");
expect(() => {ms932Encoder.encode("\uAC60")}).to.throw(Error, "EncodingError U+AC60");
expect(() => {ms932Encoder.encode("\uAC61")}).to.throw(Error, "EncodingError U+AC61");
expect(() => {ms932Encoder.encode("\uAC62")}).to.throw(Error, "EncodingError U+AC62");
expect(() => {ms932Encoder.encode("\uAC63")}).to.throw(Error, "EncodingError U+AC63");
expect(() => {ms932Encoder.encode("\uAC64")}).to.throw(Error, "EncodingError U+AC64");
expect(() => {ms932Encoder.encode("\uAC65")}).to.throw(Error, "EncodingError U+AC65");
expect(() => {ms932Encoder.encode("\uAC66")}).to.throw(Error, "EncodingError U+AC66");
expect(() => {ms932Encoder.encode("\uAC67")}).to.throw(Error, "EncodingError U+AC67");
expect(() => {ms932Encoder.encode("\uAC68")}).to.throw(Error, "EncodingError U+AC68");
expect(() => {ms932Encoder.encode("\uAC69")}).to.throw(Error, "EncodingError U+AC69");
expect(() => {ms932Encoder.encode("\uAC6A")}).to.throw(Error, "EncodingError U+AC6A");
expect(() => {ms932Encoder.encode("\uAC6B")}).to.throw(Error, "EncodingError U+AC6B");
expect(() => {ms932Encoder.encode("\uAC6C")}).to.throw(Error, "EncodingError U+AC6C");
expect(() => {ms932Encoder.encode("\uAC6D")}).to.throw(Error, "EncodingError U+AC6D");
expect(() => {ms932Encoder.encode("\uAC6E")}).to.throw(Error, "EncodingError U+AC6E");
expect(() => {ms932Encoder.encode("\uAC6F")}).to.throw(Error, "EncodingError U+AC6F");
expect(() => {ms932Encoder.encode("\uAC70")}).to.throw(Error, "EncodingError U+AC70");
expect(() => {ms932Encoder.encode("\uAC71")}).to.throw(Error, "EncodingError U+AC71");
expect(() => {ms932Encoder.encode("\uAC72")}).to.throw(Error, "EncodingError U+AC72");
expect(() => {ms932Encoder.encode("\uAC73")}).to.throw(Error, "EncodingError U+AC73");
expect(() => {ms932Encoder.encode("\uAC74")}).to.throw(Error, "EncodingError U+AC74");
expect(() => {ms932Encoder.encode("\uAC75")}).to.throw(Error, "EncodingError U+AC75");
expect(() => {ms932Encoder.encode("\uAC76")}).to.throw(Error, "EncodingError U+AC76");
expect(() => {ms932Encoder.encode("\uAC77")}).to.throw(Error, "EncodingError U+AC77");
expect(() => {ms932Encoder.encode("\uAC78")}).to.throw(Error, "EncodingError U+AC78");
expect(() => {ms932Encoder.encode("\uAC79")}).to.throw(Error, "EncodingError U+AC79");
expect(() => {ms932Encoder.encode("\uAC7A")}).to.throw(Error, "EncodingError U+AC7A");
expect(() => {ms932Encoder.encode("\uAC7B")}).to.throw(Error, "EncodingError U+AC7B");
expect(() => {ms932Encoder.encode("\uAC7C")}).to.throw(Error, "EncodingError U+AC7C");
expect(() => {ms932Encoder.encode("\uAC7D")}).to.throw(Error, "EncodingError U+AC7D");
expect(() => {ms932Encoder.encode("\uAC7E")}).to.throw(Error, "EncodingError U+AC7E");
expect(() => {ms932Encoder.encode("\uAC7F")}).to.throw(Error, "EncodingError U+AC7F");
expect(() => {ms932Encoder.encode("\uAC80")}).to.throw(Error, "EncodingError U+AC80");
expect(() => {ms932Encoder.encode("\uAC81")}).to.throw(Error, "EncodingError U+AC81");
expect(() => {ms932Encoder.encode("\uAC82")}).to.throw(Error, "EncodingError U+AC82");
expect(() => {ms932Encoder.encode("\uAC83")}).to.throw(Error, "EncodingError U+AC83");
expect(() => {ms932Encoder.encode("\uAC84")}).to.throw(Error, "EncodingError U+AC84");
expect(() => {ms932Encoder.encode("\uAC85")}).to.throw(Error, "EncodingError U+AC85");
expect(() => {ms932Encoder.encode("\uAC86")}).to.throw(Error, "EncodingError U+AC86");
expect(() => {ms932Encoder.encode("\uAC87")}).to.throw(Error, "EncodingError U+AC87");
expect(() => {ms932Encoder.encode("\uAC88")}).to.throw(Error, "EncodingError U+AC88");
expect(() => {ms932Encoder.encode("\uAC89")}).to.throw(Error, "EncodingError U+AC89");
expect(() => {ms932Encoder.encode("\uAC8A")}).to.throw(Error, "EncodingError U+AC8A");
expect(() => {ms932Encoder.encode("\uAC8B")}).to.throw(Error, "EncodingError U+AC8B");
expect(() => {ms932Encoder.encode("\uAC8C")}).to.throw(Error, "EncodingError U+AC8C");
expect(() => {ms932Encoder.encode("\uAC8D")}).to.throw(Error, "EncodingError U+AC8D");
expect(() => {ms932Encoder.encode("\uAC8E")}).to.throw(Error, "EncodingError U+AC8E");
expect(() => {ms932Encoder.encode("\uAC8F")}).to.throw(Error, "EncodingError U+AC8F");
expect(() => {ms932Encoder.encode("\uAC90")}).to.throw(Error, "EncodingError U+AC90");
expect(() => {ms932Encoder.encode("\uAC91")}).to.throw(Error, "EncodingError U+AC91");
expect(() => {ms932Encoder.encode("\uAC92")}).to.throw(Error, "EncodingError U+AC92");
expect(() => {ms932Encoder.encode("\uAC93")}).to.throw(Error, "EncodingError U+AC93");
expect(() => {ms932Encoder.encode("\uAC94")}).to.throw(Error, "EncodingError U+AC94");
expect(() => {ms932Encoder.encode("\uAC95")}).to.throw(Error, "EncodingError U+AC95");
expect(() => {ms932Encoder.encode("\uAC96")}).to.throw(Error, "EncodingError U+AC96");
expect(() => {ms932Encoder.encode("\uAC97")}).to.throw(Error, "EncodingError U+AC97");
expect(() => {ms932Encoder.encode("\uAC98")}).to.throw(Error, "EncodingError U+AC98");
expect(() => {ms932Encoder.encode("\uAC99")}).to.throw(Error, "EncodingError U+AC99");
expect(() => {ms932Encoder.encode("\uAC9A")}).to.throw(Error, "EncodingError U+AC9A");
expect(() => {ms932Encoder.encode("\uAC9B")}).to.throw(Error, "EncodingError U+AC9B");
expect(() => {ms932Encoder.encode("\uAC9C")}).to.throw(Error, "EncodingError U+AC9C");
expect(() => {ms932Encoder.encode("\uAC9D")}).to.throw(Error, "EncodingError U+AC9D");
expect(() => {ms932Encoder.encode("\uAC9E")}).to.throw(Error, "EncodingError U+AC9E");
expect(() => {ms932Encoder.encode("\uAC9F")}).to.throw(Error, "EncodingError U+AC9F");
expect(() => {ms932Encoder.encode("\uACA0")}).to.throw(Error, "EncodingError U+ACA0");
expect(() => {ms932Encoder.encode("\uACA1")}).to.throw(Error, "EncodingError U+ACA1");
expect(() => {ms932Encoder.encode("\uACA2")}).to.throw(Error, "EncodingError U+ACA2");
expect(() => {ms932Encoder.encode("\uACA3")}).to.throw(Error, "EncodingError U+ACA3");
expect(() => {ms932Encoder.encode("\uACA4")}).to.throw(Error, "EncodingError U+ACA4");
expect(() => {ms932Encoder.encode("\uACA5")}).to.throw(Error, "EncodingError U+ACA5");
expect(() => {ms932Encoder.encode("\uACA6")}).to.throw(Error, "EncodingError U+ACA6");
expect(() => {ms932Encoder.encode("\uACA7")}).to.throw(Error, "EncodingError U+ACA7");
expect(() => {ms932Encoder.encode("\uACA8")}).to.throw(Error, "EncodingError U+ACA8");
expect(() => {ms932Encoder.encode("\uACA9")}).to.throw(Error, "EncodingError U+ACA9");
expect(() => {ms932Encoder.encode("\uACAA")}).to.throw(Error, "EncodingError U+ACAA");
expect(() => {ms932Encoder.encode("\uACAB")}).to.throw(Error, "EncodingError U+ACAB");
expect(() => {ms932Encoder.encode("\uACAC")}).to.throw(Error, "EncodingError U+ACAC");
expect(() => {ms932Encoder.encode("\uACAD")}).to.throw(Error, "EncodingError U+ACAD");
expect(() => {ms932Encoder.encode("\uACAE")}).to.throw(Error, "EncodingError U+ACAE");
expect(() => {ms932Encoder.encode("\uACAF")}).to.throw(Error, "EncodingError U+ACAF");
expect(() => {ms932Encoder.encode("\uACB0")}).to.throw(Error, "EncodingError U+ACB0");
expect(() => {ms932Encoder.encode("\uACB1")}).to.throw(Error, "EncodingError U+ACB1");
expect(() => {ms932Encoder.encode("\uACB2")}).to.throw(Error, "EncodingError U+ACB2");
expect(() => {ms932Encoder.encode("\uACB3")}).to.throw(Error, "EncodingError U+ACB3");
expect(() => {ms932Encoder.encode("\uACB4")}).to.throw(Error, "EncodingError U+ACB4");
expect(() => {ms932Encoder.encode("\uACB5")}).to.throw(Error, "EncodingError U+ACB5");
expect(() => {ms932Encoder.encode("\uACB6")}).to.throw(Error, "EncodingError U+ACB6");
expect(() => {ms932Encoder.encode("\uACB7")}).to.throw(Error, "EncodingError U+ACB7");
expect(() => {ms932Encoder.encode("\uACB8")}).to.throw(Error, "EncodingError U+ACB8");
expect(() => {ms932Encoder.encode("\uACB9")}).to.throw(Error, "EncodingError U+ACB9");
expect(() => {ms932Encoder.encode("\uACBA")}).to.throw(Error, "EncodingError U+ACBA");
expect(() => {ms932Encoder.encode("\uACBB")}).to.throw(Error, "EncodingError U+ACBB");
expect(() => {ms932Encoder.encode("\uACBC")}).to.throw(Error, "EncodingError U+ACBC");
expect(() => {ms932Encoder.encode("\uACBD")}).to.throw(Error, "EncodingError U+ACBD");
expect(() => {ms932Encoder.encode("\uACBE")}).to.throw(Error, "EncodingError U+ACBE");
expect(() => {ms932Encoder.encode("\uACBF")}).to.throw(Error, "EncodingError U+ACBF");
expect(() => {ms932Encoder.encode("\uACC0")}).to.throw(Error, "EncodingError U+ACC0");
expect(() => {ms932Encoder.encode("\uACC1")}).to.throw(Error, "EncodingError U+ACC1");
expect(() => {ms932Encoder.encode("\uACC2")}).to.throw(Error, "EncodingError U+ACC2");
expect(() => {ms932Encoder.encode("\uACC3")}).to.throw(Error, "EncodingError U+ACC3");
expect(() => {ms932Encoder.encode("\uACC4")}).to.throw(Error, "EncodingError U+ACC4");
expect(() => {ms932Encoder.encode("\uACC5")}).to.throw(Error, "EncodingError U+ACC5");
expect(() => {ms932Encoder.encode("\uACC6")}).to.throw(Error, "EncodingError U+ACC6");
expect(() => {ms932Encoder.encode("\uACC7")}).to.throw(Error, "EncodingError U+ACC7");
expect(() => {ms932Encoder.encode("\uACC8")}).to.throw(Error, "EncodingError U+ACC8");
expect(() => {ms932Encoder.encode("\uACC9")}).to.throw(Error, "EncodingError U+ACC9");
expect(() => {ms932Encoder.encode("\uACCA")}).to.throw(Error, "EncodingError U+ACCA");
expect(() => {ms932Encoder.encode("\uACCB")}).to.throw(Error, "EncodingError U+ACCB");
expect(() => {ms932Encoder.encode("\uACCC")}).to.throw(Error, "EncodingError U+ACCC");
expect(() => {ms932Encoder.encode("\uACCD")}).to.throw(Error, "EncodingError U+ACCD");
expect(() => {ms932Encoder.encode("\uACCE")}).to.throw(Error, "EncodingError U+ACCE");
expect(() => {ms932Encoder.encode("\uACCF")}).to.throw(Error, "EncodingError U+ACCF");
expect(() => {ms932Encoder.encode("\uACD0")}).to.throw(Error, "EncodingError U+ACD0");
expect(() => {ms932Encoder.encode("\uACD1")}).to.throw(Error, "EncodingError U+ACD1");
expect(() => {ms932Encoder.encode("\uACD2")}).to.throw(Error, "EncodingError U+ACD2");
expect(() => {ms932Encoder.encode("\uACD3")}).to.throw(Error, "EncodingError U+ACD3");
expect(() => {ms932Encoder.encode("\uACD4")}).to.throw(Error, "EncodingError U+ACD4");
expect(() => {ms932Encoder.encode("\uACD5")}).to.throw(Error, "EncodingError U+ACD5");
expect(() => {ms932Encoder.encode("\uACD6")}).to.throw(Error, "EncodingError U+ACD6");
expect(() => {ms932Encoder.encode("\uACD7")}).to.throw(Error, "EncodingError U+ACD7");
expect(() => {ms932Encoder.encode("\uACD8")}).to.throw(Error, "EncodingError U+ACD8");
expect(() => {ms932Encoder.encode("\uACD9")}).to.throw(Error, "EncodingError U+ACD9");
expect(() => {ms932Encoder.encode("\uACDA")}).to.throw(Error, "EncodingError U+ACDA");
expect(() => {ms932Encoder.encode("\uACDB")}).to.throw(Error, "EncodingError U+ACDB");
expect(() => {ms932Encoder.encode("\uACDC")}).to.throw(Error, "EncodingError U+ACDC");
expect(() => {ms932Encoder.encode("\uACDD")}).to.throw(Error, "EncodingError U+ACDD");
expect(() => {ms932Encoder.encode("\uACDE")}).to.throw(Error, "EncodingError U+ACDE");
expect(() => {ms932Encoder.encode("\uACDF")}).to.throw(Error, "EncodingError U+ACDF");
expect(() => {ms932Encoder.encode("\uACE0")}).to.throw(Error, "EncodingError U+ACE0");
expect(() => {ms932Encoder.encode("\uACE1")}).to.throw(Error, "EncodingError U+ACE1");
expect(() => {ms932Encoder.encode("\uACE2")}).to.throw(Error, "EncodingError U+ACE2");
expect(() => {ms932Encoder.encode("\uACE3")}).to.throw(Error, "EncodingError U+ACE3");
expect(() => {ms932Encoder.encode("\uACE4")}).to.throw(Error, "EncodingError U+ACE4");
expect(() => {ms932Encoder.encode("\uACE5")}).to.throw(Error, "EncodingError U+ACE5");
expect(() => {ms932Encoder.encode("\uACE6")}).to.throw(Error, "EncodingError U+ACE6");
expect(() => {ms932Encoder.encode("\uACE7")}).to.throw(Error, "EncodingError U+ACE7");
expect(() => {ms932Encoder.encode("\uACE8")}).to.throw(Error, "EncodingError U+ACE8");
expect(() => {ms932Encoder.encode("\uACE9")}).to.throw(Error, "EncodingError U+ACE9");
expect(() => {ms932Encoder.encode("\uACEA")}).to.throw(Error, "EncodingError U+ACEA");
expect(() => {ms932Encoder.encode("\uACEB")}).to.throw(Error, "EncodingError U+ACEB");
expect(() => {ms932Encoder.encode("\uACEC")}).to.throw(Error, "EncodingError U+ACEC");
expect(() => {ms932Encoder.encode("\uACED")}).to.throw(Error, "EncodingError U+ACED");
expect(() => {ms932Encoder.encode("\uACEE")}).to.throw(Error, "EncodingError U+ACEE");
expect(() => {ms932Encoder.encode("\uACEF")}).to.throw(Error, "EncodingError U+ACEF");
expect(() => {ms932Encoder.encode("\uACF0")}).to.throw(Error, "EncodingError U+ACF0");
expect(() => {ms932Encoder.encode("\uACF1")}).to.throw(Error, "EncodingError U+ACF1");
expect(() => {ms932Encoder.encode("\uACF2")}).to.throw(Error, "EncodingError U+ACF2");
expect(() => {ms932Encoder.encode("\uACF3")}).to.throw(Error, "EncodingError U+ACF3");
expect(() => {ms932Encoder.encode("\uACF4")}).to.throw(Error, "EncodingError U+ACF4");
expect(() => {ms932Encoder.encode("\uACF5")}).to.throw(Error, "EncodingError U+ACF5");
expect(() => {ms932Encoder.encode("\uACF6")}).to.throw(Error, "EncodingError U+ACF6");
expect(() => {ms932Encoder.encode("\uACF7")}).to.throw(Error, "EncodingError U+ACF7");
expect(() => {ms932Encoder.encode("\uACF8")}).to.throw(Error, "EncodingError U+ACF8");
expect(() => {ms932Encoder.encode("\uACF9")}).to.throw(Error, "EncodingError U+ACF9");
expect(() => {ms932Encoder.encode("\uACFA")}).to.throw(Error, "EncodingError U+ACFA");
expect(() => {ms932Encoder.encode("\uACFB")}).to.throw(Error, "EncodingError U+ACFB");
expect(() => {ms932Encoder.encode("\uACFC")}).to.throw(Error, "EncodingError U+ACFC");
expect(() => {ms932Encoder.encode("\uACFD")}).to.throw(Error, "EncodingError U+ACFD");
expect(() => {ms932Encoder.encode("\uACFE")}).to.throw(Error, "EncodingError U+ACFE");
expect(() => {ms932Encoder.encode("\uACFF")}).to.throw(Error, "EncodingError U+ACFF");
expect(() => {ms932Encoder.encode("\uAD00")}).to.throw(Error, "EncodingError U+AD00");
expect(() => {ms932Encoder.encode("\uAD01")}).to.throw(Error, "EncodingError U+AD01");
expect(() => {ms932Encoder.encode("\uAD02")}).to.throw(Error, "EncodingError U+AD02");
expect(() => {ms932Encoder.encode("\uAD03")}).to.throw(Error, "EncodingError U+AD03");
expect(() => {ms932Encoder.encode("\uAD04")}).to.throw(Error, "EncodingError U+AD04");
expect(() => {ms932Encoder.encode("\uAD05")}).to.throw(Error, "EncodingError U+AD05");
expect(() => {ms932Encoder.encode("\uAD06")}).to.throw(Error, "EncodingError U+AD06");
expect(() => {ms932Encoder.encode("\uAD07")}).to.throw(Error, "EncodingError U+AD07");
expect(() => {ms932Encoder.encode("\uAD08")}).to.throw(Error, "EncodingError U+AD08");
expect(() => {ms932Encoder.encode("\uAD09")}).to.throw(Error, "EncodingError U+AD09");
expect(() => {ms932Encoder.encode("\uAD0A")}).to.throw(Error, "EncodingError U+AD0A");
expect(() => {ms932Encoder.encode("\uAD0B")}).to.throw(Error, "EncodingError U+AD0B");
expect(() => {ms932Encoder.encode("\uAD0C")}).to.throw(Error, "EncodingError U+AD0C");
expect(() => {ms932Encoder.encode("\uAD0D")}).to.throw(Error, "EncodingError U+AD0D");
expect(() => {ms932Encoder.encode("\uAD0E")}).to.throw(Error, "EncodingError U+AD0E");
expect(() => {ms932Encoder.encode("\uAD0F")}).to.throw(Error, "EncodingError U+AD0F");
expect(() => {ms932Encoder.encode("\uAD10")}).to.throw(Error, "EncodingError U+AD10");
expect(() => {ms932Encoder.encode("\uAD11")}).to.throw(Error, "EncodingError U+AD11");
expect(() => {ms932Encoder.encode("\uAD12")}).to.throw(Error, "EncodingError U+AD12");
expect(() => {ms932Encoder.encode("\uAD13")}).to.throw(Error, "EncodingError U+AD13");
expect(() => {ms932Encoder.encode("\uAD14")}).to.throw(Error, "EncodingError U+AD14");
expect(() => {ms932Encoder.encode("\uAD15")}).to.throw(Error, "EncodingError U+AD15");
expect(() => {ms932Encoder.encode("\uAD16")}).to.throw(Error, "EncodingError U+AD16");
expect(() => {ms932Encoder.encode("\uAD17")}).to.throw(Error, "EncodingError U+AD17");
expect(() => {ms932Encoder.encode("\uAD18")}).to.throw(Error, "EncodingError U+AD18");
expect(() => {ms932Encoder.encode("\uAD19")}).to.throw(Error, "EncodingError U+AD19");
expect(() => {ms932Encoder.encode("\uAD1A")}).to.throw(Error, "EncodingError U+AD1A");
expect(() => {ms932Encoder.encode("\uAD1B")}).to.throw(Error, "EncodingError U+AD1B");
expect(() => {ms932Encoder.encode("\uAD1C")}).to.throw(Error, "EncodingError U+AD1C");
expect(() => {ms932Encoder.encode("\uAD1D")}).to.throw(Error, "EncodingError U+AD1D");
expect(() => {ms932Encoder.encode("\uAD1E")}).to.throw(Error, "EncodingError U+AD1E");
expect(() => {ms932Encoder.encode("\uAD1F")}).to.throw(Error, "EncodingError U+AD1F");
expect(() => {ms932Encoder.encode("\uAD20")}).to.throw(Error, "EncodingError U+AD20");
expect(() => {ms932Encoder.encode("\uAD21")}).to.throw(Error, "EncodingError U+AD21");
expect(() => {ms932Encoder.encode("\uAD22")}).to.throw(Error, "EncodingError U+AD22");
expect(() => {ms932Encoder.encode("\uAD23")}).to.throw(Error, "EncodingError U+AD23");
expect(() => {ms932Encoder.encode("\uAD24")}).to.throw(Error, "EncodingError U+AD24");
expect(() => {ms932Encoder.encode("\uAD25")}).to.throw(Error, "EncodingError U+AD25");
expect(() => {ms932Encoder.encode("\uAD26")}).to.throw(Error, "EncodingError U+AD26");
expect(() => {ms932Encoder.encode("\uAD27")}).to.throw(Error, "EncodingError U+AD27");
expect(() => {ms932Encoder.encode("\uAD28")}).to.throw(Error, "EncodingError U+AD28");
expect(() => {ms932Encoder.encode("\uAD29")}).to.throw(Error, "EncodingError U+AD29");
expect(() => {ms932Encoder.encode("\uAD2A")}).to.throw(Error, "EncodingError U+AD2A");
expect(() => {ms932Encoder.encode("\uAD2B")}).to.throw(Error, "EncodingError U+AD2B");
expect(() => {ms932Encoder.encode("\uAD2C")}).to.throw(Error, "EncodingError U+AD2C");
expect(() => {ms932Encoder.encode("\uAD2D")}).to.throw(Error, "EncodingError U+AD2D");
expect(() => {ms932Encoder.encode("\uAD2E")}).to.throw(Error, "EncodingError U+AD2E");
expect(() => {ms932Encoder.encode("\uAD2F")}).to.throw(Error, "EncodingError U+AD2F");
expect(() => {ms932Encoder.encode("\uAD30")}).to.throw(Error, "EncodingError U+AD30");
expect(() => {ms932Encoder.encode("\uAD31")}).to.throw(Error, "EncodingError U+AD31");
expect(() => {ms932Encoder.encode("\uAD32")}).to.throw(Error, "EncodingError U+AD32");
expect(() => {ms932Encoder.encode("\uAD33")}).to.throw(Error, "EncodingError U+AD33");
expect(() => {ms932Encoder.encode("\uAD34")}).to.throw(Error, "EncodingError U+AD34");
expect(() => {ms932Encoder.encode("\uAD35")}).to.throw(Error, "EncodingError U+AD35");
expect(() => {ms932Encoder.encode("\uAD36")}).to.throw(Error, "EncodingError U+AD36");
expect(() => {ms932Encoder.encode("\uAD37")}).to.throw(Error, "EncodingError U+AD37");
expect(() => {ms932Encoder.encode("\uAD38")}).to.throw(Error, "EncodingError U+AD38");
expect(() => {ms932Encoder.encode("\uAD39")}).to.throw(Error, "EncodingError U+AD39");
expect(() => {ms932Encoder.encode("\uAD3A")}).to.throw(Error, "EncodingError U+AD3A");
expect(() => {ms932Encoder.encode("\uAD3B")}).to.throw(Error, "EncodingError U+AD3B");
expect(() => {ms932Encoder.encode("\uAD3C")}).to.throw(Error, "EncodingError U+AD3C");
expect(() => {ms932Encoder.encode("\uAD3D")}).to.throw(Error, "EncodingError U+AD3D");
expect(() => {ms932Encoder.encode("\uAD3E")}).to.throw(Error, "EncodingError U+AD3E");
expect(() => {ms932Encoder.encode("\uAD3F")}).to.throw(Error, "EncodingError U+AD3F");
expect(() => {ms932Encoder.encode("\uAD40")}).to.throw(Error, "EncodingError U+AD40");
expect(() => {ms932Encoder.encode("\uAD41")}).to.throw(Error, "EncodingError U+AD41");
expect(() => {ms932Encoder.encode("\uAD42")}).to.throw(Error, "EncodingError U+AD42");
expect(() => {ms932Encoder.encode("\uAD43")}).to.throw(Error, "EncodingError U+AD43");
expect(() => {ms932Encoder.encode("\uAD44")}).to.throw(Error, "EncodingError U+AD44");
expect(() => {ms932Encoder.encode("\uAD45")}).to.throw(Error, "EncodingError U+AD45");
expect(() => {ms932Encoder.encode("\uAD46")}).to.throw(Error, "EncodingError U+AD46");
expect(() => {ms932Encoder.encode("\uAD47")}).to.throw(Error, "EncodingError U+AD47");
expect(() => {ms932Encoder.encode("\uAD48")}).to.throw(Error, "EncodingError U+AD48");
expect(() => {ms932Encoder.encode("\uAD49")}).to.throw(Error, "EncodingError U+AD49");
expect(() => {ms932Encoder.encode("\uAD4A")}).to.throw(Error, "EncodingError U+AD4A");
expect(() => {ms932Encoder.encode("\uAD4B")}).to.throw(Error, "EncodingError U+AD4B");
expect(() => {ms932Encoder.encode("\uAD4C")}).to.throw(Error, "EncodingError U+AD4C");
expect(() => {ms932Encoder.encode("\uAD4D")}).to.throw(Error, "EncodingError U+AD4D");
expect(() => {ms932Encoder.encode("\uAD4E")}).to.throw(Error, "EncodingError U+AD4E");
expect(() => {ms932Encoder.encode("\uAD4F")}).to.throw(Error, "EncodingError U+AD4F");
expect(() => {ms932Encoder.encode("\uAD50")}).to.throw(Error, "EncodingError U+AD50");
expect(() => {ms932Encoder.encode("\uAD51")}).to.throw(Error, "EncodingError U+AD51");
expect(() => {ms932Encoder.encode("\uAD52")}).to.throw(Error, "EncodingError U+AD52");
expect(() => {ms932Encoder.encode("\uAD53")}).to.throw(Error, "EncodingError U+AD53");
expect(() => {ms932Encoder.encode("\uAD54")}).to.throw(Error, "EncodingError U+AD54");
expect(() => {ms932Encoder.encode("\uAD55")}).to.throw(Error, "EncodingError U+AD55");
expect(() => {ms932Encoder.encode("\uAD56")}).to.throw(Error, "EncodingError U+AD56");
expect(() => {ms932Encoder.encode("\uAD57")}).to.throw(Error, "EncodingError U+AD57");
expect(() => {ms932Encoder.encode("\uAD58")}).to.throw(Error, "EncodingError U+AD58");
expect(() => {ms932Encoder.encode("\uAD59")}).to.throw(Error, "EncodingError U+AD59");
expect(() => {ms932Encoder.encode("\uAD5A")}).to.throw(Error, "EncodingError U+AD5A");
expect(() => {ms932Encoder.encode("\uAD5B")}).to.throw(Error, "EncodingError U+AD5B");
expect(() => {ms932Encoder.encode("\uAD5C")}).to.throw(Error, "EncodingError U+AD5C");
expect(() => {ms932Encoder.encode("\uAD5D")}).to.throw(Error, "EncodingError U+AD5D");
expect(() => {ms932Encoder.encode("\uAD5E")}).to.throw(Error, "EncodingError U+AD5E");
expect(() => {ms932Encoder.encode("\uAD5F")}).to.throw(Error, "EncodingError U+AD5F");
expect(() => {ms932Encoder.encode("\uAD60")}).to.throw(Error, "EncodingError U+AD60");
expect(() => {ms932Encoder.encode("\uAD61")}).to.throw(Error, "EncodingError U+AD61");
expect(() => {ms932Encoder.encode("\uAD62")}).to.throw(Error, "EncodingError U+AD62");
expect(() => {ms932Encoder.encode("\uAD63")}).to.throw(Error, "EncodingError U+AD63");
expect(() => {ms932Encoder.encode("\uAD64")}).to.throw(Error, "EncodingError U+AD64");
expect(() => {ms932Encoder.encode("\uAD65")}).to.throw(Error, "EncodingError U+AD65");
expect(() => {ms932Encoder.encode("\uAD66")}).to.throw(Error, "EncodingError U+AD66");
expect(() => {ms932Encoder.encode("\uAD67")}).to.throw(Error, "EncodingError U+AD67");
expect(() => {ms932Encoder.encode("\uAD68")}).to.throw(Error, "EncodingError U+AD68");
expect(() => {ms932Encoder.encode("\uAD69")}).to.throw(Error, "EncodingError U+AD69");
expect(() => {ms932Encoder.encode("\uAD6A")}).to.throw(Error, "EncodingError U+AD6A");
expect(() => {ms932Encoder.encode("\uAD6B")}).to.throw(Error, "EncodingError U+AD6B");
expect(() => {ms932Encoder.encode("\uAD6C")}).to.throw(Error, "EncodingError U+AD6C");
expect(() => {ms932Encoder.encode("\uAD6D")}).to.throw(Error, "EncodingError U+AD6D");
expect(() => {ms932Encoder.encode("\uAD6E")}).to.throw(Error, "EncodingError U+AD6E");
expect(() => {ms932Encoder.encode("\uAD6F")}).to.throw(Error, "EncodingError U+AD6F");
expect(() => {ms932Encoder.encode("\uAD70")}).to.throw(Error, "EncodingError U+AD70");
expect(() => {ms932Encoder.encode("\uAD71")}).to.throw(Error, "EncodingError U+AD71");
expect(() => {ms932Encoder.encode("\uAD72")}).to.throw(Error, "EncodingError U+AD72");
expect(() => {ms932Encoder.encode("\uAD73")}).to.throw(Error, "EncodingError U+AD73");
expect(() => {ms932Encoder.encode("\uAD74")}).to.throw(Error, "EncodingError U+AD74");
expect(() => {ms932Encoder.encode("\uAD75")}).to.throw(Error, "EncodingError U+AD75");
expect(() => {ms932Encoder.encode("\uAD76")}).to.throw(Error, "EncodingError U+AD76");
expect(() => {ms932Encoder.encode("\uAD77")}).to.throw(Error, "EncodingError U+AD77");
expect(() => {ms932Encoder.encode("\uAD78")}).to.throw(Error, "EncodingError U+AD78");
expect(() => {ms932Encoder.encode("\uAD79")}).to.throw(Error, "EncodingError U+AD79");
expect(() => {ms932Encoder.encode("\uAD7A")}).to.throw(Error, "EncodingError U+AD7A");
expect(() => {ms932Encoder.encode("\uAD7B")}).to.throw(Error, "EncodingError U+AD7B");
expect(() => {ms932Encoder.encode("\uAD7C")}).to.throw(Error, "EncodingError U+AD7C");
expect(() => {ms932Encoder.encode("\uAD7D")}).to.throw(Error, "EncodingError U+AD7D");
expect(() => {ms932Encoder.encode("\uAD7E")}).to.throw(Error, "EncodingError U+AD7E");
expect(() => {ms932Encoder.encode("\uAD7F")}).to.throw(Error, "EncodingError U+AD7F");
expect(() => {ms932Encoder.encode("\uAD80")}).to.throw(Error, "EncodingError U+AD80");
expect(() => {ms932Encoder.encode("\uAD81")}).to.throw(Error, "EncodingError U+AD81");
expect(() => {ms932Encoder.encode("\uAD82")}).to.throw(Error, "EncodingError U+AD82");
expect(() => {ms932Encoder.encode("\uAD83")}).to.throw(Error, "EncodingError U+AD83");
expect(() => {ms932Encoder.encode("\uAD84")}).to.throw(Error, "EncodingError U+AD84");
expect(() => {ms932Encoder.encode("\uAD85")}).to.throw(Error, "EncodingError U+AD85");
expect(() => {ms932Encoder.encode("\uAD86")}).to.throw(Error, "EncodingError U+AD86");
expect(() => {ms932Encoder.encode("\uAD87")}).to.throw(Error, "EncodingError U+AD87");
expect(() => {ms932Encoder.encode("\uAD88")}).to.throw(Error, "EncodingError U+AD88");
expect(() => {ms932Encoder.encode("\uAD89")}).to.throw(Error, "EncodingError U+AD89");
expect(() => {ms932Encoder.encode("\uAD8A")}).to.throw(Error, "EncodingError U+AD8A");
expect(() => {ms932Encoder.encode("\uAD8B")}).to.throw(Error, "EncodingError U+AD8B");
expect(() => {ms932Encoder.encode("\uAD8C")}).to.throw(Error, "EncodingError U+AD8C");
expect(() => {ms932Encoder.encode("\uAD8D")}).to.throw(Error, "EncodingError U+AD8D");
expect(() => {ms932Encoder.encode("\uAD8E")}).to.throw(Error, "EncodingError U+AD8E");
expect(() => {ms932Encoder.encode("\uAD8F")}).to.throw(Error, "EncodingError U+AD8F");
expect(() => {ms932Encoder.encode("\uAD90")}).to.throw(Error, "EncodingError U+AD90");
expect(() => {ms932Encoder.encode("\uAD91")}).to.throw(Error, "EncodingError U+AD91");
expect(() => {ms932Encoder.encode("\uAD92")}).to.throw(Error, "EncodingError U+AD92");
expect(() => {ms932Encoder.encode("\uAD93")}).to.throw(Error, "EncodingError U+AD93");
expect(() => {ms932Encoder.encode("\uAD94")}).to.throw(Error, "EncodingError U+AD94");
expect(() => {ms932Encoder.encode("\uAD95")}).to.throw(Error, "EncodingError U+AD95");
expect(() => {ms932Encoder.encode("\uAD96")}).to.throw(Error, "EncodingError U+AD96");
expect(() => {ms932Encoder.encode("\uAD97")}).to.throw(Error, "EncodingError U+AD97");
expect(() => {ms932Encoder.encode("\uAD98")}).to.throw(Error, "EncodingError U+AD98");
expect(() => {ms932Encoder.encode("\uAD99")}).to.throw(Error, "EncodingError U+AD99");
expect(() => {ms932Encoder.encode("\uAD9A")}).to.throw(Error, "EncodingError U+AD9A");
expect(() => {ms932Encoder.encode("\uAD9B")}).to.throw(Error, "EncodingError U+AD9B");
expect(() => {ms932Encoder.encode("\uAD9C")}).to.throw(Error, "EncodingError U+AD9C");
expect(() => {ms932Encoder.encode("\uAD9D")}).to.throw(Error, "EncodingError U+AD9D");
expect(() => {ms932Encoder.encode("\uAD9E")}).to.throw(Error, "EncodingError U+AD9E");
expect(() => {ms932Encoder.encode("\uAD9F")}).to.throw(Error, "EncodingError U+AD9F");
expect(() => {ms932Encoder.encode("\uADA0")}).to.throw(Error, "EncodingError U+ADA0");
expect(() => {ms932Encoder.encode("\uADA1")}).to.throw(Error, "EncodingError U+ADA1");
expect(() => {ms932Encoder.encode("\uADA2")}).to.throw(Error, "EncodingError U+ADA2");
expect(() => {ms932Encoder.encode("\uADA3")}).to.throw(Error, "EncodingError U+ADA3");
expect(() => {ms932Encoder.encode("\uADA4")}).to.throw(Error, "EncodingError U+ADA4");
expect(() => {ms932Encoder.encode("\uADA5")}).to.throw(Error, "EncodingError U+ADA5");
expect(() => {ms932Encoder.encode("\uADA6")}).to.throw(Error, "EncodingError U+ADA6");
expect(() => {ms932Encoder.encode("\uADA7")}).to.throw(Error, "EncodingError U+ADA7");
expect(() => {ms932Encoder.encode("\uADA8")}).to.throw(Error, "EncodingError U+ADA8");
expect(() => {ms932Encoder.encode("\uADA9")}).to.throw(Error, "EncodingError U+ADA9");
expect(() => {ms932Encoder.encode("\uADAA")}).to.throw(Error, "EncodingError U+ADAA");
expect(() => {ms932Encoder.encode("\uADAB")}).to.throw(Error, "EncodingError U+ADAB");
expect(() => {ms932Encoder.encode("\uADAC")}).to.throw(Error, "EncodingError U+ADAC");
expect(() => {ms932Encoder.encode("\uADAD")}).to.throw(Error, "EncodingError U+ADAD");
expect(() => {ms932Encoder.encode("\uADAE")}).to.throw(Error, "EncodingError U+ADAE");
expect(() => {ms932Encoder.encode("\uADAF")}).to.throw(Error, "EncodingError U+ADAF");
expect(() => {ms932Encoder.encode("\uADB0")}).to.throw(Error, "EncodingError U+ADB0");
expect(() => {ms932Encoder.encode("\uADB1")}).to.throw(Error, "EncodingError U+ADB1");
expect(() => {ms932Encoder.encode("\uADB2")}).to.throw(Error, "EncodingError U+ADB2");
expect(() => {ms932Encoder.encode("\uADB3")}).to.throw(Error, "EncodingError U+ADB3");
expect(() => {ms932Encoder.encode("\uADB4")}).to.throw(Error, "EncodingError U+ADB4");
expect(() => {ms932Encoder.encode("\uADB5")}).to.throw(Error, "EncodingError U+ADB5");
expect(() => {ms932Encoder.encode("\uADB6")}).to.throw(Error, "EncodingError U+ADB6");
expect(() => {ms932Encoder.encode("\uADB7")}).to.throw(Error, "EncodingError U+ADB7");
expect(() => {ms932Encoder.encode("\uADB8")}).to.throw(Error, "EncodingError U+ADB8");
expect(() => {ms932Encoder.encode("\uADB9")}).to.throw(Error, "EncodingError U+ADB9");
expect(() => {ms932Encoder.encode("\uADBA")}).to.throw(Error, "EncodingError U+ADBA");
expect(() => {ms932Encoder.encode("\uADBB")}).to.throw(Error, "EncodingError U+ADBB");
expect(() => {ms932Encoder.encode("\uADBC")}).to.throw(Error, "EncodingError U+ADBC");
expect(() => {ms932Encoder.encode("\uADBD")}).to.throw(Error, "EncodingError U+ADBD");
expect(() => {ms932Encoder.encode("\uADBE")}).to.throw(Error, "EncodingError U+ADBE");
expect(() => {ms932Encoder.encode("\uADBF")}).to.throw(Error, "EncodingError U+ADBF");
expect(() => {ms932Encoder.encode("\uADC0")}).to.throw(Error, "EncodingError U+ADC0");
expect(() => {ms932Encoder.encode("\uADC1")}).to.throw(Error, "EncodingError U+ADC1");
expect(() => {ms932Encoder.encode("\uADC2")}).to.throw(Error, "EncodingError U+ADC2");
expect(() => {ms932Encoder.encode("\uADC3")}).to.throw(Error, "EncodingError U+ADC3");
expect(() => {ms932Encoder.encode("\uADC4")}).to.throw(Error, "EncodingError U+ADC4");
expect(() => {ms932Encoder.encode("\uADC5")}).to.throw(Error, "EncodingError U+ADC5");
expect(() => {ms932Encoder.encode("\uADC6")}).to.throw(Error, "EncodingError U+ADC6");
expect(() => {ms932Encoder.encode("\uADC7")}).to.throw(Error, "EncodingError U+ADC7");
expect(() => {ms932Encoder.encode("\uADC8")}).to.throw(Error, "EncodingError U+ADC8");
expect(() => {ms932Encoder.encode("\uADC9")}).to.throw(Error, "EncodingError U+ADC9");
expect(() => {ms932Encoder.encode("\uADCA")}).to.throw(Error, "EncodingError U+ADCA");
expect(() => {ms932Encoder.encode("\uADCB")}).to.throw(Error, "EncodingError U+ADCB");
expect(() => {ms932Encoder.encode("\uADCC")}).to.throw(Error, "EncodingError U+ADCC");
expect(() => {ms932Encoder.encode("\uADCD")}).to.throw(Error, "EncodingError U+ADCD");
expect(() => {ms932Encoder.encode("\uADCE")}).to.throw(Error, "EncodingError U+ADCE");
expect(() => {ms932Encoder.encode("\uADCF")}).to.throw(Error, "EncodingError U+ADCF");
expect(() => {ms932Encoder.encode("\uADD0")}).to.throw(Error, "EncodingError U+ADD0");
expect(() => {ms932Encoder.encode("\uADD1")}).to.throw(Error, "EncodingError U+ADD1");
expect(() => {ms932Encoder.encode("\uADD2")}).to.throw(Error, "EncodingError U+ADD2");
expect(() => {ms932Encoder.encode("\uADD3")}).to.throw(Error, "EncodingError U+ADD3");
expect(() => {ms932Encoder.encode("\uADD4")}).to.throw(Error, "EncodingError U+ADD4");
expect(() => {ms932Encoder.encode("\uADD5")}).to.throw(Error, "EncodingError U+ADD5");
expect(() => {ms932Encoder.encode("\uADD6")}).to.throw(Error, "EncodingError U+ADD6");
expect(() => {ms932Encoder.encode("\uADD7")}).to.throw(Error, "EncodingError U+ADD7");
expect(() => {ms932Encoder.encode("\uADD8")}).to.throw(Error, "EncodingError U+ADD8");
expect(() => {ms932Encoder.encode("\uADD9")}).to.throw(Error, "EncodingError U+ADD9");
expect(() => {ms932Encoder.encode("\uADDA")}).to.throw(Error, "EncodingError U+ADDA");
expect(() => {ms932Encoder.encode("\uADDB")}).to.throw(Error, "EncodingError U+ADDB");
expect(() => {ms932Encoder.encode("\uADDC")}).to.throw(Error, "EncodingError U+ADDC");
expect(() => {ms932Encoder.encode("\uADDD")}).to.throw(Error, "EncodingError U+ADDD");
expect(() => {ms932Encoder.encode("\uADDE")}).to.throw(Error, "EncodingError U+ADDE");
expect(() => {ms932Encoder.encode("\uADDF")}).to.throw(Error, "EncodingError U+ADDF");
expect(() => {ms932Encoder.encode("\uADE0")}).to.throw(Error, "EncodingError U+ADE0");
expect(() => {ms932Encoder.encode("\uADE1")}).to.throw(Error, "EncodingError U+ADE1");
expect(() => {ms932Encoder.encode("\uADE2")}).to.throw(Error, "EncodingError U+ADE2");
expect(() => {ms932Encoder.encode("\uADE3")}).to.throw(Error, "EncodingError U+ADE3");
expect(() => {ms932Encoder.encode("\uADE4")}).to.throw(Error, "EncodingError U+ADE4");
expect(() => {ms932Encoder.encode("\uADE5")}).to.throw(Error, "EncodingError U+ADE5");
expect(() => {ms932Encoder.encode("\uADE6")}).to.throw(Error, "EncodingError U+ADE6");
expect(() => {ms932Encoder.encode("\uADE7")}).to.throw(Error, "EncodingError U+ADE7");
expect(() => {ms932Encoder.encode("\uADE8")}).to.throw(Error, "EncodingError U+ADE8");
expect(() => {ms932Encoder.encode("\uADE9")}).to.throw(Error, "EncodingError U+ADE9");
expect(() => {ms932Encoder.encode("\uADEA")}).to.throw(Error, "EncodingError U+ADEA");
expect(() => {ms932Encoder.encode("\uADEB")}).to.throw(Error, "EncodingError U+ADEB");
expect(() => {ms932Encoder.encode("\uADEC")}).to.throw(Error, "EncodingError U+ADEC");
expect(() => {ms932Encoder.encode("\uADED")}).to.throw(Error, "EncodingError U+ADED");
expect(() => {ms932Encoder.encode("\uADEE")}).to.throw(Error, "EncodingError U+ADEE");
expect(() => {ms932Encoder.encode("\uADEF")}).to.throw(Error, "EncodingError U+ADEF");
expect(() => {ms932Encoder.encode("\uADF0")}).to.throw(Error, "EncodingError U+ADF0");
expect(() => {ms932Encoder.encode("\uADF1")}).to.throw(Error, "EncodingError U+ADF1");
expect(() => {ms932Encoder.encode("\uADF2")}).to.throw(Error, "EncodingError U+ADF2");
expect(() => {ms932Encoder.encode("\uADF3")}).to.throw(Error, "EncodingError U+ADF3");
expect(() => {ms932Encoder.encode("\uADF4")}).to.throw(Error, "EncodingError U+ADF4");
expect(() => {ms932Encoder.encode("\uADF5")}).to.throw(Error, "EncodingError U+ADF5");
expect(() => {ms932Encoder.encode("\uADF6")}).to.throw(Error, "EncodingError U+ADF6");
expect(() => {ms932Encoder.encode("\uADF7")}).to.throw(Error, "EncodingError U+ADF7");
expect(() => {ms932Encoder.encode("\uADF8")}).to.throw(Error, "EncodingError U+ADF8");
expect(() => {ms932Encoder.encode("\uADF9")}).to.throw(Error, "EncodingError U+ADF9");
expect(() => {ms932Encoder.encode("\uADFA")}).to.throw(Error, "EncodingError U+ADFA");
expect(() => {ms932Encoder.encode("\uADFB")}).to.throw(Error, "EncodingError U+ADFB");
expect(() => {ms932Encoder.encode("\uADFC")}).to.throw(Error, "EncodingError U+ADFC");
expect(() => {ms932Encoder.encode("\uADFD")}).to.throw(Error, "EncodingError U+ADFD");
expect(() => {ms932Encoder.encode("\uADFE")}).to.throw(Error, "EncodingError U+ADFE");
expect(() => {ms932Encoder.encode("\uADFF")}).to.throw(Error, "EncodingError U+ADFF");
expect(() => {ms932Encoder.encode("\uAE00")}).to.throw(Error, "EncodingError U+AE00");
expect(() => {ms932Encoder.encode("\uAE01")}).to.throw(Error, "EncodingError U+AE01");
expect(() => {ms932Encoder.encode("\uAE02")}).to.throw(Error, "EncodingError U+AE02");
expect(() => {ms932Encoder.encode("\uAE03")}).to.throw(Error, "EncodingError U+AE03");
expect(() => {ms932Encoder.encode("\uAE04")}).to.throw(Error, "EncodingError U+AE04");
expect(() => {ms932Encoder.encode("\uAE05")}).to.throw(Error, "EncodingError U+AE05");
expect(() => {ms932Encoder.encode("\uAE06")}).to.throw(Error, "EncodingError U+AE06");
expect(() => {ms932Encoder.encode("\uAE07")}).to.throw(Error, "EncodingError U+AE07");
expect(() => {ms932Encoder.encode("\uAE08")}).to.throw(Error, "EncodingError U+AE08");
expect(() => {ms932Encoder.encode("\uAE09")}).to.throw(Error, "EncodingError U+AE09");
expect(() => {ms932Encoder.encode("\uAE0A")}).to.throw(Error, "EncodingError U+AE0A");
expect(() => {ms932Encoder.encode("\uAE0B")}).to.throw(Error, "EncodingError U+AE0B");
expect(() => {ms932Encoder.encode("\uAE0C")}).to.throw(Error, "EncodingError U+AE0C");
expect(() => {ms932Encoder.encode("\uAE0D")}).to.throw(Error, "EncodingError U+AE0D");
expect(() => {ms932Encoder.encode("\uAE0E")}).to.throw(Error, "EncodingError U+AE0E");
expect(() => {ms932Encoder.encode("\uAE0F")}).to.throw(Error, "EncodingError U+AE0F");
expect(() => {ms932Encoder.encode("\uAE10")}).to.throw(Error, "EncodingError U+AE10");
expect(() => {ms932Encoder.encode("\uAE11")}).to.throw(Error, "EncodingError U+AE11");
expect(() => {ms932Encoder.encode("\uAE12")}).to.throw(Error, "EncodingError U+AE12");
expect(() => {ms932Encoder.encode("\uAE13")}).to.throw(Error, "EncodingError U+AE13");
expect(() => {ms932Encoder.encode("\uAE14")}).to.throw(Error, "EncodingError U+AE14");
expect(() => {ms932Encoder.encode("\uAE15")}).to.throw(Error, "EncodingError U+AE15");
expect(() => {ms932Encoder.encode("\uAE16")}).to.throw(Error, "EncodingError U+AE16");
expect(() => {ms932Encoder.encode("\uAE17")}).to.throw(Error, "EncodingError U+AE17");
expect(() => {ms932Encoder.encode("\uAE18")}).to.throw(Error, "EncodingError U+AE18");
expect(() => {ms932Encoder.encode("\uAE19")}).to.throw(Error, "EncodingError U+AE19");
expect(() => {ms932Encoder.encode("\uAE1A")}).to.throw(Error, "EncodingError U+AE1A");
expect(() => {ms932Encoder.encode("\uAE1B")}).to.throw(Error, "EncodingError U+AE1B");
expect(() => {ms932Encoder.encode("\uAE1C")}).to.throw(Error, "EncodingError U+AE1C");
expect(() => {ms932Encoder.encode("\uAE1D")}).to.throw(Error, "EncodingError U+AE1D");
expect(() => {ms932Encoder.encode("\uAE1E")}).to.throw(Error, "EncodingError U+AE1E");
expect(() => {ms932Encoder.encode("\uAE1F")}).to.throw(Error, "EncodingError U+AE1F");
expect(() => {ms932Encoder.encode("\uAE20")}).to.throw(Error, "EncodingError U+AE20");
expect(() => {ms932Encoder.encode("\uAE21")}).to.throw(Error, "EncodingError U+AE21");
expect(() => {ms932Encoder.encode("\uAE22")}).to.throw(Error, "EncodingError U+AE22");
expect(() => {ms932Encoder.encode("\uAE23")}).to.throw(Error, "EncodingError U+AE23");
expect(() => {ms932Encoder.encode("\uAE24")}).to.throw(Error, "EncodingError U+AE24");
expect(() => {ms932Encoder.encode("\uAE25")}).to.throw(Error, "EncodingError U+AE25");
expect(() => {ms932Encoder.encode("\uAE26")}).to.throw(Error, "EncodingError U+AE26");
expect(() => {ms932Encoder.encode("\uAE27")}).to.throw(Error, "EncodingError U+AE27");
expect(() => {ms932Encoder.encode("\uAE28")}).to.throw(Error, "EncodingError U+AE28");
expect(() => {ms932Encoder.encode("\uAE29")}).to.throw(Error, "EncodingError U+AE29");
expect(() => {ms932Encoder.encode("\uAE2A")}).to.throw(Error, "EncodingError U+AE2A");
expect(() => {ms932Encoder.encode("\uAE2B")}).to.throw(Error, "EncodingError U+AE2B");
expect(() => {ms932Encoder.encode("\uAE2C")}).to.throw(Error, "EncodingError U+AE2C");
expect(() => {ms932Encoder.encode("\uAE2D")}).to.throw(Error, "EncodingError U+AE2D");
expect(() => {ms932Encoder.encode("\uAE2E")}).to.throw(Error, "EncodingError U+AE2E");
expect(() => {ms932Encoder.encode("\uAE2F")}).to.throw(Error, "EncodingError U+AE2F");
expect(() => {ms932Encoder.encode("\uAE30")}).to.throw(Error, "EncodingError U+AE30");
expect(() => {ms932Encoder.encode("\uAE31")}).to.throw(Error, "EncodingError U+AE31");
expect(() => {ms932Encoder.encode("\uAE32")}).to.throw(Error, "EncodingError U+AE32");
expect(() => {ms932Encoder.encode("\uAE33")}).to.throw(Error, "EncodingError U+AE33");
expect(() => {ms932Encoder.encode("\uAE34")}).to.throw(Error, "EncodingError U+AE34");
expect(() => {ms932Encoder.encode("\uAE35")}).to.throw(Error, "EncodingError U+AE35");
expect(() => {ms932Encoder.encode("\uAE36")}).to.throw(Error, "EncodingError U+AE36");
expect(() => {ms932Encoder.encode("\uAE37")}).to.throw(Error, "EncodingError U+AE37");
expect(() => {ms932Encoder.encode("\uAE38")}).to.throw(Error, "EncodingError U+AE38");
expect(() => {ms932Encoder.encode("\uAE39")}).to.throw(Error, "EncodingError U+AE39");
expect(() => {ms932Encoder.encode("\uAE3A")}).to.throw(Error, "EncodingError U+AE3A");
expect(() => {ms932Encoder.encode("\uAE3B")}).to.throw(Error, "EncodingError U+AE3B");
expect(() => {ms932Encoder.encode("\uAE3C")}).to.throw(Error, "EncodingError U+AE3C");
expect(() => {ms932Encoder.encode("\uAE3D")}).to.throw(Error, "EncodingError U+AE3D");
expect(() => {ms932Encoder.encode("\uAE3E")}).to.throw(Error, "EncodingError U+AE3E");
expect(() => {ms932Encoder.encode("\uAE3F")}).to.throw(Error, "EncodingError U+AE3F");
expect(() => {ms932Encoder.encode("\uAE40")}).to.throw(Error, "EncodingError U+AE40");
expect(() => {ms932Encoder.encode("\uAE41")}).to.throw(Error, "EncodingError U+AE41");
expect(() => {ms932Encoder.encode("\uAE42")}).to.throw(Error, "EncodingError U+AE42");
expect(() => {ms932Encoder.encode("\uAE43")}).to.throw(Error, "EncodingError U+AE43");
expect(() => {ms932Encoder.encode("\uAE44")}).to.throw(Error, "EncodingError U+AE44");
expect(() => {ms932Encoder.encode("\uAE45")}).to.throw(Error, "EncodingError U+AE45");
expect(() => {ms932Encoder.encode("\uAE46")}).to.throw(Error, "EncodingError U+AE46");
expect(() => {ms932Encoder.encode("\uAE47")}).to.throw(Error, "EncodingError U+AE47");
expect(() => {ms932Encoder.encode("\uAE48")}).to.throw(Error, "EncodingError U+AE48");
expect(() => {ms932Encoder.encode("\uAE49")}).to.throw(Error, "EncodingError U+AE49");
expect(() => {ms932Encoder.encode("\uAE4A")}).to.throw(Error, "EncodingError U+AE4A");
expect(() => {ms932Encoder.encode("\uAE4B")}).to.throw(Error, "EncodingError U+AE4B");
expect(() => {ms932Encoder.encode("\uAE4C")}).to.throw(Error, "EncodingError U+AE4C");
expect(() => {ms932Encoder.encode("\uAE4D")}).to.throw(Error, "EncodingError U+AE4D");
expect(() => {ms932Encoder.encode("\uAE4E")}).to.throw(Error, "EncodingError U+AE4E");
expect(() => {ms932Encoder.encode("\uAE4F")}).to.throw(Error, "EncodingError U+AE4F");
expect(() => {ms932Encoder.encode("\uAE50")}).to.throw(Error, "EncodingError U+AE50");
expect(() => {ms932Encoder.encode("\uAE51")}).to.throw(Error, "EncodingError U+AE51");
expect(() => {ms932Encoder.encode("\uAE52")}).to.throw(Error, "EncodingError U+AE52");
expect(() => {ms932Encoder.encode("\uAE53")}).to.throw(Error, "EncodingError U+AE53");
expect(() => {ms932Encoder.encode("\uAE54")}).to.throw(Error, "EncodingError U+AE54");
expect(() => {ms932Encoder.encode("\uAE55")}).to.throw(Error, "EncodingError U+AE55");
expect(() => {ms932Encoder.encode("\uAE56")}).to.throw(Error, "EncodingError U+AE56");
expect(() => {ms932Encoder.encode("\uAE57")}).to.throw(Error, "EncodingError U+AE57");
expect(() => {ms932Encoder.encode("\uAE58")}).to.throw(Error, "EncodingError U+AE58");
expect(() => {ms932Encoder.encode("\uAE59")}).to.throw(Error, "EncodingError U+AE59");
expect(() => {ms932Encoder.encode("\uAE5A")}).to.throw(Error, "EncodingError U+AE5A");
expect(() => {ms932Encoder.encode("\uAE5B")}).to.throw(Error, "EncodingError U+AE5B");
expect(() => {ms932Encoder.encode("\uAE5C")}).to.throw(Error, "EncodingError U+AE5C");
expect(() => {ms932Encoder.encode("\uAE5D")}).to.throw(Error, "EncodingError U+AE5D");
expect(() => {ms932Encoder.encode("\uAE5E")}).to.throw(Error, "EncodingError U+AE5E");
expect(() => {ms932Encoder.encode("\uAE5F")}).to.throw(Error, "EncodingError U+AE5F");
expect(() => {ms932Encoder.encode("\uAE60")}).to.throw(Error, "EncodingError U+AE60");
expect(() => {ms932Encoder.encode("\uAE61")}).to.throw(Error, "EncodingError U+AE61");
expect(() => {ms932Encoder.encode("\uAE62")}).to.throw(Error, "EncodingError U+AE62");
expect(() => {ms932Encoder.encode("\uAE63")}).to.throw(Error, "EncodingError U+AE63");
expect(() => {ms932Encoder.encode("\uAE64")}).to.throw(Error, "EncodingError U+AE64");
expect(() => {ms932Encoder.encode("\uAE65")}).to.throw(Error, "EncodingError U+AE65");
expect(() => {ms932Encoder.encode("\uAE66")}).to.throw(Error, "EncodingError U+AE66");
expect(() => {ms932Encoder.encode("\uAE67")}).to.throw(Error, "EncodingError U+AE67");
expect(() => {ms932Encoder.encode("\uAE68")}).to.throw(Error, "EncodingError U+AE68");
expect(() => {ms932Encoder.encode("\uAE69")}).to.throw(Error, "EncodingError U+AE69");
expect(() => {ms932Encoder.encode("\uAE6A")}).to.throw(Error, "EncodingError U+AE6A");
expect(() => {ms932Encoder.encode("\uAE6B")}).to.throw(Error, "EncodingError U+AE6B");
expect(() => {ms932Encoder.encode("\uAE6C")}).to.throw(Error, "EncodingError U+AE6C");
expect(() => {ms932Encoder.encode("\uAE6D")}).to.throw(Error, "EncodingError U+AE6D");
expect(() => {ms932Encoder.encode("\uAE6E")}).to.throw(Error, "EncodingError U+AE6E");
expect(() => {ms932Encoder.encode("\uAE6F")}).to.throw(Error, "EncodingError U+AE6F");
expect(() => {ms932Encoder.encode("\uAE70")}).to.throw(Error, "EncodingError U+AE70");
expect(() => {ms932Encoder.encode("\uAE71")}).to.throw(Error, "EncodingError U+AE71");
expect(() => {ms932Encoder.encode("\uAE72")}).to.throw(Error, "EncodingError U+AE72");
expect(() => {ms932Encoder.encode("\uAE73")}).to.throw(Error, "EncodingError U+AE73");
expect(() => {ms932Encoder.encode("\uAE74")}).to.throw(Error, "EncodingError U+AE74");
expect(() => {ms932Encoder.encode("\uAE75")}).to.throw(Error, "EncodingError U+AE75");
expect(() => {ms932Encoder.encode("\uAE76")}).to.throw(Error, "EncodingError U+AE76");
expect(() => {ms932Encoder.encode("\uAE77")}).to.throw(Error, "EncodingError U+AE77");
expect(() => {ms932Encoder.encode("\uAE78")}).to.throw(Error, "EncodingError U+AE78");
expect(() => {ms932Encoder.encode("\uAE79")}).to.throw(Error, "EncodingError U+AE79");
expect(() => {ms932Encoder.encode("\uAE7A")}).to.throw(Error, "EncodingError U+AE7A");
expect(() => {ms932Encoder.encode("\uAE7B")}).to.throw(Error, "EncodingError U+AE7B");
expect(() => {ms932Encoder.encode("\uAE7C")}).to.throw(Error, "EncodingError U+AE7C");
expect(() => {ms932Encoder.encode("\uAE7D")}).to.throw(Error, "EncodingError U+AE7D");
expect(() => {ms932Encoder.encode("\uAE7E")}).to.throw(Error, "EncodingError U+AE7E");
expect(() => {ms932Encoder.encode("\uAE7F")}).to.throw(Error, "EncodingError U+AE7F");
expect(() => {ms932Encoder.encode("\uAE80")}).to.throw(Error, "EncodingError U+AE80");
expect(() => {ms932Encoder.encode("\uAE81")}).to.throw(Error, "EncodingError U+AE81");
expect(() => {ms932Encoder.encode("\uAE82")}).to.throw(Error, "EncodingError U+AE82");
expect(() => {ms932Encoder.encode("\uAE83")}).to.throw(Error, "EncodingError U+AE83");
expect(() => {ms932Encoder.encode("\uAE84")}).to.throw(Error, "EncodingError U+AE84");
expect(() => {ms932Encoder.encode("\uAE85")}).to.throw(Error, "EncodingError U+AE85");
expect(() => {ms932Encoder.encode("\uAE86")}).to.throw(Error, "EncodingError U+AE86");
expect(() => {ms932Encoder.encode("\uAE87")}).to.throw(Error, "EncodingError U+AE87");
expect(() => {ms932Encoder.encode("\uAE88")}).to.throw(Error, "EncodingError U+AE88");
expect(() => {ms932Encoder.encode("\uAE89")}).to.throw(Error, "EncodingError U+AE89");
expect(() => {ms932Encoder.encode("\uAE8A")}).to.throw(Error, "EncodingError U+AE8A");
expect(() => {ms932Encoder.encode("\uAE8B")}).to.throw(Error, "EncodingError U+AE8B");
expect(() => {ms932Encoder.encode("\uAE8C")}).to.throw(Error, "EncodingError U+AE8C");
expect(() => {ms932Encoder.encode("\uAE8D")}).to.throw(Error, "EncodingError U+AE8D");
expect(() => {ms932Encoder.encode("\uAE8E")}).to.throw(Error, "EncodingError U+AE8E");
expect(() => {ms932Encoder.encode("\uAE8F")}).to.throw(Error, "EncodingError U+AE8F");
expect(() => {ms932Encoder.encode("\uAE90")}).to.throw(Error, "EncodingError U+AE90");
expect(() => {ms932Encoder.encode("\uAE91")}).to.throw(Error, "EncodingError U+AE91");
expect(() => {ms932Encoder.encode("\uAE92")}).to.throw(Error, "EncodingError U+AE92");
expect(() => {ms932Encoder.encode("\uAE93")}).to.throw(Error, "EncodingError U+AE93");
expect(() => {ms932Encoder.encode("\uAE94")}).to.throw(Error, "EncodingError U+AE94");
expect(() => {ms932Encoder.encode("\uAE95")}).to.throw(Error, "EncodingError U+AE95");
expect(() => {ms932Encoder.encode("\uAE96")}).to.throw(Error, "EncodingError U+AE96");
expect(() => {ms932Encoder.encode("\uAE97")}).to.throw(Error, "EncodingError U+AE97");
expect(() => {ms932Encoder.encode("\uAE98")}).to.throw(Error, "EncodingError U+AE98");
expect(() => {ms932Encoder.encode("\uAE99")}).to.throw(Error, "EncodingError U+AE99");
expect(() => {ms932Encoder.encode("\uAE9A")}).to.throw(Error, "EncodingError U+AE9A");
expect(() => {ms932Encoder.encode("\uAE9B")}).to.throw(Error, "EncodingError U+AE9B");
expect(() => {ms932Encoder.encode("\uAE9C")}).to.throw(Error, "EncodingError U+AE9C");
expect(() => {ms932Encoder.encode("\uAE9D")}).to.throw(Error, "EncodingError U+AE9D");
expect(() => {ms932Encoder.encode("\uAE9E")}).to.throw(Error, "EncodingError U+AE9E");
expect(() => {ms932Encoder.encode("\uAE9F")}).to.throw(Error, "EncodingError U+AE9F");
expect(() => {ms932Encoder.encode("\uAEA0")}).to.throw(Error, "EncodingError U+AEA0");
expect(() => {ms932Encoder.encode("\uAEA1")}).to.throw(Error, "EncodingError U+AEA1");
expect(() => {ms932Encoder.encode("\uAEA2")}).to.throw(Error, "EncodingError U+AEA2");
expect(() => {ms932Encoder.encode("\uAEA3")}).to.throw(Error, "EncodingError U+AEA3");
expect(() => {ms932Encoder.encode("\uAEA4")}).to.throw(Error, "EncodingError U+AEA4");
expect(() => {ms932Encoder.encode("\uAEA5")}).to.throw(Error, "EncodingError U+AEA5");
expect(() => {ms932Encoder.encode("\uAEA6")}).to.throw(Error, "EncodingError U+AEA6");
expect(() => {ms932Encoder.encode("\uAEA7")}).to.throw(Error, "EncodingError U+AEA7");
expect(() => {ms932Encoder.encode("\uAEA8")}).to.throw(Error, "EncodingError U+AEA8");
expect(() => {ms932Encoder.encode("\uAEA9")}).to.throw(Error, "EncodingError U+AEA9");
expect(() => {ms932Encoder.encode("\uAEAA")}).to.throw(Error, "EncodingError U+AEAA");
expect(() => {ms932Encoder.encode("\uAEAB")}).to.throw(Error, "EncodingError U+AEAB");
expect(() => {ms932Encoder.encode("\uAEAC")}).to.throw(Error, "EncodingError U+AEAC");
expect(() => {ms932Encoder.encode("\uAEAD")}).to.throw(Error, "EncodingError U+AEAD");
expect(() => {ms932Encoder.encode("\uAEAE")}).to.throw(Error, "EncodingError U+AEAE");
expect(() => {ms932Encoder.encode("\uAEAF")}).to.throw(Error, "EncodingError U+AEAF");
expect(() => {ms932Encoder.encode("\uAEB0")}).to.throw(Error, "EncodingError U+AEB0");
expect(() => {ms932Encoder.encode("\uAEB1")}).to.throw(Error, "EncodingError U+AEB1");
expect(() => {ms932Encoder.encode("\uAEB2")}).to.throw(Error, "EncodingError U+AEB2");
expect(() => {ms932Encoder.encode("\uAEB3")}).to.throw(Error, "EncodingError U+AEB3");
expect(() => {ms932Encoder.encode("\uAEB4")}).to.throw(Error, "EncodingError U+AEB4");
expect(() => {ms932Encoder.encode("\uAEB5")}).to.throw(Error, "EncodingError U+AEB5");
expect(() => {ms932Encoder.encode("\uAEB6")}).to.throw(Error, "EncodingError U+AEB6");
expect(() => {ms932Encoder.encode("\uAEB7")}).to.throw(Error, "EncodingError U+AEB7");
expect(() => {ms932Encoder.encode("\uAEB8")}).to.throw(Error, "EncodingError U+AEB8");
expect(() => {ms932Encoder.encode("\uAEB9")}).to.throw(Error, "EncodingError U+AEB9");
expect(() => {ms932Encoder.encode("\uAEBA")}).to.throw(Error, "EncodingError U+AEBA");
expect(() => {ms932Encoder.encode("\uAEBB")}).to.throw(Error, "EncodingError U+AEBB");
expect(() => {ms932Encoder.encode("\uAEBC")}).to.throw(Error, "EncodingError U+AEBC");
expect(() => {ms932Encoder.encode("\uAEBD")}).to.throw(Error, "EncodingError U+AEBD");
expect(() => {ms932Encoder.encode("\uAEBE")}).to.throw(Error, "EncodingError U+AEBE");
expect(() => {ms932Encoder.encode("\uAEBF")}).to.throw(Error, "EncodingError U+AEBF");
expect(() => {ms932Encoder.encode("\uAEC0")}).to.throw(Error, "EncodingError U+AEC0");
expect(() => {ms932Encoder.encode("\uAEC1")}).to.throw(Error, "EncodingError U+AEC1");
expect(() => {ms932Encoder.encode("\uAEC2")}).to.throw(Error, "EncodingError U+AEC2");
expect(() => {ms932Encoder.encode("\uAEC3")}).to.throw(Error, "EncodingError U+AEC3");
expect(() => {ms932Encoder.encode("\uAEC4")}).to.throw(Error, "EncodingError U+AEC4");
expect(() => {ms932Encoder.encode("\uAEC5")}).to.throw(Error, "EncodingError U+AEC5");
expect(() => {ms932Encoder.encode("\uAEC6")}).to.throw(Error, "EncodingError U+AEC6");
expect(() => {ms932Encoder.encode("\uAEC7")}).to.throw(Error, "EncodingError U+AEC7");
expect(() => {ms932Encoder.encode("\uAEC8")}).to.throw(Error, "EncodingError U+AEC8");
expect(() => {ms932Encoder.encode("\uAEC9")}).to.throw(Error, "EncodingError U+AEC9");
expect(() => {ms932Encoder.encode("\uAECA")}).to.throw(Error, "EncodingError U+AECA");
expect(() => {ms932Encoder.encode("\uAECB")}).to.throw(Error, "EncodingError U+AECB");
expect(() => {ms932Encoder.encode("\uAECC")}).to.throw(Error, "EncodingError U+AECC");
expect(() => {ms932Encoder.encode("\uAECD")}).to.throw(Error, "EncodingError U+AECD");
expect(() => {ms932Encoder.encode("\uAECE")}).to.throw(Error, "EncodingError U+AECE");
expect(() => {ms932Encoder.encode("\uAECF")}).to.throw(Error, "EncodingError U+AECF");
expect(() => {ms932Encoder.encode("\uAED0")}).to.throw(Error, "EncodingError U+AED0");
expect(() => {ms932Encoder.encode("\uAED1")}).to.throw(Error, "EncodingError U+AED1");
expect(() => {ms932Encoder.encode("\uAED2")}).to.throw(Error, "EncodingError U+AED2");
expect(() => {ms932Encoder.encode("\uAED3")}).to.throw(Error, "EncodingError U+AED3");
expect(() => {ms932Encoder.encode("\uAED4")}).to.throw(Error, "EncodingError U+AED4");
expect(() => {ms932Encoder.encode("\uAED5")}).to.throw(Error, "EncodingError U+AED5");
expect(() => {ms932Encoder.encode("\uAED6")}).to.throw(Error, "EncodingError U+AED6");
expect(() => {ms932Encoder.encode("\uAED7")}).to.throw(Error, "EncodingError U+AED7");
expect(() => {ms932Encoder.encode("\uAED8")}).to.throw(Error, "EncodingError U+AED8");
expect(() => {ms932Encoder.encode("\uAED9")}).to.throw(Error, "EncodingError U+AED9");
expect(() => {ms932Encoder.encode("\uAEDA")}).to.throw(Error, "EncodingError U+AEDA");
expect(() => {ms932Encoder.encode("\uAEDB")}).to.throw(Error, "EncodingError U+AEDB");
expect(() => {ms932Encoder.encode("\uAEDC")}).to.throw(Error, "EncodingError U+AEDC");
expect(() => {ms932Encoder.encode("\uAEDD")}).to.throw(Error, "EncodingError U+AEDD");
expect(() => {ms932Encoder.encode("\uAEDE")}).to.throw(Error, "EncodingError U+AEDE");
expect(() => {ms932Encoder.encode("\uAEDF")}).to.throw(Error, "EncodingError U+AEDF");
expect(() => {ms932Encoder.encode("\uAEE0")}).to.throw(Error, "EncodingError U+AEE0");
expect(() => {ms932Encoder.encode("\uAEE1")}).to.throw(Error, "EncodingError U+AEE1");
expect(() => {ms932Encoder.encode("\uAEE2")}).to.throw(Error, "EncodingError U+AEE2");
expect(() => {ms932Encoder.encode("\uAEE3")}).to.throw(Error, "EncodingError U+AEE3");
expect(() => {ms932Encoder.encode("\uAEE4")}).to.throw(Error, "EncodingError U+AEE4");
expect(() => {ms932Encoder.encode("\uAEE5")}).to.throw(Error, "EncodingError U+AEE5");
expect(() => {ms932Encoder.encode("\uAEE6")}).to.throw(Error, "EncodingError U+AEE6");
expect(() => {ms932Encoder.encode("\uAEE7")}).to.throw(Error, "EncodingError U+AEE7");
expect(() => {ms932Encoder.encode("\uAEE8")}).to.throw(Error, "EncodingError U+AEE8");
expect(() => {ms932Encoder.encode("\uAEE9")}).to.throw(Error, "EncodingError U+AEE9");
expect(() => {ms932Encoder.encode("\uAEEA")}).to.throw(Error, "EncodingError U+AEEA");
expect(() => {ms932Encoder.encode("\uAEEB")}).to.throw(Error, "EncodingError U+AEEB");
expect(() => {ms932Encoder.encode("\uAEEC")}).to.throw(Error, "EncodingError U+AEEC");
expect(() => {ms932Encoder.encode("\uAEED")}).to.throw(Error, "EncodingError U+AEED");
expect(() => {ms932Encoder.encode("\uAEEE")}).to.throw(Error, "EncodingError U+AEEE");
expect(() => {ms932Encoder.encode("\uAEEF")}).to.throw(Error, "EncodingError U+AEEF");
expect(() => {ms932Encoder.encode("\uAEF0")}).to.throw(Error, "EncodingError U+AEF0");
expect(() => {ms932Encoder.encode("\uAEF1")}).to.throw(Error, "EncodingError U+AEF1");
expect(() => {ms932Encoder.encode("\uAEF2")}).to.throw(Error, "EncodingError U+AEF2");
expect(() => {ms932Encoder.encode("\uAEF3")}).to.throw(Error, "EncodingError U+AEF3");
expect(() => {ms932Encoder.encode("\uAEF4")}).to.throw(Error, "EncodingError U+AEF4");
expect(() => {ms932Encoder.encode("\uAEF5")}).to.throw(Error, "EncodingError U+AEF5");
expect(() => {ms932Encoder.encode("\uAEF6")}).to.throw(Error, "EncodingError U+AEF6");
expect(() => {ms932Encoder.encode("\uAEF7")}).to.throw(Error, "EncodingError U+AEF7");
expect(() => {ms932Encoder.encode("\uAEF8")}).to.throw(Error, "EncodingError U+AEF8");
expect(() => {ms932Encoder.encode("\uAEF9")}).to.throw(Error, "EncodingError U+AEF9");
expect(() => {ms932Encoder.encode("\uAEFA")}).to.throw(Error, "EncodingError U+AEFA");
expect(() => {ms932Encoder.encode("\uAEFB")}).to.throw(Error, "EncodingError U+AEFB");
expect(() => {ms932Encoder.encode("\uAEFC")}).to.throw(Error, "EncodingError U+AEFC");
expect(() => {ms932Encoder.encode("\uAEFD")}).to.throw(Error, "EncodingError U+AEFD");
expect(() => {ms932Encoder.encode("\uAEFE")}).to.throw(Error, "EncodingError U+AEFE");
expect(() => {ms932Encoder.encode("\uAEFF")}).to.throw(Error, "EncodingError U+AEFF");
expect(() => {ms932Encoder.encode("\uAF00")}).to.throw(Error, "EncodingError U+AF00");
expect(() => {ms932Encoder.encode("\uAF01")}).to.throw(Error, "EncodingError U+AF01");
expect(() => {ms932Encoder.encode("\uAF02")}).to.throw(Error, "EncodingError U+AF02");
expect(() => {ms932Encoder.encode("\uAF03")}).to.throw(Error, "EncodingError U+AF03");
expect(() => {ms932Encoder.encode("\uAF04")}).to.throw(Error, "EncodingError U+AF04");
expect(() => {ms932Encoder.encode("\uAF05")}).to.throw(Error, "EncodingError U+AF05");
expect(() => {ms932Encoder.encode("\uAF06")}).to.throw(Error, "EncodingError U+AF06");
expect(() => {ms932Encoder.encode("\uAF07")}).to.throw(Error, "EncodingError U+AF07");
expect(() => {ms932Encoder.encode("\uAF08")}).to.throw(Error, "EncodingError U+AF08");
expect(() => {ms932Encoder.encode("\uAF09")}).to.throw(Error, "EncodingError U+AF09");
expect(() => {ms932Encoder.encode("\uAF0A")}).to.throw(Error, "EncodingError U+AF0A");
expect(() => {ms932Encoder.encode("\uAF0B")}).to.throw(Error, "EncodingError U+AF0B");
expect(() => {ms932Encoder.encode("\uAF0C")}).to.throw(Error, "EncodingError U+AF0C");
expect(() => {ms932Encoder.encode("\uAF0D")}).to.throw(Error, "EncodingError U+AF0D");
expect(() => {ms932Encoder.encode("\uAF0E")}).to.throw(Error, "EncodingError U+AF0E");
expect(() => {ms932Encoder.encode("\uAF0F")}).to.throw(Error, "EncodingError U+AF0F");
expect(() => {ms932Encoder.encode("\uAF10")}).to.throw(Error, "EncodingError U+AF10");
expect(() => {ms932Encoder.encode("\uAF11")}).to.throw(Error, "EncodingError U+AF11");
expect(() => {ms932Encoder.encode("\uAF12")}).to.throw(Error, "EncodingError U+AF12");
expect(() => {ms932Encoder.encode("\uAF13")}).to.throw(Error, "EncodingError U+AF13");
expect(() => {ms932Encoder.encode("\uAF14")}).to.throw(Error, "EncodingError U+AF14");
expect(() => {ms932Encoder.encode("\uAF15")}).to.throw(Error, "EncodingError U+AF15");
expect(() => {ms932Encoder.encode("\uAF16")}).to.throw(Error, "EncodingError U+AF16");
expect(() => {ms932Encoder.encode("\uAF17")}).to.throw(Error, "EncodingError U+AF17");
expect(() => {ms932Encoder.encode("\uAF18")}).to.throw(Error, "EncodingError U+AF18");
expect(() => {ms932Encoder.encode("\uAF19")}).to.throw(Error, "EncodingError U+AF19");
expect(() => {ms932Encoder.encode("\uAF1A")}).to.throw(Error, "EncodingError U+AF1A");
expect(() => {ms932Encoder.encode("\uAF1B")}).to.throw(Error, "EncodingError U+AF1B");
expect(() => {ms932Encoder.encode("\uAF1C")}).to.throw(Error, "EncodingError U+AF1C");
expect(() => {ms932Encoder.encode("\uAF1D")}).to.throw(Error, "EncodingError U+AF1D");
expect(() => {ms932Encoder.encode("\uAF1E")}).to.throw(Error, "EncodingError U+AF1E");
expect(() => {ms932Encoder.encode("\uAF1F")}).to.throw(Error, "EncodingError U+AF1F");
expect(() => {ms932Encoder.encode("\uAF20")}).to.throw(Error, "EncodingError U+AF20");
expect(() => {ms932Encoder.encode("\uAF21")}).to.throw(Error, "EncodingError U+AF21");
expect(() => {ms932Encoder.encode("\uAF22")}).to.throw(Error, "EncodingError U+AF22");
expect(() => {ms932Encoder.encode("\uAF23")}).to.throw(Error, "EncodingError U+AF23");
expect(() => {ms932Encoder.encode("\uAF24")}).to.throw(Error, "EncodingError U+AF24");
expect(() => {ms932Encoder.encode("\uAF25")}).to.throw(Error, "EncodingError U+AF25");
expect(() => {ms932Encoder.encode("\uAF26")}).to.throw(Error, "EncodingError U+AF26");
expect(() => {ms932Encoder.encode("\uAF27")}).to.throw(Error, "EncodingError U+AF27");
expect(() => {ms932Encoder.encode("\uAF28")}).to.throw(Error, "EncodingError U+AF28");
expect(() => {ms932Encoder.encode("\uAF29")}).to.throw(Error, "EncodingError U+AF29");
expect(() => {ms932Encoder.encode("\uAF2A")}).to.throw(Error, "EncodingError U+AF2A");
expect(() => {ms932Encoder.encode("\uAF2B")}).to.throw(Error, "EncodingError U+AF2B");
expect(() => {ms932Encoder.encode("\uAF2C")}).to.throw(Error, "EncodingError U+AF2C");
expect(() => {ms932Encoder.encode("\uAF2D")}).to.throw(Error, "EncodingError U+AF2D");
expect(() => {ms932Encoder.encode("\uAF2E")}).to.throw(Error, "EncodingError U+AF2E");
expect(() => {ms932Encoder.encode("\uAF2F")}).to.throw(Error, "EncodingError U+AF2F");
expect(() => {ms932Encoder.encode("\uAF30")}).to.throw(Error, "EncodingError U+AF30");
expect(() => {ms932Encoder.encode("\uAF31")}).to.throw(Error, "EncodingError U+AF31");
expect(() => {ms932Encoder.encode("\uAF32")}).to.throw(Error, "EncodingError U+AF32");
expect(() => {ms932Encoder.encode("\uAF33")}).to.throw(Error, "EncodingError U+AF33");
expect(() => {ms932Encoder.encode("\uAF34")}).to.throw(Error, "EncodingError U+AF34");
expect(() => {ms932Encoder.encode("\uAF35")}).to.throw(Error, "EncodingError U+AF35");
expect(() => {ms932Encoder.encode("\uAF36")}).to.throw(Error, "EncodingError U+AF36");
expect(() => {ms932Encoder.encode("\uAF37")}).to.throw(Error, "EncodingError U+AF37");
expect(() => {ms932Encoder.encode("\uAF38")}).to.throw(Error, "EncodingError U+AF38");
expect(() => {ms932Encoder.encode("\uAF39")}).to.throw(Error, "EncodingError U+AF39");
expect(() => {ms932Encoder.encode("\uAF3A")}).to.throw(Error, "EncodingError U+AF3A");
expect(() => {ms932Encoder.encode("\uAF3B")}).to.throw(Error, "EncodingError U+AF3B");
expect(() => {ms932Encoder.encode("\uAF3C")}).to.throw(Error, "EncodingError U+AF3C");
expect(() => {ms932Encoder.encode("\uAF3D")}).to.throw(Error, "EncodingError U+AF3D");
expect(() => {ms932Encoder.encode("\uAF3E")}).to.throw(Error, "EncodingError U+AF3E");
expect(() => {ms932Encoder.encode("\uAF3F")}).to.throw(Error, "EncodingError U+AF3F");
expect(() => {ms932Encoder.encode("\uAF40")}).to.throw(Error, "EncodingError U+AF40");
expect(() => {ms932Encoder.encode("\uAF41")}).to.throw(Error, "EncodingError U+AF41");
expect(() => {ms932Encoder.encode("\uAF42")}).to.throw(Error, "EncodingError U+AF42");
expect(() => {ms932Encoder.encode("\uAF43")}).to.throw(Error, "EncodingError U+AF43");
expect(() => {ms932Encoder.encode("\uAF44")}).to.throw(Error, "EncodingError U+AF44");
expect(() => {ms932Encoder.encode("\uAF45")}).to.throw(Error, "EncodingError U+AF45");
expect(() => {ms932Encoder.encode("\uAF46")}).to.throw(Error, "EncodingError U+AF46");
expect(() => {ms932Encoder.encode("\uAF47")}).to.throw(Error, "EncodingError U+AF47");
expect(() => {ms932Encoder.encode("\uAF48")}).to.throw(Error, "EncodingError U+AF48");
expect(() => {ms932Encoder.encode("\uAF49")}).to.throw(Error, "EncodingError U+AF49");
expect(() => {ms932Encoder.encode("\uAF4A")}).to.throw(Error, "EncodingError U+AF4A");
expect(() => {ms932Encoder.encode("\uAF4B")}).to.throw(Error, "EncodingError U+AF4B");
expect(() => {ms932Encoder.encode("\uAF4C")}).to.throw(Error, "EncodingError U+AF4C");
expect(() => {ms932Encoder.encode("\uAF4D")}).to.throw(Error, "EncodingError U+AF4D");
expect(() => {ms932Encoder.encode("\uAF4E")}).to.throw(Error, "EncodingError U+AF4E");
expect(() => {ms932Encoder.encode("\uAF4F")}).to.throw(Error, "EncodingError U+AF4F");
expect(() => {ms932Encoder.encode("\uAF50")}).to.throw(Error, "EncodingError U+AF50");
expect(() => {ms932Encoder.encode("\uAF51")}).to.throw(Error, "EncodingError U+AF51");
expect(() => {ms932Encoder.encode("\uAF52")}).to.throw(Error, "EncodingError U+AF52");
expect(() => {ms932Encoder.encode("\uAF53")}).to.throw(Error, "EncodingError U+AF53");
expect(() => {ms932Encoder.encode("\uAF54")}).to.throw(Error, "EncodingError U+AF54");
expect(() => {ms932Encoder.encode("\uAF55")}).to.throw(Error, "EncodingError U+AF55");
expect(() => {ms932Encoder.encode("\uAF56")}).to.throw(Error, "EncodingError U+AF56");
expect(() => {ms932Encoder.encode("\uAF57")}).to.throw(Error, "EncodingError U+AF57");
expect(() => {ms932Encoder.encode("\uAF58")}).to.throw(Error, "EncodingError U+AF58");
expect(() => {ms932Encoder.encode("\uAF59")}).to.throw(Error, "EncodingError U+AF59");
expect(() => {ms932Encoder.encode("\uAF5A")}).to.throw(Error, "EncodingError U+AF5A");
expect(() => {ms932Encoder.encode("\uAF5B")}).to.throw(Error, "EncodingError U+AF5B");
expect(() => {ms932Encoder.encode("\uAF5C")}).to.throw(Error, "EncodingError U+AF5C");
expect(() => {ms932Encoder.encode("\uAF5D")}).to.throw(Error, "EncodingError U+AF5D");
expect(() => {ms932Encoder.encode("\uAF5E")}).to.throw(Error, "EncodingError U+AF5E");
expect(() => {ms932Encoder.encode("\uAF5F")}).to.throw(Error, "EncodingError U+AF5F");
expect(() => {ms932Encoder.encode("\uAF60")}).to.throw(Error, "EncodingError U+AF60");
expect(() => {ms932Encoder.encode("\uAF61")}).to.throw(Error, "EncodingError U+AF61");
expect(() => {ms932Encoder.encode("\uAF62")}).to.throw(Error, "EncodingError U+AF62");
expect(() => {ms932Encoder.encode("\uAF63")}).to.throw(Error, "EncodingError U+AF63");
expect(() => {ms932Encoder.encode("\uAF64")}).to.throw(Error, "EncodingError U+AF64");
expect(() => {ms932Encoder.encode("\uAF65")}).to.throw(Error, "EncodingError U+AF65");
expect(() => {ms932Encoder.encode("\uAF66")}).to.throw(Error, "EncodingError U+AF66");
expect(() => {ms932Encoder.encode("\uAF67")}).to.throw(Error, "EncodingError U+AF67");
expect(() => {ms932Encoder.encode("\uAF68")}).to.throw(Error, "EncodingError U+AF68");
expect(() => {ms932Encoder.encode("\uAF69")}).to.throw(Error, "EncodingError U+AF69");
expect(() => {ms932Encoder.encode("\uAF6A")}).to.throw(Error, "EncodingError U+AF6A");
expect(() => {ms932Encoder.encode("\uAF6B")}).to.throw(Error, "EncodingError U+AF6B");
expect(() => {ms932Encoder.encode("\uAF6C")}).to.throw(Error, "EncodingError U+AF6C");
expect(() => {ms932Encoder.encode("\uAF6D")}).to.throw(Error, "EncodingError U+AF6D");
expect(() => {ms932Encoder.encode("\uAF6E")}).to.throw(Error, "EncodingError U+AF6E");
expect(() => {ms932Encoder.encode("\uAF6F")}).to.throw(Error, "EncodingError U+AF6F");
expect(() => {ms932Encoder.encode("\uAF70")}).to.throw(Error, "EncodingError U+AF70");
expect(() => {ms932Encoder.encode("\uAF71")}).to.throw(Error, "EncodingError U+AF71");
expect(() => {ms932Encoder.encode("\uAF72")}).to.throw(Error, "EncodingError U+AF72");
expect(() => {ms932Encoder.encode("\uAF73")}).to.throw(Error, "EncodingError U+AF73");
expect(() => {ms932Encoder.encode("\uAF74")}).to.throw(Error, "EncodingError U+AF74");
expect(() => {ms932Encoder.encode("\uAF75")}).to.throw(Error, "EncodingError U+AF75");
expect(() => {ms932Encoder.encode("\uAF76")}).to.throw(Error, "EncodingError U+AF76");
expect(() => {ms932Encoder.encode("\uAF77")}).to.throw(Error, "EncodingError U+AF77");
expect(() => {ms932Encoder.encode("\uAF78")}).to.throw(Error, "EncodingError U+AF78");
expect(() => {ms932Encoder.encode("\uAF79")}).to.throw(Error, "EncodingError U+AF79");
expect(() => {ms932Encoder.encode("\uAF7A")}).to.throw(Error, "EncodingError U+AF7A");
expect(() => {ms932Encoder.encode("\uAF7B")}).to.throw(Error, "EncodingError U+AF7B");
expect(() => {ms932Encoder.encode("\uAF7C")}).to.throw(Error, "EncodingError U+AF7C");
expect(() => {ms932Encoder.encode("\uAF7D")}).to.throw(Error, "EncodingError U+AF7D");
expect(() => {ms932Encoder.encode("\uAF7E")}).to.throw(Error, "EncodingError U+AF7E");
expect(() => {ms932Encoder.encode("\uAF7F")}).to.throw(Error, "EncodingError U+AF7F");
expect(() => {ms932Encoder.encode("\uAF80")}).to.throw(Error, "EncodingError U+AF80");
expect(() => {ms932Encoder.encode("\uAF81")}).to.throw(Error, "EncodingError U+AF81");
expect(() => {ms932Encoder.encode("\uAF82")}).to.throw(Error, "EncodingError U+AF82");
expect(() => {ms932Encoder.encode("\uAF83")}).to.throw(Error, "EncodingError U+AF83");
expect(() => {ms932Encoder.encode("\uAF84")}).to.throw(Error, "EncodingError U+AF84");
expect(() => {ms932Encoder.encode("\uAF85")}).to.throw(Error, "EncodingError U+AF85");
expect(() => {ms932Encoder.encode("\uAF86")}).to.throw(Error, "EncodingError U+AF86");
expect(() => {ms932Encoder.encode("\uAF87")}).to.throw(Error, "EncodingError U+AF87");
expect(() => {ms932Encoder.encode("\uAF88")}).to.throw(Error, "EncodingError U+AF88");
expect(() => {ms932Encoder.encode("\uAF89")}).to.throw(Error, "EncodingError U+AF89");
expect(() => {ms932Encoder.encode("\uAF8A")}).to.throw(Error, "EncodingError U+AF8A");
expect(() => {ms932Encoder.encode("\uAF8B")}).to.throw(Error, "EncodingError U+AF8B");
expect(() => {ms932Encoder.encode("\uAF8C")}).to.throw(Error, "EncodingError U+AF8C");
expect(() => {ms932Encoder.encode("\uAF8D")}).to.throw(Error, "EncodingError U+AF8D");
expect(() => {ms932Encoder.encode("\uAF8E")}).to.throw(Error, "EncodingError U+AF8E");
expect(() => {ms932Encoder.encode("\uAF8F")}).to.throw(Error, "EncodingError U+AF8F");
expect(() => {ms932Encoder.encode("\uAF90")}).to.throw(Error, "EncodingError U+AF90");
expect(() => {ms932Encoder.encode("\uAF91")}).to.throw(Error, "EncodingError U+AF91");
expect(() => {ms932Encoder.encode("\uAF92")}).to.throw(Error, "EncodingError U+AF92");
expect(() => {ms932Encoder.encode("\uAF93")}).to.throw(Error, "EncodingError U+AF93");
expect(() => {ms932Encoder.encode("\uAF94")}).to.throw(Error, "EncodingError U+AF94");
expect(() => {ms932Encoder.encode("\uAF95")}).to.throw(Error, "EncodingError U+AF95");
expect(() => {ms932Encoder.encode("\uAF96")}).to.throw(Error, "EncodingError U+AF96");
expect(() => {ms932Encoder.encode("\uAF97")}).to.throw(Error, "EncodingError U+AF97");
expect(() => {ms932Encoder.encode("\uAF98")}).to.throw(Error, "EncodingError U+AF98");
expect(() => {ms932Encoder.encode("\uAF99")}).to.throw(Error, "EncodingError U+AF99");
expect(() => {ms932Encoder.encode("\uAF9A")}).to.throw(Error, "EncodingError U+AF9A");
expect(() => {ms932Encoder.encode("\uAF9B")}).to.throw(Error, "EncodingError U+AF9B");
expect(() => {ms932Encoder.encode("\uAF9C")}).to.throw(Error, "EncodingError U+AF9C");
expect(() => {ms932Encoder.encode("\uAF9D")}).to.throw(Error, "EncodingError U+AF9D");
expect(() => {ms932Encoder.encode("\uAF9E")}).to.throw(Error, "EncodingError U+AF9E");
expect(() => {ms932Encoder.encode("\uAF9F")}).to.throw(Error, "EncodingError U+AF9F");
expect(() => {ms932Encoder.encode("\uAFA0")}).to.throw(Error, "EncodingError U+AFA0");
expect(() => {ms932Encoder.encode("\uAFA1")}).to.throw(Error, "EncodingError U+AFA1");
expect(() => {ms932Encoder.encode("\uAFA2")}).to.throw(Error, "EncodingError U+AFA2");
expect(() => {ms932Encoder.encode("\uAFA3")}).to.throw(Error, "EncodingError U+AFA3");
expect(() => {ms932Encoder.encode("\uAFA4")}).to.throw(Error, "EncodingError U+AFA4");
expect(() => {ms932Encoder.encode("\uAFA5")}).to.throw(Error, "EncodingError U+AFA5");
expect(() => {ms932Encoder.encode("\uAFA6")}).to.throw(Error, "EncodingError U+AFA6");
expect(() => {ms932Encoder.encode("\uAFA7")}).to.throw(Error, "EncodingError U+AFA7");
expect(() => {ms932Encoder.encode("\uAFA8")}).to.throw(Error, "EncodingError U+AFA8");
expect(() => {ms932Encoder.encode("\uAFA9")}).to.throw(Error, "EncodingError U+AFA9");
expect(() => {ms932Encoder.encode("\uAFAA")}).to.throw(Error, "EncodingError U+AFAA");
expect(() => {ms932Encoder.encode("\uAFAB")}).to.throw(Error, "EncodingError U+AFAB");
expect(() => {ms932Encoder.encode("\uAFAC")}).to.throw(Error, "EncodingError U+AFAC");
expect(() => {ms932Encoder.encode("\uAFAD")}).to.throw(Error, "EncodingError U+AFAD");
expect(() => {ms932Encoder.encode("\uAFAE")}).to.throw(Error, "EncodingError U+AFAE");
expect(() => {ms932Encoder.encode("\uAFAF")}).to.throw(Error, "EncodingError U+AFAF");
expect(() => {ms932Encoder.encode("\uAFB0")}).to.throw(Error, "EncodingError U+AFB0");
expect(() => {ms932Encoder.encode("\uAFB1")}).to.throw(Error, "EncodingError U+AFB1");
expect(() => {ms932Encoder.encode("\uAFB2")}).to.throw(Error, "EncodingError U+AFB2");
expect(() => {ms932Encoder.encode("\uAFB3")}).to.throw(Error, "EncodingError U+AFB3");
expect(() => {ms932Encoder.encode("\uAFB4")}).to.throw(Error, "EncodingError U+AFB4");
expect(() => {ms932Encoder.encode("\uAFB5")}).to.throw(Error, "EncodingError U+AFB5");
expect(() => {ms932Encoder.encode("\uAFB6")}).to.throw(Error, "EncodingError U+AFB6");
expect(() => {ms932Encoder.encode("\uAFB7")}).to.throw(Error, "EncodingError U+AFB7");
expect(() => {ms932Encoder.encode("\uAFB8")}).to.throw(Error, "EncodingError U+AFB8");
expect(() => {ms932Encoder.encode("\uAFB9")}).to.throw(Error, "EncodingError U+AFB9");
expect(() => {ms932Encoder.encode("\uAFBA")}).to.throw(Error, "EncodingError U+AFBA");
expect(() => {ms932Encoder.encode("\uAFBB")}).to.throw(Error, "EncodingError U+AFBB");
expect(() => {ms932Encoder.encode("\uAFBC")}).to.throw(Error, "EncodingError U+AFBC");
expect(() => {ms932Encoder.encode("\uAFBD")}).to.throw(Error, "EncodingError U+AFBD");
expect(() => {ms932Encoder.encode("\uAFBE")}).to.throw(Error, "EncodingError U+AFBE");
expect(() => {ms932Encoder.encode("\uAFBF")}).to.throw(Error, "EncodingError U+AFBF");
expect(() => {ms932Encoder.encode("\uAFC0")}).to.throw(Error, "EncodingError U+AFC0");
expect(() => {ms932Encoder.encode("\uAFC1")}).to.throw(Error, "EncodingError U+AFC1");
expect(() => {ms932Encoder.encode("\uAFC2")}).to.throw(Error, "EncodingError U+AFC2");
expect(() => {ms932Encoder.encode("\uAFC3")}).to.throw(Error, "EncodingError U+AFC3");
expect(() => {ms932Encoder.encode("\uAFC4")}).to.throw(Error, "EncodingError U+AFC4");
expect(() => {ms932Encoder.encode("\uAFC5")}).to.throw(Error, "EncodingError U+AFC5");
expect(() => {ms932Encoder.encode("\uAFC6")}).to.throw(Error, "EncodingError U+AFC6");
expect(() => {ms932Encoder.encode("\uAFC7")}).to.throw(Error, "EncodingError U+AFC7");
expect(() => {ms932Encoder.encode("\uAFC8")}).to.throw(Error, "EncodingError U+AFC8");
expect(() => {ms932Encoder.encode("\uAFC9")}).to.throw(Error, "EncodingError U+AFC9");
expect(() => {ms932Encoder.encode("\uAFCA")}).to.throw(Error, "EncodingError U+AFCA");
expect(() => {ms932Encoder.encode("\uAFCB")}).to.throw(Error, "EncodingError U+AFCB");
expect(() => {ms932Encoder.encode("\uAFCC")}).to.throw(Error, "EncodingError U+AFCC");
expect(() => {ms932Encoder.encode("\uAFCD")}).to.throw(Error, "EncodingError U+AFCD");
expect(() => {ms932Encoder.encode("\uAFCE")}).to.throw(Error, "EncodingError U+AFCE");
expect(() => {ms932Encoder.encode("\uAFCF")}).to.throw(Error, "EncodingError U+AFCF");
expect(() => {ms932Encoder.encode("\uAFD0")}).to.throw(Error, "EncodingError U+AFD0");
expect(() => {ms932Encoder.encode("\uAFD1")}).to.throw(Error, "EncodingError U+AFD1");
expect(() => {ms932Encoder.encode("\uAFD2")}).to.throw(Error, "EncodingError U+AFD2");
expect(() => {ms932Encoder.encode("\uAFD3")}).to.throw(Error, "EncodingError U+AFD3");
expect(() => {ms932Encoder.encode("\uAFD4")}).to.throw(Error, "EncodingError U+AFD4");
expect(() => {ms932Encoder.encode("\uAFD5")}).to.throw(Error, "EncodingError U+AFD5");
expect(() => {ms932Encoder.encode("\uAFD6")}).to.throw(Error, "EncodingError U+AFD6");
expect(() => {ms932Encoder.encode("\uAFD7")}).to.throw(Error, "EncodingError U+AFD7");
expect(() => {ms932Encoder.encode("\uAFD8")}).to.throw(Error, "EncodingError U+AFD8");
expect(() => {ms932Encoder.encode("\uAFD9")}).to.throw(Error, "EncodingError U+AFD9");
expect(() => {ms932Encoder.encode("\uAFDA")}).to.throw(Error, "EncodingError U+AFDA");
expect(() => {ms932Encoder.encode("\uAFDB")}).to.throw(Error, "EncodingError U+AFDB");
expect(() => {ms932Encoder.encode("\uAFDC")}).to.throw(Error, "EncodingError U+AFDC");
expect(() => {ms932Encoder.encode("\uAFDD")}).to.throw(Error, "EncodingError U+AFDD");
expect(() => {ms932Encoder.encode("\uAFDE")}).to.throw(Error, "EncodingError U+AFDE");
expect(() => {ms932Encoder.encode("\uAFDF")}).to.throw(Error, "EncodingError U+AFDF");
expect(() => {ms932Encoder.encode("\uAFE0")}).to.throw(Error, "EncodingError U+AFE0");
expect(() => {ms932Encoder.encode("\uAFE1")}).to.throw(Error, "EncodingError U+AFE1");
expect(() => {ms932Encoder.encode("\uAFE2")}).to.throw(Error, "EncodingError U+AFE2");
expect(() => {ms932Encoder.encode("\uAFE3")}).to.throw(Error, "EncodingError U+AFE3");
expect(() => {ms932Encoder.encode("\uAFE4")}).to.throw(Error, "EncodingError U+AFE4");
expect(() => {ms932Encoder.encode("\uAFE5")}).to.throw(Error, "EncodingError U+AFE5");
expect(() => {ms932Encoder.encode("\uAFE6")}).to.throw(Error, "EncodingError U+AFE6");
expect(() => {ms932Encoder.encode("\uAFE7")}).to.throw(Error, "EncodingError U+AFE7");
expect(() => {ms932Encoder.encode("\uAFE8")}).to.throw(Error, "EncodingError U+AFE8");
expect(() => {ms932Encoder.encode("\uAFE9")}).to.throw(Error, "EncodingError U+AFE9");
expect(() => {ms932Encoder.encode("\uAFEA")}).to.throw(Error, "EncodingError U+AFEA");
expect(() => {ms932Encoder.encode("\uAFEB")}).to.throw(Error, "EncodingError U+AFEB");
expect(() => {ms932Encoder.encode("\uAFEC")}).to.throw(Error, "EncodingError U+AFEC");
expect(() => {ms932Encoder.encode("\uAFED")}).to.throw(Error, "EncodingError U+AFED");
expect(() => {ms932Encoder.encode("\uAFEE")}).to.throw(Error, "EncodingError U+AFEE");
expect(() => {ms932Encoder.encode("\uAFEF")}).to.throw(Error, "EncodingError U+AFEF");
expect(() => {ms932Encoder.encode("\uAFF0")}).to.throw(Error, "EncodingError U+AFF0");
expect(() => {ms932Encoder.encode("\uAFF1")}).to.throw(Error, "EncodingError U+AFF1");
expect(() => {ms932Encoder.encode("\uAFF2")}).to.throw(Error, "EncodingError U+AFF2");
expect(() => {ms932Encoder.encode("\uAFF3")}).to.throw(Error, "EncodingError U+AFF3");
expect(() => {ms932Encoder.encode("\uAFF4")}).to.throw(Error, "EncodingError U+AFF4");
expect(() => {ms932Encoder.encode("\uAFF5")}).to.throw(Error, "EncodingError U+AFF5");
expect(() => {ms932Encoder.encode("\uAFF6")}).to.throw(Error, "EncodingError U+AFF6");
expect(() => {ms932Encoder.encode("\uAFF7")}).to.throw(Error, "EncodingError U+AFF7");
expect(() => {ms932Encoder.encode("\uAFF8")}).to.throw(Error, "EncodingError U+AFF8");
expect(() => {ms932Encoder.encode("\uAFF9")}).to.throw(Error, "EncodingError U+AFF9");
expect(() => {ms932Encoder.encode("\uAFFA")}).to.throw(Error, "EncodingError U+AFFA");
expect(() => {ms932Encoder.encode("\uAFFB")}).to.throw(Error, "EncodingError U+AFFB");
expect(() => {ms932Encoder.encode("\uAFFC")}).to.throw(Error, "EncodingError U+AFFC");
expect(() => {ms932Encoder.encode("\uAFFD")}).to.throw(Error, "EncodingError U+AFFD");
expect(() => {ms932Encoder.encode("\uAFFE")}).to.throw(Error, "EncodingError U+AFFE");
expect(() => {ms932Encoder.encode("\uAFFF")}).to.throw(Error, "EncodingError U+AFFF");

  });

});
