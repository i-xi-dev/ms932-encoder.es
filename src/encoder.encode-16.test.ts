import { expect } from '@esm-bundle/chai';
import { Ms932 } from "./index";

describe("Ms932.Encoder.prototype.encode 16", () => {

  it("encode(string) - U+F000-U+FFFF", () => {
    const ms932Encoder = new Ms932.Encoder({fatal:true});

    let r = true;
expect(() => {ms932Encoder.encode("\uF000")}).to.throw(Error, "EncodingError U+F000");
expect(() => {ms932Encoder.encode("\uF001")}).to.throw(Error, "EncodingError U+F001");
expect(() => {ms932Encoder.encode("\uF002")}).to.throw(Error, "EncodingError U+F002");
expect(() => {ms932Encoder.encode("\uF003")}).to.throw(Error, "EncodingError U+F003");
expect(() => {ms932Encoder.encode("\uF004")}).to.throw(Error, "EncodingError U+F004");
expect(() => {ms932Encoder.encode("\uF005")}).to.throw(Error, "EncodingError U+F005");
expect(() => {ms932Encoder.encode("\uF006")}).to.throw(Error, "EncodingError U+F006");
expect(() => {ms932Encoder.encode("\uF007")}).to.throw(Error, "EncodingError U+F007");
expect(() => {ms932Encoder.encode("\uF008")}).to.throw(Error, "EncodingError U+F008");
expect(() => {ms932Encoder.encode("\uF009")}).to.throw(Error, "EncodingError U+F009");
expect(() => {ms932Encoder.encode("\uF00A")}).to.throw(Error, "EncodingError U+F00A");
expect(() => {ms932Encoder.encode("\uF00B")}).to.throw(Error, "EncodingError U+F00B");
expect(() => {ms932Encoder.encode("\uF00C")}).to.throw(Error, "EncodingError U+F00C");
expect(() => {ms932Encoder.encode("\uF00D")}).to.throw(Error, "EncodingError U+F00D");
expect(() => {ms932Encoder.encode("\uF00E")}).to.throw(Error, "EncodingError U+F00E");
expect(() => {ms932Encoder.encode("\uF00F")}).to.throw(Error, "EncodingError U+F00F");
expect(() => {ms932Encoder.encode("\uF010")}).to.throw(Error, "EncodingError U+F010");
expect(() => {ms932Encoder.encode("\uF011")}).to.throw(Error, "EncodingError U+F011");
expect(() => {ms932Encoder.encode("\uF012")}).to.throw(Error, "EncodingError U+F012");
expect(() => {ms932Encoder.encode("\uF013")}).to.throw(Error, "EncodingError U+F013");
expect(() => {ms932Encoder.encode("\uF014")}).to.throw(Error, "EncodingError U+F014");
expect(() => {ms932Encoder.encode("\uF015")}).to.throw(Error, "EncodingError U+F015");
expect(() => {ms932Encoder.encode("\uF016")}).to.throw(Error, "EncodingError U+F016");
expect(() => {ms932Encoder.encode("\uF017")}).to.throw(Error, "EncodingError U+F017");
expect(() => {ms932Encoder.encode("\uF018")}).to.throw(Error, "EncodingError U+F018");
expect(() => {ms932Encoder.encode("\uF019")}).to.throw(Error, "EncodingError U+F019");
expect(() => {ms932Encoder.encode("\uF01A")}).to.throw(Error, "EncodingError U+F01A");
expect(() => {ms932Encoder.encode("\uF01B")}).to.throw(Error, "EncodingError U+F01B");
expect(() => {ms932Encoder.encode("\uF01C")}).to.throw(Error, "EncodingError U+F01C");
expect(() => {ms932Encoder.encode("\uF01D")}).to.throw(Error, "EncodingError U+F01D");
expect(() => {ms932Encoder.encode("\uF01E")}).to.throw(Error, "EncodingError U+F01E");
expect(() => {ms932Encoder.encode("\uF01F")}).to.throw(Error, "EncodingError U+F01F");
expect(() => {ms932Encoder.encode("\uF020")}).to.throw(Error, "EncodingError U+F020");
expect(() => {ms932Encoder.encode("\uF021")}).to.throw(Error, "EncodingError U+F021");
expect(() => {ms932Encoder.encode("\uF022")}).to.throw(Error, "EncodingError U+F022");
expect(() => {ms932Encoder.encode("\uF023")}).to.throw(Error, "EncodingError U+F023");
expect(() => {ms932Encoder.encode("\uF024")}).to.throw(Error, "EncodingError U+F024");
expect(() => {ms932Encoder.encode("\uF025")}).to.throw(Error, "EncodingError U+F025");
expect(() => {ms932Encoder.encode("\uF026")}).to.throw(Error, "EncodingError U+F026");
expect(() => {ms932Encoder.encode("\uF027")}).to.throw(Error, "EncodingError U+F027");
expect(() => {ms932Encoder.encode("\uF028")}).to.throw(Error, "EncodingError U+F028");
expect(() => {ms932Encoder.encode("\uF029")}).to.throw(Error, "EncodingError U+F029");
expect(() => {ms932Encoder.encode("\uF02A")}).to.throw(Error, "EncodingError U+F02A");
expect(() => {ms932Encoder.encode("\uF02B")}).to.throw(Error, "EncodingError U+F02B");
expect(() => {ms932Encoder.encode("\uF02C")}).to.throw(Error, "EncodingError U+F02C");
expect(() => {ms932Encoder.encode("\uF02D")}).to.throw(Error, "EncodingError U+F02D");
expect(() => {ms932Encoder.encode("\uF02E")}).to.throw(Error, "EncodingError U+F02E");
expect(() => {ms932Encoder.encode("\uF02F")}).to.throw(Error, "EncodingError U+F02F");
expect(() => {ms932Encoder.encode("\uF030")}).to.throw(Error, "EncodingError U+F030");
expect(() => {ms932Encoder.encode("\uF031")}).to.throw(Error, "EncodingError U+F031");
expect(() => {ms932Encoder.encode("\uF032")}).to.throw(Error, "EncodingError U+F032");
expect(() => {ms932Encoder.encode("\uF033")}).to.throw(Error, "EncodingError U+F033");
expect(() => {ms932Encoder.encode("\uF034")}).to.throw(Error, "EncodingError U+F034");
expect(() => {ms932Encoder.encode("\uF035")}).to.throw(Error, "EncodingError U+F035");
expect(() => {ms932Encoder.encode("\uF036")}).to.throw(Error, "EncodingError U+F036");
expect(() => {ms932Encoder.encode("\uF037")}).to.throw(Error, "EncodingError U+F037");
expect(() => {ms932Encoder.encode("\uF038")}).to.throw(Error, "EncodingError U+F038");
expect(() => {ms932Encoder.encode("\uF039")}).to.throw(Error, "EncodingError U+F039");
expect(() => {ms932Encoder.encode("\uF03A")}).to.throw(Error, "EncodingError U+F03A");
expect(() => {ms932Encoder.encode("\uF03B")}).to.throw(Error, "EncodingError U+F03B");
expect(() => {ms932Encoder.encode("\uF03C")}).to.throw(Error, "EncodingError U+F03C");
expect(() => {ms932Encoder.encode("\uF03D")}).to.throw(Error, "EncodingError U+F03D");
expect(() => {ms932Encoder.encode("\uF03E")}).to.throw(Error, "EncodingError U+F03E");
expect(() => {ms932Encoder.encode("\uF03F")}).to.throw(Error, "EncodingError U+F03F");
expect(() => {ms932Encoder.encode("\uF040")}).to.throw(Error, "EncodingError U+F040");
expect(() => {ms932Encoder.encode("\uF041")}).to.throw(Error, "EncodingError U+F041");
expect(() => {ms932Encoder.encode("\uF042")}).to.throw(Error, "EncodingError U+F042");
expect(() => {ms932Encoder.encode("\uF043")}).to.throw(Error, "EncodingError U+F043");
expect(() => {ms932Encoder.encode("\uF044")}).to.throw(Error, "EncodingError U+F044");
expect(() => {ms932Encoder.encode("\uF045")}).to.throw(Error, "EncodingError U+F045");
expect(() => {ms932Encoder.encode("\uF046")}).to.throw(Error, "EncodingError U+F046");
expect(() => {ms932Encoder.encode("\uF047")}).to.throw(Error, "EncodingError U+F047");
expect(() => {ms932Encoder.encode("\uF048")}).to.throw(Error, "EncodingError U+F048");
expect(() => {ms932Encoder.encode("\uF049")}).to.throw(Error, "EncodingError U+F049");
expect(() => {ms932Encoder.encode("\uF04A")}).to.throw(Error, "EncodingError U+F04A");
expect(() => {ms932Encoder.encode("\uF04B")}).to.throw(Error, "EncodingError U+F04B");
expect(() => {ms932Encoder.encode("\uF04C")}).to.throw(Error, "EncodingError U+F04C");
expect(() => {ms932Encoder.encode("\uF04D")}).to.throw(Error, "EncodingError U+F04D");
expect(() => {ms932Encoder.encode("\uF04E")}).to.throw(Error, "EncodingError U+F04E");
expect(() => {ms932Encoder.encode("\uF04F")}).to.throw(Error, "EncodingError U+F04F");
expect(() => {ms932Encoder.encode("\uF050")}).to.throw(Error, "EncodingError U+F050");
expect(() => {ms932Encoder.encode("\uF051")}).to.throw(Error, "EncodingError U+F051");
expect(() => {ms932Encoder.encode("\uF052")}).to.throw(Error, "EncodingError U+F052");
expect(() => {ms932Encoder.encode("\uF053")}).to.throw(Error, "EncodingError U+F053");
expect(() => {ms932Encoder.encode("\uF054")}).to.throw(Error, "EncodingError U+F054");
expect(() => {ms932Encoder.encode("\uF055")}).to.throw(Error, "EncodingError U+F055");
expect(() => {ms932Encoder.encode("\uF056")}).to.throw(Error, "EncodingError U+F056");
expect(() => {ms932Encoder.encode("\uF057")}).to.throw(Error, "EncodingError U+F057");
expect(() => {ms932Encoder.encode("\uF058")}).to.throw(Error, "EncodingError U+F058");
expect(() => {ms932Encoder.encode("\uF059")}).to.throw(Error, "EncodingError U+F059");
expect(() => {ms932Encoder.encode("\uF05A")}).to.throw(Error, "EncodingError U+F05A");
expect(() => {ms932Encoder.encode("\uF05B")}).to.throw(Error, "EncodingError U+F05B");
expect(() => {ms932Encoder.encode("\uF05C")}).to.throw(Error, "EncodingError U+F05C");
expect(() => {ms932Encoder.encode("\uF05D")}).to.throw(Error, "EncodingError U+F05D");
expect(() => {ms932Encoder.encode("\uF05E")}).to.throw(Error, "EncodingError U+F05E");
expect(() => {ms932Encoder.encode("\uF05F")}).to.throw(Error, "EncodingError U+F05F");
expect(() => {ms932Encoder.encode("\uF060")}).to.throw(Error, "EncodingError U+F060");
expect(() => {ms932Encoder.encode("\uF061")}).to.throw(Error, "EncodingError U+F061");
expect(() => {ms932Encoder.encode("\uF062")}).to.throw(Error, "EncodingError U+F062");
expect(() => {ms932Encoder.encode("\uF063")}).to.throw(Error, "EncodingError U+F063");
expect(() => {ms932Encoder.encode("\uF064")}).to.throw(Error, "EncodingError U+F064");
expect(() => {ms932Encoder.encode("\uF065")}).to.throw(Error, "EncodingError U+F065");
expect(() => {ms932Encoder.encode("\uF066")}).to.throw(Error, "EncodingError U+F066");
expect(() => {ms932Encoder.encode("\uF067")}).to.throw(Error, "EncodingError U+F067");
expect(() => {ms932Encoder.encode("\uF068")}).to.throw(Error, "EncodingError U+F068");
expect(() => {ms932Encoder.encode("\uF069")}).to.throw(Error, "EncodingError U+F069");
expect(() => {ms932Encoder.encode("\uF06A")}).to.throw(Error, "EncodingError U+F06A");
expect(() => {ms932Encoder.encode("\uF06B")}).to.throw(Error, "EncodingError U+F06B");
expect(() => {ms932Encoder.encode("\uF06C")}).to.throw(Error, "EncodingError U+F06C");
expect(() => {ms932Encoder.encode("\uF06D")}).to.throw(Error, "EncodingError U+F06D");
expect(() => {ms932Encoder.encode("\uF06E")}).to.throw(Error, "EncodingError U+F06E");
expect(() => {ms932Encoder.encode("\uF06F")}).to.throw(Error, "EncodingError U+F06F");
expect(() => {ms932Encoder.encode("\uF070")}).to.throw(Error, "EncodingError U+F070");
expect(() => {ms932Encoder.encode("\uF071")}).to.throw(Error, "EncodingError U+F071");
expect(() => {ms932Encoder.encode("\uF072")}).to.throw(Error, "EncodingError U+F072");
expect(() => {ms932Encoder.encode("\uF073")}).to.throw(Error, "EncodingError U+F073");
expect(() => {ms932Encoder.encode("\uF074")}).to.throw(Error, "EncodingError U+F074");
expect(() => {ms932Encoder.encode("\uF075")}).to.throw(Error, "EncodingError U+F075");
expect(() => {ms932Encoder.encode("\uF076")}).to.throw(Error, "EncodingError U+F076");
expect(() => {ms932Encoder.encode("\uF077")}).to.throw(Error, "EncodingError U+F077");
expect(() => {ms932Encoder.encode("\uF078")}).to.throw(Error, "EncodingError U+F078");
expect(() => {ms932Encoder.encode("\uF079")}).to.throw(Error, "EncodingError U+F079");
expect(() => {ms932Encoder.encode("\uF07A")}).to.throw(Error, "EncodingError U+F07A");
expect(() => {ms932Encoder.encode("\uF07B")}).to.throw(Error, "EncodingError U+F07B");
expect(() => {ms932Encoder.encode("\uF07C")}).to.throw(Error, "EncodingError U+F07C");
expect(() => {ms932Encoder.encode("\uF07D")}).to.throw(Error, "EncodingError U+F07D");
expect(() => {ms932Encoder.encode("\uF07E")}).to.throw(Error, "EncodingError U+F07E");
expect(() => {ms932Encoder.encode("\uF07F")}).to.throw(Error, "EncodingError U+F07F");
expect(() => {ms932Encoder.encode("\uF080")}).to.throw(Error, "EncodingError U+F080");
expect(() => {ms932Encoder.encode("\uF081")}).to.throw(Error, "EncodingError U+F081");
expect(() => {ms932Encoder.encode("\uF082")}).to.throw(Error, "EncodingError U+F082");
expect(() => {ms932Encoder.encode("\uF083")}).to.throw(Error, "EncodingError U+F083");
expect(() => {ms932Encoder.encode("\uF084")}).to.throw(Error, "EncodingError U+F084");
expect(() => {ms932Encoder.encode("\uF085")}).to.throw(Error, "EncodingError U+F085");
expect(() => {ms932Encoder.encode("\uF086")}).to.throw(Error, "EncodingError U+F086");
expect(() => {ms932Encoder.encode("\uF087")}).to.throw(Error, "EncodingError U+F087");
expect(() => {ms932Encoder.encode("\uF088")}).to.throw(Error, "EncodingError U+F088");
expect(() => {ms932Encoder.encode("\uF089")}).to.throw(Error, "EncodingError U+F089");
expect(() => {ms932Encoder.encode("\uF08A")}).to.throw(Error, "EncodingError U+F08A");
expect(() => {ms932Encoder.encode("\uF08B")}).to.throw(Error, "EncodingError U+F08B");
expect(() => {ms932Encoder.encode("\uF08C")}).to.throw(Error, "EncodingError U+F08C");
expect(() => {ms932Encoder.encode("\uF08D")}).to.throw(Error, "EncodingError U+F08D");
expect(() => {ms932Encoder.encode("\uF08E")}).to.throw(Error, "EncodingError U+F08E");
expect(() => {ms932Encoder.encode("\uF08F")}).to.throw(Error, "EncodingError U+F08F");
expect(() => {ms932Encoder.encode("\uF090")}).to.throw(Error, "EncodingError U+F090");
expect(() => {ms932Encoder.encode("\uF091")}).to.throw(Error, "EncodingError U+F091");
expect(() => {ms932Encoder.encode("\uF092")}).to.throw(Error, "EncodingError U+F092");
expect(() => {ms932Encoder.encode("\uF093")}).to.throw(Error, "EncodingError U+F093");
expect(() => {ms932Encoder.encode("\uF094")}).to.throw(Error, "EncodingError U+F094");
expect(() => {ms932Encoder.encode("\uF095")}).to.throw(Error, "EncodingError U+F095");
expect(() => {ms932Encoder.encode("\uF096")}).to.throw(Error, "EncodingError U+F096");
expect(() => {ms932Encoder.encode("\uF097")}).to.throw(Error, "EncodingError U+F097");
expect(() => {ms932Encoder.encode("\uF098")}).to.throw(Error, "EncodingError U+F098");
expect(() => {ms932Encoder.encode("\uF099")}).to.throw(Error, "EncodingError U+F099");
expect(() => {ms932Encoder.encode("\uF09A")}).to.throw(Error, "EncodingError U+F09A");
expect(() => {ms932Encoder.encode("\uF09B")}).to.throw(Error, "EncodingError U+F09B");
expect(() => {ms932Encoder.encode("\uF09C")}).to.throw(Error, "EncodingError U+F09C");
expect(() => {ms932Encoder.encode("\uF09D")}).to.throw(Error, "EncodingError U+F09D");
expect(() => {ms932Encoder.encode("\uF09E")}).to.throw(Error, "EncodingError U+F09E");
expect(() => {ms932Encoder.encode("\uF09F")}).to.throw(Error, "EncodingError U+F09F");
expect(() => {ms932Encoder.encode("\uF0A0")}).to.throw(Error, "EncodingError U+F0A0");
expect(() => {ms932Encoder.encode("\uF0A1")}).to.throw(Error, "EncodingError U+F0A1");
expect(() => {ms932Encoder.encode("\uF0A2")}).to.throw(Error, "EncodingError U+F0A2");
expect(() => {ms932Encoder.encode("\uF0A3")}).to.throw(Error, "EncodingError U+F0A3");
expect(() => {ms932Encoder.encode("\uF0A4")}).to.throw(Error, "EncodingError U+F0A4");
expect(() => {ms932Encoder.encode("\uF0A5")}).to.throw(Error, "EncodingError U+F0A5");
expect(() => {ms932Encoder.encode("\uF0A6")}).to.throw(Error, "EncodingError U+F0A6");
expect(() => {ms932Encoder.encode("\uF0A7")}).to.throw(Error, "EncodingError U+F0A7");
expect(() => {ms932Encoder.encode("\uF0A8")}).to.throw(Error, "EncodingError U+F0A8");
expect(() => {ms932Encoder.encode("\uF0A9")}).to.throw(Error, "EncodingError U+F0A9");
expect(() => {ms932Encoder.encode("\uF0AA")}).to.throw(Error, "EncodingError U+F0AA");
expect(() => {ms932Encoder.encode("\uF0AB")}).to.throw(Error, "EncodingError U+F0AB");
expect(() => {ms932Encoder.encode("\uF0AC")}).to.throw(Error, "EncodingError U+F0AC");
expect(() => {ms932Encoder.encode("\uF0AD")}).to.throw(Error, "EncodingError U+F0AD");
expect(() => {ms932Encoder.encode("\uF0AE")}).to.throw(Error, "EncodingError U+F0AE");
expect(() => {ms932Encoder.encode("\uF0AF")}).to.throw(Error, "EncodingError U+F0AF");
expect(() => {ms932Encoder.encode("\uF0B0")}).to.throw(Error, "EncodingError U+F0B0");
expect(() => {ms932Encoder.encode("\uF0B1")}).to.throw(Error, "EncodingError U+F0B1");
expect(() => {ms932Encoder.encode("\uF0B2")}).to.throw(Error, "EncodingError U+F0B2");
expect(() => {ms932Encoder.encode("\uF0B3")}).to.throw(Error, "EncodingError U+F0B3");
expect(() => {ms932Encoder.encode("\uF0B4")}).to.throw(Error, "EncodingError U+F0B4");
expect(() => {ms932Encoder.encode("\uF0B5")}).to.throw(Error, "EncodingError U+F0B5");
expect(() => {ms932Encoder.encode("\uF0B6")}).to.throw(Error, "EncodingError U+F0B6");
expect(() => {ms932Encoder.encode("\uF0B7")}).to.throw(Error, "EncodingError U+F0B7");
expect(() => {ms932Encoder.encode("\uF0B8")}).to.throw(Error, "EncodingError U+F0B8");
expect(() => {ms932Encoder.encode("\uF0B9")}).to.throw(Error, "EncodingError U+F0B9");
expect(() => {ms932Encoder.encode("\uF0BA")}).to.throw(Error, "EncodingError U+F0BA");
expect(() => {ms932Encoder.encode("\uF0BB")}).to.throw(Error, "EncodingError U+F0BB");
expect(() => {ms932Encoder.encode("\uF0BC")}).to.throw(Error, "EncodingError U+F0BC");
expect(() => {ms932Encoder.encode("\uF0BD")}).to.throw(Error, "EncodingError U+F0BD");
expect(() => {ms932Encoder.encode("\uF0BE")}).to.throw(Error, "EncodingError U+F0BE");
expect(() => {ms932Encoder.encode("\uF0BF")}).to.throw(Error, "EncodingError U+F0BF");
expect(() => {ms932Encoder.encode("\uF0C0")}).to.throw(Error, "EncodingError U+F0C0");
expect(() => {ms932Encoder.encode("\uF0C1")}).to.throw(Error, "EncodingError U+F0C1");
expect(() => {ms932Encoder.encode("\uF0C2")}).to.throw(Error, "EncodingError U+F0C2");
expect(() => {ms932Encoder.encode("\uF0C3")}).to.throw(Error, "EncodingError U+F0C3");
expect(() => {ms932Encoder.encode("\uF0C4")}).to.throw(Error, "EncodingError U+F0C4");
expect(() => {ms932Encoder.encode("\uF0C5")}).to.throw(Error, "EncodingError U+F0C5");
expect(() => {ms932Encoder.encode("\uF0C6")}).to.throw(Error, "EncodingError U+F0C6");
expect(() => {ms932Encoder.encode("\uF0C7")}).to.throw(Error, "EncodingError U+F0C7");
expect(() => {ms932Encoder.encode("\uF0C8")}).to.throw(Error, "EncodingError U+F0C8");
expect(() => {ms932Encoder.encode("\uF0C9")}).to.throw(Error, "EncodingError U+F0C9");
expect(() => {ms932Encoder.encode("\uF0CA")}).to.throw(Error, "EncodingError U+F0CA");
expect(() => {ms932Encoder.encode("\uF0CB")}).to.throw(Error, "EncodingError U+F0CB");
expect(() => {ms932Encoder.encode("\uF0CC")}).to.throw(Error, "EncodingError U+F0CC");
expect(() => {ms932Encoder.encode("\uF0CD")}).to.throw(Error, "EncodingError U+F0CD");
expect(() => {ms932Encoder.encode("\uF0CE")}).to.throw(Error, "EncodingError U+F0CE");
expect(() => {ms932Encoder.encode("\uF0CF")}).to.throw(Error, "EncodingError U+F0CF");
expect(() => {ms932Encoder.encode("\uF0D0")}).to.throw(Error, "EncodingError U+F0D0");
expect(() => {ms932Encoder.encode("\uF0D1")}).to.throw(Error, "EncodingError U+F0D1");
expect(() => {ms932Encoder.encode("\uF0D2")}).to.throw(Error, "EncodingError U+F0D2");
expect(() => {ms932Encoder.encode("\uF0D3")}).to.throw(Error, "EncodingError U+F0D3");
expect(() => {ms932Encoder.encode("\uF0D4")}).to.throw(Error, "EncodingError U+F0D4");
expect(() => {ms932Encoder.encode("\uF0D5")}).to.throw(Error, "EncodingError U+F0D5");
expect(() => {ms932Encoder.encode("\uF0D6")}).to.throw(Error, "EncodingError U+F0D6");
expect(() => {ms932Encoder.encode("\uF0D7")}).to.throw(Error, "EncodingError U+F0D7");
expect(() => {ms932Encoder.encode("\uF0D8")}).to.throw(Error, "EncodingError U+F0D8");
expect(() => {ms932Encoder.encode("\uF0D9")}).to.throw(Error, "EncodingError U+F0D9");
expect(() => {ms932Encoder.encode("\uF0DA")}).to.throw(Error, "EncodingError U+F0DA");
expect(() => {ms932Encoder.encode("\uF0DB")}).to.throw(Error, "EncodingError U+F0DB");
expect(() => {ms932Encoder.encode("\uF0DC")}).to.throw(Error, "EncodingError U+F0DC");
expect(() => {ms932Encoder.encode("\uF0DD")}).to.throw(Error, "EncodingError U+F0DD");
expect(() => {ms932Encoder.encode("\uF0DE")}).to.throw(Error, "EncodingError U+F0DE");
expect(() => {ms932Encoder.encode("\uF0DF")}).to.throw(Error, "EncodingError U+F0DF");
expect(() => {ms932Encoder.encode("\uF0E0")}).to.throw(Error, "EncodingError U+F0E0");
expect(() => {ms932Encoder.encode("\uF0E1")}).to.throw(Error, "EncodingError U+F0E1");
expect(() => {ms932Encoder.encode("\uF0E2")}).to.throw(Error, "EncodingError U+F0E2");
expect(() => {ms932Encoder.encode("\uF0E3")}).to.throw(Error, "EncodingError U+F0E3");
expect(() => {ms932Encoder.encode("\uF0E4")}).to.throw(Error, "EncodingError U+F0E4");
expect(() => {ms932Encoder.encode("\uF0E5")}).to.throw(Error, "EncodingError U+F0E5");
expect(() => {ms932Encoder.encode("\uF0E6")}).to.throw(Error, "EncodingError U+F0E6");
expect(() => {ms932Encoder.encode("\uF0E7")}).to.throw(Error, "EncodingError U+F0E7");
expect(() => {ms932Encoder.encode("\uF0E8")}).to.throw(Error, "EncodingError U+F0E8");
expect(() => {ms932Encoder.encode("\uF0E9")}).to.throw(Error, "EncodingError U+F0E9");
expect(() => {ms932Encoder.encode("\uF0EA")}).to.throw(Error, "EncodingError U+F0EA");
expect(() => {ms932Encoder.encode("\uF0EB")}).to.throw(Error, "EncodingError U+F0EB");
expect(() => {ms932Encoder.encode("\uF0EC")}).to.throw(Error, "EncodingError U+F0EC");
expect(() => {ms932Encoder.encode("\uF0ED")}).to.throw(Error, "EncodingError U+F0ED");
expect(() => {ms932Encoder.encode("\uF0EE")}).to.throw(Error, "EncodingError U+F0EE");
expect(() => {ms932Encoder.encode("\uF0EF")}).to.throw(Error, "EncodingError U+F0EF");
expect(() => {ms932Encoder.encode("\uF0F0")}).to.throw(Error, "EncodingError U+F0F0");
expect(() => {ms932Encoder.encode("\uF0F1")}).to.throw(Error, "EncodingError U+F0F1");
expect(() => {ms932Encoder.encode("\uF0F2")}).to.throw(Error, "EncodingError U+F0F2");
expect(() => {ms932Encoder.encode("\uF0F3")}).to.throw(Error, "EncodingError U+F0F3");
expect(() => {ms932Encoder.encode("\uF0F4")}).to.throw(Error, "EncodingError U+F0F4");
expect(() => {ms932Encoder.encode("\uF0F5")}).to.throw(Error, "EncodingError U+F0F5");
expect(() => {ms932Encoder.encode("\uF0F6")}).to.throw(Error, "EncodingError U+F0F6");
expect(() => {ms932Encoder.encode("\uF0F7")}).to.throw(Error, "EncodingError U+F0F7");
expect(() => {ms932Encoder.encode("\uF0F8")}).to.throw(Error, "EncodingError U+F0F8");
expect(() => {ms932Encoder.encode("\uF0F9")}).to.throw(Error, "EncodingError U+F0F9");
expect(() => {ms932Encoder.encode("\uF0FA")}).to.throw(Error, "EncodingError U+F0FA");
expect(() => {ms932Encoder.encode("\uF0FB")}).to.throw(Error, "EncodingError U+F0FB");
expect(() => {ms932Encoder.encode("\uF0FC")}).to.throw(Error, "EncodingError U+F0FC");
expect(() => {ms932Encoder.encode("\uF0FD")}).to.throw(Error, "EncodingError U+F0FD");
expect(() => {ms932Encoder.encode("\uF0FE")}).to.throw(Error, "EncodingError U+F0FE");
expect(() => {ms932Encoder.encode("\uF0FF")}).to.throw(Error, "EncodingError U+F0FF");
expect(() => {ms932Encoder.encode("\uF100")}).to.throw(Error, "EncodingError U+F100");
expect(() => {ms932Encoder.encode("\uF101")}).to.throw(Error, "EncodingError U+F101");
expect(() => {ms932Encoder.encode("\uF102")}).to.throw(Error, "EncodingError U+F102");
expect(() => {ms932Encoder.encode("\uF103")}).to.throw(Error, "EncodingError U+F103");
expect(() => {ms932Encoder.encode("\uF104")}).to.throw(Error, "EncodingError U+F104");
expect(() => {ms932Encoder.encode("\uF105")}).to.throw(Error, "EncodingError U+F105");
expect(() => {ms932Encoder.encode("\uF106")}).to.throw(Error, "EncodingError U+F106");
expect(() => {ms932Encoder.encode("\uF107")}).to.throw(Error, "EncodingError U+F107");
expect(() => {ms932Encoder.encode("\uF108")}).to.throw(Error, "EncodingError U+F108");
expect(() => {ms932Encoder.encode("\uF109")}).to.throw(Error, "EncodingError U+F109");
expect(() => {ms932Encoder.encode("\uF10A")}).to.throw(Error, "EncodingError U+F10A");
expect(() => {ms932Encoder.encode("\uF10B")}).to.throw(Error, "EncodingError U+F10B");
expect(() => {ms932Encoder.encode("\uF10C")}).to.throw(Error, "EncodingError U+F10C");
expect(() => {ms932Encoder.encode("\uF10D")}).to.throw(Error, "EncodingError U+F10D");
expect(() => {ms932Encoder.encode("\uF10E")}).to.throw(Error, "EncodingError U+F10E");
expect(() => {ms932Encoder.encode("\uF10F")}).to.throw(Error, "EncodingError U+F10F");
expect(() => {ms932Encoder.encode("\uF110")}).to.throw(Error, "EncodingError U+F110");
expect(() => {ms932Encoder.encode("\uF111")}).to.throw(Error, "EncodingError U+F111");
expect(() => {ms932Encoder.encode("\uF112")}).to.throw(Error, "EncodingError U+F112");
expect(() => {ms932Encoder.encode("\uF113")}).to.throw(Error, "EncodingError U+F113");
expect(() => {ms932Encoder.encode("\uF114")}).to.throw(Error, "EncodingError U+F114");
expect(() => {ms932Encoder.encode("\uF115")}).to.throw(Error, "EncodingError U+F115");
expect(() => {ms932Encoder.encode("\uF116")}).to.throw(Error, "EncodingError U+F116");
expect(() => {ms932Encoder.encode("\uF117")}).to.throw(Error, "EncodingError U+F117");
expect(() => {ms932Encoder.encode("\uF118")}).to.throw(Error, "EncodingError U+F118");
expect(() => {ms932Encoder.encode("\uF119")}).to.throw(Error, "EncodingError U+F119");
expect(() => {ms932Encoder.encode("\uF11A")}).to.throw(Error, "EncodingError U+F11A");
expect(() => {ms932Encoder.encode("\uF11B")}).to.throw(Error, "EncodingError U+F11B");
expect(() => {ms932Encoder.encode("\uF11C")}).to.throw(Error, "EncodingError U+F11C");
expect(() => {ms932Encoder.encode("\uF11D")}).to.throw(Error, "EncodingError U+F11D");
expect(() => {ms932Encoder.encode("\uF11E")}).to.throw(Error, "EncodingError U+F11E");
expect(() => {ms932Encoder.encode("\uF11F")}).to.throw(Error, "EncodingError U+F11F");
expect(() => {ms932Encoder.encode("\uF120")}).to.throw(Error, "EncodingError U+F120");
expect(() => {ms932Encoder.encode("\uF121")}).to.throw(Error, "EncodingError U+F121");
expect(() => {ms932Encoder.encode("\uF122")}).to.throw(Error, "EncodingError U+F122");
expect(() => {ms932Encoder.encode("\uF123")}).to.throw(Error, "EncodingError U+F123");
expect(() => {ms932Encoder.encode("\uF124")}).to.throw(Error, "EncodingError U+F124");
expect(() => {ms932Encoder.encode("\uF125")}).to.throw(Error, "EncodingError U+F125");
expect(() => {ms932Encoder.encode("\uF126")}).to.throw(Error, "EncodingError U+F126");
expect(() => {ms932Encoder.encode("\uF127")}).to.throw(Error, "EncodingError U+F127");
expect(() => {ms932Encoder.encode("\uF128")}).to.throw(Error, "EncodingError U+F128");
expect(() => {ms932Encoder.encode("\uF129")}).to.throw(Error, "EncodingError U+F129");
expect(() => {ms932Encoder.encode("\uF12A")}).to.throw(Error, "EncodingError U+F12A");
expect(() => {ms932Encoder.encode("\uF12B")}).to.throw(Error, "EncodingError U+F12B");
expect(() => {ms932Encoder.encode("\uF12C")}).to.throw(Error, "EncodingError U+F12C");
expect(() => {ms932Encoder.encode("\uF12D")}).to.throw(Error, "EncodingError U+F12D");
expect(() => {ms932Encoder.encode("\uF12E")}).to.throw(Error, "EncodingError U+F12E");
expect(() => {ms932Encoder.encode("\uF12F")}).to.throw(Error, "EncodingError U+F12F");
expect(() => {ms932Encoder.encode("\uF130")}).to.throw(Error, "EncodingError U+F130");
expect(() => {ms932Encoder.encode("\uF131")}).to.throw(Error, "EncodingError U+F131");
expect(() => {ms932Encoder.encode("\uF132")}).to.throw(Error, "EncodingError U+F132");
expect(() => {ms932Encoder.encode("\uF133")}).to.throw(Error, "EncodingError U+F133");
expect(() => {ms932Encoder.encode("\uF134")}).to.throw(Error, "EncodingError U+F134");
expect(() => {ms932Encoder.encode("\uF135")}).to.throw(Error, "EncodingError U+F135");
expect(() => {ms932Encoder.encode("\uF136")}).to.throw(Error, "EncodingError U+F136");
expect(() => {ms932Encoder.encode("\uF137")}).to.throw(Error, "EncodingError U+F137");
expect(() => {ms932Encoder.encode("\uF138")}).to.throw(Error, "EncodingError U+F138");
expect(() => {ms932Encoder.encode("\uF139")}).to.throw(Error, "EncodingError U+F139");
expect(() => {ms932Encoder.encode("\uF13A")}).to.throw(Error, "EncodingError U+F13A");
expect(() => {ms932Encoder.encode("\uF13B")}).to.throw(Error, "EncodingError U+F13B");
expect(() => {ms932Encoder.encode("\uF13C")}).to.throw(Error, "EncodingError U+F13C");
expect(() => {ms932Encoder.encode("\uF13D")}).to.throw(Error, "EncodingError U+F13D");
expect(() => {ms932Encoder.encode("\uF13E")}).to.throw(Error, "EncodingError U+F13E");
expect(() => {ms932Encoder.encode("\uF13F")}).to.throw(Error, "EncodingError U+F13F");
expect(() => {ms932Encoder.encode("\uF140")}).to.throw(Error, "EncodingError U+F140");
expect(() => {ms932Encoder.encode("\uF141")}).to.throw(Error, "EncodingError U+F141");
expect(() => {ms932Encoder.encode("\uF142")}).to.throw(Error, "EncodingError U+F142");
expect(() => {ms932Encoder.encode("\uF143")}).to.throw(Error, "EncodingError U+F143");
expect(() => {ms932Encoder.encode("\uF144")}).to.throw(Error, "EncodingError U+F144");
expect(() => {ms932Encoder.encode("\uF145")}).to.throw(Error, "EncodingError U+F145");
expect(() => {ms932Encoder.encode("\uF146")}).to.throw(Error, "EncodingError U+F146");
expect(() => {ms932Encoder.encode("\uF147")}).to.throw(Error, "EncodingError U+F147");
expect(() => {ms932Encoder.encode("\uF148")}).to.throw(Error, "EncodingError U+F148");
expect(() => {ms932Encoder.encode("\uF149")}).to.throw(Error, "EncodingError U+F149");
expect(() => {ms932Encoder.encode("\uF14A")}).to.throw(Error, "EncodingError U+F14A");
expect(() => {ms932Encoder.encode("\uF14B")}).to.throw(Error, "EncodingError U+F14B");
expect(() => {ms932Encoder.encode("\uF14C")}).to.throw(Error, "EncodingError U+F14C");
expect(() => {ms932Encoder.encode("\uF14D")}).to.throw(Error, "EncodingError U+F14D");
expect(() => {ms932Encoder.encode("\uF14E")}).to.throw(Error, "EncodingError U+F14E");
expect(() => {ms932Encoder.encode("\uF14F")}).to.throw(Error, "EncodingError U+F14F");
expect(() => {ms932Encoder.encode("\uF150")}).to.throw(Error, "EncodingError U+F150");
expect(() => {ms932Encoder.encode("\uF151")}).to.throw(Error, "EncodingError U+F151");
expect(() => {ms932Encoder.encode("\uF152")}).to.throw(Error, "EncodingError U+F152");
expect(() => {ms932Encoder.encode("\uF153")}).to.throw(Error, "EncodingError U+F153");
expect(() => {ms932Encoder.encode("\uF154")}).to.throw(Error, "EncodingError U+F154");
expect(() => {ms932Encoder.encode("\uF155")}).to.throw(Error, "EncodingError U+F155");
expect(() => {ms932Encoder.encode("\uF156")}).to.throw(Error, "EncodingError U+F156");
expect(() => {ms932Encoder.encode("\uF157")}).to.throw(Error, "EncodingError U+F157");
expect(() => {ms932Encoder.encode("\uF158")}).to.throw(Error, "EncodingError U+F158");
expect(() => {ms932Encoder.encode("\uF159")}).to.throw(Error, "EncodingError U+F159");
expect(() => {ms932Encoder.encode("\uF15A")}).to.throw(Error, "EncodingError U+F15A");
expect(() => {ms932Encoder.encode("\uF15B")}).to.throw(Error, "EncodingError U+F15B");
expect(() => {ms932Encoder.encode("\uF15C")}).to.throw(Error, "EncodingError U+F15C");
expect(() => {ms932Encoder.encode("\uF15D")}).to.throw(Error, "EncodingError U+F15D");
expect(() => {ms932Encoder.encode("\uF15E")}).to.throw(Error, "EncodingError U+F15E");
expect(() => {ms932Encoder.encode("\uF15F")}).to.throw(Error, "EncodingError U+F15F");
expect(() => {ms932Encoder.encode("\uF160")}).to.throw(Error, "EncodingError U+F160");
expect(() => {ms932Encoder.encode("\uF161")}).to.throw(Error, "EncodingError U+F161");
expect(() => {ms932Encoder.encode("\uF162")}).to.throw(Error, "EncodingError U+F162");
expect(() => {ms932Encoder.encode("\uF163")}).to.throw(Error, "EncodingError U+F163");
expect(() => {ms932Encoder.encode("\uF164")}).to.throw(Error, "EncodingError U+F164");
expect(() => {ms932Encoder.encode("\uF165")}).to.throw(Error, "EncodingError U+F165");
expect(() => {ms932Encoder.encode("\uF166")}).to.throw(Error, "EncodingError U+F166");
expect(() => {ms932Encoder.encode("\uF167")}).to.throw(Error, "EncodingError U+F167");
expect(() => {ms932Encoder.encode("\uF168")}).to.throw(Error, "EncodingError U+F168");
expect(() => {ms932Encoder.encode("\uF169")}).to.throw(Error, "EncodingError U+F169");
expect(() => {ms932Encoder.encode("\uF16A")}).to.throw(Error, "EncodingError U+F16A");
expect(() => {ms932Encoder.encode("\uF16B")}).to.throw(Error, "EncodingError U+F16B");
expect(() => {ms932Encoder.encode("\uF16C")}).to.throw(Error, "EncodingError U+F16C");
expect(() => {ms932Encoder.encode("\uF16D")}).to.throw(Error, "EncodingError U+F16D");
expect(() => {ms932Encoder.encode("\uF16E")}).to.throw(Error, "EncodingError U+F16E");
expect(() => {ms932Encoder.encode("\uF16F")}).to.throw(Error, "EncodingError U+F16F");
expect(() => {ms932Encoder.encode("\uF170")}).to.throw(Error, "EncodingError U+F170");
expect(() => {ms932Encoder.encode("\uF171")}).to.throw(Error, "EncodingError U+F171");
expect(() => {ms932Encoder.encode("\uF172")}).to.throw(Error, "EncodingError U+F172");
expect(() => {ms932Encoder.encode("\uF173")}).to.throw(Error, "EncodingError U+F173");
expect(() => {ms932Encoder.encode("\uF174")}).to.throw(Error, "EncodingError U+F174");
expect(() => {ms932Encoder.encode("\uF175")}).to.throw(Error, "EncodingError U+F175");
expect(() => {ms932Encoder.encode("\uF176")}).to.throw(Error, "EncodingError U+F176");
expect(() => {ms932Encoder.encode("\uF177")}).to.throw(Error, "EncodingError U+F177");
expect(() => {ms932Encoder.encode("\uF178")}).to.throw(Error, "EncodingError U+F178");
expect(() => {ms932Encoder.encode("\uF179")}).to.throw(Error, "EncodingError U+F179");
expect(() => {ms932Encoder.encode("\uF17A")}).to.throw(Error, "EncodingError U+F17A");
expect(() => {ms932Encoder.encode("\uF17B")}).to.throw(Error, "EncodingError U+F17B");
expect(() => {ms932Encoder.encode("\uF17C")}).to.throw(Error, "EncodingError U+F17C");
expect(() => {ms932Encoder.encode("\uF17D")}).to.throw(Error, "EncodingError U+F17D");
expect(() => {ms932Encoder.encode("\uF17E")}).to.throw(Error, "EncodingError U+F17E");
expect(() => {ms932Encoder.encode("\uF17F")}).to.throw(Error, "EncodingError U+F17F");
expect(() => {ms932Encoder.encode("\uF180")}).to.throw(Error, "EncodingError U+F180");
expect(() => {ms932Encoder.encode("\uF181")}).to.throw(Error, "EncodingError U+F181");
expect(() => {ms932Encoder.encode("\uF182")}).to.throw(Error, "EncodingError U+F182");
expect(() => {ms932Encoder.encode("\uF183")}).to.throw(Error, "EncodingError U+F183");
expect(() => {ms932Encoder.encode("\uF184")}).to.throw(Error, "EncodingError U+F184");
expect(() => {ms932Encoder.encode("\uF185")}).to.throw(Error, "EncodingError U+F185");
expect(() => {ms932Encoder.encode("\uF186")}).to.throw(Error, "EncodingError U+F186");
expect(() => {ms932Encoder.encode("\uF187")}).to.throw(Error, "EncodingError U+F187");
expect(() => {ms932Encoder.encode("\uF188")}).to.throw(Error, "EncodingError U+F188");
expect(() => {ms932Encoder.encode("\uF189")}).to.throw(Error, "EncodingError U+F189");
expect(() => {ms932Encoder.encode("\uF18A")}).to.throw(Error, "EncodingError U+F18A");
expect(() => {ms932Encoder.encode("\uF18B")}).to.throw(Error, "EncodingError U+F18B");
expect(() => {ms932Encoder.encode("\uF18C")}).to.throw(Error, "EncodingError U+F18C");
expect(() => {ms932Encoder.encode("\uF18D")}).to.throw(Error, "EncodingError U+F18D");
expect(() => {ms932Encoder.encode("\uF18E")}).to.throw(Error, "EncodingError U+F18E");
expect(() => {ms932Encoder.encode("\uF18F")}).to.throw(Error, "EncodingError U+F18F");
expect(() => {ms932Encoder.encode("\uF190")}).to.throw(Error, "EncodingError U+F190");
expect(() => {ms932Encoder.encode("\uF191")}).to.throw(Error, "EncodingError U+F191");
expect(() => {ms932Encoder.encode("\uF192")}).to.throw(Error, "EncodingError U+F192");
expect(() => {ms932Encoder.encode("\uF193")}).to.throw(Error, "EncodingError U+F193");
expect(() => {ms932Encoder.encode("\uF194")}).to.throw(Error, "EncodingError U+F194");
expect(() => {ms932Encoder.encode("\uF195")}).to.throw(Error, "EncodingError U+F195");
expect(() => {ms932Encoder.encode("\uF196")}).to.throw(Error, "EncodingError U+F196");
expect(() => {ms932Encoder.encode("\uF197")}).to.throw(Error, "EncodingError U+F197");
expect(() => {ms932Encoder.encode("\uF198")}).to.throw(Error, "EncodingError U+F198");
expect(() => {ms932Encoder.encode("\uF199")}).to.throw(Error, "EncodingError U+F199");
expect(() => {ms932Encoder.encode("\uF19A")}).to.throw(Error, "EncodingError U+F19A");
expect(() => {ms932Encoder.encode("\uF19B")}).to.throw(Error, "EncodingError U+F19B");
expect(() => {ms932Encoder.encode("\uF19C")}).to.throw(Error, "EncodingError U+F19C");
expect(() => {ms932Encoder.encode("\uF19D")}).to.throw(Error, "EncodingError U+F19D");
expect(() => {ms932Encoder.encode("\uF19E")}).to.throw(Error, "EncodingError U+F19E");
expect(() => {ms932Encoder.encode("\uF19F")}).to.throw(Error, "EncodingError U+F19F");
expect(() => {ms932Encoder.encode("\uF1A0")}).to.throw(Error, "EncodingError U+F1A0");
expect(() => {ms932Encoder.encode("\uF1A1")}).to.throw(Error, "EncodingError U+F1A1");
expect(() => {ms932Encoder.encode("\uF1A2")}).to.throw(Error, "EncodingError U+F1A2");
expect(() => {ms932Encoder.encode("\uF1A3")}).to.throw(Error, "EncodingError U+F1A3");
expect(() => {ms932Encoder.encode("\uF1A4")}).to.throw(Error, "EncodingError U+F1A4");
expect(() => {ms932Encoder.encode("\uF1A5")}).to.throw(Error, "EncodingError U+F1A5");
expect(() => {ms932Encoder.encode("\uF1A6")}).to.throw(Error, "EncodingError U+F1A6");
expect(() => {ms932Encoder.encode("\uF1A7")}).to.throw(Error, "EncodingError U+F1A7");
expect(() => {ms932Encoder.encode("\uF1A8")}).to.throw(Error, "EncodingError U+F1A8");
expect(() => {ms932Encoder.encode("\uF1A9")}).to.throw(Error, "EncodingError U+F1A9");
expect(() => {ms932Encoder.encode("\uF1AA")}).to.throw(Error, "EncodingError U+F1AA");
expect(() => {ms932Encoder.encode("\uF1AB")}).to.throw(Error, "EncodingError U+F1AB");
expect(() => {ms932Encoder.encode("\uF1AC")}).to.throw(Error, "EncodingError U+F1AC");
expect(() => {ms932Encoder.encode("\uF1AD")}).to.throw(Error, "EncodingError U+F1AD");
expect(() => {ms932Encoder.encode("\uF1AE")}).to.throw(Error, "EncodingError U+F1AE");
expect(() => {ms932Encoder.encode("\uF1AF")}).to.throw(Error, "EncodingError U+F1AF");
expect(() => {ms932Encoder.encode("\uF1B0")}).to.throw(Error, "EncodingError U+F1B0");
expect(() => {ms932Encoder.encode("\uF1B1")}).to.throw(Error, "EncodingError U+F1B1");
expect(() => {ms932Encoder.encode("\uF1B2")}).to.throw(Error, "EncodingError U+F1B2");
expect(() => {ms932Encoder.encode("\uF1B3")}).to.throw(Error, "EncodingError U+F1B3");
expect(() => {ms932Encoder.encode("\uF1B4")}).to.throw(Error, "EncodingError U+F1B4");
expect(() => {ms932Encoder.encode("\uF1B5")}).to.throw(Error, "EncodingError U+F1B5");
expect(() => {ms932Encoder.encode("\uF1B6")}).to.throw(Error, "EncodingError U+F1B6");
expect(() => {ms932Encoder.encode("\uF1B7")}).to.throw(Error, "EncodingError U+F1B7");
expect(() => {ms932Encoder.encode("\uF1B8")}).to.throw(Error, "EncodingError U+F1B8");
expect(() => {ms932Encoder.encode("\uF1B9")}).to.throw(Error, "EncodingError U+F1B9");
expect(() => {ms932Encoder.encode("\uF1BA")}).to.throw(Error, "EncodingError U+F1BA");
expect(() => {ms932Encoder.encode("\uF1BB")}).to.throw(Error, "EncodingError U+F1BB");
expect(() => {ms932Encoder.encode("\uF1BC")}).to.throw(Error, "EncodingError U+F1BC");
expect(() => {ms932Encoder.encode("\uF1BD")}).to.throw(Error, "EncodingError U+F1BD");
expect(() => {ms932Encoder.encode("\uF1BE")}).to.throw(Error, "EncodingError U+F1BE");
expect(() => {ms932Encoder.encode("\uF1BF")}).to.throw(Error, "EncodingError U+F1BF");
expect(() => {ms932Encoder.encode("\uF1C0")}).to.throw(Error, "EncodingError U+F1C0");
expect(() => {ms932Encoder.encode("\uF1C1")}).to.throw(Error, "EncodingError U+F1C1");
expect(() => {ms932Encoder.encode("\uF1C2")}).to.throw(Error, "EncodingError U+F1C2");
expect(() => {ms932Encoder.encode("\uF1C3")}).to.throw(Error, "EncodingError U+F1C3");
expect(() => {ms932Encoder.encode("\uF1C4")}).to.throw(Error, "EncodingError U+F1C4");
expect(() => {ms932Encoder.encode("\uF1C5")}).to.throw(Error, "EncodingError U+F1C5");
expect(() => {ms932Encoder.encode("\uF1C6")}).to.throw(Error, "EncodingError U+F1C6");
expect(() => {ms932Encoder.encode("\uF1C7")}).to.throw(Error, "EncodingError U+F1C7");
expect(() => {ms932Encoder.encode("\uF1C8")}).to.throw(Error, "EncodingError U+F1C8");
expect(() => {ms932Encoder.encode("\uF1C9")}).to.throw(Error, "EncodingError U+F1C9");
expect(() => {ms932Encoder.encode("\uF1CA")}).to.throw(Error, "EncodingError U+F1CA");
expect(() => {ms932Encoder.encode("\uF1CB")}).to.throw(Error, "EncodingError U+F1CB");
expect(() => {ms932Encoder.encode("\uF1CC")}).to.throw(Error, "EncodingError U+F1CC");
expect(() => {ms932Encoder.encode("\uF1CD")}).to.throw(Error, "EncodingError U+F1CD");
expect(() => {ms932Encoder.encode("\uF1CE")}).to.throw(Error, "EncodingError U+F1CE");
expect(() => {ms932Encoder.encode("\uF1CF")}).to.throw(Error, "EncodingError U+F1CF");
expect(() => {ms932Encoder.encode("\uF1D0")}).to.throw(Error, "EncodingError U+F1D0");
expect(() => {ms932Encoder.encode("\uF1D1")}).to.throw(Error, "EncodingError U+F1D1");
expect(() => {ms932Encoder.encode("\uF1D2")}).to.throw(Error, "EncodingError U+F1D2");
expect(() => {ms932Encoder.encode("\uF1D3")}).to.throw(Error, "EncodingError U+F1D3");
expect(() => {ms932Encoder.encode("\uF1D4")}).to.throw(Error, "EncodingError U+F1D4");
expect(() => {ms932Encoder.encode("\uF1D5")}).to.throw(Error, "EncodingError U+F1D5");
expect(() => {ms932Encoder.encode("\uF1D6")}).to.throw(Error, "EncodingError U+F1D6");
expect(() => {ms932Encoder.encode("\uF1D7")}).to.throw(Error, "EncodingError U+F1D7");
expect(() => {ms932Encoder.encode("\uF1D8")}).to.throw(Error, "EncodingError U+F1D8");
expect(() => {ms932Encoder.encode("\uF1D9")}).to.throw(Error, "EncodingError U+F1D9");
expect(() => {ms932Encoder.encode("\uF1DA")}).to.throw(Error, "EncodingError U+F1DA");
expect(() => {ms932Encoder.encode("\uF1DB")}).to.throw(Error, "EncodingError U+F1DB");
expect(() => {ms932Encoder.encode("\uF1DC")}).to.throw(Error, "EncodingError U+F1DC");
expect(() => {ms932Encoder.encode("\uF1DD")}).to.throw(Error, "EncodingError U+F1DD");
expect(() => {ms932Encoder.encode("\uF1DE")}).to.throw(Error, "EncodingError U+F1DE");
expect(() => {ms932Encoder.encode("\uF1DF")}).to.throw(Error, "EncodingError U+F1DF");
expect(() => {ms932Encoder.encode("\uF1E0")}).to.throw(Error, "EncodingError U+F1E0");
expect(() => {ms932Encoder.encode("\uF1E1")}).to.throw(Error, "EncodingError U+F1E1");
expect(() => {ms932Encoder.encode("\uF1E2")}).to.throw(Error, "EncodingError U+F1E2");
expect(() => {ms932Encoder.encode("\uF1E3")}).to.throw(Error, "EncodingError U+F1E3");
expect(() => {ms932Encoder.encode("\uF1E4")}).to.throw(Error, "EncodingError U+F1E4");
expect(() => {ms932Encoder.encode("\uF1E5")}).to.throw(Error, "EncodingError U+F1E5");
expect(() => {ms932Encoder.encode("\uF1E6")}).to.throw(Error, "EncodingError U+F1E6");
expect(() => {ms932Encoder.encode("\uF1E7")}).to.throw(Error, "EncodingError U+F1E7");
expect(() => {ms932Encoder.encode("\uF1E8")}).to.throw(Error, "EncodingError U+F1E8");
expect(() => {ms932Encoder.encode("\uF1E9")}).to.throw(Error, "EncodingError U+F1E9");
expect(() => {ms932Encoder.encode("\uF1EA")}).to.throw(Error, "EncodingError U+F1EA");
expect(() => {ms932Encoder.encode("\uF1EB")}).to.throw(Error, "EncodingError U+F1EB");
expect(() => {ms932Encoder.encode("\uF1EC")}).to.throw(Error, "EncodingError U+F1EC");
expect(() => {ms932Encoder.encode("\uF1ED")}).to.throw(Error, "EncodingError U+F1ED");
expect(() => {ms932Encoder.encode("\uF1EE")}).to.throw(Error, "EncodingError U+F1EE");
expect(() => {ms932Encoder.encode("\uF1EF")}).to.throw(Error, "EncodingError U+F1EF");
expect(() => {ms932Encoder.encode("\uF1F0")}).to.throw(Error, "EncodingError U+F1F0");
expect(() => {ms932Encoder.encode("\uF1F1")}).to.throw(Error, "EncodingError U+F1F1");
expect(() => {ms932Encoder.encode("\uF1F2")}).to.throw(Error, "EncodingError U+F1F2");
expect(() => {ms932Encoder.encode("\uF1F3")}).to.throw(Error, "EncodingError U+F1F3");
expect(() => {ms932Encoder.encode("\uF1F4")}).to.throw(Error, "EncodingError U+F1F4");
expect(() => {ms932Encoder.encode("\uF1F5")}).to.throw(Error, "EncodingError U+F1F5");
expect(() => {ms932Encoder.encode("\uF1F6")}).to.throw(Error, "EncodingError U+F1F6");
expect(() => {ms932Encoder.encode("\uF1F7")}).to.throw(Error, "EncodingError U+F1F7");
expect(() => {ms932Encoder.encode("\uF1F8")}).to.throw(Error, "EncodingError U+F1F8");
expect(() => {ms932Encoder.encode("\uF1F9")}).to.throw(Error, "EncodingError U+F1F9");
expect(() => {ms932Encoder.encode("\uF1FA")}).to.throw(Error, "EncodingError U+F1FA");
expect(() => {ms932Encoder.encode("\uF1FB")}).to.throw(Error, "EncodingError U+F1FB");
expect(() => {ms932Encoder.encode("\uF1FC")}).to.throw(Error, "EncodingError U+F1FC");
expect(() => {ms932Encoder.encode("\uF1FD")}).to.throw(Error, "EncodingError U+F1FD");
expect(() => {ms932Encoder.encode("\uF1FE")}).to.throw(Error, "EncodingError U+F1FE");
expect(() => {ms932Encoder.encode("\uF1FF")}).to.throw(Error, "EncodingError U+F1FF");
expect(() => {ms932Encoder.encode("\uF200")}).to.throw(Error, "EncodingError U+F200");
expect(() => {ms932Encoder.encode("\uF201")}).to.throw(Error, "EncodingError U+F201");
expect(() => {ms932Encoder.encode("\uF202")}).to.throw(Error, "EncodingError U+F202");
expect(() => {ms932Encoder.encode("\uF203")}).to.throw(Error, "EncodingError U+F203");
expect(() => {ms932Encoder.encode("\uF204")}).to.throw(Error, "EncodingError U+F204");
expect(() => {ms932Encoder.encode("\uF205")}).to.throw(Error, "EncodingError U+F205");
expect(() => {ms932Encoder.encode("\uF206")}).to.throw(Error, "EncodingError U+F206");
expect(() => {ms932Encoder.encode("\uF207")}).to.throw(Error, "EncodingError U+F207");
expect(() => {ms932Encoder.encode("\uF208")}).to.throw(Error, "EncodingError U+F208");
expect(() => {ms932Encoder.encode("\uF209")}).to.throw(Error, "EncodingError U+F209");
expect(() => {ms932Encoder.encode("\uF20A")}).to.throw(Error, "EncodingError U+F20A");
expect(() => {ms932Encoder.encode("\uF20B")}).to.throw(Error, "EncodingError U+F20B");
expect(() => {ms932Encoder.encode("\uF20C")}).to.throw(Error, "EncodingError U+F20C");
expect(() => {ms932Encoder.encode("\uF20D")}).to.throw(Error, "EncodingError U+F20D");
expect(() => {ms932Encoder.encode("\uF20E")}).to.throw(Error, "EncodingError U+F20E");
expect(() => {ms932Encoder.encode("\uF20F")}).to.throw(Error, "EncodingError U+F20F");
expect(() => {ms932Encoder.encode("\uF210")}).to.throw(Error, "EncodingError U+F210");
expect(() => {ms932Encoder.encode("\uF211")}).to.throw(Error, "EncodingError U+F211");
expect(() => {ms932Encoder.encode("\uF212")}).to.throw(Error, "EncodingError U+F212");
expect(() => {ms932Encoder.encode("\uF213")}).to.throw(Error, "EncodingError U+F213");
expect(() => {ms932Encoder.encode("\uF214")}).to.throw(Error, "EncodingError U+F214");
expect(() => {ms932Encoder.encode("\uF215")}).to.throw(Error, "EncodingError U+F215");
expect(() => {ms932Encoder.encode("\uF216")}).to.throw(Error, "EncodingError U+F216");
expect(() => {ms932Encoder.encode("\uF217")}).to.throw(Error, "EncodingError U+F217");
expect(() => {ms932Encoder.encode("\uF218")}).to.throw(Error, "EncodingError U+F218");
expect(() => {ms932Encoder.encode("\uF219")}).to.throw(Error, "EncodingError U+F219");
expect(() => {ms932Encoder.encode("\uF21A")}).to.throw(Error, "EncodingError U+F21A");
expect(() => {ms932Encoder.encode("\uF21B")}).to.throw(Error, "EncodingError U+F21B");
expect(() => {ms932Encoder.encode("\uF21C")}).to.throw(Error, "EncodingError U+F21C");
expect(() => {ms932Encoder.encode("\uF21D")}).to.throw(Error, "EncodingError U+F21D");
expect(() => {ms932Encoder.encode("\uF21E")}).to.throw(Error, "EncodingError U+F21E");
expect(() => {ms932Encoder.encode("\uF21F")}).to.throw(Error, "EncodingError U+F21F");
expect(() => {ms932Encoder.encode("\uF220")}).to.throw(Error, "EncodingError U+F220");
expect(() => {ms932Encoder.encode("\uF221")}).to.throw(Error, "EncodingError U+F221");
expect(() => {ms932Encoder.encode("\uF222")}).to.throw(Error, "EncodingError U+F222");
expect(() => {ms932Encoder.encode("\uF223")}).to.throw(Error, "EncodingError U+F223");
expect(() => {ms932Encoder.encode("\uF224")}).to.throw(Error, "EncodingError U+F224");
expect(() => {ms932Encoder.encode("\uF225")}).to.throw(Error, "EncodingError U+F225");
expect(() => {ms932Encoder.encode("\uF226")}).to.throw(Error, "EncodingError U+F226");
expect(() => {ms932Encoder.encode("\uF227")}).to.throw(Error, "EncodingError U+F227");
expect(() => {ms932Encoder.encode("\uF228")}).to.throw(Error, "EncodingError U+F228");
expect(() => {ms932Encoder.encode("\uF229")}).to.throw(Error, "EncodingError U+F229");
expect(() => {ms932Encoder.encode("\uF22A")}).to.throw(Error, "EncodingError U+F22A");
expect(() => {ms932Encoder.encode("\uF22B")}).to.throw(Error, "EncodingError U+F22B");
expect(() => {ms932Encoder.encode("\uF22C")}).to.throw(Error, "EncodingError U+F22C");
expect(() => {ms932Encoder.encode("\uF22D")}).to.throw(Error, "EncodingError U+F22D");
expect(() => {ms932Encoder.encode("\uF22E")}).to.throw(Error, "EncodingError U+F22E");
expect(() => {ms932Encoder.encode("\uF22F")}).to.throw(Error, "EncodingError U+F22F");
expect(() => {ms932Encoder.encode("\uF230")}).to.throw(Error, "EncodingError U+F230");
expect(() => {ms932Encoder.encode("\uF231")}).to.throw(Error, "EncodingError U+F231");
expect(() => {ms932Encoder.encode("\uF232")}).to.throw(Error, "EncodingError U+F232");
expect(() => {ms932Encoder.encode("\uF233")}).to.throw(Error, "EncodingError U+F233");
expect(() => {ms932Encoder.encode("\uF234")}).to.throw(Error, "EncodingError U+F234");
expect(() => {ms932Encoder.encode("\uF235")}).to.throw(Error, "EncodingError U+F235");
expect(() => {ms932Encoder.encode("\uF236")}).to.throw(Error, "EncodingError U+F236");
expect(() => {ms932Encoder.encode("\uF237")}).to.throw(Error, "EncodingError U+F237");
expect(() => {ms932Encoder.encode("\uF238")}).to.throw(Error, "EncodingError U+F238");
expect(() => {ms932Encoder.encode("\uF239")}).to.throw(Error, "EncodingError U+F239");
expect(() => {ms932Encoder.encode("\uF23A")}).to.throw(Error, "EncodingError U+F23A");
expect(() => {ms932Encoder.encode("\uF23B")}).to.throw(Error, "EncodingError U+F23B");
expect(() => {ms932Encoder.encode("\uF23C")}).to.throw(Error, "EncodingError U+F23C");
expect(() => {ms932Encoder.encode("\uF23D")}).to.throw(Error, "EncodingError U+F23D");
expect(() => {ms932Encoder.encode("\uF23E")}).to.throw(Error, "EncodingError U+F23E");
expect(() => {ms932Encoder.encode("\uF23F")}).to.throw(Error, "EncodingError U+F23F");
expect(() => {ms932Encoder.encode("\uF240")}).to.throw(Error, "EncodingError U+F240");
expect(() => {ms932Encoder.encode("\uF241")}).to.throw(Error, "EncodingError U+F241");
expect(() => {ms932Encoder.encode("\uF242")}).to.throw(Error, "EncodingError U+F242");
expect(() => {ms932Encoder.encode("\uF243")}).to.throw(Error, "EncodingError U+F243");
expect(() => {ms932Encoder.encode("\uF244")}).to.throw(Error, "EncodingError U+F244");
expect(() => {ms932Encoder.encode("\uF245")}).to.throw(Error, "EncodingError U+F245");
expect(() => {ms932Encoder.encode("\uF246")}).to.throw(Error, "EncodingError U+F246");
expect(() => {ms932Encoder.encode("\uF247")}).to.throw(Error, "EncodingError U+F247");
expect(() => {ms932Encoder.encode("\uF248")}).to.throw(Error, "EncodingError U+F248");
expect(() => {ms932Encoder.encode("\uF249")}).to.throw(Error, "EncodingError U+F249");
expect(() => {ms932Encoder.encode("\uF24A")}).to.throw(Error, "EncodingError U+F24A");
expect(() => {ms932Encoder.encode("\uF24B")}).to.throw(Error, "EncodingError U+F24B");
expect(() => {ms932Encoder.encode("\uF24C")}).to.throw(Error, "EncodingError U+F24C");
expect(() => {ms932Encoder.encode("\uF24D")}).to.throw(Error, "EncodingError U+F24D");
expect(() => {ms932Encoder.encode("\uF24E")}).to.throw(Error, "EncodingError U+F24E");
expect(() => {ms932Encoder.encode("\uF24F")}).to.throw(Error, "EncodingError U+F24F");
expect(() => {ms932Encoder.encode("\uF250")}).to.throw(Error, "EncodingError U+F250");
expect(() => {ms932Encoder.encode("\uF251")}).to.throw(Error, "EncodingError U+F251");
expect(() => {ms932Encoder.encode("\uF252")}).to.throw(Error, "EncodingError U+F252");
expect(() => {ms932Encoder.encode("\uF253")}).to.throw(Error, "EncodingError U+F253");
expect(() => {ms932Encoder.encode("\uF254")}).to.throw(Error, "EncodingError U+F254");
expect(() => {ms932Encoder.encode("\uF255")}).to.throw(Error, "EncodingError U+F255");
expect(() => {ms932Encoder.encode("\uF256")}).to.throw(Error, "EncodingError U+F256");
expect(() => {ms932Encoder.encode("\uF257")}).to.throw(Error, "EncodingError U+F257");
expect(() => {ms932Encoder.encode("\uF258")}).to.throw(Error, "EncodingError U+F258");
expect(() => {ms932Encoder.encode("\uF259")}).to.throw(Error, "EncodingError U+F259");
expect(() => {ms932Encoder.encode("\uF25A")}).to.throw(Error, "EncodingError U+F25A");
expect(() => {ms932Encoder.encode("\uF25B")}).to.throw(Error, "EncodingError U+F25B");
expect(() => {ms932Encoder.encode("\uF25C")}).to.throw(Error, "EncodingError U+F25C");
expect(() => {ms932Encoder.encode("\uF25D")}).to.throw(Error, "EncodingError U+F25D");
expect(() => {ms932Encoder.encode("\uF25E")}).to.throw(Error, "EncodingError U+F25E");
expect(() => {ms932Encoder.encode("\uF25F")}).to.throw(Error, "EncodingError U+F25F");
expect(() => {ms932Encoder.encode("\uF260")}).to.throw(Error, "EncodingError U+F260");
expect(() => {ms932Encoder.encode("\uF261")}).to.throw(Error, "EncodingError U+F261");
expect(() => {ms932Encoder.encode("\uF262")}).to.throw(Error, "EncodingError U+F262");
expect(() => {ms932Encoder.encode("\uF263")}).to.throw(Error, "EncodingError U+F263");
expect(() => {ms932Encoder.encode("\uF264")}).to.throw(Error, "EncodingError U+F264");
expect(() => {ms932Encoder.encode("\uF265")}).to.throw(Error, "EncodingError U+F265");
expect(() => {ms932Encoder.encode("\uF266")}).to.throw(Error, "EncodingError U+F266");
expect(() => {ms932Encoder.encode("\uF267")}).to.throw(Error, "EncodingError U+F267");
expect(() => {ms932Encoder.encode("\uF268")}).to.throw(Error, "EncodingError U+F268");
expect(() => {ms932Encoder.encode("\uF269")}).to.throw(Error, "EncodingError U+F269");
expect(() => {ms932Encoder.encode("\uF26A")}).to.throw(Error, "EncodingError U+F26A");
expect(() => {ms932Encoder.encode("\uF26B")}).to.throw(Error, "EncodingError U+F26B");
expect(() => {ms932Encoder.encode("\uF26C")}).to.throw(Error, "EncodingError U+F26C");
expect(() => {ms932Encoder.encode("\uF26D")}).to.throw(Error, "EncodingError U+F26D");
expect(() => {ms932Encoder.encode("\uF26E")}).to.throw(Error, "EncodingError U+F26E");
expect(() => {ms932Encoder.encode("\uF26F")}).to.throw(Error, "EncodingError U+F26F");
expect(() => {ms932Encoder.encode("\uF270")}).to.throw(Error, "EncodingError U+F270");
expect(() => {ms932Encoder.encode("\uF271")}).to.throw(Error, "EncodingError U+F271");
expect(() => {ms932Encoder.encode("\uF272")}).to.throw(Error, "EncodingError U+F272");
expect(() => {ms932Encoder.encode("\uF273")}).to.throw(Error, "EncodingError U+F273");
expect(() => {ms932Encoder.encode("\uF274")}).to.throw(Error, "EncodingError U+F274");
expect(() => {ms932Encoder.encode("\uF275")}).to.throw(Error, "EncodingError U+F275");
expect(() => {ms932Encoder.encode("\uF276")}).to.throw(Error, "EncodingError U+F276");
expect(() => {ms932Encoder.encode("\uF277")}).to.throw(Error, "EncodingError U+F277");
expect(() => {ms932Encoder.encode("\uF278")}).to.throw(Error, "EncodingError U+F278");
expect(() => {ms932Encoder.encode("\uF279")}).to.throw(Error, "EncodingError U+F279");
expect(() => {ms932Encoder.encode("\uF27A")}).to.throw(Error, "EncodingError U+F27A");
expect(() => {ms932Encoder.encode("\uF27B")}).to.throw(Error, "EncodingError U+F27B");
expect(() => {ms932Encoder.encode("\uF27C")}).to.throw(Error, "EncodingError U+F27C");
expect(() => {ms932Encoder.encode("\uF27D")}).to.throw(Error, "EncodingError U+F27D");
expect(() => {ms932Encoder.encode("\uF27E")}).to.throw(Error, "EncodingError U+F27E");
expect(() => {ms932Encoder.encode("\uF27F")}).to.throw(Error, "EncodingError U+F27F");
expect(() => {ms932Encoder.encode("\uF280")}).to.throw(Error, "EncodingError U+F280");
expect(() => {ms932Encoder.encode("\uF281")}).to.throw(Error, "EncodingError U+F281");
expect(() => {ms932Encoder.encode("\uF282")}).to.throw(Error, "EncodingError U+F282");
expect(() => {ms932Encoder.encode("\uF283")}).to.throw(Error, "EncodingError U+F283");
expect(() => {ms932Encoder.encode("\uF284")}).to.throw(Error, "EncodingError U+F284");
expect(() => {ms932Encoder.encode("\uF285")}).to.throw(Error, "EncodingError U+F285");
expect(() => {ms932Encoder.encode("\uF286")}).to.throw(Error, "EncodingError U+F286");
expect(() => {ms932Encoder.encode("\uF287")}).to.throw(Error, "EncodingError U+F287");
expect(() => {ms932Encoder.encode("\uF288")}).to.throw(Error, "EncodingError U+F288");
expect(() => {ms932Encoder.encode("\uF289")}).to.throw(Error, "EncodingError U+F289");
expect(() => {ms932Encoder.encode("\uF28A")}).to.throw(Error, "EncodingError U+F28A");
expect(() => {ms932Encoder.encode("\uF28B")}).to.throw(Error, "EncodingError U+F28B");
expect(() => {ms932Encoder.encode("\uF28C")}).to.throw(Error, "EncodingError U+F28C");
expect(() => {ms932Encoder.encode("\uF28D")}).to.throw(Error, "EncodingError U+F28D");
expect(() => {ms932Encoder.encode("\uF28E")}).to.throw(Error, "EncodingError U+F28E");
expect(() => {ms932Encoder.encode("\uF28F")}).to.throw(Error, "EncodingError U+F28F");
expect(() => {ms932Encoder.encode("\uF290")}).to.throw(Error, "EncodingError U+F290");
expect(() => {ms932Encoder.encode("\uF291")}).to.throw(Error, "EncodingError U+F291");
expect(() => {ms932Encoder.encode("\uF292")}).to.throw(Error, "EncodingError U+F292");
expect(() => {ms932Encoder.encode("\uF293")}).to.throw(Error, "EncodingError U+F293");
expect(() => {ms932Encoder.encode("\uF294")}).to.throw(Error, "EncodingError U+F294");
expect(() => {ms932Encoder.encode("\uF295")}).to.throw(Error, "EncodingError U+F295");
expect(() => {ms932Encoder.encode("\uF296")}).to.throw(Error, "EncodingError U+F296");
expect(() => {ms932Encoder.encode("\uF297")}).to.throw(Error, "EncodingError U+F297");
expect(() => {ms932Encoder.encode("\uF298")}).to.throw(Error, "EncodingError U+F298");
expect(() => {ms932Encoder.encode("\uF299")}).to.throw(Error, "EncodingError U+F299");
expect(() => {ms932Encoder.encode("\uF29A")}).to.throw(Error, "EncodingError U+F29A");
expect(() => {ms932Encoder.encode("\uF29B")}).to.throw(Error, "EncodingError U+F29B");
expect(() => {ms932Encoder.encode("\uF29C")}).to.throw(Error, "EncodingError U+F29C");
expect(() => {ms932Encoder.encode("\uF29D")}).to.throw(Error, "EncodingError U+F29D");
expect(() => {ms932Encoder.encode("\uF29E")}).to.throw(Error, "EncodingError U+F29E");
expect(() => {ms932Encoder.encode("\uF29F")}).to.throw(Error, "EncodingError U+F29F");
expect(() => {ms932Encoder.encode("\uF2A0")}).to.throw(Error, "EncodingError U+F2A0");
expect(() => {ms932Encoder.encode("\uF2A1")}).to.throw(Error, "EncodingError U+F2A1");
expect(() => {ms932Encoder.encode("\uF2A2")}).to.throw(Error, "EncodingError U+F2A2");
expect(() => {ms932Encoder.encode("\uF2A3")}).to.throw(Error, "EncodingError U+F2A3");
expect(() => {ms932Encoder.encode("\uF2A4")}).to.throw(Error, "EncodingError U+F2A4");
expect(() => {ms932Encoder.encode("\uF2A5")}).to.throw(Error, "EncodingError U+F2A5");
expect(() => {ms932Encoder.encode("\uF2A6")}).to.throw(Error, "EncodingError U+F2A6");
expect(() => {ms932Encoder.encode("\uF2A7")}).to.throw(Error, "EncodingError U+F2A7");
expect(() => {ms932Encoder.encode("\uF2A8")}).to.throw(Error, "EncodingError U+F2A8");
expect(() => {ms932Encoder.encode("\uF2A9")}).to.throw(Error, "EncodingError U+F2A9");
expect(() => {ms932Encoder.encode("\uF2AA")}).to.throw(Error, "EncodingError U+F2AA");
expect(() => {ms932Encoder.encode("\uF2AB")}).to.throw(Error, "EncodingError U+F2AB");
expect(() => {ms932Encoder.encode("\uF2AC")}).to.throw(Error, "EncodingError U+F2AC");
expect(() => {ms932Encoder.encode("\uF2AD")}).to.throw(Error, "EncodingError U+F2AD");
expect(() => {ms932Encoder.encode("\uF2AE")}).to.throw(Error, "EncodingError U+F2AE");
expect(() => {ms932Encoder.encode("\uF2AF")}).to.throw(Error, "EncodingError U+F2AF");
expect(() => {ms932Encoder.encode("\uF2B0")}).to.throw(Error, "EncodingError U+F2B0");
expect(() => {ms932Encoder.encode("\uF2B1")}).to.throw(Error, "EncodingError U+F2B1");
expect(() => {ms932Encoder.encode("\uF2B2")}).to.throw(Error, "EncodingError U+F2B2");
expect(() => {ms932Encoder.encode("\uF2B3")}).to.throw(Error, "EncodingError U+F2B3");
expect(() => {ms932Encoder.encode("\uF2B4")}).to.throw(Error, "EncodingError U+F2B4");
expect(() => {ms932Encoder.encode("\uF2B5")}).to.throw(Error, "EncodingError U+F2B5");
expect(() => {ms932Encoder.encode("\uF2B6")}).to.throw(Error, "EncodingError U+F2B6");
expect(() => {ms932Encoder.encode("\uF2B7")}).to.throw(Error, "EncodingError U+F2B7");
expect(() => {ms932Encoder.encode("\uF2B8")}).to.throw(Error, "EncodingError U+F2B8");
expect(() => {ms932Encoder.encode("\uF2B9")}).to.throw(Error, "EncodingError U+F2B9");
expect(() => {ms932Encoder.encode("\uF2BA")}).to.throw(Error, "EncodingError U+F2BA");
expect(() => {ms932Encoder.encode("\uF2BB")}).to.throw(Error, "EncodingError U+F2BB");
expect(() => {ms932Encoder.encode("\uF2BC")}).to.throw(Error, "EncodingError U+F2BC");
expect(() => {ms932Encoder.encode("\uF2BD")}).to.throw(Error, "EncodingError U+F2BD");
expect(() => {ms932Encoder.encode("\uF2BE")}).to.throw(Error, "EncodingError U+F2BE");
expect(() => {ms932Encoder.encode("\uF2BF")}).to.throw(Error, "EncodingError U+F2BF");
expect(() => {ms932Encoder.encode("\uF2C0")}).to.throw(Error, "EncodingError U+F2C0");
expect(() => {ms932Encoder.encode("\uF2C1")}).to.throw(Error, "EncodingError U+F2C1");
expect(() => {ms932Encoder.encode("\uF2C2")}).to.throw(Error, "EncodingError U+F2C2");
expect(() => {ms932Encoder.encode("\uF2C3")}).to.throw(Error, "EncodingError U+F2C3");
expect(() => {ms932Encoder.encode("\uF2C4")}).to.throw(Error, "EncodingError U+F2C4");
expect(() => {ms932Encoder.encode("\uF2C5")}).to.throw(Error, "EncodingError U+F2C5");
expect(() => {ms932Encoder.encode("\uF2C6")}).to.throw(Error, "EncodingError U+F2C6");
expect(() => {ms932Encoder.encode("\uF2C7")}).to.throw(Error, "EncodingError U+F2C7");
expect(() => {ms932Encoder.encode("\uF2C8")}).to.throw(Error, "EncodingError U+F2C8");
expect(() => {ms932Encoder.encode("\uF2C9")}).to.throw(Error, "EncodingError U+F2C9");
expect(() => {ms932Encoder.encode("\uF2CA")}).to.throw(Error, "EncodingError U+F2CA");
expect(() => {ms932Encoder.encode("\uF2CB")}).to.throw(Error, "EncodingError U+F2CB");
expect(() => {ms932Encoder.encode("\uF2CC")}).to.throw(Error, "EncodingError U+F2CC");
expect(() => {ms932Encoder.encode("\uF2CD")}).to.throw(Error, "EncodingError U+F2CD");
expect(() => {ms932Encoder.encode("\uF2CE")}).to.throw(Error, "EncodingError U+F2CE");
expect(() => {ms932Encoder.encode("\uF2CF")}).to.throw(Error, "EncodingError U+F2CF");
expect(() => {ms932Encoder.encode("\uF2D0")}).to.throw(Error, "EncodingError U+F2D0");
expect(() => {ms932Encoder.encode("\uF2D1")}).to.throw(Error, "EncodingError U+F2D1");
expect(() => {ms932Encoder.encode("\uF2D2")}).to.throw(Error, "EncodingError U+F2D2");
expect(() => {ms932Encoder.encode("\uF2D3")}).to.throw(Error, "EncodingError U+F2D3");
expect(() => {ms932Encoder.encode("\uF2D4")}).to.throw(Error, "EncodingError U+F2D4");
expect(() => {ms932Encoder.encode("\uF2D5")}).to.throw(Error, "EncodingError U+F2D5");
expect(() => {ms932Encoder.encode("\uF2D6")}).to.throw(Error, "EncodingError U+F2D6");
expect(() => {ms932Encoder.encode("\uF2D7")}).to.throw(Error, "EncodingError U+F2D7");
expect(() => {ms932Encoder.encode("\uF2D8")}).to.throw(Error, "EncodingError U+F2D8");
expect(() => {ms932Encoder.encode("\uF2D9")}).to.throw(Error, "EncodingError U+F2D9");
expect(() => {ms932Encoder.encode("\uF2DA")}).to.throw(Error, "EncodingError U+F2DA");
expect(() => {ms932Encoder.encode("\uF2DB")}).to.throw(Error, "EncodingError U+F2DB");
expect(() => {ms932Encoder.encode("\uF2DC")}).to.throw(Error, "EncodingError U+F2DC");
expect(() => {ms932Encoder.encode("\uF2DD")}).to.throw(Error, "EncodingError U+F2DD");
expect(() => {ms932Encoder.encode("\uF2DE")}).to.throw(Error, "EncodingError U+F2DE");
expect(() => {ms932Encoder.encode("\uF2DF")}).to.throw(Error, "EncodingError U+F2DF");
expect(() => {ms932Encoder.encode("\uF2E0")}).to.throw(Error, "EncodingError U+F2E0");
expect(() => {ms932Encoder.encode("\uF2E1")}).to.throw(Error, "EncodingError U+F2E1");
expect(() => {ms932Encoder.encode("\uF2E2")}).to.throw(Error, "EncodingError U+F2E2");
expect(() => {ms932Encoder.encode("\uF2E3")}).to.throw(Error, "EncodingError U+F2E3");
expect(() => {ms932Encoder.encode("\uF2E4")}).to.throw(Error, "EncodingError U+F2E4");
expect(() => {ms932Encoder.encode("\uF2E5")}).to.throw(Error, "EncodingError U+F2E5");
expect(() => {ms932Encoder.encode("\uF2E6")}).to.throw(Error, "EncodingError U+F2E6");
expect(() => {ms932Encoder.encode("\uF2E7")}).to.throw(Error, "EncodingError U+F2E7");
expect(() => {ms932Encoder.encode("\uF2E8")}).to.throw(Error, "EncodingError U+F2E8");
expect(() => {ms932Encoder.encode("\uF2E9")}).to.throw(Error, "EncodingError U+F2E9");
expect(() => {ms932Encoder.encode("\uF2EA")}).to.throw(Error, "EncodingError U+F2EA");
expect(() => {ms932Encoder.encode("\uF2EB")}).to.throw(Error, "EncodingError U+F2EB");
expect(() => {ms932Encoder.encode("\uF2EC")}).to.throw(Error, "EncodingError U+F2EC");
expect(() => {ms932Encoder.encode("\uF2ED")}).to.throw(Error, "EncodingError U+F2ED");
expect(() => {ms932Encoder.encode("\uF2EE")}).to.throw(Error, "EncodingError U+F2EE");
expect(() => {ms932Encoder.encode("\uF2EF")}).to.throw(Error, "EncodingError U+F2EF");
expect(() => {ms932Encoder.encode("\uF2F0")}).to.throw(Error, "EncodingError U+F2F0");
expect(() => {ms932Encoder.encode("\uF2F1")}).to.throw(Error, "EncodingError U+F2F1");
expect(() => {ms932Encoder.encode("\uF2F2")}).to.throw(Error, "EncodingError U+F2F2");
expect(() => {ms932Encoder.encode("\uF2F3")}).to.throw(Error, "EncodingError U+F2F3");
expect(() => {ms932Encoder.encode("\uF2F4")}).to.throw(Error, "EncodingError U+F2F4");
expect(() => {ms932Encoder.encode("\uF2F5")}).to.throw(Error, "EncodingError U+F2F5");
expect(() => {ms932Encoder.encode("\uF2F6")}).to.throw(Error, "EncodingError U+F2F6");
expect(() => {ms932Encoder.encode("\uF2F7")}).to.throw(Error, "EncodingError U+F2F7");
expect(() => {ms932Encoder.encode("\uF2F8")}).to.throw(Error, "EncodingError U+F2F8");
expect(() => {ms932Encoder.encode("\uF2F9")}).to.throw(Error, "EncodingError U+F2F9");
expect(() => {ms932Encoder.encode("\uF2FA")}).to.throw(Error, "EncodingError U+F2FA");
expect(() => {ms932Encoder.encode("\uF2FB")}).to.throw(Error, "EncodingError U+F2FB");
expect(() => {ms932Encoder.encode("\uF2FC")}).to.throw(Error, "EncodingError U+F2FC");
expect(() => {ms932Encoder.encode("\uF2FD")}).to.throw(Error, "EncodingError U+F2FD");
expect(() => {ms932Encoder.encode("\uF2FE")}).to.throw(Error, "EncodingError U+F2FE");
expect(() => {ms932Encoder.encode("\uF2FF")}).to.throw(Error, "EncodingError U+F2FF");
expect(() => {ms932Encoder.encode("\uF300")}).to.throw(Error, "EncodingError U+F300");
expect(() => {ms932Encoder.encode("\uF301")}).to.throw(Error, "EncodingError U+F301");
expect(() => {ms932Encoder.encode("\uF302")}).to.throw(Error, "EncodingError U+F302");
expect(() => {ms932Encoder.encode("\uF303")}).to.throw(Error, "EncodingError U+F303");
expect(() => {ms932Encoder.encode("\uF304")}).to.throw(Error, "EncodingError U+F304");
expect(() => {ms932Encoder.encode("\uF305")}).to.throw(Error, "EncodingError U+F305");
expect(() => {ms932Encoder.encode("\uF306")}).to.throw(Error, "EncodingError U+F306");
expect(() => {ms932Encoder.encode("\uF307")}).to.throw(Error, "EncodingError U+F307");
expect(() => {ms932Encoder.encode("\uF308")}).to.throw(Error, "EncodingError U+F308");
expect(() => {ms932Encoder.encode("\uF309")}).to.throw(Error, "EncodingError U+F309");
expect(() => {ms932Encoder.encode("\uF30A")}).to.throw(Error, "EncodingError U+F30A");
expect(() => {ms932Encoder.encode("\uF30B")}).to.throw(Error, "EncodingError U+F30B");
expect(() => {ms932Encoder.encode("\uF30C")}).to.throw(Error, "EncodingError U+F30C");
expect(() => {ms932Encoder.encode("\uF30D")}).to.throw(Error, "EncodingError U+F30D");
expect(() => {ms932Encoder.encode("\uF30E")}).to.throw(Error, "EncodingError U+F30E");
expect(() => {ms932Encoder.encode("\uF30F")}).to.throw(Error, "EncodingError U+F30F");
expect(() => {ms932Encoder.encode("\uF310")}).to.throw(Error, "EncodingError U+F310");
expect(() => {ms932Encoder.encode("\uF311")}).to.throw(Error, "EncodingError U+F311");
expect(() => {ms932Encoder.encode("\uF312")}).to.throw(Error, "EncodingError U+F312");
expect(() => {ms932Encoder.encode("\uF313")}).to.throw(Error, "EncodingError U+F313");
expect(() => {ms932Encoder.encode("\uF314")}).to.throw(Error, "EncodingError U+F314");
expect(() => {ms932Encoder.encode("\uF315")}).to.throw(Error, "EncodingError U+F315");
expect(() => {ms932Encoder.encode("\uF316")}).to.throw(Error, "EncodingError U+F316");
expect(() => {ms932Encoder.encode("\uF317")}).to.throw(Error, "EncodingError U+F317");
expect(() => {ms932Encoder.encode("\uF318")}).to.throw(Error, "EncodingError U+F318");
expect(() => {ms932Encoder.encode("\uF319")}).to.throw(Error, "EncodingError U+F319");
expect(() => {ms932Encoder.encode("\uF31A")}).to.throw(Error, "EncodingError U+F31A");
expect(() => {ms932Encoder.encode("\uF31B")}).to.throw(Error, "EncodingError U+F31B");
expect(() => {ms932Encoder.encode("\uF31C")}).to.throw(Error, "EncodingError U+F31C");
expect(() => {ms932Encoder.encode("\uF31D")}).to.throw(Error, "EncodingError U+F31D");
expect(() => {ms932Encoder.encode("\uF31E")}).to.throw(Error, "EncodingError U+F31E");
expect(() => {ms932Encoder.encode("\uF31F")}).to.throw(Error, "EncodingError U+F31F");
expect(() => {ms932Encoder.encode("\uF320")}).to.throw(Error, "EncodingError U+F320");
expect(() => {ms932Encoder.encode("\uF321")}).to.throw(Error, "EncodingError U+F321");
expect(() => {ms932Encoder.encode("\uF322")}).to.throw(Error, "EncodingError U+F322");
expect(() => {ms932Encoder.encode("\uF323")}).to.throw(Error, "EncodingError U+F323");
expect(() => {ms932Encoder.encode("\uF324")}).to.throw(Error, "EncodingError U+F324");
expect(() => {ms932Encoder.encode("\uF325")}).to.throw(Error, "EncodingError U+F325");
expect(() => {ms932Encoder.encode("\uF326")}).to.throw(Error, "EncodingError U+F326");
expect(() => {ms932Encoder.encode("\uF327")}).to.throw(Error, "EncodingError U+F327");
expect(() => {ms932Encoder.encode("\uF328")}).to.throw(Error, "EncodingError U+F328");
expect(() => {ms932Encoder.encode("\uF329")}).to.throw(Error, "EncodingError U+F329");
expect(() => {ms932Encoder.encode("\uF32A")}).to.throw(Error, "EncodingError U+F32A");
expect(() => {ms932Encoder.encode("\uF32B")}).to.throw(Error, "EncodingError U+F32B");
expect(() => {ms932Encoder.encode("\uF32C")}).to.throw(Error, "EncodingError U+F32C");
expect(() => {ms932Encoder.encode("\uF32D")}).to.throw(Error, "EncodingError U+F32D");
expect(() => {ms932Encoder.encode("\uF32E")}).to.throw(Error, "EncodingError U+F32E");
expect(() => {ms932Encoder.encode("\uF32F")}).to.throw(Error, "EncodingError U+F32F");
expect(() => {ms932Encoder.encode("\uF330")}).to.throw(Error, "EncodingError U+F330");
expect(() => {ms932Encoder.encode("\uF331")}).to.throw(Error, "EncodingError U+F331");
expect(() => {ms932Encoder.encode("\uF332")}).to.throw(Error, "EncodingError U+F332");
expect(() => {ms932Encoder.encode("\uF333")}).to.throw(Error, "EncodingError U+F333");
expect(() => {ms932Encoder.encode("\uF334")}).to.throw(Error, "EncodingError U+F334");
expect(() => {ms932Encoder.encode("\uF335")}).to.throw(Error, "EncodingError U+F335");
expect(() => {ms932Encoder.encode("\uF336")}).to.throw(Error, "EncodingError U+F336");
expect(() => {ms932Encoder.encode("\uF337")}).to.throw(Error, "EncodingError U+F337");
expect(() => {ms932Encoder.encode("\uF338")}).to.throw(Error, "EncodingError U+F338");
expect(() => {ms932Encoder.encode("\uF339")}).to.throw(Error, "EncodingError U+F339");
expect(() => {ms932Encoder.encode("\uF33A")}).to.throw(Error, "EncodingError U+F33A");
expect(() => {ms932Encoder.encode("\uF33B")}).to.throw(Error, "EncodingError U+F33B");
expect(() => {ms932Encoder.encode("\uF33C")}).to.throw(Error, "EncodingError U+F33C");
expect(() => {ms932Encoder.encode("\uF33D")}).to.throw(Error, "EncodingError U+F33D");
expect(() => {ms932Encoder.encode("\uF33E")}).to.throw(Error, "EncodingError U+F33E");
expect(() => {ms932Encoder.encode("\uF33F")}).to.throw(Error, "EncodingError U+F33F");
expect(() => {ms932Encoder.encode("\uF340")}).to.throw(Error, "EncodingError U+F340");
expect(() => {ms932Encoder.encode("\uF341")}).to.throw(Error, "EncodingError U+F341");
expect(() => {ms932Encoder.encode("\uF342")}).to.throw(Error, "EncodingError U+F342");
expect(() => {ms932Encoder.encode("\uF343")}).to.throw(Error, "EncodingError U+F343");
expect(() => {ms932Encoder.encode("\uF344")}).to.throw(Error, "EncodingError U+F344");
expect(() => {ms932Encoder.encode("\uF345")}).to.throw(Error, "EncodingError U+F345");
expect(() => {ms932Encoder.encode("\uF346")}).to.throw(Error, "EncodingError U+F346");
expect(() => {ms932Encoder.encode("\uF347")}).to.throw(Error, "EncodingError U+F347");
expect(() => {ms932Encoder.encode("\uF348")}).to.throw(Error, "EncodingError U+F348");
expect(() => {ms932Encoder.encode("\uF349")}).to.throw(Error, "EncodingError U+F349");
expect(() => {ms932Encoder.encode("\uF34A")}).to.throw(Error, "EncodingError U+F34A");
expect(() => {ms932Encoder.encode("\uF34B")}).to.throw(Error, "EncodingError U+F34B");
expect(() => {ms932Encoder.encode("\uF34C")}).to.throw(Error, "EncodingError U+F34C");
expect(() => {ms932Encoder.encode("\uF34D")}).to.throw(Error, "EncodingError U+F34D");
expect(() => {ms932Encoder.encode("\uF34E")}).to.throw(Error, "EncodingError U+F34E");
expect(() => {ms932Encoder.encode("\uF34F")}).to.throw(Error, "EncodingError U+F34F");
expect(() => {ms932Encoder.encode("\uF350")}).to.throw(Error, "EncodingError U+F350");
expect(() => {ms932Encoder.encode("\uF351")}).to.throw(Error, "EncodingError U+F351");
expect(() => {ms932Encoder.encode("\uF352")}).to.throw(Error, "EncodingError U+F352");
expect(() => {ms932Encoder.encode("\uF353")}).to.throw(Error, "EncodingError U+F353");
expect(() => {ms932Encoder.encode("\uF354")}).to.throw(Error, "EncodingError U+F354");
expect(() => {ms932Encoder.encode("\uF355")}).to.throw(Error, "EncodingError U+F355");
expect(() => {ms932Encoder.encode("\uF356")}).to.throw(Error, "EncodingError U+F356");
expect(() => {ms932Encoder.encode("\uF357")}).to.throw(Error, "EncodingError U+F357");
expect(() => {ms932Encoder.encode("\uF358")}).to.throw(Error, "EncodingError U+F358");
expect(() => {ms932Encoder.encode("\uF359")}).to.throw(Error, "EncodingError U+F359");
expect(() => {ms932Encoder.encode("\uF35A")}).to.throw(Error, "EncodingError U+F35A");
expect(() => {ms932Encoder.encode("\uF35B")}).to.throw(Error, "EncodingError U+F35B");
expect(() => {ms932Encoder.encode("\uF35C")}).to.throw(Error, "EncodingError U+F35C");
expect(() => {ms932Encoder.encode("\uF35D")}).to.throw(Error, "EncodingError U+F35D");
expect(() => {ms932Encoder.encode("\uF35E")}).to.throw(Error, "EncodingError U+F35E");
expect(() => {ms932Encoder.encode("\uF35F")}).to.throw(Error, "EncodingError U+F35F");
expect(() => {ms932Encoder.encode("\uF360")}).to.throw(Error, "EncodingError U+F360");
expect(() => {ms932Encoder.encode("\uF361")}).to.throw(Error, "EncodingError U+F361");
expect(() => {ms932Encoder.encode("\uF362")}).to.throw(Error, "EncodingError U+F362");
expect(() => {ms932Encoder.encode("\uF363")}).to.throw(Error, "EncodingError U+F363");
expect(() => {ms932Encoder.encode("\uF364")}).to.throw(Error, "EncodingError U+F364");
expect(() => {ms932Encoder.encode("\uF365")}).to.throw(Error, "EncodingError U+F365");
expect(() => {ms932Encoder.encode("\uF366")}).to.throw(Error, "EncodingError U+F366");
expect(() => {ms932Encoder.encode("\uF367")}).to.throw(Error, "EncodingError U+F367");
expect(() => {ms932Encoder.encode("\uF368")}).to.throw(Error, "EncodingError U+F368");
expect(() => {ms932Encoder.encode("\uF369")}).to.throw(Error, "EncodingError U+F369");
expect(() => {ms932Encoder.encode("\uF36A")}).to.throw(Error, "EncodingError U+F36A");
expect(() => {ms932Encoder.encode("\uF36B")}).to.throw(Error, "EncodingError U+F36B");
expect(() => {ms932Encoder.encode("\uF36C")}).to.throw(Error, "EncodingError U+F36C");
expect(() => {ms932Encoder.encode("\uF36D")}).to.throw(Error, "EncodingError U+F36D");
expect(() => {ms932Encoder.encode("\uF36E")}).to.throw(Error, "EncodingError U+F36E");
expect(() => {ms932Encoder.encode("\uF36F")}).to.throw(Error, "EncodingError U+F36F");
expect(() => {ms932Encoder.encode("\uF370")}).to.throw(Error, "EncodingError U+F370");
expect(() => {ms932Encoder.encode("\uF371")}).to.throw(Error, "EncodingError U+F371");
expect(() => {ms932Encoder.encode("\uF372")}).to.throw(Error, "EncodingError U+F372");
expect(() => {ms932Encoder.encode("\uF373")}).to.throw(Error, "EncodingError U+F373");
expect(() => {ms932Encoder.encode("\uF374")}).to.throw(Error, "EncodingError U+F374");
expect(() => {ms932Encoder.encode("\uF375")}).to.throw(Error, "EncodingError U+F375");
expect(() => {ms932Encoder.encode("\uF376")}).to.throw(Error, "EncodingError U+F376");
expect(() => {ms932Encoder.encode("\uF377")}).to.throw(Error, "EncodingError U+F377");
expect(() => {ms932Encoder.encode("\uF378")}).to.throw(Error, "EncodingError U+F378");
expect(() => {ms932Encoder.encode("\uF379")}).to.throw(Error, "EncodingError U+F379");
expect(() => {ms932Encoder.encode("\uF37A")}).to.throw(Error, "EncodingError U+F37A");
expect(() => {ms932Encoder.encode("\uF37B")}).to.throw(Error, "EncodingError U+F37B");
expect(() => {ms932Encoder.encode("\uF37C")}).to.throw(Error, "EncodingError U+F37C");
expect(() => {ms932Encoder.encode("\uF37D")}).to.throw(Error, "EncodingError U+F37D");
expect(() => {ms932Encoder.encode("\uF37E")}).to.throw(Error, "EncodingError U+F37E");
expect(() => {ms932Encoder.encode("\uF37F")}).to.throw(Error, "EncodingError U+F37F");
expect(() => {ms932Encoder.encode("\uF380")}).to.throw(Error, "EncodingError U+F380");
expect(() => {ms932Encoder.encode("\uF381")}).to.throw(Error, "EncodingError U+F381");
expect(() => {ms932Encoder.encode("\uF382")}).to.throw(Error, "EncodingError U+F382");
expect(() => {ms932Encoder.encode("\uF383")}).to.throw(Error, "EncodingError U+F383");
expect(() => {ms932Encoder.encode("\uF384")}).to.throw(Error, "EncodingError U+F384");
expect(() => {ms932Encoder.encode("\uF385")}).to.throw(Error, "EncodingError U+F385");
expect(() => {ms932Encoder.encode("\uF386")}).to.throw(Error, "EncodingError U+F386");
expect(() => {ms932Encoder.encode("\uF387")}).to.throw(Error, "EncodingError U+F387");
expect(() => {ms932Encoder.encode("\uF388")}).to.throw(Error, "EncodingError U+F388");
expect(() => {ms932Encoder.encode("\uF389")}).to.throw(Error, "EncodingError U+F389");
expect(() => {ms932Encoder.encode("\uF38A")}).to.throw(Error, "EncodingError U+F38A");
expect(() => {ms932Encoder.encode("\uF38B")}).to.throw(Error, "EncodingError U+F38B");
expect(() => {ms932Encoder.encode("\uF38C")}).to.throw(Error, "EncodingError U+F38C");
expect(() => {ms932Encoder.encode("\uF38D")}).to.throw(Error, "EncodingError U+F38D");
expect(() => {ms932Encoder.encode("\uF38E")}).to.throw(Error, "EncodingError U+F38E");
expect(() => {ms932Encoder.encode("\uF38F")}).to.throw(Error, "EncodingError U+F38F");
expect(() => {ms932Encoder.encode("\uF390")}).to.throw(Error, "EncodingError U+F390");
expect(() => {ms932Encoder.encode("\uF391")}).to.throw(Error, "EncodingError U+F391");
expect(() => {ms932Encoder.encode("\uF392")}).to.throw(Error, "EncodingError U+F392");
expect(() => {ms932Encoder.encode("\uF393")}).to.throw(Error, "EncodingError U+F393");
expect(() => {ms932Encoder.encode("\uF394")}).to.throw(Error, "EncodingError U+F394");
expect(() => {ms932Encoder.encode("\uF395")}).to.throw(Error, "EncodingError U+F395");
expect(() => {ms932Encoder.encode("\uF396")}).to.throw(Error, "EncodingError U+F396");
expect(() => {ms932Encoder.encode("\uF397")}).to.throw(Error, "EncodingError U+F397");
expect(() => {ms932Encoder.encode("\uF398")}).to.throw(Error, "EncodingError U+F398");
expect(() => {ms932Encoder.encode("\uF399")}).to.throw(Error, "EncodingError U+F399");
expect(() => {ms932Encoder.encode("\uF39A")}).to.throw(Error, "EncodingError U+F39A");
expect(() => {ms932Encoder.encode("\uF39B")}).to.throw(Error, "EncodingError U+F39B");
expect(() => {ms932Encoder.encode("\uF39C")}).to.throw(Error, "EncodingError U+F39C");
expect(() => {ms932Encoder.encode("\uF39D")}).to.throw(Error, "EncodingError U+F39D");
expect(() => {ms932Encoder.encode("\uF39E")}).to.throw(Error, "EncodingError U+F39E");
expect(() => {ms932Encoder.encode("\uF39F")}).to.throw(Error, "EncodingError U+F39F");
expect(() => {ms932Encoder.encode("\uF3A0")}).to.throw(Error, "EncodingError U+F3A0");
expect(() => {ms932Encoder.encode("\uF3A1")}).to.throw(Error, "EncodingError U+F3A1");
expect(() => {ms932Encoder.encode("\uF3A2")}).to.throw(Error, "EncodingError U+F3A2");
expect(() => {ms932Encoder.encode("\uF3A3")}).to.throw(Error, "EncodingError U+F3A3");
expect(() => {ms932Encoder.encode("\uF3A4")}).to.throw(Error, "EncodingError U+F3A4");
expect(() => {ms932Encoder.encode("\uF3A5")}).to.throw(Error, "EncodingError U+F3A5");
expect(() => {ms932Encoder.encode("\uF3A6")}).to.throw(Error, "EncodingError U+F3A6");
expect(() => {ms932Encoder.encode("\uF3A7")}).to.throw(Error, "EncodingError U+F3A7");
expect(() => {ms932Encoder.encode("\uF3A8")}).to.throw(Error, "EncodingError U+F3A8");
expect(() => {ms932Encoder.encode("\uF3A9")}).to.throw(Error, "EncodingError U+F3A9");
expect(() => {ms932Encoder.encode("\uF3AA")}).to.throw(Error, "EncodingError U+F3AA");
expect(() => {ms932Encoder.encode("\uF3AB")}).to.throw(Error, "EncodingError U+F3AB");
expect(() => {ms932Encoder.encode("\uF3AC")}).to.throw(Error, "EncodingError U+F3AC");
expect(() => {ms932Encoder.encode("\uF3AD")}).to.throw(Error, "EncodingError U+F3AD");
expect(() => {ms932Encoder.encode("\uF3AE")}).to.throw(Error, "EncodingError U+F3AE");
expect(() => {ms932Encoder.encode("\uF3AF")}).to.throw(Error, "EncodingError U+F3AF");
expect(() => {ms932Encoder.encode("\uF3B0")}).to.throw(Error, "EncodingError U+F3B0");
expect(() => {ms932Encoder.encode("\uF3B1")}).to.throw(Error, "EncodingError U+F3B1");
expect(() => {ms932Encoder.encode("\uF3B2")}).to.throw(Error, "EncodingError U+F3B2");
expect(() => {ms932Encoder.encode("\uF3B3")}).to.throw(Error, "EncodingError U+F3B3");
expect(() => {ms932Encoder.encode("\uF3B4")}).to.throw(Error, "EncodingError U+F3B4");
expect(() => {ms932Encoder.encode("\uF3B5")}).to.throw(Error, "EncodingError U+F3B5");
expect(() => {ms932Encoder.encode("\uF3B6")}).to.throw(Error, "EncodingError U+F3B6");
expect(() => {ms932Encoder.encode("\uF3B7")}).to.throw(Error, "EncodingError U+F3B7");
expect(() => {ms932Encoder.encode("\uF3B8")}).to.throw(Error, "EncodingError U+F3B8");
expect(() => {ms932Encoder.encode("\uF3B9")}).to.throw(Error, "EncodingError U+F3B9");
expect(() => {ms932Encoder.encode("\uF3BA")}).to.throw(Error, "EncodingError U+F3BA");
expect(() => {ms932Encoder.encode("\uF3BB")}).to.throw(Error, "EncodingError U+F3BB");
expect(() => {ms932Encoder.encode("\uF3BC")}).to.throw(Error, "EncodingError U+F3BC");
expect(() => {ms932Encoder.encode("\uF3BD")}).to.throw(Error, "EncodingError U+F3BD");
expect(() => {ms932Encoder.encode("\uF3BE")}).to.throw(Error, "EncodingError U+F3BE");
expect(() => {ms932Encoder.encode("\uF3BF")}).to.throw(Error, "EncodingError U+F3BF");
expect(() => {ms932Encoder.encode("\uF3C0")}).to.throw(Error, "EncodingError U+F3C0");
expect(() => {ms932Encoder.encode("\uF3C1")}).to.throw(Error, "EncodingError U+F3C1");
expect(() => {ms932Encoder.encode("\uF3C2")}).to.throw(Error, "EncodingError U+F3C2");
expect(() => {ms932Encoder.encode("\uF3C3")}).to.throw(Error, "EncodingError U+F3C3");
expect(() => {ms932Encoder.encode("\uF3C4")}).to.throw(Error, "EncodingError U+F3C4");
expect(() => {ms932Encoder.encode("\uF3C5")}).to.throw(Error, "EncodingError U+F3C5");
expect(() => {ms932Encoder.encode("\uF3C6")}).to.throw(Error, "EncodingError U+F3C6");
expect(() => {ms932Encoder.encode("\uF3C7")}).to.throw(Error, "EncodingError U+F3C7");
expect(() => {ms932Encoder.encode("\uF3C8")}).to.throw(Error, "EncodingError U+F3C8");
expect(() => {ms932Encoder.encode("\uF3C9")}).to.throw(Error, "EncodingError U+F3C9");
expect(() => {ms932Encoder.encode("\uF3CA")}).to.throw(Error, "EncodingError U+F3CA");
expect(() => {ms932Encoder.encode("\uF3CB")}).to.throw(Error, "EncodingError U+F3CB");
expect(() => {ms932Encoder.encode("\uF3CC")}).to.throw(Error, "EncodingError U+F3CC");
expect(() => {ms932Encoder.encode("\uF3CD")}).to.throw(Error, "EncodingError U+F3CD");
expect(() => {ms932Encoder.encode("\uF3CE")}).to.throw(Error, "EncodingError U+F3CE");
expect(() => {ms932Encoder.encode("\uF3CF")}).to.throw(Error, "EncodingError U+F3CF");
expect(() => {ms932Encoder.encode("\uF3D0")}).to.throw(Error, "EncodingError U+F3D0");
expect(() => {ms932Encoder.encode("\uF3D1")}).to.throw(Error, "EncodingError U+F3D1");
expect(() => {ms932Encoder.encode("\uF3D2")}).to.throw(Error, "EncodingError U+F3D2");
expect(() => {ms932Encoder.encode("\uF3D3")}).to.throw(Error, "EncodingError U+F3D3");
expect(() => {ms932Encoder.encode("\uF3D4")}).to.throw(Error, "EncodingError U+F3D4");
expect(() => {ms932Encoder.encode("\uF3D5")}).to.throw(Error, "EncodingError U+F3D5");
expect(() => {ms932Encoder.encode("\uF3D6")}).to.throw(Error, "EncodingError U+F3D6");
expect(() => {ms932Encoder.encode("\uF3D7")}).to.throw(Error, "EncodingError U+F3D7");
expect(() => {ms932Encoder.encode("\uF3D8")}).to.throw(Error, "EncodingError U+F3D8");
expect(() => {ms932Encoder.encode("\uF3D9")}).to.throw(Error, "EncodingError U+F3D9");
expect(() => {ms932Encoder.encode("\uF3DA")}).to.throw(Error, "EncodingError U+F3DA");
expect(() => {ms932Encoder.encode("\uF3DB")}).to.throw(Error, "EncodingError U+F3DB");
expect(() => {ms932Encoder.encode("\uF3DC")}).to.throw(Error, "EncodingError U+F3DC");
expect(() => {ms932Encoder.encode("\uF3DD")}).to.throw(Error, "EncodingError U+F3DD");
expect(() => {ms932Encoder.encode("\uF3DE")}).to.throw(Error, "EncodingError U+F3DE");
expect(() => {ms932Encoder.encode("\uF3DF")}).to.throw(Error, "EncodingError U+F3DF");
expect(() => {ms932Encoder.encode("\uF3E0")}).to.throw(Error, "EncodingError U+F3E0");
expect(() => {ms932Encoder.encode("\uF3E1")}).to.throw(Error, "EncodingError U+F3E1");
expect(() => {ms932Encoder.encode("\uF3E2")}).to.throw(Error, "EncodingError U+F3E2");
expect(() => {ms932Encoder.encode("\uF3E3")}).to.throw(Error, "EncodingError U+F3E3");
expect(() => {ms932Encoder.encode("\uF3E4")}).to.throw(Error, "EncodingError U+F3E4");
expect(() => {ms932Encoder.encode("\uF3E5")}).to.throw(Error, "EncodingError U+F3E5");
expect(() => {ms932Encoder.encode("\uF3E6")}).to.throw(Error, "EncodingError U+F3E6");
expect(() => {ms932Encoder.encode("\uF3E7")}).to.throw(Error, "EncodingError U+F3E7");
expect(() => {ms932Encoder.encode("\uF3E8")}).to.throw(Error, "EncodingError U+F3E8");
expect(() => {ms932Encoder.encode("\uF3E9")}).to.throw(Error, "EncodingError U+F3E9");
expect(() => {ms932Encoder.encode("\uF3EA")}).to.throw(Error, "EncodingError U+F3EA");
expect(() => {ms932Encoder.encode("\uF3EB")}).to.throw(Error, "EncodingError U+F3EB");
expect(() => {ms932Encoder.encode("\uF3EC")}).to.throw(Error, "EncodingError U+F3EC");
expect(() => {ms932Encoder.encode("\uF3ED")}).to.throw(Error, "EncodingError U+F3ED");
expect(() => {ms932Encoder.encode("\uF3EE")}).to.throw(Error, "EncodingError U+F3EE");
expect(() => {ms932Encoder.encode("\uF3EF")}).to.throw(Error, "EncodingError U+F3EF");
expect(() => {ms932Encoder.encode("\uF3F0")}).to.throw(Error, "EncodingError U+F3F0");
expect(() => {ms932Encoder.encode("\uF3F1")}).to.throw(Error, "EncodingError U+F3F1");
expect(() => {ms932Encoder.encode("\uF3F2")}).to.throw(Error, "EncodingError U+F3F2");
expect(() => {ms932Encoder.encode("\uF3F3")}).to.throw(Error, "EncodingError U+F3F3");
expect(() => {ms932Encoder.encode("\uF3F4")}).to.throw(Error, "EncodingError U+F3F4");
expect(() => {ms932Encoder.encode("\uF3F5")}).to.throw(Error, "EncodingError U+F3F5");
expect(() => {ms932Encoder.encode("\uF3F6")}).to.throw(Error, "EncodingError U+F3F6");
expect(() => {ms932Encoder.encode("\uF3F7")}).to.throw(Error, "EncodingError U+F3F7");
expect(() => {ms932Encoder.encode("\uF3F8")}).to.throw(Error, "EncodingError U+F3F8");
expect(() => {ms932Encoder.encode("\uF3F9")}).to.throw(Error, "EncodingError U+F3F9");
expect(() => {ms932Encoder.encode("\uF3FA")}).to.throw(Error, "EncodingError U+F3FA");
expect(() => {ms932Encoder.encode("\uF3FB")}).to.throw(Error, "EncodingError U+F3FB");
expect(() => {ms932Encoder.encode("\uF3FC")}).to.throw(Error, "EncodingError U+F3FC");
expect(() => {ms932Encoder.encode("\uF3FD")}).to.throw(Error, "EncodingError U+F3FD");
expect(() => {ms932Encoder.encode("\uF3FE")}).to.throw(Error, "EncodingError U+F3FE");
expect(() => {ms932Encoder.encode("\uF3FF")}).to.throw(Error, "EncodingError U+F3FF");
expect(() => {ms932Encoder.encode("\uF400")}).to.throw(Error, "EncodingError U+F400");
expect(() => {ms932Encoder.encode("\uF401")}).to.throw(Error, "EncodingError U+F401");
expect(() => {ms932Encoder.encode("\uF402")}).to.throw(Error, "EncodingError U+F402");
expect(() => {ms932Encoder.encode("\uF403")}).to.throw(Error, "EncodingError U+F403");
expect(() => {ms932Encoder.encode("\uF404")}).to.throw(Error, "EncodingError U+F404");
expect(() => {ms932Encoder.encode("\uF405")}).to.throw(Error, "EncodingError U+F405");
expect(() => {ms932Encoder.encode("\uF406")}).to.throw(Error, "EncodingError U+F406");
expect(() => {ms932Encoder.encode("\uF407")}).to.throw(Error, "EncodingError U+F407");
expect(() => {ms932Encoder.encode("\uF408")}).to.throw(Error, "EncodingError U+F408");
expect(() => {ms932Encoder.encode("\uF409")}).to.throw(Error, "EncodingError U+F409");
expect(() => {ms932Encoder.encode("\uF40A")}).to.throw(Error, "EncodingError U+F40A");
expect(() => {ms932Encoder.encode("\uF40B")}).to.throw(Error, "EncodingError U+F40B");
expect(() => {ms932Encoder.encode("\uF40C")}).to.throw(Error, "EncodingError U+F40C");
expect(() => {ms932Encoder.encode("\uF40D")}).to.throw(Error, "EncodingError U+F40D");
expect(() => {ms932Encoder.encode("\uF40E")}).to.throw(Error, "EncodingError U+F40E");
expect(() => {ms932Encoder.encode("\uF40F")}).to.throw(Error, "EncodingError U+F40F");
expect(() => {ms932Encoder.encode("\uF410")}).to.throw(Error, "EncodingError U+F410");
expect(() => {ms932Encoder.encode("\uF411")}).to.throw(Error, "EncodingError U+F411");
expect(() => {ms932Encoder.encode("\uF412")}).to.throw(Error, "EncodingError U+F412");
expect(() => {ms932Encoder.encode("\uF413")}).to.throw(Error, "EncodingError U+F413");
expect(() => {ms932Encoder.encode("\uF414")}).to.throw(Error, "EncodingError U+F414");
expect(() => {ms932Encoder.encode("\uF415")}).to.throw(Error, "EncodingError U+F415");
expect(() => {ms932Encoder.encode("\uF416")}).to.throw(Error, "EncodingError U+F416");
expect(() => {ms932Encoder.encode("\uF417")}).to.throw(Error, "EncodingError U+F417");
expect(() => {ms932Encoder.encode("\uF418")}).to.throw(Error, "EncodingError U+F418");
expect(() => {ms932Encoder.encode("\uF419")}).to.throw(Error, "EncodingError U+F419");
expect(() => {ms932Encoder.encode("\uF41A")}).to.throw(Error, "EncodingError U+F41A");
expect(() => {ms932Encoder.encode("\uF41B")}).to.throw(Error, "EncodingError U+F41B");
expect(() => {ms932Encoder.encode("\uF41C")}).to.throw(Error, "EncodingError U+F41C");
expect(() => {ms932Encoder.encode("\uF41D")}).to.throw(Error, "EncodingError U+F41D");
expect(() => {ms932Encoder.encode("\uF41E")}).to.throw(Error, "EncodingError U+F41E");
expect(() => {ms932Encoder.encode("\uF41F")}).to.throw(Error, "EncodingError U+F41F");
expect(() => {ms932Encoder.encode("\uF420")}).to.throw(Error, "EncodingError U+F420");
expect(() => {ms932Encoder.encode("\uF421")}).to.throw(Error, "EncodingError U+F421");
expect(() => {ms932Encoder.encode("\uF422")}).to.throw(Error, "EncodingError U+F422");
expect(() => {ms932Encoder.encode("\uF423")}).to.throw(Error, "EncodingError U+F423");
expect(() => {ms932Encoder.encode("\uF424")}).to.throw(Error, "EncodingError U+F424");
expect(() => {ms932Encoder.encode("\uF425")}).to.throw(Error, "EncodingError U+F425");
expect(() => {ms932Encoder.encode("\uF426")}).to.throw(Error, "EncodingError U+F426");
expect(() => {ms932Encoder.encode("\uF427")}).to.throw(Error, "EncodingError U+F427");
expect(() => {ms932Encoder.encode("\uF428")}).to.throw(Error, "EncodingError U+F428");
expect(() => {ms932Encoder.encode("\uF429")}).to.throw(Error, "EncodingError U+F429");
expect(() => {ms932Encoder.encode("\uF42A")}).to.throw(Error, "EncodingError U+F42A");
expect(() => {ms932Encoder.encode("\uF42B")}).to.throw(Error, "EncodingError U+F42B");
expect(() => {ms932Encoder.encode("\uF42C")}).to.throw(Error, "EncodingError U+F42C");
expect(() => {ms932Encoder.encode("\uF42D")}).to.throw(Error, "EncodingError U+F42D");
expect(() => {ms932Encoder.encode("\uF42E")}).to.throw(Error, "EncodingError U+F42E");
expect(() => {ms932Encoder.encode("\uF42F")}).to.throw(Error, "EncodingError U+F42F");
expect(() => {ms932Encoder.encode("\uF430")}).to.throw(Error, "EncodingError U+F430");
expect(() => {ms932Encoder.encode("\uF431")}).to.throw(Error, "EncodingError U+F431");
expect(() => {ms932Encoder.encode("\uF432")}).to.throw(Error, "EncodingError U+F432");
expect(() => {ms932Encoder.encode("\uF433")}).to.throw(Error, "EncodingError U+F433");
expect(() => {ms932Encoder.encode("\uF434")}).to.throw(Error, "EncodingError U+F434");
expect(() => {ms932Encoder.encode("\uF435")}).to.throw(Error, "EncodingError U+F435");
expect(() => {ms932Encoder.encode("\uF436")}).to.throw(Error, "EncodingError U+F436");
expect(() => {ms932Encoder.encode("\uF437")}).to.throw(Error, "EncodingError U+F437");
expect(() => {ms932Encoder.encode("\uF438")}).to.throw(Error, "EncodingError U+F438");
expect(() => {ms932Encoder.encode("\uF439")}).to.throw(Error, "EncodingError U+F439");
expect(() => {ms932Encoder.encode("\uF43A")}).to.throw(Error, "EncodingError U+F43A");
expect(() => {ms932Encoder.encode("\uF43B")}).to.throw(Error, "EncodingError U+F43B");
expect(() => {ms932Encoder.encode("\uF43C")}).to.throw(Error, "EncodingError U+F43C");
expect(() => {ms932Encoder.encode("\uF43D")}).to.throw(Error, "EncodingError U+F43D");
expect(() => {ms932Encoder.encode("\uF43E")}).to.throw(Error, "EncodingError U+F43E");
expect(() => {ms932Encoder.encode("\uF43F")}).to.throw(Error, "EncodingError U+F43F");
expect(() => {ms932Encoder.encode("\uF440")}).to.throw(Error, "EncodingError U+F440");
expect(() => {ms932Encoder.encode("\uF441")}).to.throw(Error, "EncodingError U+F441");
expect(() => {ms932Encoder.encode("\uF442")}).to.throw(Error, "EncodingError U+F442");
expect(() => {ms932Encoder.encode("\uF443")}).to.throw(Error, "EncodingError U+F443");
expect(() => {ms932Encoder.encode("\uF444")}).to.throw(Error, "EncodingError U+F444");
expect(() => {ms932Encoder.encode("\uF445")}).to.throw(Error, "EncodingError U+F445");
expect(() => {ms932Encoder.encode("\uF446")}).to.throw(Error, "EncodingError U+F446");
expect(() => {ms932Encoder.encode("\uF447")}).to.throw(Error, "EncodingError U+F447");
expect(() => {ms932Encoder.encode("\uF448")}).to.throw(Error, "EncodingError U+F448");
expect(() => {ms932Encoder.encode("\uF449")}).to.throw(Error, "EncodingError U+F449");
expect(() => {ms932Encoder.encode("\uF44A")}).to.throw(Error, "EncodingError U+F44A");
expect(() => {ms932Encoder.encode("\uF44B")}).to.throw(Error, "EncodingError U+F44B");
expect(() => {ms932Encoder.encode("\uF44C")}).to.throw(Error, "EncodingError U+F44C");
expect(() => {ms932Encoder.encode("\uF44D")}).to.throw(Error, "EncodingError U+F44D");
expect(() => {ms932Encoder.encode("\uF44E")}).to.throw(Error, "EncodingError U+F44E");
expect(() => {ms932Encoder.encode("\uF44F")}).to.throw(Error, "EncodingError U+F44F");
expect(() => {ms932Encoder.encode("\uF450")}).to.throw(Error, "EncodingError U+F450");
expect(() => {ms932Encoder.encode("\uF451")}).to.throw(Error, "EncodingError U+F451");
expect(() => {ms932Encoder.encode("\uF452")}).to.throw(Error, "EncodingError U+F452");
expect(() => {ms932Encoder.encode("\uF453")}).to.throw(Error, "EncodingError U+F453");
expect(() => {ms932Encoder.encode("\uF454")}).to.throw(Error, "EncodingError U+F454");
expect(() => {ms932Encoder.encode("\uF455")}).to.throw(Error, "EncodingError U+F455");
expect(() => {ms932Encoder.encode("\uF456")}).to.throw(Error, "EncodingError U+F456");
expect(() => {ms932Encoder.encode("\uF457")}).to.throw(Error, "EncodingError U+F457");
expect(() => {ms932Encoder.encode("\uF458")}).to.throw(Error, "EncodingError U+F458");
expect(() => {ms932Encoder.encode("\uF459")}).to.throw(Error, "EncodingError U+F459");
expect(() => {ms932Encoder.encode("\uF45A")}).to.throw(Error, "EncodingError U+F45A");
expect(() => {ms932Encoder.encode("\uF45B")}).to.throw(Error, "EncodingError U+F45B");
expect(() => {ms932Encoder.encode("\uF45C")}).to.throw(Error, "EncodingError U+F45C");
expect(() => {ms932Encoder.encode("\uF45D")}).to.throw(Error, "EncodingError U+F45D");
expect(() => {ms932Encoder.encode("\uF45E")}).to.throw(Error, "EncodingError U+F45E");
expect(() => {ms932Encoder.encode("\uF45F")}).to.throw(Error, "EncodingError U+F45F");
expect(() => {ms932Encoder.encode("\uF460")}).to.throw(Error, "EncodingError U+F460");
expect(() => {ms932Encoder.encode("\uF461")}).to.throw(Error, "EncodingError U+F461");
expect(() => {ms932Encoder.encode("\uF462")}).to.throw(Error, "EncodingError U+F462");
expect(() => {ms932Encoder.encode("\uF463")}).to.throw(Error, "EncodingError U+F463");
expect(() => {ms932Encoder.encode("\uF464")}).to.throw(Error, "EncodingError U+F464");
expect(() => {ms932Encoder.encode("\uF465")}).to.throw(Error, "EncodingError U+F465");
expect(() => {ms932Encoder.encode("\uF466")}).to.throw(Error, "EncodingError U+F466");
expect(() => {ms932Encoder.encode("\uF467")}).to.throw(Error, "EncodingError U+F467");
expect(() => {ms932Encoder.encode("\uF468")}).to.throw(Error, "EncodingError U+F468");
expect(() => {ms932Encoder.encode("\uF469")}).to.throw(Error, "EncodingError U+F469");
expect(() => {ms932Encoder.encode("\uF46A")}).to.throw(Error, "EncodingError U+F46A");
expect(() => {ms932Encoder.encode("\uF46B")}).to.throw(Error, "EncodingError U+F46B");
expect(() => {ms932Encoder.encode("\uF46C")}).to.throw(Error, "EncodingError U+F46C");
expect(() => {ms932Encoder.encode("\uF46D")}).to.throw(Error, "EncodingError U+F46D");
expect(() => {ms932Encoder.encode("\uF46E")}).to.throw(Error, "EncodingError U+F46E");
expect(() => {ms932Encoder.encode("\uF46F")}).to.throw(Error, "EncodingError U+F46F");
expect(() => {ms932Encoder.encode("\uF470")}).to.throw(Error, "EncodingError U+F470");
expect(() => {ms932Encoder.encode("\uF471")}).to.throw(Error, "EncodingError U+F471");
expect(() => {ms932Encoder.encode("\uF472")}).to.throw(Error, "EncodingError U+F472");
expect(() => {ms932Encoder.encode("\uF473")}).to.throw(Error, "EncodingError U+F473");
expect(() => {ms932Encoder.encode("\uF474")}).to.throw(Error, "EncodingError U+F474");
expect(() => {ms932Encoder.encode("\uF475")}).to.throw(Error, "EncodingError U+F475");
expect(() => {ms932Encoder.encode("\uF476")}).to.throw(Error, "EncodingError U+F476");
expect(() => {ms932Encoder.encode("\uF477")}).to.throw(Error, "EncodingError U+F477");
expect(() => {ms932Encoder.encode("\uF478")}).to.throw(Error, "EncodingError U+F478");
expect(() => {ms932Encoder.encode("\uF479")}).to.throw(Error, "EncodingError U+F479");
expect(() => {ms932Encoder.encode("\uF47A")}).to.throw(Error, "EncodingError U+F47A");
expect(() => {ms932Encoder.encode("\uF47B")}).to.throw(Error, "EncodingError U+F47B");
expect(() => {ms932Encoder.encode("\uF47C")}).to.throw(Error, "EncodingError U+F47C");
expect(() => {ms932Encoder.encode("\uF47D")}).to.throw(Error, "EncodingError U+F47D");
expect(() => {ms932Encoder.encode("\uF47E")}).to.throw(Error, "EncodingError U+F47E");
expect(() => {ms932Encoder.encode("\uF47F")}).to.throw(Error, "EncodingError U+F47F");
expect(() => {ms932Encoder.encode("\uF480")}).to.throw(Error, "EncodingError U+F480");
expect(() => {ms932Encoder.encode("\uF481")}).to.throw(Error, "EncodingError U+F481");
expect(() => {ms932Encoder.encode("\uF482")}).to.throw(Error, "EncodingError U+F482");
expect(() => {ms932Encoder.encode("\uF483")}).to.throw(Error, "EncodingError U+F483");
expect(() => {ms932Encoder.encode("\uF484")}).to.throw(Error, "EncodingError U+F484");
expect(() => {ms932Encoder.encode("\uF485")}).to.throw(Error, "EncodingError U+F485");
expect(() => {ms932Encoder.encode("\uF486")}).to.throw(Error, "EncodingError U+F486");
expect(() => {ms932Encoder.encode("\uF487")}).to.throw(Error, "EncodingError U+F487");
expect(() => {ms932Encoder.encode("\uF488")}).to.throw(Error, "EncodingError U+F488");
expect(() => {ms932Encoder.encode("\uF489")}).to.throw(Error, "EncodingError U+F489");
expect(() => {ms932Encoder.encode("\uF48A")}).to.throw(Error, "EncodingError U+F48A");
expect(() => {ms932Encoder.encode("\uF48B")}).to.throw(Error, "EncodingError U+F48B");
expect(() => {ms932Encoder.encode("\uF48C")}).to.throw(Error, "EncodingError U+F48C");
expect(() => {ms932Encoder.encode("\uF48D")}).to.throw(Error, "EncodingError U+F48D");
expect(() => {ms932Encoder.encode("\uF48E")}).to.throw(Error, "EncodingError U+F48E");
expect(() => {ms932Encoder.encode("\uF48F")}).to.throw(Error, "EncodingError U+F48F");
expect(() => {ms932Encoder.encode("\uF490")}).to.throw(Error, "EncodingError U+F490");
expect(() => {ms932Encoder.encode("\uF491")}).to.throw(Error, "EncodingError U+F491");
expect(() => {ms932Encoder.encode("\uF492")}).to.throw(Error, "EncodingError U+F492");
expect(() => {ms932Encoder.encode("\uF493")}).to.throw(Error, "EncodingError U+F493");
expect(() => {ms932Encoder.encode("\uF494")}).to.throw(Error, "EncodingError U+F494");
expect(() => {ms932Encoder.encode("\uF495")}).to.throw(Error, "EncodingError U+F495");
expect(() => {ms932Encoder.encode("\uF496")}).to.throw(Error, "EncodingError U+F496");
expect(() => {ms932Encoder.encode("\uF497")}).to.throw(Error, "EncodingError U+F497");
expect(() => {ms932Encoder.encode("\uF498")}).to.throw(Error, "EncodingError U+F498");
expect(() => {ms932Encoder.encode("\uF499")}).to.throw(Error, "EncodingError U+F499");
expect(() => {ms932Encoder.encode("\uF49A")}).to.throw(Error, "EncodingError U+F49A");
expect(() => {ms932Encoder.encode("\uF49B")}).to.throw(Error, "EncodingError U+F49B");
expect(() => {ms932Encoder.encode("\uF49C")}).to.throw(Error, "EncodingError U+F49C");
expect(() => {ms932Encoder.encode("\uF49D")}).to.throw(Error, "EncodingError U+F49D");
expect(() => {ms932Encoder.encode("\uF49E")}).to.throw(Error, "EncodingError U+F49E");
expect(() => {ms932Encoder.encode("\uF49F")}).to.throw(Error, "EncodingError U+F49F");
expect(() => {ms932Encoder.encode("\uF4A0")}).to.throw(Error, "EncodingError U+F4A0");
expect(() => {ms932Encoder.encode("\uF4A1")}).to.throw(Error, "EncodingError U+F4A1");
expect(() => {ms932Encoder.encode("\uF4A2")}).to.throw(Error, "EncodingError U+F4A2");
expect(() => {ms932Encoder.encode("\uF4A3")}).to.throw(Error, "EncodingError U+F4A3");
expect(() => {ms932Encoder.encode("\uF4A4")}).to.throw(Error, "EncodingError U+F4A4");
expect(() => {ms932Encoder.encode("\uF4A5")}).to.throw(Error, "EncodingError U+F4A5");
expect(() => {ms932Encoder.encode("\uF4A6")}).to.throw(Error, "EncodingError U+F4A6");
expect(() => {ms932Encoder.encode("\uF4A7")}).to.throw(Error, "EncodingError U+F4A7");
expect(() => {ms932Encoder.encode("\uF4A8")}).to.throw(Error, "EncodingError U+F4A8");
expect(() => {ms932Encoder.encode("\uF4A9")}).to.throw(Error, "EncodingError U+F4A9");
expect(() => {ms932Encoder.encode("\uF4AA")}).to.throw(Error, "EncodingError U+F4AA");
expect(() => {ms932Encoder.encode("\uF4AB")}).to.throw(Error, "EncodingError U+F4AB");
expect(() => {ms932Encoder.encode("\uF4AC")}).to.throw(Error, "EncodingError U+F4AC");
expect(() => {ms932Encoder.encode("\uF4AD")}).to.throw(Error, "EncodingError U+F4AD");
expect(() => {ms932Encoder.encode("\uF4AE")}).to.throw(Error, "EncodingError U+F4AE");
expect(() => {ms932Encoder.encode("\uF4AF")}).to.throw(Error, "EncodingError U+F4AF");
expect(() => {ms932Encoder.encode("\uF4B0")}).to.throw(Error, "EncodingError U+F4B0");
expect(() => {ms932Encoder.encode("\uF4B1")}).to.throw(Error, "EncodingError U+F4B1");
expect(() => {ms932Encoder.encode("\uF4B2")}).to.throw(Error, "EncodingError U+F4B2");
expect(() => {ms932Encoder.encode("\uF4B3")}).to.throw(Error, "EncodingError U+F4B3");
expect(() => {ms932Encoder.encode("\uF4B4")}).to.throw(Error, "EncodingError U+F4B4");
expect(() => {ms932Encoder.encode("\uF4B5")}).to.throw(Error, "EncodingError U+F4B5");
expect(() => {ms932Encoder.encode("\uF4B6")}).to.throw(Error, "EncodingError U+F4B6");
expect(() => {ms932Encoder.encode("\uF4B7")}).to.throw(Error, "EncodingError U+F4B7");
expect(() => {ms932Encoder.encode("\uF4B8")}).to.throw(Error, "EncodingError U+F4B8");
expect(() => {ms932Encoder.encode("\uF4B9")}).to.throw(Error, "EncodingError U+F4B9");
expect(() => {ms932Encoder.encode("\uF4BA")}).to.throw(Error, "EncodingError U+F4BA");
expect(() => {ms932Encoder.encode("\uF4BB")}).to.throw(Error, "EncodingError U+F4BB");
expect(() => {ms932Encoder.encode("\uF4BC")}).to.throw(Error, "EncodingError U+F4BC");
expect(() => {ms932Encoder.encode("\uF4BD")}).to.throw(Error, "EncodingError U+F4BD");
expect(() => {ms932Encoder.encode("\uF4BE")}).to.throw(Error, "EncodingError U+F4BE");
expect(() => {ms932Encoder.encode("\uF4BF")}).to.throw(Error, "EncodingError U+F4BF");
expect(() => {ms932Encoder.encode("\uF4C0")}).to.throw(Error, "EncodingError U+F4C0");
expect(() => {ms932Encoder.encode("\uF4C1")}).to.throw(Error, "EncodingError U+F4C1");
expect(() => {ms932Encoder.encode("\uF4C2")}).to.throw(Error, "EncodingError U+F4C2");
expect(() => {ms932Encoder.encode("\uF4C3")}).to.throw(Error, "EncodingError U+F4C3");
expect(() => {ms932Encoder.encode("\uF4C4")}).to.throw(Error, "EncodingError U+F4C4");
expect(() => {ms932Encoder.encode("\uF4C5")}).to.throw(Error, "EncodingError U+F4C5");
expect(() => {ms932Encoder.encode("\uF4C6")}).to.throw(Error, "EncodingError U+F4C6");
expect(() => {ms932Encoder.encode("\uF4C7")}).to.throw(Error, "EncodingError U+F4C7");
expect(() => {ms932Encoder.encode("\uF4C8")}).to.throw(Error, "EncodingError U+F4C8");
expect(() => {ms932Encoder.encode("\uF4C9")}).to.throw(Error, "EncodingError U+F4C9");
expect(() => {ms932Encoder.encode("\uF4CA")}).to.throw(Error, "EncodingError U+F4CA");
expect(() => {ms932Encoder.encode("\uF4CB")}).to.throw(Error, "EncodingError U+F4CB");
expect(() => {ms932Encoder.encode("\uF4CC")}).to.throw(Error, "EncodingError U+F4CC");
expect(() => {ms932Encoder.encode("\uF4CD")}).to.throw(Error, "EncodingError U+F4CD");
expect(() => {ms932Encoder.encode("\uF4CE")}).to.throw(Error, "EncodingError U+F4CE");
expect(() => {ms932Encoder.encode("\uF4CF")}).to.throw(Error, "EncodingError U+F4CF");
expect(() => {ms932Encoder.encode("\uF4D0")}).to.throw(Error, "EncodingError U+F4D0");
expect(() => {ms932Encoder.encode("\uF4D1")}).to.throw(Error, "EncodingError U+F4D1");
expect(() => {ms932Encoder.encode("\uF4D2")}).to.throw(Error, "EncodingError U+F4D2");
expect(() => {ms932Encoder.encode("\uF4D3")}).to.throw(Error, "EncodingError U+F4D3");
expect(() => {ms932Encoder.encode("\uF4D4")}).to.throw(Error, "EncodingError U+F4D4");
expect(() => {ms932Encoder.encode("\uF4D5")}).to.throw(Error, "EncodingError U+F4D5");
expect(() => {ms932Encoder.encode("\uF4D6")}).to.throw(Error, "EncodingError U+F4D6");
expect(() => {ms932Encoder.encode("\uF4D7")}).to.throw(Error, "EncodingError U+F4D7");
expect(() => {ms932Encoder.encode("\uF4D8")}).to.throw(Error, "EncodingError U+F4D8");
expect(() => {ms932Encoder.encode("\uF4D9")}).to.throw(Error, "EncodingError U+F4D9");
expect(() => {ms932Encoder.encode("\uF4DA")}).to.throw(Error, "EncodingError U+F4DA");
expect(() => {ms932Encoder.encode("\uF4DB")}).to.throw(Error, "EncodingError U+F4DB");
expect(() => {ms932Encoder.encode("\uF4DC")}).to.throw(Error, "EncodingError U+F4DC");
expect(() => {ms932Encoder.encode("\uF4DD")}).to.throw(Error, "EncodingError U+F4DD");
expect(() => {ms932Encoder.encode("\uF4DE")}).to.throw(Error, "EncodingError U+F4DE");
expect(() => {ms932Encoder.encode("\uF4DF")}).to.throw(Error, "EncodingError U+F4DF");
expect(() => {ms932Encoder.encode("\uF4E0")}).to.throw(Error, "EncodingError U+F4E0");
expect(() => {ms932Encoder.encode("\uF4E1")}).to.throw(Error, "EncodingError U+F4E1");
expect(() => {ms932Encoder.encode("\uF4E2")}).to.throw(Error, "EncodingError U+F4E2");
expect(() => {ms932Encoder.encode("\uF4E3")}).to.throw(Error, "EncodingError U+F4E3");
expect(() => {ms932Encoder.encode("\uF4E4")}).to.throw(Error, "EncodingError U+F4E4");
expect(() => {ms932Encoder.encode("\uF4E5")}).to.throw(Error, "EncodingError U+F4E5");
expect(() => {ms932Encoder.encode("\uF4E6")}).to.throw(Error, "EncodingError U+F4E6");
expect(() => {ms932Encoder.encode("\uF4E7")}).to.throw(Error, "EncodingError U+F4E7");
expect(() => {ms932Encoder.encode("\uF4E8")}).to.throw(Error, "EncodingError U+F4E8");
expect(() => {ms932Encoder.encode("\uF4E9")}).to.throw(Error, "EncodingError U+F4E9");
expect(() => {ms932Encoder.encode("\uF4EA")}).to.throw(Error, "EncodingError U+F4EA");
expect(() => {ms932Encoder.encode("\uF4EB")}).to.throw(Error, "EncodingError U+F4EB");
expect(() => {ms932Encoder.encode("\uF4EC")}).to.throw(Error, "EncodingError U+F4EC");
expect(() => {ms932Encoder.encode("\uF4ED")}).to.throw(Error, "EncodingError U+F4ED");
expect(() => {ms932Encoder.encode("\uF4EE")}).to.throw(Error, "EncodingError U+F4EE");
expect(() => {ms932Encoder.encode("\uF4EF")}).to.throw(Error, "EncodingError U+F4EF");
expect(() => {ms932Encoder.encode("\uF4F0")}).to.throw(Error, "EncodingError U+F4F0");
expect(() => {ms932Encoder.encode("\uF4F1")}).to.throw(Error, "EncodingError U+F4F1");
expect(() => {ms932Encoder.encode("\uF4F2")}).to.throw(Error, "EncodingError U+F4F2");
expect(() => {ms932Encoder.encode("\uF4F3")}).to.throw(Error, "EncodingError U+F4F3");
expect(() => {ms932Encoder.encode("\uF4F4")}).to.throw(Error, "EncodingError U+F4F4");
expect(() => {ms932Encoder.encode("\uF4F5")}).to.throw(Error, "EncodingError U+F4F5");
expect(() => {ms932Encoder.encode("\uF4F6")}).to.throw(Error, "EncodingError U+F4F6");
expect(() => {ms932Encoder.encode("\uF4F7")}).to.throw(Error, "EncodingError U+F4F7");
expect(() => {ms932Encoder.encode("\uF4F8")}).to.throw(Error, "EncodingError U+F4F8");
expect(() => {ms932Encoder.encode("\uF4F9")}).to.throw(Error, "EncodingError U+F4F9");
expect(() => {ms932Encoder.encode("\uF4FA")}).to.throw(Error, "EncodingError U+F4FA");
expect(() => {ms932Encoder.encode("\uF4FB")}).to.throw(Error, "EncodingError U+F4FB");
expect(() => {ms932Encoder.encode("\uF4FC")}).to.throw(Error, "EncodingError U+F4FC");
expect(() => {ms932Encoder.encode("\uF4FD")}).to.throw(Error, "EncodingError U+F4FD");
expect(() => {ms932Encoder.encode("\uF4FE")}).to.throw(Error, "EncodingError U+F4FE");
expect(() => {ms932Encoder.encode("\uF4FF")}).to.throw(Error, "EncodingError U+F4FF");
expect(() => {ms932Encoder.encode("\uF500")}).to.throw(Error, "EncodingError U+F500");
expect(() => {ms932Encoder.encode("\uF501")}).to.throw(Error, "EncodingError U+F501");
expect(() => {ms932Encoder.encode("\uF502")}).to.throw(Error, "EncodingError U+F502");
expect(() => {ms932Encoder.encode("\uF503")}).to.throw(Error, "EncodingError U+F503");
expect(() => {ms932Encoder.encode("\uF504")}).to.throw(Error, "EncodingError U+F504");
expect(() => {ms932Encoder.encode("\uF505")}).to.throw(Error, "EncodingError U+F505");
expect(() => {ms932Encoder.encode("\uF506")}).to.throw(Error, "EncodingError U+F506");
expect(() => {ms932Encoder.encode("\uF507")}).to.throw(Error, "EncodingError U+F507");
expect(() => {ms932Encoder.encode("\uF508")}).to.throw(Error, "EncodingError U+F508");
expect(() => {ms932Encoder.encode("\uF509")}).to.throw(Error, "EncodingError U+F509");
expect(() => {ms932Encoder.encode("\uF50A")}).to.throw(Error, "EncodingError U+F50A");
expect(() => {ms932Encoder.encode("\uF50B")}).to.throw(Error, "EncodingError U+F50B");
expect(() => {ms932Encoder.encode("\uF50C")}).to.throw(Error, "EncodingError U+F50C");
expect(() => {ms932Encoder.encode("\uF50D")}).to.throw(Error, "EncodingError U+F50D");
expect(() => {ms932Encoder.encode("\uF50E")}).to.throw(Error, "EncodingError U+F50E");
expect(() => {ms932Encoder.encode("\uF50F")}).to.throw(Error, "EncodingError U+F50F");
expect(() => {ms932Encoder.encode("\uF510")}).to.throw(Error, "EncodingError U+F510");
expect(() => {ms932Encoder.encode("\uF511")}).to.throw(Error, "EncodingError U+F511");
expect(() => {ms932Encoder.encode("\uF512")}).to.throw(Error, "EncodingError U+F512");
expect(() => {ms932Encoder.encode("\uF513")}).to.throw(Error, "EncodingError U+F513");
expect(() => {ms932Encoder.encode("\uF514")}).to.throw(Error, "EncodingError U+F514");
expect(() => {ms932Encoder.encode("\uF515")}).to.throw(Error, "EncodingError U+F515");
expect(() => {ms932Encoder.encode("\uF516")}).to.throw(Error, "EncodingError U+F516");
expect(() => {ms932Encoder.encode("\uF517")}).to.throw(Error, "EncodingError U+F517");
expect(() => {ms932Encoder.encode("\uF518")}).to.throw(Error, "EncodingError U+F518");
expect(() => {ms932Encoder.encode("\uF519")}).to.throw(Error, "EncodingError U+F519");
expect(() => {ms932Encoder.encode("\uF51A")}).to.throw(Error, "EncodingError U+F51A");
expect(() => {ms932Encoder.encode("\uF51B")}).to.throw(Error, "EncodingError U+F51B");
expect(() => {ms932Encoder.encode("\uF51C")}).to.throw(Error, "EncodingError U+F51C");
expect(() => {ms932Encoder.encode("\uF51D")}).to.throw(Error, "EncodingError U+F51D");
expect(() => {ms932Encoder.encode("\uF51E")}).to.throw(Error, "EncodingError U+F51E");
expect(() => {ms932Encoder.encode("\uF51F")}).to.throw(Error, "EncodingError U+F51F");
expect(() => {ms932Encoder.encode("\uF520")}).to.throw(Error, "EncodingError U+F520");
expect(() => {ms932Encoder.encode("\uF521")}).to.throw(Error, "EncodingError U+F521");
expect(() => {ms932Encoder.encode("\uF522")}).to.throw(Error, "EncodingError U+F522");
expect(() => {ms932Encoder.encode("\uF523")}).to.throw(Error, "EncodingError U+F523");
expect(() => {ms932Encoder.encode("\uF524")}).to.throw(Error, "EncodingError U+F524");
expect(() => {ms932Encoder.encode("\uF525")}).to.throw(Error, "EncodingError U+F525");
expect(() => {ms932Encoder.encode("\uF526")}).to.throw(Error, "EncodingError U+F526");
expect(() => {ms932Encoder.encode("\uF527")}).to.throw(Error, "EncodingError U+F527");
expect(() => {ms932Encoder.encode("\uF528")}).to.throw(Error, "EncodingError U+F528");
expect(() => {ms932Encoder.encode("\uF529")}).to.throw(Error, "EncodingError U+F529");
expect(() => {ms932Encoder.encode("\uF52A")}).to.throw(Error, "EncodingError U+F52A");
expect(() => {ms932Encoder.encode("\uF52B")}).to.throw(Error, "EncodingError U+F52B");
expect(() => {ms932Encoder.encode("\uF52C")}).to.throw(Error, "EncodingError U+F52C");
expect(() => {ms932Encoder.encode("\uF52D")}).to.throw(Error, "EncodingError U+F52D");
expect(() => {ms932Encoder.encode("\uF52E")}).to.throw(Error, "EncodingError U+F52E");
expect(() => {ms932Encoder.encode("\uF52F")}).to.throw(Error, "EncodingError U+F52F");
expect(() => {ms932Encoder.encode("\uF530")}).to.throw(Error, "EncodingError U+F530");
expect(() => {ms932Encoder.encode("\uF531")}).to.throw(Error, "EncodingError U+F531");
expect(() => {ms932Encoder.encode("\uF532")}).to.throw(Error, "EncodingError U+F532");
expect(() => {ms932Encoder.encode("\uF533")}).to.throw(Error, "EncodingError U+F533");
expect(() => {ms932Encoder.encode("\uF534")}).to.throw(Error, "EncodingError U+F534");
expect(() => {ms932Encoder.encode("\uF535")}).to.throw(Error, "EncodingError U+F535");
expect(() => {ms932Encoder.encode("\uF536")}).to.throw(Error, "EncodingError U+F536");
expect(() => {ms932Encoder.encode("\uF537")}).to.throw(Error, "EncodingError U+F537");
expect(() => {ms932Encoder.encode("\uF538")}).to.throw(Error, "EncodingError U+F538");
expect(() => {ms932Encoder.encode("\uF539")}).to.throw(Error, "EncodingError U+F539");
expect(() => {ms932Encoder.encode("\uF53A")}).to.throw(Error, "EncodingError U+F53A");
expect(() => {ms932Encoder.encode("\uF53B")}).to.throw(Error, "EncodingError U+F53B");
expect(() => {ms932Encoder.encode("\uF53C")}).to.throw(Error, "EncodingError U+F53C");
expect(() => {ms932Encoder.encode("\uF53D")}).to.throw(Error, "EncodingError U+F53D");
expect(() => {ms932Encoder.encode("\uF53E")}).to.throw(Error, "EncodingError U+F53E");
expect(() => {ms932Encoder.encode("\uF53F")}).to.throw(Error, "EncodingError U+F53F");
expect(() => {ms932Encoder.encode("\uF540")}).to.throw(Error, "EncodingError U+F540");
expect(() => {ms932Encoder.encode("\uF541")}).to.throw(Error, "EncodingError U+F541");
expect(() => {ms932Encoder.encode("\uF542")}).to.throw(Error, "EncodingError U+F542");
expect(() => {ms932Encoder.encode("\uF543")}).to.throw(Error, "EncodingError U+F543");
expect(() => {ms932Encoder.encode("\uF544")}).to.throw(Error, "EncodingError U+F544");
expect(() => {ms932Encoder.encode("\uF545")}).to.throw(Error, "EncodingError U+F545");
expect(() => {ms932Encoder.encode("\uF546")}).to.throw(Error, "EncodingError U+F546");
expect(() => {ms932Encoder.encode("\uF547")}).to.throw(Error, "EncodingError U+F547");
expect(() => {ms932Encoder.encode("\uF548")}).to.throw(Error, "EncodingError U+F548");
expect(() => {ms932Encoder.encode("\uF549")}).to.throw(Error, "EncodingError U+F549");
expect(() => {ms932Encoder.encode("\uF54A")}).to.throw(Error, "EncodingError U+F54A");
expect(() => {ms932Encoder.encode("\uF54B")}).to.throw(Error, "EncodingError U+F54B");
expect(() => {ms932Encoder.encode("\uF54C")}).to.throw(Error, "EncodingError U+F54C");
expect(() => {ms932Encoder.encode("\uF54D")}).to.throw(Error, "EncodingError U+F54D");
expect(() => {ms932Encoder.encode("\uF54E")}).to.throw(Error, "EncodingError U+F54E");
expect(() => {ms932Encoder.encode("\uF54F")}).to.throw(Error, "EncodingError U+F54F");
expect(() => {ms932Encoder.encode("\uF550")}).to.throw(Error, "EncodingError U+F550");
expect(() => {ms932Encoder.encode("\uF551")}).to.throw(Error, "EncodingError U+F551");
expect(() => {ms932Encoder.encode("\uF552")}).to.throw(Error, "EncodingError U+F552");
expect(() => {ms932Encoder.encode("\uF553")}).to.throw(Error, "EncodingError U+F553");
expect(() => {ms932Encoder.encode("\uF554")}).to.throw(Error, "EncodingError U+F554");
expect(() => {ms932Encoder.encode("\uF555")}).to.throw(Error, "EncodingError U+F555");
expect(() => {ms932Encoder.encode("\uF556")}).to.throw(Error, "EncodingError U+F556");
expect(() => {ms932Encoder.encode("\uF557")}).to.throw(Error, "EncodingError U+F557");
expect(() => {ms932Encoder.encode("\uF558")}).to.throw(Error, "EncodingError U+F558");
expect(() => {ms932Encoder.encode("\uF559")}).to.throw(Error, "EncodingError U+F559");
expect(() => {ms932Encoder.encode("\uF55A")}).to.throw(Error, "EncodingError U+F55A");
expect(() => {ms932Encoder.encode("\uF55B")}).to.throw(Error, "EncodingError U+F55B");
expect(() => {ms932Encoder.encode("\uF55C")}).to.throw(Error, "EncodingError U+F55C");
expect(() => {ms932Encoder.encode("\uF55D")}).to.throw(Error, "EncodingError U+F55D");
expect(() => {ms932Encoder.encode("\uF55E")}).to.throw(Error, "EncodingError U+F55E");
expect(() => {ms932Encoder.encode("\uF55F")}).to.throw(Error, "EncodingError U+F55F");
expect(() => {ms932Encoder.encode("\uF560")}).to.throw(Error, "EncodingError U+F560");
expect(() => {ms932Encoder.encode("\uF561")}).to.throw(Error, "EncodingError U+F561");
expect(() => {ms932Encoder.encode("\uF562")}).to.throw(Error, "EncodingError U+F562");
expect(() => {ms932Encoder.encode("\uF563")}).to.throw(Error, "EncodingError U+F563");
expect(() => {ms932Encoder.encode("\uF564")}).to.throw(Error, "EncodingError U+F564");
expect(() => {ms932Encoder.encode("\uF565")}).to.throw(Error, "EncodingError U+F565");
expect(() => {ms932Encoder.encode("\uF566")}).to.throw(Error, "EncodingError U+F566");
expect(() => {ms932Encoder.encode("\uF567")}).to.throw(Error, "EncodingError U+F567");
expect(() => {ms932Encoder.encode("\uF568")}).to.throw(Error, "EncodingError U+F568");
expect(() => {ms932Encoder.encode("\uF569")}).to.throw(Error, "EncodingError U+F569");
expect(() => {ms932Encoder.encode("\uF56A")}).to.throw(Error, "EncodingError U+F56A");
expect(() => {ms932Encoder.encode("\uF56B")}).to.throw(Error, "EncodingError U+F56B");
expect(() => {ms932Encoder.encode("\uF56C")}).to.throw(Error, "EncodingError U+F56C");
expect(() => {ms932Encoder.encode("\uF56D")}).to.throw(Error, "EncodingError U+F56D");
expect(() => {ms932Encoder.encode("\uF56E")}).to.throw(Error, "EncodingError U+F56E");
expect(() => {ms932Encoder.encode("\uF56F")}).to.throw(Error, "EncodingError U+F56F");
expect(() => {ms932Encoder.encode("\uF570")}).to.throw(Error, "EncodingError U+F570");
expect(() => {ms932Encoder.encode("\uF571")}).to.throw(Error, "EncodingError U+F571");
expect(() => {ms932Encoder.encode("\uF572")}).to.throw(Error, "EncodingError U+F572");
expect(() => {ms932Encoder.encode("\uF573")}).to.throw(Error, "EncodingError U+F573");
expect(() => {ms932Encoder.encode("\uF574")}).to.throw(Error, "EncodingError U+F574");
expect(() => {ms932Encoder.encode("\uF575")}).to.throw(Error, "EncodingError U+F575");
expect(() => {ms932Encoder.encode("\uF576")}).to.throw(Error, "EncodingError U+F576");
expect(() => {ms932Encoder.encode("\uF577")}).to.throw(Error, "EncodingError U+F577");
expect(() => {ms932Encoder.encode("\uF578")}).to.throw(Error, "EncodingError U+F578");
expect(() => {ms932Encoder.encode("\uF579")}).to.throw(Error, "EncodingError U+F579");
expect(() => {ms932Encoder.encode("\uF57A")}).to.throw(Error, "EncodingError U+F57A");
expect(() => {ms932Encoder.encode("\uF57B")}).to.throw(Error, "EncodingError U+F57B");
expect(() => {ms932Encoder.encode("\uF57C")}).to.throw(Error, "EncodingError U+F57C");
expect(() => {ms932Encoder.encode("\uF57D")}).to.throw(Error, "EncodingError U+F57D");
expect(() => {ms932Encoder.encode("\uF57E")}).to.throw(Error, "EncodingError U+F57E");
expect(() => {ms932Encoder.encode("\uF57F")}).to.throw(Error, "EncodingError U+F57F");
expect(() => {ms932Encoder.encode("\uF580")}).to.throw(Error, "EncodingError U+F580");
expect(() => {ms932Encoder.encode("\uF581")}).to.throw(Error, "EncodingError U+F581");
expect(() => {ms932Encoder.encode("\uF582")}).to.throw(Error, "EncodingError U+F582");
expect(() => {ms932Encoder.encode("\uF583")}).to.throw(Error, "EncodingError U+F583");
expect(() => {ms932Encoder.encode("\uF584")}).to.throw(Error, "EncodingError U+F584");
expect(() => {ms932Encoder.encode("\uF585")}).to.throw(Error, "EncodingError U+F585");
expect(() => {ms932Encoder.encode("\uF586")}).to.throw(Error, "EncodingError U+F586");
expect(() => {ms932Encoder.encode("\uF587")}).to.throw(Error, "EncodingError U+F587");
expect(() => {ms932Encoder.encode("\uF588")}).to.throw(Error, "EncodingError U+F588");
expect(() => {ms932Encoder.encode("\uF589")}).to.throw(Error, "EncodingError U+F589");
expect(() => {ms932Encoder.encode("\uF58A")}).to.throw(Error, "EncodingError U+F58A");
expect(() => {ms932Encoder.encode("\uF58B")}).to.throw(Error, "EncodingError U+F58B");
expect(() => {ms932Encoder.encode("\uF58C")}).to.throw(Error, "EncodingError U+F58C");
expect(() => {ms932Encoder.encode("\uF58D")}).to.throw(Error, "EncodingError U+F58D");
expect(() => {ms932Encoder.encode("\uF58E")}).to.throw(Error, "EncodingError U+F58E");
expect(() => {ms932Encoder.encode("\uF58F")}).to.throw(Error, "EncodingError U+F58F");
expect(() => {ms932Encoder.encode("\uF590")}).to.throw(Error, "EncodingError U+F590");
expect(() => {ms932Encoder.encode("\uF591")}).to.throw(Error, "EncodingError U+F591");
expect(() => {ms932Encoder.encode("\uF592")}).to.throw(Error, "EncodingError U+F592");
expect(() => {ms932Encoder.encode("\uF593")}).to.throw(Error, "EncodingError U+F593");
expect(() => {ms932Encoder.encode("\uF594")}).to.throw(Error, "EncodingError U+F594");
expect(() => {ms932Encoder.encode("\uF595")}).to.throw(Error, "EncodingError U+F595");
expect(() => {ms932Encoder.encode("\uF596")}).to.throw(Error, "EncodingError U+F596");
expect(() => {ms932Encoder.encode("\uF597")}).to.throw(Error, "EncodingError U+F597");
expect(() => {ms932Encoder.encode("\uF598")}).to.throw(Error, "EncodingError U+F598");
expect(() => {ms932Encoder.encode("\uF599")}).to.throw(Error, "EncodingError U+F599");
expect(() => {ms932Encoder.encode("\uF59A")}).to.throw(Error, "EncodingError U+F59A");
expect(() => {ms932Encoder.encode("\uF59B")}).to.throw(Error, "EncodingError U+F59B");
expect(() => {ms932Encoder.encode("\uF59C")}).to.throw(Error, "EncodingError U+F59C");
expect(() => {ms932Encoder.encode("\uF59D")}).to.throw(Error, "EncodingError U+F59D");
expect(() => {ms932Encoder.encode("\uF59E")}).to.throw(Error, "EncodingError U+F59E");
expect(() => {ms932Encoder.encode("\uF59F")}).to.throw(Error, "EncodingError U+F59F");
expect(() => {ms932Encoder.encode("\uF5A0")}).to.throw(Error, "EncodingError U+F5A0");
expect(() => {ms932Encoder.encode("\uF5A1")}).to.throw(Error, "EncodingError U+F5A1");
expect(() => {ms932Encoder.encode("\uF5A2")}).to.throw(Error, "EncodingError U+F5A2");
expect(() => {ms932Encoder.encode("\uF5A3")}).to.throw(Error, "EncodingError U+F5A3");
expect(() => {ms932Encoder.encode("\uF5A4")}).to.throw(Error, "EncodingError U+F5A4");
expect(() => {ms932Encoder.encode("\uF5A5")}).to.throw(Error, "EncodingError U+F5A5");
expect(() => {ms932Encoder.encode("\uF5A6")}).to.throw(Error, "EncodingError U+F5A6");
expect(() => {ms932Encoder.encode("\uF5A7")}).to.throw(Error, "EncodingError U+F5A7");
expect(() => {ms932Encoder.encode("\uF5A8")}).to.throw(Error, "EncodingError U+F5A8");
expect(() => {ms932Encoder.encode("\uF5A9")}).to.throw(Error, "EncodingError U+F5A9");
expect(() => {ms932Encoder.encode("\uF5AA")}).to.throw(Error, "EncodingError U+F5AA");
expect(() => {ms932Encoder.encode("\uF5AB")}).to.throw(Error, "EncodingError U+F5AB");
expect(() => {ms932Encoder.encode("\uF5AC")}).to.throw(Error, "EncodingError U+F5AC");
expect(() => {ms932Encoder.encode("\uF5AD")}).to.throw(Error, "EncodingError U+F5AD");
expect(() => {ms932Encoder.encode("\uF5AE")}).to.throw(Error, "EncodingError U+F5AE");
expect(() => {ms932Encoder.encode("\uF5AF")}).to.throw(Error, "EncodingError U+F5AF");
expect(() => {ms932Encoder.encode("\uF5B0")}).to.throw(Error, "EncodingError U+F5B0");
expect(() => {ms932Encoder.encode("\uF5B1")}).to.throw(Error, "EncodingError U+F5B1");
expect(() => {ms932Encoder.encode("\uF5B2")}).to.throw(Error, "EncodingError U+F5B2");
expect(() => {ms932Encoder.encode("\uF5B3")}).to.throw(Error, "EncodingError U+F5B3");
expect(() => {ms932Encoder.encode("\uF5B4")}).to.throw(Error, "EncodingError U+F5B4");
expect(() => {ms932Encoder.encode("\uF5B5")}).to.throw(Error, "EncodingError U+F5B5");
expect(() => {ms932Encoder.encode("\uF5B6")}).to.throw(Error, "EncodingError U+F5B6");
expect(() => {ms932Encoder.encode("\uF5B7")}).to.throw(Error, "EncodingError U+F5B7");
expect(() => {ms932Encoder.encode("\uF5B8")}).to.throw(Error, "EncodingError U+F5B8");
expect(() => {ms932Encoder.encode("\uF5B9")}).to.throw(Error, "EncodingError U+F5B9");
expect(() => {ms932Encoder.encode("\uF5BA")}).to.throw(Error, "EncodingError U+F5BA");
expect(() => {ms932Encoder.encode("\uF5BB")}).to.throw(Error, "EncodingError U+F5BB");
expect(() => {ms932Encoder.encode("\uF5BC")}).to.throw(Error, "EncodingError U+F5BC");
expect(() => {ms932Encoder.encode("\uF5BD")}).to.throw(Error, "EncodingError U+F5BD");
expect(() => {ms932Encoder.encode("\uF5BE")}).to.throw(Error, "EncodingError U+F5BE");
expect(() => {ms932Encoder.encode("\uF5BF")}).to.throw(Error, "EncodingError U+F5BF");
expect(() => {ms932Encoder.encode("\uF5C0")}).to.throw(Error, "EncodingError U+F5C0");
expect(() => {ms932Encoder.encode("\uF5C1")}).to.throw(Error, "EncodingError U+F5C1");
expect(() => {ms932Encoder.encode("\uF5C2")}).to.throw(Error, "EncodingError U+F5C2");
expect(() => {ms932Encoder.encode("\uF5C3")}).to.throw(Error, "EncodingError U+F5C3");
expect(() => {ms932Encoder.encode("\uF5C4")}).to.throw(Error, "EncodingError U+F5C4");
expect(() => {ms932Encoder.encode("\uF5C5")}).to.throw(Error, "EncodingError U+F5C5");
expect(() => {ms932Encoder.encode("\uF5C6")}).to.throw(Error, "EncodingError U+F5C6");
expect(() => {ms932Encoder.encode("\uF5C7")}).to.throw(Error, "EncodingError U+F5C7");
expect(() => {ms932Encoder.encode("\uF5C8")}).to.throw(Error, "EncodingError U+F5C8");
expect(() => {ms932Encoder.encode("\uF5C9")}).to.throw(Error, "EncodingError U+F5C9");
expect(() => {ms932Encoder.encode("\uF5CA")}).to.throw(Error, "EncodingError U+F5CA");
expect(() => {ms932Encoder.encode("\uF5CB")}).to.throw(Error, "EncodingError U+F5CB");
expect(() => {ms932Encoder.encode("\uF5CC")}).to.throw(Error, "EncodingError U+F5CC");
expect(() => {ms932Encoder.encode("\uF5CD")}).to.throw(Error, "EncodingError U+F5CD");
expect(() => {ms932Encoder.encode("\uF5CE")}).to.throw(Error, "EncodingError U+F5CE");
expect(() => {ms932Encoder.encode("\uF5CF")}).to.throw(Error, "EncodingError U+F5CF");
expect(() => {ms932Encoder.encode("\uF5D0")}).to.throw(Error, "EncodingError U+F5D0");
expect(() => {ms932Encoder.encode("\uF5D1")}).to.throw(Error, "EncodingError U+F5D1");
expect(() => {ms932Encoder.encode("\uF5D2")}).to.throw(Error, "EncodingError U+F5D2");
expect(() => {ms932Encoder.encode("\uF5D3")}).to.throw(Error, "EncodingError U+F5D3");
expect(() => {ms932Encoder.encode("\uF5D4")}).to.throw(Error, "EncodingError U+F5D4");
expect(() => {ms932Encoder.encode("\uF5D5")}).to.throw(Error, "EncodingError U+F5D5");
expect(() => {ms932Encoder.encode("\uF5D6")}).to.throw(Error, "EncodingError U+F5D6");
expect(() => {ms932Encoder.encode("\uF5D7")}).to.throw(Error, "EncodingError U+F5D7");
expect(() => {ms932Encoder.encode("\uF5D8")}).to.throw(Error, "EncodingError U+F5D8");
expect(() => {ms932Encoder.encode("\uF5D9")}).to.throw(Error, "EncodingError U+F5D9");
expect(() => {ms932Encoder.encode("\uF5DA")}).to.throw(Error, "EncodingError U+F5DA");
expect(() => {ms932Encoder.encode("\uF5DB")}).to.throw(Error, "EncodingError U+F5DB");
expect(() => {ms932Encoder.encode("\uF5DC")}).to.throw(Error, "EncodingError U+F5DC");
expect(() => {ms932Encoder.encode("\uF5DD")}).to.throw(Error, "EncodingError U+F5DD");
expect(() => {ms932Encoder.encode("\uF5DE")}).to.throw(Error, "EncodingError U+F5DE");
expect(() => {ms932Encoder.encode("\uF5DF")}).to.throw(Error, "EncodingError U+F5DF");
expect(() => {ms932Encoder.encode("\uF5E0")}).to.throw(Error, "EncodingError U+F5E0");
expect(() => {ms932Encoder.encode("\uF5E1")}).to.throw(Error, "EncodingError U+F5E1");
expect(() => {ms932Encoder.encode("\uF5E2")}).to.throw(Error, "EncodingError U+F5E2");
expect(() => {ms932Encoder.encode("\uF5E3")}).to.throw(Error, "EncodingError U+F5E3");
expect(() => {ms932Encoder.encode("\uF5E4")}).to.throw(Error, "EncodingError U+F5E4");
expect(() => {ms932Encoder.encode("\uF5E5")}).to.throw(Error, "EncodingError U+F5E5");
expect(() => {ms932Encoder.encode("\uF5E6")}).to.throw(Error, "EncodingError U+F5E6");
expect(() => {ms932Encoder.encode("\uF5E7")}).to.throw(Error, "EncodingError U+F5E7");
expect(() => {ms932Encoder.encode("\uF5E8")}).to.throw(Error, "EncodingError U+F5E8");
expect(() => {ms932Encoder.encode("\uF5E9")}).to.throw(Error, "EncodingError U+F5E9");
expect(() => {ms932Encoder.encode("\uF5EA")}).to.throw(Error, "EncodingError U+F5EA");
expect(() => {ms932Encoder.encode("\uF5EB")}).to.throw(Error, "EncodingError U+F5EB");
expect(() => {ms932Encoder.encode("\uF5EC")}).to.throw(Error, "EncodingError U+F5EC");
expect(() => {ms932Encoder.encode("\uF5ED")}).to.throw(Error, "EncodingError U+F5ED");
expect(() => {ms932Encoder.encode("\uF5EE")}).to.throw(Error, "EncodingError U+F5EE");
expect(() => {ms932Encoder.encode("\uF5EF")}).to.throw(Error, "EncodingError U+F5EF");
expect(() => {ms932Encoder.encode("\uF5F0")}).to.throw(Error, "EncodingError U+F5F0");
expect(() => {ms932Encoder.encode("\uF5F1")}).to.throw(Error, "EncodingError U+F5F1");
expect(() => {ms932Encoder.encode("\uF5F2")}).to.throw(Error, "EncodingError U+F5F2");
expect(() => {ms932Encoder.encode("\uF5F3")}).to.throw(Error, "EncodingError U+F5F3");
expect(() => {ms932Encoder.encode("\uF5F4")}).to.throw(Error, "EncodingError U+F5F4");
expect(() => {ms932Encoder.encode("\uF5F5")}).to.throw(Error, "EncodingError U+F5F5");
expect(() => {ms932Encoder.encode("\uF5F6")}).to.throw(Error, "EncodingError U+F5F6");
expect(() => {ms932Encoder.encode("\uF5F7")}).to.throw(Error, "EncodingError U+F5F7");
expect(() => {ms932Encoder.encode("\uF5F8")}).to.throw(Error, "EncodingError U+F5F8");
expect(() => {ms932Encoder.encode("\uF5F9")}).to.throw(Error, "EncodingError U+F5F9");
expect(() => {ms932Encoder.encode("\uF5FA")}).to.throw(Error, "EncodingError U+F5FA");
expect(() => {ms932Encoder.encode("\uF5FB")}).to.throw(Error, "EncodingError U+F5FB");
expect(() => {ms932Encoder.encode("\uF5FC")}).to.throw(Error, "EncodingError U+F5FC");
expect(() => {ms932Encoder.encode("\uF5FD")}).to.throw(Error, "EncodingError U+F5FD");
expect(() => {ms932Encoder.encode("\uF5FE")}).to.throw(Error, "EncodingError U+F5FE");
expect(() => {ms932Encoder.encode("\uF5FF")}).to.throw(Error, "EncodingError U+F5FF");
expect(() => {ms932Encoder.encode("\uF600")}).to.throw(Error, "EncodingError U+F600");
expect(() => {ms932Encoder.encode("\uF601")}).to.throw(Error, "EncodingError U+F601");
expect(() => {ms932Encoder.encode("\uF602")}).to.throw(Error, "EncodingError U+F602");
expect(() => {ms932Encoder.encode("\uF603")}).to.throw(Error, "EncodingError U+F603");
expect(() => {ms932Encoder.encode("\uF604")}).to.throw(Error, "EncodingError U+F604");
expect(() => {ms932Encoder.encode("\uF605")}).to.throw(Error, "EncodingError U+F605");
expect(() => {ms932Encoder.encode("\uF606")}).to.throw(Error, "EncodingError U+F606");
expect(() => {ms932Encoder.encode("\uF607")}).to.throw(Error, "EncodingError U+F607");
expect(() => {ms932Encoder.encode("\uF608")}).to.throw(Error, "EncodingError U+F608");
expect(() => {ms932Encoder.encode("\uF609")}).to.throw(Error, "EncodingError U+F609");
expect(() => {ms932Encoder.encode("\uF60A")}).to.throw(Error, "EncodingError U+F60A");
expect(() => {ms932Encoder.encode("\uF60B")}).to.throw(Error, "EncodingError U+F60B");
expect(() => {ms932Encoder.encode("\uF60C")}).to.throw(Error, "EncodingError U+F60C");
expect(() => {ms932Encoder.encode("\uF60D")}).to.throw(Error, "EncodingError U+F60D");
expect(() => {ms932Encoder.encode("\uF60E")}).to.throw(Error, "EncodingError U+F60E");
expect(() => {ms932Encoder.encode("\uF60F")}).to.throw(Error, "EncodingError U+F60F");
expect(() => {ms932Encoder.encode("\uF610")}).to.throw(Error, "EncodingError U+F610");
expect(() => {ms932Encoder.encode("\uF611")}).to.throw(Error, "EncodingError U+F611");
expect(() => {ms932Encoder.encode("\uF612")}).to.throw(Error, "EncodingError U+F612");
expect(() => {ms932Encoder.encode("\uF613")}).to.throw(Error, "EncodingError U+F613");
expect(() => {ms932Encoder.encode("\uF614")}).to.throw(Error, "EncodingError U+F614");
expect(() => {ms932Encoder.encode("\uF615")}).to.throw(Error, "EncodingError U+F615");
expect(() => {ms932Encoder.encode("\uF616")}).to.throw(Error, "EncodingError U+F616");
expect(() => {ms932Encoder.encode("\uF617")}).to.throw(Error, "EncodingError U+F617");
expect(() => {ms932Encoder.encode("\uF618")}).to.throw(Error, "EncodingError U+F618");
expect(() => {ms932Encoder.encode("\uF619")}).to.throw(Error, "EncodingError U+F619");
expect(() => {ms932Encoder.encode("\uF61A")}).to.throw(Error, "EncodingError U+F61A");
expect(() => {ms932Encoder.encode("\uF61B")}).to.throw(Error, "EncodingError U+F61B");
expect(() => {ms932Encoder.encode("\uF61C")}).to.throw(Error, "EncodingError U+F61C");
expect(() => {ms932Encoder.encode("\uF61D")}).to.throw(Error, "EncodingError U+F61D");
expect(() => {ms932Encoder.encode("\uF61E")}).to.throw(Error, "EncodingError U+F61E");
expect(() => {ms932Encoder.encode("\uF61F")}).to.throw(Error, "EncodingError U+F61F");
expect(() => {ms932Encoder.encode("\uF620")}).to.throw(Error, "EncodingError U+F620");
expect(() => {ms932Encoder.encode("\uF621")}).to.throw(Error, "EncodingError U+F621");
expect(() => {ms932Encoder.encode("\uF622")}).to.throw(Error, "EncodingError U+F622");
expect(() => {ms932Encoder.encode("\uF623")}).to.throw(Error, "EncodingError U+F623");
expect(() => {ms932Encoder.encode("\uF624")}).to.throw(Error, "EncodingError U+F624");
expect(() => {ms932Encoder.encode("\uF625")}).to.throw(Error, "EncodingError U+F625");
expect(() => {ms932Encoder.encode("\uF626")}).to.throw(Error, "EncodingError U+F626");
expect(() => {ms932Encoder.encode("\uF627")}).to.throw(Error, "EncodingError U+F627");
expect(() => {ms932Encoder.encode("\uF628")}).to.throw(Error, "EncodingError U+F628");
expect(() => {ms932Encoder.encode("\uF629")}).to.throw(Error, "EncodingError U+F629");
expect(() => {ms932Encoder.encode("\uF62A")}).to.throw(Error, "EncodingError U+F62A");
expect(() => {ms932Encoder.encode("\uF62B")}).to.throw(Error, "EncodingError U+F62B");
expect(() => {ms932Encoder.encode("\uF62C")}).to.throw(Error, "EncodingError U+F62C");
expect(() => {ms932Encoder.encode("\uF62D")}).to.throw(Error, "EncodingError U+F62D");
expect(() => {ms932Encoder.encode("\uF62E")}).to.throw(Error, "EncodingError U+F62E");
expect(() => {ms932Encoder.encode("\uF62F")}).to.throw(Error, "EncodingError U+F62F");
expect(() => {ms932Encoder.encode("\uF630")}).to.throw(Error, "EncodingError U+F630");
expect(() => {ms932Encoder.encode("\uF631")}).to.throw(Error, "EncodingError U+F631");
expect(() => {ms932Encoder.encode("\uF632")}).to.throw(Error, "EncodingError U+F632");
expect(() => {ms932Encoder.encode("\uF633")}).to.throw(Error, "EncodingError U+F633");
expect(() => {ms932Encoder.encode("\uF634")}).to.throw(Error, "EncodingError U+F634");
expect(() => {ms932Encoder.encode("\uF635")}).to.throw(Error, "EncodingError U+F635");
expect(() => {ms932Encoder.encode("\uF636")}).to.throw(Error, "EncodingError U+F636");
expect(() => {ms932Encoder.encode("\uF637")}).to.throw(Error, "EncodingError U+F637");
expect(() => {ms932Encoder.encode("\uF638")}).to.throw(Error, "EncodingError U+F638");
expect(() => {ms932Encoder.encode("\uF639")}).to.throw(Error, "EncodingError U+F639");
expect(() => {ms932Encoder.encode("\uF63A")}).to.throw(Error, "EncodingError U+F63A");
expect(() => {ms932Encoder.encode("\uF63B")}).to.throw(Error, "EncodingError U+F63B");
expect(() => {ms932Encoder.encode("\uF63C")}).to.throw(Error, "EncodingError U+F63C");
expect(() => {ms932Encoder.encode("\uF63D")}).to.throw(Error, "EncodingError U+F63D");
expect(() => {ms932Encoder.encode("\uF63E")}).to.throw(Error, "EncodingError U+F63E");
expect(() => {ms932Encoder.encode("\uF63F")}).to.throw(Error, "EncodingError U+F63F");
expect(() => {ms932Encoder.encode("\uF640")}).to.throw(Error, "EncodingError U+F640");
expect(() => {ms932Encoder.encode("\uF641")}).to.throw(Error, "EncodingError U+F641");
expect(() => {ms932Encoder.encode("\uF642")}).to.throw(Error, "EncodingError U+F642");
expect(() => {ms932Encoder.encode("\uF643")}).to.throw(Error, "EncodingError U+F643");
expect(() => {ms932Encoder.encode("\uF644")}).to.throw(Error, "EncodingError U+F644");
expect(() => {ms932Encoder.encode("\uF645")}).to.throw(Error, "EncodingError U+F645");
expect(() => {ms932Encoder.encode("\uF646")}).to.throw(Error, "EncodingError U+F646");
expect(() => {ms932Encoder.encode("\uF647")}).to.throw(Error, "EncodingError U+F647");
expect(() => {ms932Encoder.encode("\uF648")}).to.throw(Error, "EncodingError U+F648");
expect(() => {ms932Encoder.encode("\uF649")}).to.throw(Error, "EncodingError U+F649");
expect(() => {ms932Encoder.encode("\uF64A")}).to.throw(Error, "EncodingError U+F64A");
expect(() => {ms932Encoder.encode("\uF64B")}).to.throw(Error, "EncodingError U+F64B");
expect(() => {ms932Encoder.encode("\uF64C")}).to.throw(Error, "EncodingError U+F64C");
expect(() => {ms932Encoder.encode("\uF64D")}).to.throw(Error, "EncodingError U+F64D");
expect(() => {ms932Encoder.encode("\uF64E")}).to.throw(Error, "EncodingError U+F64E");
expect(() => {ms932Encoder.encode("\uF64F")}).to.throw(Error, "EncodingError U+F64F");
expect(() => {ms932Encoder.encode("\uF650")}).to.throw(Error, "EncodingError U+F650");
expect(() => {ms932Encoder.encode("\uF651")}).to.throw(Error, "EncodingError U+F651");
expect(() => {ms932Encoder.encode("\uF652")}).to.throw(Error, "EncodingError U+F652");
expect(() => {ms932Encoder.encode("\uF653")}).to.throw(Error, "EncodingError U+F653");
expect(() => {ms932Encoder.encode("\uF654")}).to.throw(Error, "EncodingError U+F654");
expect(() => {ms932Encoder.encode("\uF655")}).to.throw(Error, "EncodingError U+F655");
expect(() => {ms932Encoder.encode("\uF656")}).to.throw(Error, "EncodingError U+F656");
expect(() => {ms932Encoder.encode("\uF657")}).to.throw(Error, "EncodingError U+F657");
expect(() => {ms932Encoder.encode("\uF658")}).to.throw(Error, "EncodingError U+F658");
expect(() => {ms932Encoder.encode("\uF659")}).to.throw(Error, "EncodingError U+F659");
expect(() => {ms932Encoder.encode("\uF65A")}).to.throw(Error, "EncodingError U+F65A");
expect(() => {ms932Encoder.encode("\uF65B")}).to.throw(Error, "EncodingError U+F65B");
expect(() => {ms932Encoder.encode("\uF65C")}).to.throw(Error, "EncodingError U+F65C");
expect(() => {ms932Encoder.encode("\uF65D")}).to.throw(Error, "EncodingError U+F65D");
expect(() => {ms932Encoder.encode("\uF65E")}).to.throw(Error, "EncodingError U+F65E");
expect(() => {ms932Encoder.encode("\uF65F")}).to.throw(Error, "EncodingError U+F65F");
expect(() => {ms932Encoder.encode("\uF660")}).to.throw(Error, "EncodingError U+F660");
expect(() => {ms932Encoder.encode("\uF661")}).to.throw(Error, "EncodingError U+F661");
expect(() => {ms932Encoder.encode("\uF662")}).to.throw(Error, "EncodingError U+F662");
expect(() => {ms932Encoder.encode("\uF663")}).to.throw(Error, "EncodingError U+F663");
expect(() => {ms932Encoder.encode("\uF664")}).to.throw(Error, "EncodingError U+F664");
expect(() => {ms932Encoder.encode("\uF665")}).to.throw(Error, "EncodingError U+F665");
expect(() => {ms932Encoder.encode("\uF666")}).to.throw(Error, "EncodingError U+F666");
expect(() => {ms932Encoder.encode("\uF667")}).to.throw(Error, "EncodingError U+F667");
expect(() => {ms932Encoder.encode("\uF668")}).to.throw(Error, "EncodingError U+F668");
expect(() => {ms932Encoder.encode("\uF669")}).to.throw(Error, "EncodingError U+F669");
expect(() => {ms932Encoder.encode("\uF66A")}).to.throw(Error, "EncodingError U+F66A");
expect(() => {ms932Encoder.encode("\uF66B")}).to.throw(Error, "EncodingError U+F66B");
expect(() => {ms932Encoder.encode("\uF66C")}).to.throw(Error, "EncodingError U+F66C");
expect(() => {ms932Encoder.encode("\uF66D")}).to.throw(Error, "EncodingError U+F66D");
expect(() => {ms932Encoder.encode("\uF66E")}).to.throw(Error, "EncodingError U+F66E");
expect(() => {ms932Encoder.encode("\uF66F")}).to.throw(Error, "EncodingError U+F66F");
expect(() => {ms932Encoder.encode("\uF670")}).to.throw(Error, "EncodingError U+F670");
expect(() => {ms932Encoder.encode("\uF671")}).to.throw(Error, "EncodingError U+F671");
expect(() => {ms932Encoder.encode("\uF672")}).to.throw(Error, "EncodingError U+F672");
expect(() => {ms932Encoder.encode("\uF673")}).to.throw(Error, "EncodingError U+F673");
expect(() => {ms932Encoder.encode("\uF674")}).to.throw(Error, "EncodingError U+F674");
expect(() => {ms932Encoder.encode("\uF675")}).to.throw(Error, "EncodingError U+F675");
expect(() => {ms932Encoder.encode("\uF676")}).to.throw(Error, "EncodingError U+F676");
expect(() => {ms932Encoder.encode("\uF677")}).to.throw(Error, "EncodingError U+F677");
expect(() => {ms932Encoder.encode("\uF678")}).to.throw(Error, "EncodingError U+F678");
expect(() => {ms932Encoder.encode("\uF679")}).to.throw(Error, "EncodingError U+F679");
expect(() => {ms932Encoder.encode("\uF67A")}).to.throw(Error, "EncodingError U+F67A");
expect(() => {ms932Encoder.encode("\uF67B")}).to.throw(Error, "EncodingError U+F67B");
expect(() => {ms932Encoder.encode("\uF67C")}).to.throw(Error, "EncodingError U+F67C");
expect(() => {ms932Encoder.encode("\uF67D")}).to.throw(Error, "EncodingError U+F67D");
expect(() => {ms932Encoder.encode("\uF67E")}).to.throw(Error, "EncodingError U+F67E");
expect(() => {ms932Encoder.encode("\uF67F")}).to.throw(Error, "EncodingError U+F67F");
expect(() => {ms932Encoder.encode("\uF680")}).to.throw(Error, "EncodingError U+F680");
expect(() => {ms932Encoder.encode("\uF681")}).to.throw(Error, "EncodingError U+F681");
expect(() => {ms932Encoder.encode("\uF682")}).to.throw(Error, "EncodingError U+F682");
expect(() => {ms932Encoder.encode("\uF683")}).to.throw(Error, "EncodingError U+F683");
expect(() => {ms932Encoder.encode("\uF684")}).to.throw(Error, "EncodingError U+F684");
expect(() => {ms932Encoder.encode("\uF685")}).to.throw(Error, "EncodingError U+F685");
expect(() => {ms932Encoder.encode("\uF686")}).to.throw(Error, "EncodingError U+F686");
expect(() => {ms932Encoder.encode("\uF687")}).to.throw(Error, "EncodingError U+F687");
expect(() => {ms932Encoder.encode("\uF688")}).to.throw(Error, "EncodingError U+F688");
expect(() => {ms932Encoder.encode("\uF689")}).to.throw(Error, "EncodingError U+F689");
expect(() => {ms932Encoder.encode("\uF68A")}).to.throw(Error, "EncodingError U+F68A");
expect(() => {ms932Encoder.encode("\uF68B")}).to.throw(Error, "EncodingError U+F68B");
expect(() => {ms932Encoder.encode("\uF68C")}).to.throw(Error, "EncodingError U+F68C");
expect(() => {ms932Encoder.encode("\uF68D")}).to.throw(Error, "EncodingError U+F68D");
expect(() => {ms932Encoder.encode("\uF68E")}).to.throw(Error, "EncodingError U+F68E");
expect(() => {ms932Encoder.encode("\uF68F")}).to.throw(Error, "EncodingError U+F68F");
expect(() => {ms932Encoder.encode("\uF690")}).to.throw(Error, "EncodingError U+F690");
expect(() => {ms932Encoder.encode("\uF691")}).to.throw(Error, "EncodingError U+F691");
expect(() => {ms932Encoder.encode("\uF692")}).to.throw(Error, "EncodingError U+F692");
expect(() => {ms932Encoder.encode("\uF693")}).to.throw(Error, "EncodingError U+F693");
expect(() => {ms932Encoder.encode("\uF694")}).to.throw(Error, "EncodingError U+F694");
expect(() => {ms932Encoder.encode("\uF695")}).to.throw(Error, "EncodingError U+F695");
expect(() => {ms932Encoder.encode("\uF696")}).to.throw(Error, "EncodingError U+F696");
expect(() => {ms932Encoder.encode("\uF697")}).to.throw(Error, "EncodingError U+F697");
expect(() => {ms932Encoder.encode("\uF698")}).to.throw(Error, "EncodingError U+F698");
expect(() => {ms932Encoder.encode("\uF699")}).to.throw(Error, "EncodingError U+F699");
expect(() => {ms932Encoder.encode("\uF69A")}).to.throw(Error, "EncodingError U+F69A");
expect(() => {ms932Encoder.encode("\uF69B")}).to.throw(Error, "EncodingError U+F69B");
expect(() => {ms932Encoder.encode("\uF69C")}).to.throw(Error, "EncodingError U+F69C");
expect(() => {ms932Encoder.encode("\uF69D")}).to.throw(Error, "EncodingError U+F69D");
expect(() => {ms932Encoder.encode("\uF69E")}).to.throw(Error, "EncodingError U+F69E");
expect(() => {ms932Encoder.encode("\uF69F")}).to.throw(Error, "EncodingError U+F69F");
expect(() => {ms932Encoder.encode("\uF6A0")}).to.throw(Error, "EncodingError U+F6A0");
expect(() => {ms932Encoder.encode("\uF6A1")}).to.throw(Error, "EncodingError U+F6A1");
expect(() => {ms932Encoder.encode("\uF6A2")}).to.throw(Error, "EncodingError U+F6A2");
expect(() => {ms932Encoder.encode("\uF6A3")}).to.throw(Error, "EncodingError U+F6A3");
expect(() => {ms932Encoder.encode("\uF6A4")}).to.throw(Error, "EncodingError U+F6A4");
expect(() => {ms932Encoder.encode("\uF6A5")}).to.throw(Error, "EncodingError U+F6A5");
expect(() => {ms932Encoder.encode("\uF6A6")}).to.throw(Error, "EncodingError U+F6A6");
expect(() => {ms932Encoder.encode("\uF6A7")}).to.throw(Error, "EncodingError U+F6A7");
expect(() => {ms932Encoder.encode("\uF6A8")}).to.throw(Error, "EncodingError U+F6A8");
expect(() => {ms932Encoder.encode("\uF6A9")}).to.throw(Error, "EncodingError U+F6A9");
expect(() => {ms932Encoder.encode("\uF6AA")}).to.throw(Error, "EncodingError U+F6AA");
expect(() => {ms932Encoder.encode("\uF6AB")}).to.throw(Error, "EncodingError U+F6AB");
expect(() => {ms932Encoder.encode("\uF6AC")}).to.throw(Error, "EncodingError U+F6AC");
expect(() => {ms932Encoder.encode("\uF6AD")}).to.throw(Error, "EncodingError U+F6AD");
expect(() => {ms932Encoder.encode("\uF6AE")}).to.throw(Error, "EncodingError U+F6AE");
expect(() => {ms932Encoder.encode("\uF6AF")}).to.throw(Error, "EncodingError U+F6AF");
expect(() => {ms932Encoder.encode("\uF6B0")}).to.throw(Error, "EncodingError U+F6B0");
expect(() => {ms932Encoder.encode("\uF6B1")}).to.throw(Error, "EncodingError U+F6B1");
expect(() => {ms932Encoder.encode("\uF6B2")}).to.throw(Error, "EncodingError U+F6B2");
expect(() => {ms932Encoder.encode("\uF6B3")}).to.throw(Error, "EncodingError U+F6B3");
expect(() => {ms932Encoder.encode("\uF6B4")}).to.throw(Error, "EncodingError U+F6B4");
expect(() => {ms932Encoder.encode("\uF6B5")}).to.throw(Error, "EncodingError U+F6B5");
expect(() => {ms932Encoder.encode("\uF6B6")}).to.throw(Error, "EncodingError U+F6B6");
expect(() => {ms932Encoder.encode("\uF6B7")}).to.throw(Error, "EncodingError U+F6B7");
expect(() => {ms932Encoder.encode("\uF6B8")}).to.throw(Error, "EncodingError U+F6B8");
expect(() => {ms932Encoder.encode("\uF6B9")}).to.throw(Error, "EncodingError U+F6B9");
expect(() => {ms932Encoder.encode("\uF6BA")}).to.throw(Error, "EncodingError U+F6BA");
expect(() => {ms932Encoder.encode("\uF6BB")}).to.throw(Error, "EncodingError U+F6BB");
expect(() => {ms932Encoder.encode("\uF6BC")}).to.throw(Error, "EncodingError U+F6BC");
expect(() => {ms932Encoder.encode("\uF6BD")}).to.throw(Error, "EncodingError U+F6BD");
expect(() => {ms932Encoder.encode("\uF6BE")}).to.throw(Error, "EncodingError U+F6BE");
expect(() => {ms932Encoder.encode("\uF6BF")}).to.throw(Error, "EncodingError U+F6BF");
expect(() => {ms932Encoder.encode("\uF6C0")}).to.throw(Error, "EncodingError U+F6C0");
expect(() => {ms932Encoder.encode("\uF6C1")}).to.throw(Error, "EncodingError U+F6C1");
expect(() => {ms932Encoder.encode("\uF6C2")}).to.throw(Error, "EncodingError U+F6C2");
expect(() => {ms932Encoder.encode("\uF6C3")}).to.throw(Error, "EncodingError U+F6C3");
expect(() => {ms932Encoder.encode("\uF6C4")}).to.throw(Error, "EncodingError U+F6C4");
expect(() => {ms932Encoder.encode("\uF6C5")}).to.throw(Error, "EncodingError U+F6C5");
expect(() => {ms932Encoder.encode("\uF6C6")}).to.throw(Error, "EncodingError U+F6C6");
expect(() => {ms932Encoder.encode("\uF6C7")}).to.throw(Error, "EncodingError U+F6C7");
expect(() => {ms932Encoder.encode("\uF6C8")}).to.throw(Error, "EncodingError U+F6C8");
expect(() => {ms932Encoder.encode("\uF6C9")}).to.throw(Error, "EncodingError U+F6C9");
expect(() => {ms932Encoder.encode("\uF6CA")}).to.throw(Error, "EncodingError U+F6CA");
expect(() => {ms932Encoder.encode("\uF6CB")}).to.throw(Error, "EncodingError U+F6CB");
expect(() => {ms932Encoder.encode("\uF6CC")}).to.throw(Error, "EncodingError U+F6CC");
expect(() => {ms932Encoder.encode("\uF6CD")}).to.throw(Error, "EncodingError U+F6CD");
expect(() => {ms932Encoder.encode("\uF6CE")}).to.throw(Error, "EncodingError U+F6CE");
expect(() => {ms932Encoder.encode("\uF6CF")}).to.throw(Error, "EncodingError U+F6CF");
expect(() => {ms932Encoder.encode("\uF6D0")}).to.throw(Error, "EncodingError U+F6D0");
expect(() => {ms932Encoder.encode("\uF6D1")}).to.throw(Error, "EncodingError U+F6D1");
expect(() => {ms932Encoder.encode("\uF6D2")}).to.throw(Error, "EncodingError U+F6D2");
expect(() => {ms932Encoder.encode("\uF6D3")}).to.throw(Error, "EncodingError U+F6D3");
expect(() => {ms932Encoder.encode("\uF6D4")}).to.throw(Error, "EncodingError U+F6D4");
expect(() => {ms932Encoder.encode("\uF6D5")}).to.throw(Error, "EncodingError U+F6D5");
expect(() => {ms932Encoder.encode("\uF6D6")}).to.throw(Error, "EncodingError U+F6D6");
expect(() => {ms932Encoder.encode("\uF6D7")}).to.throw(Error, "EncodingError U+F6D7");
expect(() => {ms932Encoder.encode("\uF6D8")}).to.throw(Error, "EncodingError U+F6D8");
expect(() => {ms932Encoder.encode("\uF6D9")}).to.throw(Error, "EncodingError U+F6D9");
expect(() => {ms932Encoder.encode("\uF6DA")}).to.throw(Error, "EncodingError U+F6DA");
expect(() => {ms932Encoder.encode("\uF6DB")}).to.throw(Error, "EncodingError U+F6DB");
expect(() => {ms932Encoder.encode("\uF6DC")}).to.throw(Error, "EncodingError U+F6DC");
expect(() => {ms932Encoder.encode("\uF6DD")}).to.throw(Error, "EncodingError U+F6DD");
expect(() => {ms932Encoder.encode("\uF6DE")}).to.throw(Error, "EncodingError U+F6DE");
expect(() => {ms932Encoder.encode("\uF6DF")}).to.throw(Error, "EncodingError U+F6DF");
expect(() => {ms932Encoder.encode("\uF6E0")}).to.throw(Error, "EncodingError U+F6E0");
expect(() => {ms932Encoder.encode("\uF6E1")}).to.throw(Error, "EncodingError U+F6E1");
expect(() => {ms932Encoder.encode("\uF6E2")}).to.throw(Error, "EncodingError U+F6E2");
expect(() => {ms932Encoder.encode("\uF6E3")}).to.throw(Error, "EncodingError U+F6E3");
expect(() => {ms932Encoder.encode("\uF6E4")}).to.throw(Error, "EncodingError U+F6E4");
expect(() => {ms932Encoder.encode("\uF6E5")}).to.throw(Error, "EncodingError U+F6E5");
expect(() => {ms932Encoder.encode("\uF6E6")}).to.throw(Error, "EncodingError U+F6E6");
expect(() => {ms932Encoder.encode("\uF6E7")}).to.throw(Error, "EncodingError U+F6E7");
expect(() => {ms932Encoder.encode("\uF6E8")}).to.throw(Error, "EncodingError U+F6E8");
expect(() => {ms932Encoder.encode("\uF6E9")}).to.throw(Error, "EncodingError U+F6E9");
expect(() => {ms932Encoder.encode("\uF6EA")}).to.throw(Error, "EncodingError U+F6EA");
expect(() => {ms932Encoder.encode("\uF6EB")}).to.throw(Error, "EncodingError U+F6EB");
expect(() => {ms932Encoder.encode("\uF6EC")}).to.throw(Error, "EncodingError U+F6EC");
expect(() => {ms932Encoder.encode("\uF6ED")}).to.throw(Error, "EncodingError U+F6ED");
expect(() => {ms932Encoder.encode("\uF6EE")}).to.throw(Error, "EncodingError U+F6EE");
expect(() => {ms932Encoder.encode("\uF6EF")}).to.throw(Error, "EncodingError U+F6EF");
expect(() => {ms932Encoder.encode("\uF6F0")}).to.throw(Error, "EncodingError U+F6F0");
expect(() => {ms932Encoder.encode("\uF6F1")}).to.throw(Error, "EncodingError U+F6F1");
expect(() => {ms932Encoder.encode("\uF6F2")}).to.throw(Error, "EncodingError U+F6F2");
expect(() => {ms932Encoder.encode("\uF6F3")}).to.throw(Error, "EncodingError U+F6F3");
expect(() => {ms932Encoder.encode("\uF6F4")}).to.throw(Error, "EncodingError U+F6F4");
expect(() => {ms932Encoder.encode("\uF6F5")}).to.throw(Error, "EncodingError U+F6F5");
expect(() => {ms932Encoder.encode("\uF6F6")}).to.throw(Error, "EncodingError U+F6F6");
expect(() => {ms932Encoder.encode("\uF6F7")}).to.throw(Error, "EncodingError U+F6F7");
expect(() => {ms932Encoder.encode("\uF6F8")}).to.throw(Error, "EncodingError U+F6F8");
expect(() => {ms932Encoder.encode("\uF6F9")}).to.throw(Error, "EncodingError U+F6F9");
expect(() => {ms932Encoder.encode("\uF6FA")}).to.throw(Error, "EncodingError U+F6FA");
expect(() => {ms932Encoder.encode("\uF6FB")}).to.throw(Error, "EncodingError U+F6FB");
expect(() => {ms932Encoder.encode("\uF6FC")}).to.throw(Error, "EncodingError U+F6FC");
expect(() => {ms932Encoder.encode("\uF6FD")}).to.throw(Error, "EncodingError U+F6FD");
expect(() => {ms932Encoder.encode("\uF6FE")}).to.throw(Error, "EncodingError U+F6FE");
expect(() => {ms932Encoder.encode("\uF6FF")}).to.throw(Error, "EncodingError U+F6FF");
expect(() => {ms932Encoder.encode("\uF700")}).to.throw(Error, "EncodingError U+F700");
expect(() => {ms932Encoder.encode("\uF701")}).to.throw(Error, "EncodingError U+F701");
expect(() => {ms932Encoder.encode("\uF702")}).to.throw(Error, "EncodingError U+F702");
expect(() => {ms932Encoder.encode("\uF703")}).to.throw(Error, "EncodingError U+F703");
expect(() => {ms932Encoder.encode("\uF704")}).to.throw(Error, "EncodingError U+F704");
expect(() => {ms932Encoder.encode("\uF705")}).to.throw(Error, "EncodingError U+F705");
expect(() => {ms932Encoder.encode("\uF706")}).to.throw(Error, "EncodingError U+F706");
expect(() => {ms932Encoder.encode("\uF707")}).to.throw(Error, "EncodingError U+F707");
expect(() => {ms932Encoder.encode("\uF708")}).to.throw(Error, "EncodingError U+F708");
expect(() => {ms932Encoder.encode("\uF709")}).to.throw(Error, "EncodingError U+F709");
expect(() => {ms932Encoder.encode("\uF70A")}).to.throw(Error, "EncodingError U+F70A");
expect(() => {ms932Encoder.encode("\uF70B")}).to.throw(Error, "EncodingError U+F70B");
expect(() => {ms932Encoder.encode("\uF70C")}).to.throw(Error, "EncodingError U+F70C");
expect(() => {ms932Encoder.encode("\uF70D")}).to.throw(Error, "EncodingError U+F70D");
expect(() => {ms932Encoder.encode("\uF70E")}).to.throw(Error, "EncodingError U+F70E");
expect(() => {ms932Encoder.encode("\uF70F")}).to.throw(Error, "EncodingError U+F70F");
expect(() => {ms932Encoder.encode("\uF710")}).to.throw(Error, "EncodingError U+F710");
expect(() => {ms932Encoder.encode("\uF711")}).to.throw(Error, "EncodingError U+F711");
expect(() => {ms932Encoder.encode("\uF712")}).to.throw(Error, "EncodingError U+F712");
expect(() => {ms932Encoder.encode("\uF713")}).to.throw(Error, "EncodingError U+F713");
expect(() => {ms932Encoder.encode("\uF714")}).to.throw(Error, "EncodingError U+F714");
expect(() => {ms932Encoder.encode("\uF715")}).to.throw(Error, "EncodingError U+F715");
expect(() => {ms932Encoder.encode("\uF716")}).to.throw(Error, "EncodingError U+F716");
expect(() => {ms932Encoder.encode("\uF717")}).to.throw(Error, "EncodingError U+F717");
expect(() => {ms932Encoder.encode("\uF718")}).to.throw(Error, "EncodingError U+F718");
expect(() => {ms932Encoder.encode("\uF719")}).to.throw(Error, "EncodingError U+F719");
expect(() => {ms932Encoder.encode("\uF71A")}).to.throw(Error, "EncodingError U+F71A");
expect(() => {ms932Encoder.encode("\uF71B")}).to.throw(Error, "EncodingError U+F71B");
expect(() => {ms932Encoder.encode("\uF71C")}).to.throw(Error, "EncodingError U+F71C");
expect(() => {ms932Encoder.encode("\uF71D")}).to.throw(Error, "EncodingError U+F71D");
expect(() => {ms932Encoder.encode("\uF71E")}).to.throw(Error, "EncodingError U+F71E");
expect(() => {ms932Encoder.encode("\uF71F")}).to.throw(Error, "EncodingError U+F71F");
expect(() => {ms932Encoder.encode("\uF720")}).to.throw(Error, "EncodingError U+F720");
expect(() => {ms932Encoder.encode("\uF721")}).to.throw(Error, "EncodingError U+F721");
expect(() => {ms932Encoder.encode("\uF722")}).to.throw(Error, "EncodingError U+F722");
expect(() => {ms932Encoder.encode("\uF723")}).to.throw(Error, "EncodingError U+F723");
expect(() => {ms932Encoder.encode("\uF724")}).to.throw(Error, "EncodingError U+F724");
expect(() => {ms932Encoder.encode("\uF725")}).to.throw(Error, "EncodingError U+F725");
expect(() => {ms932Encoder.encode("\uF726")}).to.throw(Error, "EncodingError U+F726");
expect(() => {ms932Encoder.encode("\uF727")}).to.throw(Error, "EncodingError U+F727");
expect(() => {ms932Encoder.encode("\uF728")}).to.throw(Error, "EncodingError U+F728");
expect(() => {ms932Encoder.encode("\uF729")}).to.throw(Error, "EncodingError U+F729");
expect(() => {ms932Encoder.encode("\uF72A")}).to.throw(Error, "EncodingError U+F72A");
expect(() => {ms932Encoder.encode("\uF72B")}).to.throw(Error, "EncodingError U+F72B");
expect(() => {ms932Encoder.encode("\uF72C")}).to.throw(Error, "EncodingError U+F72C");
expect(() => {ms932Encoder.encode("\uF72D")}).to.throw(Error, "EncodingError U+F72D");
expect(() => {ms932Encoder.encode("\uF72E")}).to.throw(Error, "EncodingError U+F72E");
expect(() => {ms932Encoder.encode("\uF72F")}).to.throw(Error, "EncodingError U+F72F");
expect(() => {ms932Encoder.encode("\uF730")}).to.throw(Error, "EncodingError U+F730");
expect(() => {ms932Encoder.encode("\uF731")}).to.throw(Error, "EncodingError U+F731");
expect(() => {ms932Encoder.encode("\uF732")}).to.throw(Error, "EncodingError U+F732");
expect(() => {ms932Encoder.encode("\uF733")}).to.throw(Error, "EncodingError U+F733");
expect(() => {ms932Encoder.encode("\uF734")}).to.throw(Error, "EncodingError U+F734");
expect(() => {ms932Encoder.encode("\uF735")}).to.throw(Error, "EncodingError U+F735");
expect(() => {ms932Encoder.encode("\uF736")}).to.throw(Error, "EncodingError U+F736");
expect(() => {ms932Encoder.encode("\uF737")}).to.throw(Error, "EncodingError U+F737");
expect(() => {ms932Encoder.encode("\uF738")}).to.throw(Error, "EncodingError U+F738");
expect(() => {ms932Encoder.encode("\uF739")}).to.throw(Error, "EncodingError U+F739");
expect(() => {ms932Encoder.encode("\uF73A")}).to.throw(Error, "EncodingError U+F73A");
expect(() => {ms932Encoder.encode("\uF73B")}).to.throw(Error, "EncodingError U+F73B");
expect(() => {ms932Encoder.encode("\uF73C")}).to.throw(Error, "EncodingError U+F73C");
expect(() => {ms932Encoder.encode("\uF73D")}).to.throw(Error, "EncodingError U+F73D");
expect(() => {ms932Encoder.encode("\uF73E")}).to.throw(Error, "EncodingError U+F73E");
expect(() => {ms932Encoder.encode("\uF73F")}).to.throw(Error, "EncodingError U+F73F");
expect(() => {ms932Encoder.encode("\uF740")}).to.throw(Error, "EncodingError U+F740");
expect(() => {ms932Encoder.encode("\uF741")}).to.throw(Error, "EncodingError U+F741");
expect(() => {ms932Encoder.encode("\uF742")}).to.throw(Error, "EncodingError U+F742");
expect(() => {ms932Encoder.encode("\uF743")}).to.throw(Error, "EncodingError U+F743");
expect(() => {ms932Encoder.encode("\uF744")}).to.throw(Error, "EncodingError U+F744");
expect(() => {ms932Encoder.encode("\uF745")}).to.throw(Error, "EncodingError U+F745");
expect(() => {ms932Encoder.encode("\uF746")}).to.throw(Error, "EncodingError U+F746");
expect(() => {ms932Encoder.encode("\uF747")}).to.throw(Error, "EncodingError U+F747");
expect(() => {ms932Encoder.encode("\uF748")}).to.throw(Error, "EncodingError U+F748");
expect(() => {ms932Encoder.encode("\uF749")}).to.throw(Error, "EncodingError U+F749");
expect(() => {ms932Encoder.encode("\uF74A")}).to.throw(Error, "EncodingError U+F74A");
expect(() => {ms932Encoder.encode("\uF74B")}).to.throw(Error, "EncodingError U+F74B");
expect(() => {ms932Encoder.encode("\uF74C")}).to.throw(Error, "EncodingError U+F74C");
expect(() => {ms932Encoder.encode("\uF74D")}).to.throw(Error, "EncodingError U+F74D");
expect(() => {ms932Encoder.encode("\uF74E")}).to.throw(Error, "EncodingError U+F74E");
expect(() => {ms932Encoder.encode("\uF74F")}).to.throw(Error, "EncodingError U+F74F");
expect(() => {ms932Encoder.encode("\uF750")}).to.throw(Error, "EncodingError U+F750");
expect(() => {ms932Encoder.encode("\uF751")}).to.throw(Error, "EncodingError U+F751");
expect(() => {ms932Encoder.encode("\uF752")}).to.throw(Error, "EncodingError U+F752");
expect(() => {ms932Encoder.encode("\uF753")}).to.throw(Error, "EncodingError U+F753");
expect(() => {ms932Encoder.encode("\uF754")}).to.throw(Error, "EncodingError U+F754");
expect(() => {ms932Encoder.encode("\uF755")}).to.throw(Error, "EncodingError U+F755");
expect(() => {ms932Encoder.encode("\uF756")}).to.throw(Error, "EncodingError U+F756");
expect(() => {ms932Encoder.encode("\uF757")}).to.throw(Error, "EncodingError U+F757");
expect(() => {ms932Encoder.encode("\uF758")}).to.throw(Error, "EncodingError U+F758");
expect(() => {ms932Encoder.encode("\uF759")}).to.throw(Error, "EncodingError U+F759");
expect(() => {ms932Encoder.encode("\uF75A")}).to.throw(Error, "EncodingError U+F75A");
expect(() => {ms932Encoder.encode("\uF75B")}).to.throw(Error, "EncodingError U+F75B");
expect(() => {ms932Encoder.encode("\uF75C")}).to.throw(Error, "EncodingError U+F75C");
expect(() => {ms932Encoder.encode("\uF75D")}).to.throw(Error, "EncodingError U+F75D");
expect(() => {ms932Encoder.encode("\uF75E")}).to.throw(Error, "EncodingError U+F75E");
expect(() => {ms932Encoder.encode("\uF75F")}).to.throw(Error, "EncodingError U+F75F");
expect(() => {ms932Encoder.encode("\uF760")}).to.throw(Error, "EncodingError U+F760");
expect(() => {ms932Encoder.encode("\uF761")}).to.throw(Error, "EncodingError U+F761");
expect(() => {ms932Encoder.encode("\uF762")}).to.throw(Error, "EncodingError U+F762");
expect(() => {ms932Encoder.encode("\uF763")}).to.throw(Error, "EncodingError U+F763");
expect(() => {ms932Encoder.encode("\uF764")}).to.throw(Error, "EncodingError U+F764");
expect(() => {ms932Encoder.encode("\uF765")}).to.throw(Error, "EncodingError U+F765");
expect(() => {ms932Encoder.encode("\uF766")}).to.throw(Error, "EncodingError U+F766");
expect(() => {ms932Encoder.encode("\uF767")}).to.throw(Error, "EncodingError U+F767");
expect(() => {ms932Encoder.encode("\uF768")}).to.throw(Error, "EncodingError U+F768");
expect(() => {ms932Encoder.encode("\uF769")}).to.throw(Error, "EncodingError U+F769");
expect(() => {ms932Encoder.encode("\uF76A")}).to.throw(Error, "EncodingError U+F76A");
expect(() => {ms932Encoder.encode("\uF76B")}).to.throw(Error, "EncodingError U+F76B");
expect(() => {ms932Encoder.encode("\uF76C")}).to.throw(Error, "EncodingError U+F76C");
expect(() => {ms932Encoder.encode("\uF76D")}).to.throw(Error, "EncodingError U+F76D");
expect(() => {ms932Encoder.encode("\uF76E")}).to.throw(Error, "EncodingError U+F76E");
expect(() => {ms932Encoder.encode("\uF76F")}).to.throw(Error, "EncodingError U+F76F");
expect(() => {ms932Encoder.encode("\uF770")}).to.throw(Error, "EncodingError U+F770");
expect(() => {ms932Encoder.encode("\uF771")}).to.throw(Error, "EncodingError U+F771");
expect(() => {ms932Encoder.encode("\uF772")}).to.throw(Error, "EncodingError U+F772");
expect(() => {ms932Encoder.encode("\uF773")}).to.throw(Error, "EncodingError U+F773");
expect(() => {ms932Encoder.encode("\uF774")}).to.throw(Error, "EncodingError U+F774");
expect(() => {ms932Encoder.encode("\uF775")}).to.throw(Error, "EncodingError U+F775");
expect(() => {ms932Encoder.encode("\uF776")}).to.throw(Error, "EncodingError U+F776");
expect(() => {ms932Encoder.encode("\uF777")}).to.throw(Error, "EncodingError U+F777");
expect(() => {ms932Encoder.encode("\uF778")}).to.throw(Error, "EncodingError U+F778");
expect(() => {ms932Encoder.encode("\uF779")}).to.throw(Error, "EncodingError U+F779");
expect(() => {ms932Encoder.encode("\uF77A")}).to.throw(Error, "EncodingError U+F77A");
expect(() => {ms932Encoder.encode("\uF77B")}).to.throw(Error, "EncodingError U+F77B");
expect(() => {ms932Encoder.encode("\uF77C")}).to.throw(Error, "EncodingError U+F77C");
expect(() => {ms932Encoder.encode("\uF77D")}).to.throw(Error, "EncodingError U+F77D");
expect(() => {ms932Encoder.encode("\uF77E")}).to.throw(Error, "EncodingError U+F77E");
expect(() => {ms932Encoder.encode("\uF77F")}).to.throw(Error, "EncodingError U+F77F");
expect(() => {ms932Encoder.encode("\uF780")}).to.throw(Error, "EncodingError U+F780");
expect(() => {ms932Encoder.encode("\uF781")}).to.throw(Error, "EncodingError U+F781");
expect(() => {ms932Encoder.encode("\uF782")}).to.throw(Error, "EncodingError U+F782");
expect(() => {ms932Encoder.encode("\uF783")}).to.throw(Error, "EncodingError U+F783");
expect(() => {ms932Encoder.encode("\uF784")}).to.throw(Error, "EncodingError U+F784");
expect(() => {ms932Encoder.encode("\uF785")}).to.throw(Error, "EncodingError U+F785");
expect(() => {ms932Encoder.encode("\uF786")}).to.throw(Error, "EncodingError U+F786");
expect(() => {ms932Encoder.encode("\uF787")}).to.throw(Error, "EncodingError U+F787");
expect(() => {ms932Encoder.encode("\uF788")}).to.throw(Error, "EncodingError U+F788");
expect(() => {ms932Encoder.encode("\uF789")}).to.throw(Error, "EncodingError U+F789");
expect(() => {ms932Encoder.encode("\uF78A")}).to.throw(Error, "EncodingError U+F78A");
expect(() => {ms932Encoder.encode("\uF78B")}).to.throw(Error, "EncodingError U+F78B");
expect(() => {ms932Encoder.encode("\uF78C")}).to.throw(Error, "EncodingError U+F78C");
expect(() => {ms932Encoder.encode("\uF78D")}).to.throw(Error, "EncodingError U+F78D");
expect(() => {ms932Encoder.encode("\uF78E")}).to.throw(Error, "EncodingError U+F78E");
expect(() => {ms932Encoder.encode("\uF78F")}).to.throw(Error, "EncodingError U+F78F");
expect(() => {ms932Encoder.encode("\uF790")}).to.throw(Error, "EncodingError U+F790");
expect(() => {ms932Encoder.encode("\uF791")}).to.throw(Error, "EncodingError U+F791");
expect(() => {ms932Encoder.encode("\uF792")}).to.throw(Error, "EncodingError U+F792");
expect(() => {ms932Encoder.encode("\uF793")}).to.throw(Error, "EncodingError U+F793");
expect(() => {ms932Encoder.encode("\uF794")}).to.throw(Error, "EncodingError U+F794");
expect(() => {ms932Encoder.encode("\uF795")}).to.throw(Error, "EncodingError U+F795");
expect(() => {ms932Encoder.encode("\uF796")}).to.throw(Error, "EncodingError U+F796");
expect(() => {ms932Encoder.encode("\uF797")}).to.throw(Error, "EncodingError U+F797");
expect(() => {ms932Encoder.encode("\uF798")}).to.throw(Error, "EncodingError U+F798");
expect(() => {ms932Encoder.encode("\uF799")}).to.throw(Error, "EncodingError U+F799");
expect(() => {ms932Encoder.encode("\uF79A")}).to.throw(Error, "EncodingError U+F79A");
expect(() => {ms932Encoder.encode("\uF79B")}).to.throw(Error, "EncodingError U+F79B");
expect(() => {ms932Encoder.encode("\uF79C")}).to.throw(Error, "EncodingError U+F79C");
expect(() => {ms932Encoder.encode("\uF79D")}).to.throw(Error, "EncodingError U+F79D");
expect(() => {ms932Encoder.encode("\uF79E")}).to.throw(Error, "EncodingError U+F79E");
expect(() => {ms932Encoder.encode("\uF79F")}).to.throw(Error, "EncodingError U+F79F");
expect(() => {ms932Encoder.encode("\uF7A0")}).to.throw(Error, "EncodingError U+F7A0");
expect(() => {ms932Encoder.encode("\uF7A1")}).to.throw(Error, "EncodingError U+F7A1");
expect(() => {ms932Encoder.encode("\uF7A2")}).to.throw(Error, "EncodingError U+F7A2");
expect(() => {ms932Encoder.encode("\uF7A3")}).to.throw(Error, "EncodingError U+F7A3");
expect(() => {ms932Encoder.encode("\uF7A4")}).to.throw(Error, "EncodingError U+F7A4");
expect(() => {ms932Encoder.encode("\uF7A5")}).to.throw(Error, "EncodingError U+F7A5");
expect(() => {ms932Encoder.encode("\uF7A6")}).to.throw(Error, "EncodingError U+F7A6");
expect(() => {ms932Encoder.encode("\uF7A7")}).to.throw(Error, "EncodingError U+F7A7");
expect(() => {ms932Encoder.encode("\uF7A8")}).to.throw(Error, "EncodingError U+F7A8");
expect(() => {ms932Encoder.encode("\uF7A9")}).to.throw(Error, "EncodingError U+F7A9");
expect(() => {ms932Encoder.encode("\uF7AA")}).to.throw(Error, "EncodingError U+F7AA");
expect(() => {ms932Encoder.encode("\uF7AB")}).to.throw(Error, "EncodingError U+F7AB");
expect(() => {ms932Encoder.encode("\uF7AC")}).to.throw(Error, "EncodingError U+F7AC");
expect(() => {ms932Encoder.encode("\uF7AD")}).to.throw(Error, "EncodingError U+F7AD");
expect(() => {ms932Encoder.encode("\uF7AE")}).to.throw(Error, "EncodingError U+F7AE");
expect(() => {ms932Encoder.encode("\uF7AF")}).to.throw(Error, "EncodingError U+F7AF");
expect(() => {ms932Encoder.encode("\uF7B0")}).to.throw(Error, "EncodingError U+F7B0");
expect(() => {ms932Encoder.encode("\uF7B1")}).to.throw(Error, "EncodingError U+F7B1");
expect(() => {ms932Encoder.encode("\uF7B2")}).to.throw(Error, "EncodingError U+F7B2");
expect(() => {ms932Encoder.encode("\uF7B3")}).to.throw(Error, "EncodingError U+F7B3");
expect(() => {ms932Encoder.encode("\uF7B4")}).to.throw(Error, "EncodingError U+F7B4");
expect(() => {ms932Encoder.encode("\uF7B5")}).to.throw(Error, "EncodingError U+F7B5");
expect(() => {ms932Encoder.encode("\uF7B6")}).to.throw(Error, "EncodingError U+F7B6");
expect(() => {ms932Encoder.encode("\uF7B7")}).to.throw(Error, "EncodingError U+F7B7");
expect(() => {ms932Encoder.encode("\uF7B8")}).to.throw(Error, "EncodingError U+F7B8");
expect(() => {ms932Encoder.encode("\uF7B9")}).to.throw(Error, "EncodingError U+F7B9");
expect(() => {ms932Encoder.encode("\uF7BA")}).to.throw(Error, "EncodingError U+F7BA");
expect(() => {ms932Encoder.encode("\uF7BB")}).to.throw(Error, "EncodingError U+F7BB");
expect(() => {ms932Encoder.encode("\uF7BC")}).to.throw(Error, "EncodingError U+F7BC");
expect(() => {ms932Encoder.encode("\uF7BD")}).to.throw(Error, "EncodingError U+F7BD");
expect(() => {ms932Encoder.encode("\uF7BE")}).to.throw(Error, "EncodingError U+F7BE");
expect(() => {ms932Encoder.encode("\uF7BF")}).to.throw(Error, "EncodingError U+F7BF");
expect(() => {ms932Encoder.encode("\uF7C0")}).to.throw(Error, "EncodingError U+F7C0");
expect(() => {ms932Encoder.encode("\uF7C1")}).to.throw(Error, "EncodingError U+F7C1");
expect(() => {ms932Encoder.encode("\uF7C2")}).to.throw(Error, "EncodingError U+F7C2");
expect(() => {ms932Encoder.encode("\uF7C3")}).to.throw(Error, "EncodingError U+F7C3");
expect(() => {ms932Encoder.encode("\uF7C4")}).to.throw(Error, "EncodingError U+F7C4");
expect(() => {ms932Encoder.encode("\uF7C5")}).to.throw(Error, "EncodingError U+F7C5");
expect(() => {ms932Encoder.encode("\uF7C6")}).to.throw(Error, "EncodingError U+F7C6");
expect(() => {ms932Encoder.encode("\uF7C7")}).to.throw(Error, "EncodingError U+F7C7");
expect(() => {ms932Encoder.encode("\uF7C8")}).to.throw(Error, "EncodingError U+F7C8");
expect(() => {ms932Encoder.encode("\uF7C9")}).to.throw(Error, "EncodingError U+F7C9");
expect(() => {ms932Encoder.encode("\uF7CA")}).to.throw(Error, "EncodingError U+F7CA");
expect(() => {ms932Encoder.encode("\uF7CB")}).to.throw(Error, "EncodingError U+F7CB");
expect(() => {ms932Encoder.encode("\uF7CC")}).to.throw(Error, "EncodingError U+F7CC");
expect(() => {ms932Encoder.encode("\uF7CD")}).to.throw(Error, "EncodingError U+F7CD");
expect(() => {ms932Encoder.encode("\uF7CE")}).to.throw(Error, "EncodingError U+F7CE");
expect(() => {ms932Encoder.encode("\uF7CF")}).to.throw(Error, "EncodingError U+F7CF");
expect(() => {ms932Encoder.encode("\uF7D0")}).to.throw(Error, "EncodingError U+F7D0");
expect(() => {ms932Encoder.encode("\uF7D1")}).to.throw(Error, "EncodingError U+F7D1");
expect(() => {ms932Encoder.encode("\uF7D2")}).to.throw(Error, "EncodingError U+F7D2");
expect(() => {ms932Encoder.encode("\uF7D3")}).to.throw(Error, "EncodingError U+F7D3");
expect(() => {ms932Encoder.encode("\uF7D4")}).to.throw(Error, "EncodingError U+F7D4");
expect(() => {ms932Encoder.encode("\uF7D5")}).to.throw(Error, "EncodingError U+F7D5");
expect(() => {ms932Encoder.encode("\uF7D6")}).to.throw(Error, "EncodingError U+F7D6");
expect(() => {ms932Encoder.encode("\uF7D7")}).to.throw(Error, "EncodingError U+F7D7");
expect(() => {ms932Encoder.encode("\uF7D8")}).to.throw(Error, "EncodingError U+F7D8");
expect(() => {ms932Encoder.encode("\uF7D9")}).to.throw(Error, "EncodingError U+F7D9");
expect(() => {ms932Encoder.encode("\uF7DA")}).to.throw(Error, "EncodingError U+F7DA");
expect(() => {ms932Encoder.encode("\uF7DB")}).to.throw(Error, "EncodingError U+F7DB");
expect(() => {ms932Encoder.encode("\uF7DC")}).to.throw(Error, "EncodingError U+F7DC");
expect(() => {ms932Encoder.encode("\uF7DD")}).to.throw(Error, "EncodingError U+F7DD");
expect(() => {ms932Encoder.encode("\uF7DE")}).to.throw(Error, "EncodingError U+F7DE");
expect(() => {ms932Encoder.encode("\uF7DF")}).to.throw(Error, "EncodingError U+F7DF");
expect(() => {ms932Encoder.encode("\uF7E0")}).to.throw(Error, "EncodingError U+F7E0");
expect(() => {ms932Encoder.encode("\uF7E1")}).to.throw(Error, "EncodingError U+F7E1");
expect(() => {ms932Encoder.encode("\uF7E2")}).to.throw(Error, "EncodingError U+F7E2");
expect(() => {ms932Encoder.encode("\uF7E3")}).to.throw(Error, "EncodingError U+F7E3");
expect(() => {ms932Encoder.encode("\uF7E4")}).to.throw(Error, "EncodingError U+F7E4");
expect(() => {ms932Encoder.encode("\uF7E5")}).to.throw(Error, "EncodingError U+F7E5");
expect(() => {ms932Encoder.encode("\uF7E6")}).to.throw(Error, "EncodingError U+F7E6");
expect(() => {ms932Encoder.encode("\uF7E7")}).to.throw(Error, "EncodingError U+F7E7");
expect(() => {ms932Encoder.encode("\uF7E8")}).to.throw(Error, "EncodingError U+F7E8");
expect(() => {ms932Encoder.encode("\uF7E9")}).to.throw(Error, "EncodingError U+F7E9");
expect(() => {ms932Encoder.encode("\uF7EA")}).to.throw(Error, "EncodingError U+F7EA");
expect(() => {ms932Encoder.encode("\uF7EB")}).to.throw(Error, "EncodingError U+F7EB");
expect(() => {ms932Encoder.encode("\uF7EC")}).to.throw(Error, "EncodingError U+F7EC");
expect(() => {ms932Encoder.encode("\uF7ED")}).to.throw(Error, "EncodingError U+F7ED");
expect(() => {ms932Encoder.encode("\uF7EE")}).to.throw(Error, "EncodingError U+F7EE");
expect(() => {ms932Encoder.encode("\uF7EF")}).to.throw(Error, "EncodingError U+F7EF");
expect(() => {ms932Encoder.encode("\uF7F0")}).to.throw(Error, "EncodingError U+F7F0");
expect(() => {ms932Encoder.encode("\uF7F1")}).to.throw(Error, "EncodingError U+F7F1");
expect(() => {ms932Encoder.encode("\uF7F2")}).to.throw(Error, "EncodingError U+F7F2");
expect(() => {ms932Encoder.encode("\uF7F3")}).to.throw(Error, "EncodingError U+F7F3");
expect(() => {ms932Encoder.encode("\uF7F4")}).to.throw(Error, "EncodingError U+F7F4");
expect(() => {ms932Encoder.encode("\uF7F5")}).to.throw(Error, "EncodingError U+F7F5");
expect(() => {ms932Encoder.encode("\uF7F6")}).to.throw(Error, "EncodingError U+F7F6");
expect(() => {ms932Encoder.encode("\uF7F7")}).to.throw(Error, "EncodingError U+F7F7");
expect(() => {ms932Encoder.encode("\uF7F8")}).to.throw(Error, "EncodingError U+F7F8");
expect(() => {ms932Encoder.encode("\uF7F9")}).to.throw(Error, "EncodingError U+F7F9");
expect(() => {ms932Encoder.encode("\uF7FA")}).to.throw(Error, "EncodingError U+F7FA");
expect(() => {ms932Encoder.encode("\uF7FB")}).to.throw(Error, "EncodingError U+F7FB");
expect(() => {ms932Encoder.encode("\uF7FC")}).to.throw(Error, "EncodingError U+F7FC");
expect(() => {ms932Encoder.encode("\uF7FD")}).to.throw(Error, "EncodingError U+F7FD");
expect(() => {ms932Encoder.encode("\uF7FE")}).to.throw(Error, "EncodingError U+F7FE");
expect(() => {ms932Encoder.encode("\uF7FF")}).to.throw(Error, "EncodingError U+F7FF");
expect(() => {ms932Encoder.encode("\uF800")}).to.throw(Error, "EncodingError U+F800");
expect(() => {ms932Encoder.encode("\uF801")}).to.throw(Error, "EncodingError U+F801");
expect(() => {ms932Encoder.encode("\uF802")}).to.throw(Error, "EncodingError U+F802");
expect(() => {ms932Encoder.encode("\uF803")}).to.throw(Error, "EncodingError U+F803");
expect(() => {ms932Encoder.encode("\uF804")}).to.throw(Error, "EncodingError U+F804");
expect(() => {ms932Encoder.encode("\uF805")}).to.throw(Error, "EncodingError U+F805");
expect(() => {ms932Encoder.encode("\uF806")}).to.throw(Error, "EncodingError U+F806");
expect(() => {ms932Encoder.encode("\uF807")}).to.throw(Error, "EncodingError U+F807");
expect(() => {ms932Encoder.encode("\uF808")}).to.throw(Error, "EncodingError U+F808");
expect(() => {ms932Encoder.encode("\uF809")}).to.throw(Error, "EncodingError U+F809");
expect(() => {ms932Encoder.encode("\uF80A")}).to.throw(Error, "EncodingError U+F80A");
expect(() => {ms932Encoder.encode("\uF80B")}).to.throw(Error, "EncodingError U+F80B");
expect(() => {ms932Encoder.encode("\uF80C")}).to.throw(Error, "EncodingError U+F80C");
expect(() => {ms932Encoder.encode("\uF80D")}).to.throw(Error, "EncodingError U+F80D");
expect(() => {ms932Encoder.encode("\uF80E")}).to.throw(Error, "EncodingError U+F80E");
expect(() => {ms932Encoder.encode("\uF80F")}).to.throw(Error, "EncodingError U+F80F");
expect(() => {ms932Encoder.encode("\uF810")}).to.throw(Error, "EncodingError U+F810");
expect(() => {ms932Encoder.encode("\uF811")}).to.throw(Error, "EncodingError U+F811");
expect(() => {ms932Encoder.encode("\uF812")}).to.throw(Error, "EncodingError U+F812");
expect(() => {ms932Encoder.encode("\uF813")}).to.throw(Error, "EncodingError U+F813");
expect(() => {ms932Encoder.encode("\uF814")}).to.throw(Error, "EncodingError U+F814");
expect(() => {ms932Encoder.encode("\uF815")}).to.throw(Error, "EncodingError U+F815");
expect(() => {ms932Encoder.encode("\uF816")}).to.throw(Error, "EncodingError U+F816");
expect(() => {ms932Encoder.encode("\uF817")}).to.throw(Error, "EncodingError U+F817");
expect(() => {ms932Encoder.encode("\uF818")}).to.throw(Error, "EncodingError U+F818");
expect(() => {ms932Encoder.encode("\uF819")}).to.throw(Error, "EncodingError U+F819");
expect(() => {ms932Encoder.encode("\uF81A")}).to.throw(Error, "EncodingError U+F81A");
expect(() => {ms932Encoder.encode("\uF81B")}).to.throw(Error, "EncodingError U+F81B");
expect(() => {ms932Encoder.encode("\uF81C")}).to.throw(Error, "EncodingError U+F81C");
expect(() => {ms932Encoder.encode("\uF81D")}).to.throw(Error, "EncodingError U+F81D");
expect(() => {ms932Encoder.encode("\uF81E")}).to.throw(Error, "EncodingError U+F81E");
expect(() => {ms932Encoder.encode("\uF81F")}).to.throw(Error, "EncodingError U+F81F");
expect(() => {ms932Encoder.encode("\uF820")}).to.throw(Error, "EncodingError U+F820");
expect(() => {ms932Encoder.encode("\uF821")}).to.throw(Error, "EncodingError U+F821");
expect(() => {ms932Encoder.encode("\uF822")}).to.throw(Error, "EncodingError U+F822");
expect(() => {ms932Encoder.encode("\uF823")}).to.throw(Error, "EncodingError U+F823");
expect(() => {ms932Encoder.encode("\uF824")}).to.throw(Error, "EncodingError U+F824");
expect(() => {ms932Encoder.encode("\uF825")}).to.throw(Error, "EncodingError U+F825");
expect(() => {ms932Encoder.encode("\uF826")}).to.throw(Error, "EncodingError U+F826");
expect(() => {ms932Encoder.encode("\uF827")}).to.throw(Error, "EncodingError U+F827");
expect(() => {ms932Encoder.encode("\uF828")}).to.throw(Error, "EncodingError U+F828");
expect(() => {ms932Encoder.encode("\uF829")}).to.throw(Error, "EncodingError U+F829");
expect(() => {ms932Encoder.encode("\uF82A")}).to.throw(Error, "EncodingError U+F82A");
expect(() => {ms932Encoder.encode("\uF82B")}).to.throw(Error, "EncodingError U+F82B");
expect(() => {ms932Encoder.encode("\uF82C")}).to.throw(Error, "EncodingError U+F82C");
expect(() => {ms932Encoder.encode("\uF82D")}).to.throw(Error, "EncodingError U+F82D");
expect(() => {ms932Encoder.encode("\uF82E")}).to.throw(Error, "EncodingError U+F82E");
expect(() => {ms932Encoder.encode("\uF82F")}).to.throw(Error, "EncodingError U+F82F");
expect(() => {ms932Encoder.encode("\uF830")}).to.throw(Error, "EncodingError U+F830");
expect(() => {ms932Encoder.encode("\uF831")}).to.throw(Error, "EncodingError U+F831");
expect(() => {ms932Encoder.encode("\uF832")}).to.throw(Error, "EncodingError U+F832");
expect(() => {ms932Encoder.encode("\uF833")}).to.throw(Error, "EncodingError U+F833");
expect(() => {ms932Encoder.encode("\uF834")}).to.throw(Error, "EncodingError U+F834");
expect(() => {ms932Encoder.encode("\uF835")}).to.throw(Error, "EncodingError U+F835");
expect(() => {ms932Encoder.encode("\uF836")}).to.throw(Error, "EncodingError U+F836");
expect(() => {ms932Encoder.encode("\uF837")}).to.throw(Error, "EncodingError U+F837");
expect(() => {ms932Encoder.encode("\uF838")}).to.throw(Error, "EncodingError U+F838");
expect(() => {ms932Encoder.encode("\uF839")}).to.throw(Error, "EncodingError U+F839");
expect(() => {ms932Encoder.encode("\uF83A")}).to.throw(Error, "EncodingError U+F83A");
expect(() => {ms932Encoder.encode("\uF83B")}).to.throw(Error, "EncodingError U+F83B");
expect(() => {ms932Encoder.encode("\uF83C")}).to.throw(Error, "EncodingError U+F83C");
expect(() => {ms932Encoder.encode("\uF83D")}).to.throw(Error, "EncodingError U+F83D");
expect(() => {ms932Encoder.encode("\uF83E")}).to.throw(Error, "EncodingError U+F83E");
expect(() => {ms932Encoder.encode("\uF83F")}).to.throw(Error, "EncodingError U+F83F");
expect(() => {ms932Encoder.encode("\uF840")}).to.throw(Error, "EncodingError U+F840");
expect(() => {ms932Encoder.encode("\uF841")}).to.throw(Error, "EncodingError U+F841");
expect(() => {ms932Encoder.encode("\uF842")}).to.throw(Error, "EncodingError U+F842");
expect(() => {ms932Encoder.encode("\uF843")}).to.throw(Error, "EncodingError U+F843");
expect(() => {ms932Encoder.encode("\uF844")}).to.throw(Error, "EncodingError U+F844");
expect(() => {ms932Encoder.encode("\uF845")}).to.throw(Error, "EncodingError U+F845");
expect(() => {ms932Encoder.encode("\uF846")}).to.throw(Error, "EncodingError U+F846");
expect(() => {ms932Encoder.encode("\uF847")}).to.throw(Error, "EncodingError U+F847");
expect(() => {ms932Encoder.encode("\uF848")}).to.throw(Error, "EncodingError U+F848");
expect(() => {ms932Encoder.encode("\uF849")}).to.throw(Error, "EncodingError U+F849");
expect(() => {ms932Encoder.encode("\uF84A")}).to.throw(Error, "EncodingError U+F84A");
expect(() => {ms932Encoder.encode("\uF84B")}).to.throw(Error, "EncodingError U+F84B");
expect(() => {ms932Encoder.encode("\uF84C")}).to.throw(Error, "EncodingError U+F84C");
expect(() => {ms932Encoder.encode("\uF84D")}).to.throw(Error, "EncodingError U+F84D");
expect(() => {ms932Encoder.encode("\uF84E")}).to.throw(Error, "EncodingError U+F84E");
expect(() => {ms932Encoder.encode("\uF84F")}).to.throw(Error, "EncodingError U+F84F");
expect(() => {ms932Encoder.encode("\uF850")}).to.throw(Error, "EncodingError U+F850");
expect(() => {ms932Encoder.encode("\uF851")}).to.throw(Error, "EncodingError U+F851");
expect(() => {ms932Encoder.encode("\uF852")}).to.throw(Error, "EncodingError U+F852");
expect(() => {ms932Encoder.encode("\uF853")}).to.throw(Error, "EncodingError U+F853");
expect(() => {ms932Encoder.encode("\uF854")}).to.throw(Error, "EncodingError U+F854");
expect(() => {ms932Encoder.encode("\uF855")}).to.throw(Error, "EncodingError U+F855");
expect(() => {ms932Encoder.encode("\uF856")}).to.throw(Error, "EncodingError U+F856");
expect(() => {ms932Encoder.encode("\uF857")}).to.throw(Error, "EncodingError U+F857");
expect(() => {ms932Encoder.encode("\uF858")}).to.throw(Error, "EncodingError U+F858");
expect(() => {ms932Encoder.encode("\uF859")}).to.throw(Error, "EncodingError U+F859");
expect(() => {ms932Encoder.encode("\uF85A")}).to.throw(Error, "EncodingError U+F85A");
expect(() => {ms932Encoder.encode("\uF85B")}).to.throw(Error, "EncodingError U+F85B");
expect(() => {ms932Encoder.encode("\uF85C")}).to.throw(Error, "EncodingError U+F85C");
expect(() => {ms932Encoder.encode("\uF85D")}).to.throw(Error, "EncodingError U+F85D");
expect(() => {ms932Encoder.encode("\uF85E")}).to.throw(Error, "EncodingError U+F85E");
expect(() => {ms932Encoder.encode("\uF85F")}).to.throw(Error, "EncodingError U+F85F");
expect(() => {ms932Encoder.encode("\uF860")}).to.throw(Error, "EncodingError U+F860");
expect(() => {ms932Encoder.encode("\uF861")}).to.throw(Error, "EncodingError U+F861");
expect(() => {ms932Encoder.encode("\uF862")}).to.throw(Error, "EncodingError U+F862");
expect(() => {ms932Encoder.encode("\uF863")}).to.throw(Error, "EncodingError U+F863");
expect(() => {ms932Encoder.encode("\uF864")}).to.throw(Error, "EncodingError U+F864");
expect(() => {ms932Encoder.encode("\uF865")}).to.throw(Error, "EncodingError U+F865");
expect(() => {ms932Encoder.encode("\uF866")}).to.throw(Error, "EncodingError U+F866");
expect(() => {ms932Encoder.encode("\uF867")}).to.throw(Error, "EncodingError U+F867");
expect(() => {ms932Encoder.encode("\uF868")}).to.throw(Error, "EncodingError U+F868");
expect(() => {ms932Encoder.encode("\uF869")}).to.throw(Error, "EncodingError U+F869");
expect(() => {ms932Encoder.encode("\uF86A")}).to.throw(Error, "EncodingError U+F86A");
expect(() => {ms932Encoder.encode("\uF86B")}).to.throw(Error, "EncodingError U+F86B");
expect(() => {ms932Encoder.encode("\uF86C")}).to.throw(Error, "EncodingError U+F86C");
expect(() => {ms932Encoder.encode("\uF86D")}).to.throw(Error, "EncodingError U+F86D");
expect(() => {ms932Encoder.encode("\uF86E")}).to.throw(Error, "EncodingError U+F86E");
expect(() => {ms932Encoder.encode("\uF86F")}).to.throw(Error, "EncodingError U+F86F");
expect(() => {ms932Encoder.encode("\uF870")}).to.throw(Error, "EncodingError U+F870");
expect(() => {ms932Encoder.encode("\uF871")}).to.throw(Error, "EncodingError U+F871");
expect(() => {ms932Encoder.encode("\uF872")}).to.throw(Error, "EncodingError U+F872");
expect(() => {ms932Encoder.encode("\uF873")}).to.throw(Error, "EncodingError U+F873");
expect(() => {ms932Encoder.encode("\uF874")}).to.throw(Error, "EncodingError U+F874");
expect(() => {ms932Encoder.encode("\uF875")}).to.throw(Error, "EncodingError U+F875");
expect(() => {ms932Encoder.encode("\uF876")}).to.throw(Error, "EncodingError U+F876");
expect(() => {ms932Encoder.encode("\uF877")}).to.throw(Error, "EncodingError U+F877");
expect(() => {ms932Encoder.encode("\uF878")}).to.throw(Error, "EncodingError U+F878");
expect(() => {ms932Encoder.encode("\uF879")}).to.throw(Error, "EncodingError U+F879");
expect(() => {ms932Encoder.encode("\uF87A")}).to.throw(Error, "EncodingError U+F87A");
expect(() => {ms932Encoder.encode("\uF87B")}).to.throw(Error, "EncodingError U+F87B");
expect(() => {ms932Encoder.encode("\uF87C")}).to.throw(Error, "EncodingError U+F87C");
expect(() => {ms932Encoder.encode("\uF87D")}).to.throw(Error, "EncodingError U+F87D");
expect(() => {ms932Encoder.encode("\uF87E")}).to.throw(Error, "EncodingError U+F87E");
expect(() => {ms932Encoder.encode("\uF87F")}).to.throw(Error, "EncodingError U+F87F");
expect(() => {ms932Encoder.encode("\uF880")}).to.throw(Error, "EncodingError U+F880");
expect(() => {ms932Encoder.encode("\uF881")}).to.throw(Error, "EncodingError U+F881");
expect(() => {ms932Encoder.encode("\uF882")}).to.throw(Error, "EncodingError U+F882");
expect(() => {ms932Encoder.encode("\uF883")}).to.throw(Error, "EncodingError U+F883");
expect(() => {ms932Encoder.encode("\uF884")}).to.throw(Error, "EncodingError U+F884");
expect(() => {ms932Encoder.encode("\uF885")}).to.throw(Error, "EncodingError U+F885");
expect(() => {ms932Encoder.encode("\uF886")}).to.throw(Error, "EncodingError U+F886");
expect(() => {ms932Encoder.encode("\uF887")}).to.throw(Error, "EncodingError U+F887");
expect(() => {ms932Encoder.encode("\uF888")}).to.throw(Error, "EncodingError U+F888");
expect(() => {ms932Encoder.encode("\uF889")}).to.throw(Error, "EncodingError U+F889");
expect(() => {ms932Encoder.encode("\uF88A")}).to.throw(Error, "EncodingError U+F88A");
expect(() => {ms932Encoder.encode("\uF88B")}).to.throw(Error, "EncodingError U+F88B");
expect(() => {ms932Encoder.encode("\uF88C")}).to.throw(Error, "EncodingError U+F88C");
expect(() => {ms932Encoder.encode("\uF88D")}).to.throw(Error, "EncodingError U+F88D");
expect(() => {ms932Encoder.encode("\uF88E")}).to.throw(Error, "EncodingError U+F88E");
expect(() => {ms932Encoder.encode("\uF88F")}).to.throw(Error, "EncodingError U+F88F");
expect(() => {ms932Encoder.encode("\uF890")}).to.throw(Error, "EncodingError U+F890");
expect(() => {ms932Encoder.encode("\uF891")}).to.throw(Error, "EncodingError U+F891");
expect(() => {ms932Encoder.encode("\uF892")}).to.throw(Error, "EncodingError U+F892");
expect(() => {ms932Encoder.encode("\uF893")}).to.throw(Error, "EncodingError U+F893");
expect(() => {ms932Encoder.encode("\uF894")}).to.throw(Error, "EncodingError U+F894");
expect(() => {ms932Encoder.encode("\uF895")}).to.throw(Error, "EncodingError U+F895");
expect(() => {ms932Encoder.encode("\uF896")}).to.throw(Error, "EncodingError U+F896");
expect(() => {ms932Encoder.encode("\uF897")}).to.throw(Error, "EncodingError U+F897");
expect(() => {ms932Encoder.encode("\uF898")}).to.throw(Error, "EncodingError U+F898");
expect(() => {ms932Encoder.encode("\uF899")}).to.throw(Error, "EncodingError U+F899");
expect(() => {ms932Encoder.encode("\uF89A")}).to.throw(Error, "EncodingError U+F89A");
expect(() => {ms932Encoder.encode("\uF89B")}).to.throw(Error, "EncodingError U+F89B");
expect(() => {ms932Encoder.encode("\uF89C")}).to.throw(Error, "EncodingError U+F89C");
expect(() => {ms932Encoder.encode("\uF89D")}).to.throw(Error, "EncodingError U+F89D");
expect(() => {ms932Encoder.encode("\uF89E")}).to.throw(Error, "EncodingError U+F89E");
expect(() => {ms932Encoder.encode("\uF89F")}).to.throw(Error, "EncodingError U+F89F");
expect(() => {ms932Encoder.encode("\uF8A0")}).to.throw(Error, "EncodingError U+F8A0");
expect(() => {ms932Encoder.encode("\uF8A1")}).to.throw(Error, "EncodingError U+F8A1");
expect(() => {ms932Encoder.encode("\uF8A2")}).to.throw(Error, "EncodingError U+F8A2");
expect(() => {ms932Encoder.encode("\uF8A3")}).to.throw(Error, "EncodingError U+F8A3");
expect(() => {ms932Encoder.encode("\uF8A4")}).to.throw(Error, "EncodingError U+F8A4");
expect(() => {ms932Encoder.encode("\uF8A5")}).to.throw(Error, "EncodingError U+F8A5");
expect(() => {ms932Encoder.encode("\uF8A6")}).to.throw(Error, "EncodingError U+F8A6");
expect(() => {ms932Encoder.encode("\uF8A7")}).to.throw(Error, "EncodingError U+F8A7");
expect(() => {ms932Encoder.encode("\uF8A8")}).to.throw(Error, "EncodingError U+F8A8");
expect(() => {ms932Encoder.encode("\uF8A9")}).to.throw(Error, "EncodingError U+F8A9");
expect(() => {ms932Encoder.encode("\uF8AA")}).to.throw(Error, "EncodingError U+F8AA");
expect(() => {ms932Encoder.encode("\uF8AB")}).to.throw(Error, "EncodingError U+F8AB");
expect(() => {ms932Encoder.encode("\uF8AC")}).to.throw(Error, "EncodingError U+F8AC");
expect(() => {ms932Encoder.encode("\uF8AD")}).to.throw(Error, "EncodingError U+F8AD");
expect(() => {ms932Encoder.encode("\uF8AE")}).to.throw(Error, "EncodingError U+F8AE");
expect(() => {ms932Encoder.encode("\uF8AF")}).to.throw(Error, "EncodingError U+F8AF");
expect(() => {ms932Encoder.encode("\uF8B0")}).to.throw(Error, "EncodingError U+F8B0");
expect(() => {ms932Encoder.encode("\uF8B1")}).to.throw(Error, "EncodingError U+F8B1");
expect(() => {ms932Encoder.encode("\uF8B2")}).to.throw(Error, "EncodingError U+F8B2");
expect(() => {ms932Encoder.encode("\uF8B3")}).to.throw(Error, "EncodingError U+F8B3");
expect(() => {ms932Encoder.encode("\uF8B4")}).to.throw(Error, "EncodingError U+F8B4");
expect(() => {ms932Encoder.encode("\uF8B5")}).to.throw(Error, "EncodingError U+F8B5");
expect(() => {ms932Encoder.encode("\uF8B6")}).to.throw(Error, "EncodingError U+F8B6");
expect(() => {ms932Encoder.encode("\uF8B7")}).to.throw(Error, "EncodingError U+F8B7");
expect(() => {ms932Encoder.encode("\uF8B8")}).to.throw(Error, "EncodingError U+F8B8");
expect(() => {ms932Encoder.encode("\uF8B9")}).to.throw(Error, "EncodingError U+F8B9");
expect(() => {ms932Encoder.encode("\uF8BA")}).to.throw(Error, "EncodingError U+F8BA");
expect(() => {ms932Encoder.encode("\uF8BB")}).to.throw(Error, "EncodingError U+F8BB");
expect(() => {ms932Encoder.encode("\uF8BC")}).to.throw(Error, "EncodingError U+F8BC");
expect(() => {ms932Encoder.encode("\uF8BD")}).to.throw(Error, "EncodingError U+F8BD");
expect(() => {ms932Encoder.encode("\uF8BE")}).to.throw(Error, "EncodingError U+F8BE");
expect(() => {ms932Encoder.encode("\uF8BF")}).to.throw(Error, "EncodingError U+F8BF");
expect(() => {ms932Encoder.encode("\uF8C0")}).to.throw(Error, "EncodingError U+F8C0");
expect(() => {ms932Encoder.encode("\uF8C1")}).to.throw(Error, "EncodingError U+F8C1");
expect(() => {ms932Encoder.encode("\uF8C2")}).to.throw(Error, "EncodingError U+F8C2");
expect(() => {ms932Encoder.encode("\uF8C3")}).to.throw(Error, "EncodingError U+F8C3");
expect(() => {ms932Encoder.encode("\uF8C4")}).to.throw(Error, "EncodingError U+F8C4");
expect(() => {ms932Encoder.encode("\uF8C5")}).to.throw(Error, "EncodingError U+F8C5");
expect(() => {ms932Encoder.encode("\uF8C6")}).to.throw(Error, "EncodingError U+F8C6");
expect(() => {ms932Encoder.encode("\uF8C7")}).to.throw(Error, "EncodingError U+F8C7");
expect(() => {ms932Encoder.encode("\uF8C8")}).to.throw(Error, "EncodingError U+F8C8");
expect(() => {ms932Encoder.encode("\uF8C9")}).to.throw(Error, "EncodingError U+F8C9");
expect(() => {ms932Encoder.encode("\uF8CA")}).to.throw(Error, "EncodingError U+F8CA");
expect(() => {ms932Encoder.encode("\uF8CB")}).to.throw(Error, "EncodingError U+F8CB");
expect(() => {ms932Encoder.encode("\uF8CC")}).to.throw(Error, "EncodingError U+F8CC");
expect(() => {ms932Encoder.encode("\uF8CD")}).to.throw(Error, "EncodingError U+F8CD");
expect(() => {ms932Encoder.encode("\uF8CE")}).to.throw(Error, "EncodingError U+F8CE");
expect(() => {ms932Encoder.encode("\uF8CF")}).to.throw(Error, "EncodingError U+F8CF");
expect(() => {ms932Encoder.encode("\uF8D0")}).to.throw(Error, "EncodingError U+F8D0");
expect(() => {ms932Encoder.encode("\uF8D1")}).to.throw(Error, "EncodingError U+F8D1");
expect(() => {ms932Encoder.encode("\uF8D2")}).to.throw(Error, "EncodingError U+F8D2");
expect(() => {ms932Encoder.encode("\uF8D3")}).to.throw(Error, "EncodingError U+F8D3");
expect(() => {ms932Encoder.encode("\uF8D4")}).to.throw(Error, "EncodingError U+F8D4");
expect(() => {ms932Encoder.encode("\uF8D5")}).to.throw(Error, "EncodingError U+F8D5");
expect(() => {ms932Encoder.encode("\uF8D6")}).to.throw(Error, "EncodingError U+F8D6");
expect(() => {ms932Encoder.encode("\uF8D7")}).to.throw(Error, "EncodingError U+F8D7");
expect(() => {ms932Encoder.encode("\uF8D8")}).to.throw(Error, "EncodingError U+F8D8");
expect(() => {ms932Encoder.encode("\uF8D9")}).to.throw(Error, "EncodingError U+F8D9");
expect(() => {ms932Encoder.encode("\uF8DA")}).to.throw(Error, "EncodingError U+F8DA");
expect(() => {ms932Encoder.encode("\uF8DB")}).to.throw(Error, "EncodingError U+F8DB");
expect(() => {ms932Encoder.encode("\uF8DC")}).to.throw(Error, "EncodingError U+F8DC");
expect(() => {ms932Encoder.encode("\uF8DD")}).to.throw(Error, "EncodingError U+F8DD");
expect(() => {ms932Encoder.encode("\uF8DE")}).to.throw(Error, "EncodingError U+F8DE");
expect(() => {ms932Encoder.encode("\uF8DF")}).to.throw(Error, "EncodingError U+F8DF");
expect(() => {ms932Encoder.encode("\uF8E0")}).to.throw(Error, "EncodingError U+F8E0");
expect(() => {ms932Encoder.encode("\uF8E1")}).to.throw(Error, "EncodingError U+F8E1");
expect(() => {ms932Encoder.encode("\uF8E2")}).to.throw(Error, "EncodingError U+F8E2");
expect(() => {ms932Encoder.encode("\uF8E3")}).to.throw(Error, "EncodingError U+F8E3");
expect(() => {ms932Encoder.encode("\uF8E4")}).to.throw(Error, "EncodingError U+F8E4");
expect(() => {ms932Encoder.encode("\uF8E5")}).to.throw(Error, "EncodingError U+F8E5");
expect(() => {ms932Encoder.encode("\uF8E6")}).to.throw(Error, "EncodingError U+F8E6");
expect(() => {ms932Encoder.encode("\uF8E7")}).to.throw(Error, "EncodingError U+F8E7");
expect(() => {ms932Encoder.encode("\uF8E8")}).to.throw(Error, "EncodingError U+F8E8");
expect(() => {ms932Encoder.encode("\uF8E9")}).to.throw(Error, "EncodingError U+F8E9");
expect(() => {ms932Encoder.encode("\uF8EA")}).to.throw(Error, "EncodingError U+F8EA");
expect(() => {ms932Encoder.encode("\uF8EB")}).to.throw(Error, "EncodingError U+F8EB");
expect(() => {ms932Encoder.encode("\uF8EC")}).to.throw(Error, "EncodingError U+F8EC");
expect(() => {ms932Encoder.encode("\uF8ED")}).to.throw(Error, "EncodingError U+F8ED");
expect(() => {ms932Encoder.encode("\uF8EE")}).to.throw(Error, "EncodingError U+F8EE");
expect(() => {ms932Encoder.encode("\uF8EF")}).to.throw(Error, "EncodingError U+F8EF");
expect(() => {ms932Encoder.encode("\uF8F0")}).to.throw(Error, "EncodingError U+F8F0");
expect(() => {ms932Encoder.encode("\uF8F1")}).to.throw(Error, "EncodingError U+F8F1");
expect(() => {ms932Encoder.encode("\uF8F2")}).to.throw(Error, "EncodingError U+F8F2");
expect(() => {ms932Encoder.encode("\uF8F3")}).to.throw(Error, "EncodingError U+F8F3");
expect(() => {ms932Encoder.encode("\uF8F4")}).to.throw(Error, "EncodingError U+F8F4");
expect(() => {ms932Encoder.encode("\uF8F5")}).to.throw(Error, "EncodingError U+F8F5");
expect(() => {ms932Encoder.encode("\uF8F6")}).to.throw(Error, "EncodingError U+F8F6");
expect(() => {ms932Encoder.encode("\uF8F7")}).to.throw(Error, "EncodingError U+F8F7");
expect(() => {ms932Encoder.encode("\uF8F8")}).to.throw(Error, "EncodingError U+F8F8");
expect(() => {ms932Encoder.encode("\uF8F9")}).to.throw(Error, "EncodingError U+F8F9");
expect(() => {ms932Encoder.encode("\uF8FA")}).to.throw(Error, "EncodingError U+F8FA");
expect(() => {ms932Encoder.encode("\uF8FB")}).to.throw(Error, "EncodingError U+F8FB");
expect(() => {ms932Encoder.encode("\uF8FC")}).to.throw(Error, "EncodingError U+F8FC");
expect(() => {ms932Encoder.encode("\uF8FD")}).to.throw(Error, "EncodingError U+F8FD");
expect(() => {ms932Encoder.encode("\uF8FE")}).to.throw(Error, "EncodingError U+F8FE");
expect(() => {ms932Encoder.encode("\uF8FF")}).to.throw(Error, "EncodingError U+F8FF");
expect(() => {ms932Encoder.encode("\uF900")}).to.throw(Error, "EncodingError U+F900");
expect(() => {ms932Encoder.encode("\uF901")}).to.throw(Error, "EncodingError U+F901");
expect(() => {ms932Encoder.encode("\uF902")}).to.throw(Error, "EncodingError U+F902");
expect(() => {ms932Encoder.encode("\uF903")}).to.throw(Error, "EncodingError U+F903");
expect(() => {ms932Encoder.encode("\uF904")}).to.throw(Error, "EncodingError U+F904");
expect(() => {ms932Encoder.encode("\uF905")}).to.throw(Error, "EncodingError U+F905");
expect(() => {ms932Encoder.encode("\uF906")}).to.throw(Error, "EncodingError U+F906");
expect(() => {ms932Encoder.encode("\uF907")}).to.throw(Error, "EncodingError U+F907");
expect(() => {ms932Encoder.encode("\uF908")}).to.throw(Error, "EncodingError U+F908");
expect(() => {ms932Encoder.encode("\uF909")}).to.throw(Error, "EncodingError U+F909");
expect(() => {ms932Encoder.encode("\uF90A")}).to.throw(Error, "EncodingError U+F90A");
expect(() => {ms932Encoder.encode("\uF90B")}).to.throw(Error, "EncodingError U+F90B");
expect(() => {ms932Encoder.encode("\uF90C")}).to.throw(Error, "EncodingError U+F90C");
expect(() => {ms932Encoder.encode("\uF90D")}).to.throw(Error, "EncodingError U+F90D");
expect(() => {ms932Encoder.encode("\uF90E")}).to.throw(Error, "EncodingError U+F90E");
expect(() => {ms932Encoder.encode("\uF90F")}).to.throw(Error, "EncodingError U+F90F");
expect(() => {ms932Encoder.encode("\uF910")}).to.throw(Error, "EncodingError U+F910");
expect(() => {ms932Encoder.encode("\uF911")}).to.throw(Error, "EncodingError U+F911");
expect(() => {ms932Encoder.encode("\uF912")}).to.throw(Error, "EncodingError U+F912");
expect(() => {ms932Encoder.encode("\uF913")}).to.throw(Error, "EncodingError U+F913");
expect(() => {ms932Encoder.encode("\uF914")}).to.throw(Error, "EncodingError U+F914");
expect(() => {ms932Encoder.encode("\uF915")}).to.throw(Error, "EncodingError U+F915");
expect(() => {ms932Encoder.encode("\uF916")}).to.throw(Error, "EncodingError U+F916");
expect(() => {ms932Encoder.encode("\uF917")}).to.throw(Error, "EncodingError U+F917");
expect(() => {ms932Encoder.encode("\uF918")}).to.throw(Error, "EncodingError U+F918");
expect(() => {ms932Encoder.encode("\uF919")}).to.throw(Error, "EncodingError U+F919");
expect(() => {ms932Encoder.encode("\uF91A")}).to.throw(Error, "EncodingError U+F91A");
expect(() => {ms932Encoder.encode("\uF91B")}).to.throw(Error, "EncodingError U+F91B");
expect(() => {ms932Encoder.encode("\uF91C")}).to.throw(Error, "EncodingError U+F91C");
expect(() => {ms932Encoder.encode("\uF91D")}).to.throw(Error, "EncodingError U+F91D");
expect(() => {ms932Encoder.encode("\uF91E")}).to.throw(Error, "EncodingError U+F91E");
expect(() => {ms932Encoder.encode("\uF91F")}).to.throw(Error, "EncodingError U+F91F");
expect(() => {ms932Encoder.encode("\uF920")}).to.throw(Error, "EncodingError U+F920");
expect(() => {ms932Encoder.encode("\uF921")}).to.throw(Error, "EncodingError U+F921");
expect(() => {ms932Encoder.encode("\uF922")}).to.throw(Error, "EncodingError U+F922");
expect(() => {ms932Encoder.encode("\uF923")}).to.throw(Error, "EncodingError U+F923");
expect(() => {ms932Encoder.encode("\uF924")}).to.throw(Error, "EncodingError U+F924");
expect(() => {ms932Encoder.encode("\uF925")}).to.throw(Error, "EncodingError U+F925");
expect(() => {ms932Encoder.encode("\uF926")}).to.throw(Error, "EncodingError U+F926");
expect(() => {ms932Encoder.encode("\uF927")}).to.throw(Error, "EncodingError U+F927");
expect(() => {ms932Encoder.encode("\uF928")}).to.throw(Error, "EncodingError U+F928");
r = r && ([...ms932Encoder.encode("朗")].join(",") === "250,224"); // U+F929
expect(() => {ms932Encoder.encode("\uF92A")}).to.throw(Error, "EncodingError U+F92A");
expect(() => {ms932Encoder.encode("\uF92B")}).to.throw(Error, "EncodingError U+F92B");
expect(() => {ms932Encoder.encode("\uF92C")}).to.throw(Error, "EncodingError U+F92C");
expect(() => {ms932Encoder.encode("\uF92D")}).to.throw(Error, "EncodingError U+F92D");
expect(() => {ms932Encoder.encode("\uF92E")}).to.throw(Error, "EncodingError U+F92E");
expect(() => {ms932Encoder.encode("\uF92F")}).to.throw(Error, "EncodingError U+F92F");
expect(() => {ms932Encoder.encode("\uF930")}).to.throw(Error, "EncodingError U+F930");
expect(() => {ms932Encoder.encode("\uF931")}).to.throw(Error, "EncodingError U+F931");
expect(() => {ms932Encoder.encode("\uF932")}).to.throw(Error, "EncodingError U+F932");
expect(() => {ms932Encoder.encode("\uF933")}).to.throw(Error, "EncodingError U+F933");
expect(() => {ms932Encoder.encode("\uF934")}).to.throw(Error, "EncodingError U+F934");
expect(() => {ms932Encoder.encode("\uF935")}).to.throw(Error, "EncodingError U+F935");
expect(() => {ms932Encoder.encode("\uF936")}).to.throw(Error, "EncodingError U+F936");
expect(() => {ms932Encoder.encode("\uF937")}).to.throw(Error, "EncodingError U+F937");
expect(() => {ms932Encoder.encode("\uF938")}).to.throw(Error, "EncodingError U+F938");
expect(() => {ms932Encoder.encode("\uF939")}).to.throw(Error, "EncodingError U+F939");
expect(() => {ms932Encoder.encode("\uF93A")}).to.throw(Error, "EncodingError U+F93A");
expect(() => {ms932Encoder.encode("\uF93B")}).to.throw(Error, "EncodingError U+F93B");
expect(() => {ms932Encoder.encode("\uF93C")}).to.throw(Error, "EncodingError U+F93C");
expect(() => {ms932Encoder.encode("\uF93D")}).to.throw(Error, "EncodingError U+F93D");
expect(() => {ms932Encoder.encode("\uF93E")}).to.throw(Error, "EncodingError U+F93E");
expect(() => {ms932Encoder.encode("\uF93F")}).to.throw(Error, "EncodingError U+F93F");
expect(() => {ms932Encoder.encode("\uF940")}).to.throw(Error, "EncodingError U+F940");
expect(() => {ms932Encoder.encode("\uF941")}).to.throw(Error, "EncodingError U+F941");
expect(() => {ms932Encoder.encode("\uF942")}).to.throw(Error, "EncodingError U+F942");
expect(() => {ms932Encoder.encode("\uF943")}).to.throw(Error, "EncodingError U+F943");
expect(() => {ms932Encoder.encode("\uF944")}).to.throw(Error, "EncodingError U+F944");
expect(() => {ms932Encoder.encode("\uF945")}).to.throw(Error, "EncodingError U+F945");
expect(() => {ms932Encoder.encode("\uF946")}).to.throw(Error, "EncodingError U+F946");
expect(() => {ms932Encoder.encode("\uF947")}).to.throw(Error, "EncodingError U+F947");
expect(() => {ms932Encoder.encode("\uF948")}).to.throw(Error, "EncodingError U+F948");
expect(() => {ms932Encoder.encode("\uF949")}).to.throw(Error, "EncodingError U+F949");
expect(() => {ms932Encoder.encode("\uF94A")}).to.throw(Error, "EncodingError U+F94A");
expect(() => {ms932Encoder.encode("\uF94B")}).to.throw(Error, "EncodingError U+F94B");
expect(() => {ms932Encoder.encode("\uF94C")}).to.throw(Error, "EncodingError U+F94C");
expect(() => {ms932Encoder.encode("\uF94D")}).to.throw(Error, "EncodingError U+F94D");
expect(() => {ms932Encoder.encode("\uF94E")}).to.throw(Error, "EncodingError U+F94E");
expect(() => {ms932Encoder.encode("\uF94F")}).to.throw(Error, "EncodingError U+F94F");
expect(() => {ms932Encoder.encode("\uF950")}).to.throw(Error, "EncodingError U+F950");
expect(() => {ms932Encoder.encode("\uF951")}).to.throw(Error, "EncodingError U+F951");
expect(() => {ms932Encoder.encode("\uF952")}).to.throw(Error, "EncodingError U+F952");
expect(() => {ms932Encoder.encode("\uF953")}).to.throw(Error, "EncodingError U+F953");
expect(() => {ms932Encoder.encode("\uF954")}).to.throw(Error, "EncodingError U+F954");
expect(() => {ms932Encoder.encode("\uF955")}).to.throw(Error, "EncodingError U+F955");
expect(() => {ms932Encoder.encode("\uF956")}).to.throw(Error, "EncodingError U+F956");
expect(() => {ms932Encoder.encode("\uF957")}).to.throw(Error, "EncodingError U+F957");
expect(() => {ms932Encoder.encode("\uF958")}).to.throw(Error, "EncodingError U+F958");
expect(() => {ms932Encoder.encode("\uF959")}).to.throw(Error, "EncodingError U+F959");
expect(() => {ms932Encoder.encode("\uF95A")}).to.throw(Error, "EncodingError U+F95A");
expect(() => {ms932Encoder.encode("\uF95B")}).to.throw(Error, "EncodingError U+F95B");
expect(() => {ms932Encoder.encode("\uF95C")}).to.throw(Error, "EncodingError U+F95C");
expect(() => {ms932Encoder.encode("\uF95D")}).to.throw(Error, "EncodingError U+F95D");
expect(() => {ms932Encoder.encode("\uF95E")}).to.throw(Error, "EncodingError U+F95E");
expect(() => {ms932Encoder.encode("\uF95F")}).to.throw(Error, "EncodingError U+F95F");
expect(() => {ms932Encoder.encode("\uF960")}).to.throw(Error, "EncodingError U+F960");
expect(() => {ms932Encoder.encode("\uF961")}).to.throw(Error, "EncodingError U+F961");
expect(() => {ms932Encoder.encode("\uF962")}).to.throw(Error, "EncodingError U+F962");
expect(() => {ms932Encoder.encode("\uF963")}).to.throw(Error, "EncodingError U+F963");
expect(() => {ms932Encoder.encode("\uF964")}).to.throw(Error, "EncodingError U+F964");
expect(() => {ms932Encoder.encode("\uF965")}).to.throw(Error, "EncodingError U+F965");
expect(() => {ms932Encoder.encode("\uF966")}).to.throw(Error, "EncodingError U+F966");
expect(() => {ms932Encoder.encode("\uF967")}).to.throw(Error, "EncodingError U+F967");
expect(() => {ms932Encoder.encode("\uF968")}).to.throw(Error, "EncodingError U+F968");
expect(() => {ms932Encoder.encode("\uF969")}).to.throw(Error, "EncodingError U+F969");
expect(() => {ms932Encoder.encode("\uF96A")}).to.throw(Error, "EncodingError U+F96A");
expect(() => {ms932Encoder.encode("\uF96B")}).to.throw(Error, "EncodingError U+F96B");
expect(() => {ms932Encoder.encode("\uF96C")}).to.throw(Error, "EncodingError U+F96C");
expect(() => {ms932Encoder.encode("\uF96D")}).to.throw(Error, "EncodingError U+F96D");
expect(() => {ms932Encoder.encode("\uF96E")}).to.throw(Error, "EncodingError U+F96E");
expect(() => {ms932Encoder.encode("\uF96F")}).to.throw(Error, "EncodingError U+F96F");
expect(() => {ms932Encoder.encode("\uF970")}).to.throw(Error, "EncodingError U+F970");
expect(() => {ms932Encoder.encode("\uF971")}).to.throw(Error, "EncodingError U+F971");
expect(() => {ms932Encoder.encode("\uF972")}).to.throw(Error, "EncodingError U+F972");
expect(() => {ms932Encoder.encode("\uF973")}).to.throw(Error, "EncodingError U+F973");
expect(() => {ms932Encoder.encode("\uF974")}).to.throw(Error, "EncodingError U+F974");
expect(() => {ms932Encoder.encode("\uF975")}).to.throw(Error, "EncodingError U+F975");
expect(() => {ms932Encoder.encode("\uF976")}).to.throw(Error, "EncodingError U+F976");
expect(() => {ms932Encoder.encode("\uF977")}).to.throw(Error, "EncodingError U+F977");
expect(() => {ms932Encoder.encode("\uF978")}).to.throw(Error, "EncodingError U+F978");
expect(() => {ms932Encoder.encode("\uF979")}).to.throw(Error, "EncodingError U+F979");
expect(() => {ms932Encoder.encode("\uF97A")}).to.throw(Error, "EncodingError U+F97A");
expect(() => {ms932Encoder.encode("\uF97B")}).to.throw(Error, "EncodingError U+F97B");
expect(() => {ms932Encoder.encode("\uF97C")}).to.throw(Error, "EncodingError U+F97C");
expect(() => {ms932Encoder.encode("\uF97D")}).to.throw(Error, "EncodingError U+F97D");
expect(() => {ms932Encoder.encode("\uF97E")}).to.throw(Error, "EncodingError U+F97E");
expect(() => {ms932Encoder.encode("\uF97F")}).to.throw(Error, "EncodingError U+F97F");
expect(() => {ms932Encoder.encode("\uF980")}).to.throw(Error, "EncodingError U+F980");
expect(() => {ms932Encoder.encode("\uF981")}).to.throw(Error, "EncodingError U+F981");
expect(() => {ms932Encoder.encode("\uF982")}).to.throw(Error, "EncodingError U+F982");
expect(() => {ms932Encoder.encode("\uF983")}).to.throw(Error, "EncodingError U+F983");
expect(() => {ms932Encoder.encode("\uF984")}).to.throw(Error, "EncodingError U+F984");
expect(() => {ms932Encoder.encode("\uF985")}).to.throw(Error, "EncodingError U+F985");
expect(() => {ms932Encoder.encode("\uF986")}).to.throw(Error, "EncodingError U+F986");
expect(() => {ms932Encoder.encode("\uF987")}).to.throw(Error, "EncodingError U+F987");
expect(() => {ms932Encoder.encode("\uF988")}).to.throw(Error, "EncodingError U+F988");
expect(() => {ms932Encoder.encode("\uF989")}).to.throw(Error, "EncodingError U+F989");
expect(() => {ms932Encoder.encode("\uF98A")}).to.throw(Error, "EncodingError U+F98A");
expect(() => {ms932Encoder.encode("\uF98B")}).to.throw(Error, "EncodingError U+F98B");
expect(() => {ms932Encoder.encode("\uF98C")}).to.throw(Error, "EncodingError U+F98C");
expect(() => {ms932Encoder.encode("\uF98D")}).to.throw(Error, "EncodingError U+F98D");
expect(() => {ms932Encoder.encode("\uF98E")}).to.throw(Error, "EncodingError U+F98E");
expect(() => {ms932Encoder.encode("\uF98F")}).to.throw(Error, "EncodingError U+F98F");
expect(() => {ms932Encoder.encode("\uF990")}).to.throw(Error, "EncodingError U+F990");
expect(() => {ms932Encoder.encode("\uF991")}).to.throw(Error, "EncodingError U+F991");
expect(() => {ms932Encoder.encode("\uF992")}).to.throw(Error, "EncodingError U+F992");
expect(() => {ms932Encoder.encode("\uF993")}).to.throw(Error, "EncodingError U+F993");
expect(() => {ms932Encoder.encode("\uF994")}).to.throw(Error, "EncodingError U+F994");
expect(() => {ms932Encoder.encode("\uF995")}).to.throw(Error, "EncodingError U+F995");
expect(() => {ms932Encoder.encode("\uF996")}).to.throw(Error, "EncodingError U+F996");
expect(() => {ms932Encoder.encode("\uF997")}).to.throw(Error, "EncodingError U+F997");
expect(() => {ms932Encoder.encode("\uF998")}).to.throw(Error, "EncodingError U+F998");
expect(() => {ms932Encoder.encode("\uF999")}).to.throw(Error, "EncodingError U+F999");
expect(() => {ms932Encoder.encode("\uF99A")}).to.throw(Error, "EncodingError U+F99A");
expect(() => {ms932Encoder.encode("\uF99B")}).to.throw(Error, "EncodingError U+F99B");
expect(() => {ms932Encoder.encode("\uF99C")}).to.throw(Error, "EncodingError U+F99C");
expect(() => {ms932Encoder.encode("\uF99D")}).to.throw(Error, "EncodingError U+F99D");
expect(() => {ms932Encoder.encode("\uF99E")}).to.throw(Error, "EncodingError U+F99E");
expect(() => {ms932Encoder.encode("\uF99F")}).to.throw(Error, "EncodingError U+F99F");
expect(() => {ms932Encoder.encode("\uF9A0")}).to.throw(Error, "EncodingError U+F9A0");
expect(() => {ms932Encoder.encode("\uF9A1")}).to.throw(Error, "EncodingError U+F9A1");
expect(() => {ms932Encoder.encode("\uF9A2")}).to.throw(Error, "EncodingError U+F9A2");
expect(() => {ms932Encoder.encode("\uF9A3")}).to.throw(Error, "EncodingError U+F9A3");
expect(() => {ms932Encoder.encode("\uF9A4")}).to.throw(Error, "EncodingError U+F9A4");
expect(() => {ms932Encoder.encode("\uF9A5")}).to.throw(Error, "EncodingError U+F9A5");
expect(() => {ms932Encoder.encode("\uF9A6")}).to.throw(Error, "EncodingError U+F9A6");
expect(() => {ms932Encoder.encode("\uF9A7")}).to.throw(Error, "EncodingError U+F9A7");
expect(() => {ms932Encoder.encode("\uF9A8")}).to.throw(Error, "EncodingError U+F9A8");
expect(() => {ms932Encoder.encode("\uF9A9")}).to.throw(Error, "EncodingError U+F9A9");
expect(() => {ms932Encoder.encode("\uF9AA")}).to.throw(Error, "EncodingError U+F9AA");
expect(() => {ms932Encoder.encode("\uF9AB")}).to.throw(Error, "EncodingError U+F9AB");
expect(() => {ms932Encoder.encode("\uF9AC")}).to.throw(Error, "EncodingError U+F9AC");
expect(() => {ms932Encoder.encode("\uF9AD")}).to.throw(Error, "EncodingError U+F9AD");
expect(() => {ms932Encoder.encode("\uF9AE")}).to.throw(Error, "EncodingError U+F9AE");
expect(() => {ms932Encoder.encode("\uF9AF")}).to.throw(Error, "EncodingError U+F9AF");
expect(() => {ms932Encoder.encode("\uF9B0")}).to.throw(Error, "EncodingError U+F9B0");
expect(() => {ms932Encoder.encode("\uF9B1")}).to.throw(Error, "EncodingError U+F9B1");
expect(() => {ms932Encoder.encode("\uF9B2")}).to.throw(Error, "EncodingError U+F9B2");
expect(() => {ms932Encoder.encode("\uF9B3")}).to.throw(Error, "EncodingError U+F9B3");
expect(() => {ms932Encoder.encode("\uF9B4")}).to.throw(Error, "EncodingError U+F9B4");
expect(() => {ms932Encoder.encode("\uF9B5")}).to.throw(Error, "EncodingError U+F9B5");
expect(() => {ms932Encoder.encode("\uF9B6")}).to.throw(Error, "EncodingError U+F9B6");
expect(() => {ms932Encoder.encode("\uF9B7")}).to.throw(Error, "EncodingError U+F9B7");
expect(() => {ms932Encoder.encode("\uF9B8")}).to.throw(Error, "EncodingError U+F9B8");
expect(() => {ms932Encoder.encode("\uF9B9")}).to.throw(Error, "EncodingError U+F9B9");
expect(() => {ms932Encoder.encode("\uF9BA")}).to.throw(Error, "EncodingError U+F9BA");
expect(() => {ms932Encoder.encode("\uF9BB")}).to.throw(Error, "EncodingError U+F9BB");
expect(() => {ms932Encoder.encode("\uF9BC")}).to.throw(Error, "EncodingError U+F9BC");
expect(() => {ms932Encoder.encode("\uF9BD")}).to.throw(Error, "EncodingError U+F9BD");
expect(() => {ms932Encoder.encode("\uF9BE")}).to.throw(Error, "EncodingError U+F9BE");
expect(() => {ms932Encoder.encode("\uF9BF")}).to.throw(Error, "EncodingError U+F9BF");
expect(() => {ms932Encoder.encode("\uF9C0")}).to.throw(Error, "EncodingError U+F9C0");
expect(() => {ms932Encoder.encode("\uF9C1")}).to.throw(Error, "EncodingError U+F9C1");
expect(() => {ms932Encoder.encode("\uF9C2")}).to.throw(Error, "EncodingError U+F9C2");
expect(() => {ms932Encoder.encode("\uF9C3")}).to.throw(Error, "EncodingError U+F9C3");
expect(() => {ms932Encoder.encode("\uF9C4")}).to.throw(Error, "EncodingError U+F9C4");
expect(() => {ms932Encoder.encode("\uF9C5")}).to.throw(Error, "EncodingError U+F9C5");
expect(() => {ms932Encoder.encode("\uF9C6")}).to.throw(Error, "EncodingError U+F9C6");
expect(() => {ms932Encoder.encode("\uF9C7")}).to.throw(Error, "EncodingError U+F9C7");
expect(() => {ms932Encoder.encode("\uF9C8")}).to.throw(Error, "EncodingError U+F9C8");
expect(() => {ms932Encoder.encode("\uF9C9")}).to.throw(Error, "EncodingError U+F9C9");
expect(() => {ms932Encoder.encode("\uF9CA")}).to.throw(Error, "EncodingError U+F9CA");
expect(() => {ms932Encoder.encode("\uF9CB")}).to.throw(Error, "EncodingError U+F9CB");
expect(() => {ms932Encoder.encode("\uF9CC")}).to.throw(Error, "EncodingError U+F9CC");
expect(() => {ms932Encoder.encode("\uF9CD")}).to.throw(Error, "EncodingError U+F9CD");
expect(() => {ms932Encoder.encode("\uF9CE")}).to.throw(Error, "EncodingError U+F9CE");
expect(() => {ms932Encoder.encode("\uF9CF")}).to.throw(Error, "EncodingError U+F9CF");
expect(() => {ms932Encoder.encode("\uF9D0")}).to.throw(Error, "EncodingError U+F9D0");
expect(() => {ms932Encoder.encode("\uF9D1")}).to.throw(Error, "EncodingError U+F9D1");
expect(() => {ms932Encoder.encode("\uF9D2")}).to.throw(Error, "EncodingError U+F9D2");
expect(() => {ms932Encoder.encode("\uF9D3")}).to.throw(Error, "EncodingError U+F9D3");
expect(() => {ms932Encoder.encode("\uF9D4")}).to.throw(Error, "EncodingError U+F9D4");
expect(() => {ms932Encoder.encode("\uF9D5")}).to.throw(Error, "EncodingError U+F9D5");
expect(() => {ms932Encoder.encode("\uF9D6")}).to.throw(Error, "EncodingError U+F9D6");
expect(() => {ms932Encoder.encode("\uF9D7")}).to.throw(Error, "EncodingError U+F9D7");
expect(() => {ms932Encoder.encode("\uF9D8")}).to.throw(Error, "EncodingError U+F9D8");
expect(() => {ms932Encoder.encode("\uF9D9")}).to.throw(Error, "EncodingError U+F9D9");
expect(() => {ms932Encoder.encode("\uF9DA")}).to.throw(Error, "EncodingError U+F9DA");
expect(() => {ms932Encoder.encode("\uF9DB")}).to.throw(Error, "EncodingError U+F9DB");
r = r && ([...ms932Encoder.encode("隆")].join(",") === "251,233"); // U+F9DC
expect(() => {ms932Encoder.encode("\uF9DD")}).to.throw(Error, "EncodingError U+F9DD");
expect(() => {ms932Encoder.encode("\uF9DE")}).to.throw(Error, "EncodingError U+F9DE");
expect(() => {ms932Encoder.encode("\uF9DF")}).to.throw(Error, "EncodingError U+F9DF");
expect(() => {ms932Encoder.encode("\uF9E0")}).to.throw(Error, "EncodingError U+F9E0");
expect(() => {ms932Encoder.encode("\uF9E1")}).to.throw(Error, "EncodingError U+F9E1");
expect(() => {ms932Encoder.encode("\uF9E2")}).to.throw(Error, "EncodingError U+F9E2");
expect(() => {ms932Encoder.encode("\uF9E3")}).to.throw(Error, "EncodingError U+F9E3");
expect(() => {ms932Encoder.encode("\uF9E4")}).to.throw(Error, "EncodingError U+F9E4");
expect(() => {ms932Encoder.encode("\uF9E5")}).to.throw(Error, "EncodingError U+F9E5");
expect(() => {ms932Encoder.encode("\uF9E6")}).to.throw(Error, "EncodingError U+F9E6");
expect(() => {ms932Encoder.encode("\uF9E7")}).to.throw(Error, "EncodingError U+F9E7");
expect(() => {ms932Encoder.encode("\uF9E8")}).to.throw(Error, "EncodingError U+F9E8");
expect(() => {ms932Encoder.encode("\uF9E9")}).to.throw(Error, "EncodingError U+F9E9");
expect(() => {ms932Encoder.encode("\uF9EA")}).to.throw(Error, "EncodingError U+F9EA");
expect(() => {ms932Encoder.encode("\uF9EB")}).to.throw(Error, "EncodingError U+F9EB");
expect(() => {ms932Encoder.encode("\uF9EC")}).to.throw(Error, "EncodingError U+F9EC");
expect(() => {ms932Encoder.encode("\uF9ED")}).to.throw(Error, "EncodingError U+F9ED");
expect(() => {ms932Encoder.encode("\uF9EE")}).to.throw(Error, "EncodingError U+F9EE");
expect(() => {ms932Encoder.encode("\uF9EF")}).to.throw(Error, "EncodingError U+F9EF");
expect(() => {ms932Encoder.encode("\uF9F0")}).to.throw(Error, "EncodingError U+F9F0");
expect(() => {ms932Encoder.encode("\uF9F1")}).to.throw(Error, "EncodingError U+F9F1");
expect(() => {ms932Encoder.encode("\uF9F2")}).to.throw(Error, "EncodingError U+F9F2");
expect(() => {ms932Encoder.encode("\uF9F3")}).to.throw(Error, "EncodingError U+F9F3");
expect(() => {ms932Encoder.encode("\uF9F4")}).to.throw(Error, "EncodingError U+F9F4");
expect(() => {ms932Encoder.encode("\uF9F5")}).to.throw(Error, "EncodingError U+F9F5");
expect(() => {ms932Encoder.encode("\uF9F6")}).to.throw(Error, "EncodingError U+F9F6");
expect(() => {ms932Encoder.encode("\uF9F7")}).to.throw(Error, "EncodingError U+F9F7");
expect(() => {ms932Encoder.encode("\uF9F8")}).to.throw(Error, "EncodingError U+F9F8");
expect(() => {ms932Encoder.encode("\uF9F9")}).to.throw(Error, "EncodingError U+F9F9");
expect(() => {ms932Encoder.encode("\uF9FA")}).to.throw(Error, "EncodingError U+F9FA");
expect(() => {ms932Encoder.encode("\uF9FB")}).to.throw(Error, "EncodingError U+F9FB");
expect(() => {ms932Encoder.encode("\uF9FC")}).to.throw(Error, "EncodingError U+F9FC");
expect(() => {ms932Encoder.encode("\uF9FD")}).to.throw(Error, "EncodingError U+F9FD");
expect(() => {ms932Encoder.encode("\uF9FE")}).to.throw(Error, "EncodingError U+F9FE");
expect(() => {ms932Encoder.encode("\uF9FF")}).to.throw(Error, "EncodingError U+F9FF");
expect(() => {ms932Encoder.encode("\uFA00")}).to.throw(Error, "EncodingError U+FA00");
expect(() => {ms932Encoder.encode("\uFA01")}).to.throw(Error, "EncodingError U+FA01");
expect(() => {ms932Encoder.encode("\uFA02")}).to.throw(Error, "EncodingError U+FA02");
expect(() => {ms932Encoder.encode("\uFA03")}).to.throw(Error, "EncodingError U+FA03");
expect(() => {ms932Encoder.encode("\uFA04")}).to.throw(Error, "EncodingError U+FA04");
expect(() => {ms932Encoder.encode("\uFA05")}).to.throw(Error, "EncodingError U+FA05");
expect(() => {ms932Encoder.encode("\uFA06")}).to.throw(Error, "EncodingError U+FA06");
expect(() => {ms932Encoder.encode("\uFA07")}).to.throw(Error, "EncodingError U+FA07");
expect(() => {ms932Encoder.encode("\uFA08")}).to.throw(Error, "EncodingError U+FA08");
expect(() => {ms932Encoder.encode("\uFA09")}).to.throw(Error, "EncodingError U+FA09");
expect(() => {ms932Encoder.encode("\uFA0A")}).to.throw(Error, "EncodingError U+FA0A");
expect(() => {ms932Encoder.encode("\uFA0B")}).to.throw(Error, "EncodingError U+FA0B");
expect(() => {ms932Encoder.encode("\uFA0C")}).to.throw(Error, "EncodingError U+FA0C");
expect(() => {ms932Encoder.encode("\uFA0D")}).to.throw(Error, "EncodingError U+FA0D");
r = r && ([...ms932Encoder.encode("﨎﨏塚﨑晴﨓﨔凞猪益礼神祥福靖精羽﨟蘒﨡諸﨣﨤逸都﨧﨨﨩飯飼館鶴")].join(",") === "250,144,250,155,250,156,250,177,250,216,250,232,250,234,251,88,251,94,251,117,251,125,251,126,251,128,251,130,251,134,251,137,251,146,251,157,251,159,251,160,251,169,251,177,251,179,251,180,251,183,251,211,251,218,251,234,251,246,251,247,251,249,252,73"); // U+FA0E
expect(() => {ms932Encoder.encode("\uFA2E")}).to.throw(Error, "EncodingError U+FA2E");
expect(() => {ms932Encoder.encode("\uFA2F")}).to.throw(Error, "EncodingError U+FA2F");
expect(() => {ms932Encoder.encode("\uFA30")}).to.throw(Error, "EncodingError U+FA30");
expect(() => {ms932Encoder.encode("\uFA31")}).to.throw(Error, "EncodingError U+FA31");
expect(() => {ms932Encoder.encode("\uFA32")}).to.throw(Error, "EncodingError U+FA32");
expect(() => {ms932Encoder.encode("\uFA33")}).to.throw(Error, "EncodingError U+FA33");
expect(() => {ms932Encoder.encode("\uFA34")}).to.throw(Error, "EncodingError U+FA34");
expect(() => {ms932Encoder.encode("\uFA35")}).to.throw(Error, "EncodingError U+FA35");
expect(() => {ms932Encoder.encode("\uFA36")}).to.throw(Error, "EncodingError U+FA36");
expect(() => {ms932Encoder.encode("\uFA37")}).to.throw(Error, "EncodingError U+FA37");
expect(() => {ms932Encoder.encode("\uFA38")}).to.throw(Error, "EncodingError U+FA38");
expect(() => {ms932Encoder.encode("\uFA39")}).to.throw(Error, "EncodingError U+FA39");
expect(() => {ms932Encoder.encode("\uFA3A")}).to.throw(Error, "EncodingError U+FA3A");
expect(() => {ms932Encoder.encode("\uFA3B")}).to.throw(Error, "EncodingError U+FA3B");
expect(() => {ms932Encoder.encode("\uFA3C")}).to.throw(Error, "EncodingError U+FA3C");
expect(() => {ms932Encoder.encode("\uFA3D")}).to.throw(Error, "EncodingError U+FA3D");
expect(() => {ms932Encoder.encode("\uFA3E")}).to.throw(Error, "EncodingError U+FA3E");
expect(() => {ms932Encoder.encode("\uFA3F")}).to.throw(Error, "EncodingError U+FA3F");
expect(() => {ms932Encoder.encode("\uFA40")}).to.throw(Error, "EncodingError U+FA40");
expect(() => {ms932Encoder.encode("\uFA41")}).to.throw(Error, "EncodingError U+FA41");
expect(() => {ms932Encoder.encode("\uFA42")}).to.throw(Error, "EncodingError U+FA42");
expect(() => {ms932Encoder.encode("\uFA43")}).to.throw(Error, "EncodingError U+FA43");
expect(() => {ms932Encoder.encode("\uFA44")}).to.throw(Error, "EncodingError U+FA44");
expect(() => {ms932Encoder.encode("\uFA45")}).to.throw(Error, "EncodingError U+FA45");
expect(() => {ms932Encoder.encode("\uFA46")}).to.throw(Error, "EncodingError U+FA46");
expect(() => {ms932Encoder.encode("\uFA47")}).to.throw(Error, "EncodingError U+FA47");
expect(() => {ms932Encoder.encode("\uFA48")}).to.throw(Error, "EncodingError U+FA48");
expect(() => {ms932Encoder.encode("\uFA49")}).to.throw(Error, "EncodingError U+FA49");
expect(() => {ms932Encoder.encode("\uFA4A")}).to.throw(Error, "EncodingError U+FA4A");
expect(() => {ms932Encoder.encode("\uFA4B")}).to.throw(Error, "EncodingError U+FA4B");
expect(() => {ms932Encoder.encode("\uFA4C")}).to.throw(Error, "EncodingError U+FA4C");
expect(() => {ms932Encoder.encode("\uFA4D")}).to.throw(Error, "EncodingError U+FA4D");
expect(() => {ms932Encoder.encode("\uFA4E")}).to.throw(Error, "EncodingError U+FA4E");
expect(() => {ms932Encoder.encode("\uFA4F")}).to.throw(Error, "EncodingError U+FA4F");
expect(() => {ms932Encoder.encode("\uFA50")}).to.throw(Error, "EncodingError U+FA50");
expect(() => {ms932Encoder.encode("\uFA51")}).to.throw(Error, "EncodingError U+FA51");
expect(() => {ms932Encoder.encode("\uFA52")}).to.throw(Error, "EncodingError U+FA52");
expect(() => {ms932Encoder.encode("\uFA53")}).to.throw(Error, "EncodingError U+FA53");
expect(() => {ms932Encoder.encode("\uFA54")}).to.throw(Error, "EncodingError U+FA54");
expect(() => {ms932Encoder.encode("\uFA55")}).to.throw(Error, "EncodingError U+FA55");
expect(() => {ms932Encoder.encode("\uFA56")}).to.throw(Error, "EncodingError U+FA56");
expect(() => {ms932Encoder.encode("\uFA57")}).to.throw(Error, "EncodingError U+FA57");
expect(() => {ms932Encoder.encode("\uFA58")}).to.throw(Error, "EncodingError U+FA58");
expect(() => {ms932Encoder.encode("\uFA59")}).to.throw(Error, "EncodingError U+FA59");
expect(() => {ms932Encoder.encode("\uFA5A")}).to.throw(Error, "EncodingError U+FA5A");
expect(() => {ms932Encoder.encode("\uFA5B")}).to.throw(Error, "EncodingError U+FA5B");
expect(() => {ms932Encoder.encode("\uFA5C")}).to.throw(Error, "EncodingError U+FA5C");
expect(() => {ms932Encoder.encode("\uFA5D")}).to.throw(Error, "EncodingError U+FA5D");
expect(() => {ms932Encoder.encode("\uFA5E")}).to.throw(Error, "EncodingError U+FA5E");
expect(() => {ms932Encoder.encode("\uFA5F")}).to.throw(Error, "EncodingError U+FA5F");
expect(() => {ms932Encoder.encode("\uFA60")}).to.throw(Error, "EncodingError U+FA60");
expect(() => {ms932Encoder.encode("\uFA61")}).to.throw(Error, "EncodingError U+FA61");
expect(() => {ms932Encoder.encode("\uFA62")}).to.throw(Error, "EncodingError U+FA62");
expect(() => {ms932Encoder.encode("\uFA63")}).to.throw(Error, "EncodingError U+FA63");
expect(() => {ms932Encoder.encode("\uFA64")}).to.throw(Error, "EncodingError U+FA64");
expect(() => {ms932Encoder.encode("\uFA65")}).to.throw(Error, "EncodingError U+FA65");
expect(() => {ms932Encoder.encode("\uFA66")}).to.throw(Error, "EncodingError U+FA66");
expect(() => {ms932Encoder.encode("\uFA67")}).to.throw(Error, "EncodingError U+FA67");
expect(() => {ms932Encoder.encode("\uFA68")}).to.throw(Error, "EncodingError U+FA68");
expect(() => {ms932Encoder.encode("\uFA69")}).to.throw(Error, "EncodingError U+FA69");
expect(() => {ms932Encoder.encode("\uFA6A")}).to.throw(Error, "EncodingError U+FA6A");
expect(() => {ms932Encoder.encode("\uFA6B")}).to.throw(Error, "EncodingError U+FA6B");
expect(() => {ms932Encoder.encode("\uFA6C")}).to.throw(Error, "EncodingError U+FA6C");
expect(() => {ms932Encoder.encode("\uFA6D")}).to.throw(Error, "EncodingError U+FA6D");
expect(() => {ms932Encoder.encode("\uFA6E")}).to.throw(Error, "EncodingError U+FA6E");
expect(() => {ms932Encoder.encode("\uFA6F")}).to.throw(Error, "EncodingError U+FA6F");
expect(() => {ms932Encoder.encode("\uFA70")}).to.throw(Error, "EncodingError U+FA70");
expect(() => {ms932Encoder.encode("\uFA71")}).to.throw(Error, "EncodingError U+FA71");
expect(() => {ms932Encoder.encode("\uFA72")}).to.throw(Error, "EncodingError U+FA72");
expect(() => {ms932Encoder.encode("\uFA73")}).to.throw(Error, "EncodingError U+FA73");
expect(() => {ms932Encoder.encode("\uFA74")}).to.throw(Error, "EncodingError U+FA74");
expect(() => {ms932Encoder.encode("\uFA75")}).to.throw(Error, "EncodingError U+FA75");
expect(() => {ms932Encoder.encode("\uFA76")}).to.throw(Error, "EncodingError U+FA76");
expect(() => {ms932Encoder.encode("\uFA77")}).to.throw(Error, "EncodingError U+FA77");
expect(() => {ms932Encoder.encode("\uFA78")}).to.throw(Error, "EncodingError U+FA78");
expect(() => {ms932Encoder.encode("\uFA79")}).to.throw(Error, "EncodingError U+FA79");
expect(() => {ms932Encoder.encode("\uFA7A")}).to.throw(Error, "EncodingError U+FA7A");
expect(() => {ms932Encoder.encode("\uFA7B")}).to.throw(Error, "EncodingError U+FA7B");
expect(() => {ms932Encoder.encode("\uFA7C")}).to.throw(Error, "EncodingError U+FA7C");
expect(() => {ms932Encoder.encode("\uFA7D")}).to.throw(Error, "EncodingError U+FA7D");
expect(() => {ms932Encoder.encode("\uFA7E")}).to.throw(Error, "EncodingError U+FA7E");
expect(() => {ms932Encoder.encode("\uFA7F")}).to.throw(Error, "EncodingError U+FA7F");
expect(() => {ms932Encoder.encode("\uFA80")}).to.throw(Error, "EncodingError U+FA80");
expect(() => {ms932Encoder.encode("\uFA81")}).to.throw(Error, "EncodingError U+FA81");
expect(() => {ms932Encoder.encode("\uFA82")}).to.throw(Error, "EncodingError U+FA82");
expect(() => {ms932Encoder.encode("\uFA83")}).to.throw(Error, "EncodingError U+FA83");
expect(() => {ms932Encoder.encode("\uFA84")}).to.throw(Error, "EncodingError U+FA84");
expect(() => {ms932Encoder.encode("\uFA85")}).to.throw(Error, "EncodingError U+FA85");
expect(() => {ms932Encoder.encode("\uFA86")}).to.throw(Error, "EncodingError U+FA86");
expect(() => {ms932Encoder.encode("\uFA87")}).to.throw(Error, "EncodingError U+FA87");
expect(() => {ms932Encoder.encode("\uFA88")}).to.throw(Error, "EncodingError U+FA88");
expect(() => {ms932Encoder.encode("\uFA89")}).to.throw(Error, "EncodingError U+FA89");
expect(() => {ms932Encoder.encode("\uFA8A")}).to.throw(Error, "EncodingError U+FA8A");
expect(() => {ms932Encoder.encode("\uFA8B")}).to.throw(Error, "EncodingError U+FA8B");
expect(() => {ms932Encoder.encode("\uFA8C")}).to.throw(Error, "EncodingError U+FA8C");
expect(() => {ms932Encoder.encode("\uFA8D")}).to.throw(Error, "EncodingError U+FA8D");
expect(() => {ms932Encoder.encode("\uFA8E")}).to.throw(Error, "EncodingError U+FA8E");
expect(() => {ms932Encoder.encode("\uFA8F")}).to.throw(Error, "EncodingError U+FA8F");
expect(() => {ms932Encoder.encode("\uFA90")}).to.throw(Error, "EncodingError U+FA90");
expect(() => {ms932Encoder.encode("\uFA91")}).to.throw(Error, "EncodingError U+FA91");
expect(() => {ms932Encoder.encode("\uFA92")}).to.throw(Error, "EncodingError U+FA92");
expect(() => {ms932Encoder.encode("\uFA93")}).to.throw(Error, "EncodingError U+FA93");
expect(() => {ms932Encoder.encode("\uFA94")}).to.throw(Error, "EncodingError U+FA94");
expect(() => {ms932Encoder.encode("\uFA95")}).to.throw(Error, "EncodingError U+FA95");
expect(() => {ms932Encoder.encode("\uFA96")}).to.throw(Error, "EncodingError U+FA96");
expect(() => {ms932Encoder.encode("\uFA97")}).to.throw(Error, "EncodingError U+FA97");
expect(() => {ms932Encoder.encode("\uFA98")}).to.throw(Error, "EncodingError U+FA98");
expect(() => {ms932Encoder.encode("\uFA99")}).to.throw(Error, "EncodingError U+FA99");
expect(() => {ms932Encoder.encode("\uFA9A")}).to.throw(Error, "EncodingError U+FA9A");
expect(() => {ms932Encoder.encode("\uFA9B")}).to.throw(Error, "EncodingError U+FA9B");
expect(() => {ms932Encoder.encode("\uFA9C")}).to.throw(Error, "EncodingError U+FA9C");
expect(() => {ms932Encoder.encode("\uFA9D")}).to.throw(Error, "EncodingError U+FA9D");
expect(() => {ms932Encoder.encode("\uFA9E")}).to.throw(Error, "EncodingError U+FA9E");
expect(() => {ms932Encoder.encode("\uFA9F")}).to.throw(Error, "EncodingError U+FA9F");
expect(() => {ms932Encoder.encode("\uFAA0")}).to.throw(Error, "EncodingError U+FAA0");
expect(() => {ms932Encoder.encode("\uFAA1")}).to.throw(Error, "EncodingError U+FAA1");
expect(() => {ms932Encoder.encode("\uFAA2")}).to.throw(Error, "EncodingError U+FAA2");
expect(() => {ms932Encoder.encode("\uFAA3")}).to.throw(Error, "EncodingError U+FAA3");
expect(() => {ms932Encoder.encode("\uFAA4")}).to.throw(Error, "EncodingError U+FAA4");
expect(() => {ms932Encoder.encode("\uFAA5")}).to.throw(Error, "EncodingError U+FAA5");
expect(() => {ms932Encoder.encode("\uFAA6")}).to.throw(Error, "EncodingError U+FAA6");
expect(() => {ms932Encoder.encode("\uFAA7")}).to.throw(Error, "EncodingError U+FAA7");
expect(() => {ms932Encoder.encode("\uFAA8")}).to.throw(Error, "EncodingError U+FAA8");
expect(() => {ms932Encoder.encode("\uFAA9")}).to.throw(Error, "EncodingError U+FAA9");
expect(() => {ms932Encoder.encode("\uFAAA")}).to.throw(Error, "EncodingError U+FAAA");
expect(() => {ms932Encoder.encode("\uFAAB")}).to.throw(Error, "EncodingError U+FAAB");
expect(() => {ms932Encoder.encode("\uFAAC")}).to.throw(Error, "EncodingError U+FAAC");
expect(() => {ms932Encoder.encode("\uFAAD")}).to.throw(Error, "EncodingError U+FAAD");
expect(() => {ms932Encoder.encode("\uFAAE")}).to.throw(Error, "EncodingError U+FAAE");
expect(() => {ms932Encoder.encode("\uFAAF")}).to.throw(Error, "EncodingError U+FAAF");
expect(() => {ms932Encoder.encode("\uFAB0")}).to.throw(Error, "EncodingError U+FAB0");
expect(() => {ms932Encoder.encode("\uFAB1")}).to.throw(Error, "EncodingError U+FAB1");
expect(() => {ms932Encoder.encode("\uFAB2")}).to.throw(Error, "EncodingError U+FAB2");
expect(() => {ms932Encoder.encode("\uFAB3")}).to.throw(Error, "EncodingError U+FAB3");
expect(() => {ms932Encoder.encode("\uFAB4")}).to.throw(Error, "EncodingError U+FAB4");
expect(() => {ms932Encoder.encode("\uFAB5")}).to.throw(Error, "EncodingError U+FAB5");
expect(() => {ms932Encoder.encode("\uFAB6")}).to.throw(Error, "EncodingError U+FAB6");
expect(() => {ms932Encoder.encode("\uFAB7")}).to.throw(Error, "EncodingError U+FAB7");
expect(() => {ms932Encoder.encode("\uFAB8")}).to.throw(Error, "EncodingError U+FAB8");
expect(() => {ms932Encoder.encode("\uFAB9")}).to.throw(Error, "EncodingError U+FAB9");
expect(() => {ms932Encoder.encode("\uFABA")}).to.throw(Error, "EncodingError U+FABA");
expect(() => {ms932Encoder.encode("\uFABB")}).to.throw(Error, "EncodingError U+FABB");
expect(() => {ms932Encoder.encode("\uFABC")}).to.throw(Error, "EncodingError U+FABC");
expect(() => {ms932Encoder.encode("\uFABD")}).to.throw(Error, "EncodingError U+FABD");
expect(() => {ms932Encoder.encode("\uFABE")}).to.throw(Error, "EncodingError U+FABE");
expect(() => {ms932Encoder.encode("\uFABF")}).to.throw(Error, "EncodingError U+FABF");
expect(() => {ms932Encoder.encode("\uFAC0")}).to.throw(Error, "EncodingError U+FAC0");
expect(() => {ms932Encoder.encode("\uFAC1")}).to.throw(Error, "EncodingError U+FAC1");
expect(() => {ms932Encoder.encode("\uFAC2")}).to.throw(Error, "EncodingError U+FAC2");
expect(() => {ms932Encoder.encode("\uFAC3")}).to.throw(Error, "EncodingError U+FAC3");
expect(() => {ms932Encoder.encode("\uFAC4")}).to.throw(Error, "EncodingError U+FAC4");
expect(() => {ms932Encoder.encode("\uFAC5")}).to.throw(Error, "EncodingError U+FAC5");
expect(() => {ms932Encoder.encode("\uFAC6")}).to.throw(Error, "EncodingError U+FAC6");
expect(() => {ms932Encoder.encode("\uFAC7")}).to.throw(Error, "EncodingError U+FAC7");
expect(() => {ms932Encoder.encode("\uFAC8")}).to.throw(Error, "EncodingError U+FAC8");
expect(() => {ms932Encoder.encode("\uFAC9")}).to.throw(Error, "EncodingError U+FAC9");
expect(() => {ms932Encoder.encode("\uFACA")}).to.throw(Error, "EncodingError U+FACA");
expect(() => {ms932Encoder.encode("\uFACB")}).to.throw(Error, "EncodingError U+FACB");
expect(() => {ms932Encoder.encode("\uFACC")}).to.throw(Error, "EncodingError U+FACC");
expect(() => {ms932Encoder.encode("\uFACD")}).to.throw(Error, "EncodingError U+FACD");
expect(() => {ms932Encoder.encode("\uFACE")}).to.throw(Error, "EncodingError U+FACE");
expect(() => {ms932Encoder.encode("\uFACF")}).to.throw(Error, "EncodingError U+FACF");
expect(() => {ms932Encoder.encode("\uFAD0")}).to.throw(Error, "EncodingError U+FAD0");
expect(() => {ms932Encoder.encode("\uFAD1")}).to.throw(Error, "EncodingError U+FAD1");
expect(() => {ms932Encoder.encode("\uFAD2")}).to.throw(Error, "EncodingError U+FAD2");
expect(() => {ms932Encoder.encode("\uFAD3")}).to.throw(Error, "EncodingError U+FAD3");
expect(() => {ms932Encoder.encode("\uFAD4")}).to.throw(Error, "EncodingError U+FAD4");
expect(() => {ms932Encoder.encode("\uFAD5")}).to.throw(Error, "EncodingError U+FAD5");
expect(() => {ms932Encoder.encode("\uFAD6")}).to.throw(Error, "EncodingError U+FAD6");
expect(() => {ms932Encoder.encode("\uFAD7")}).to.throw(Error, "EncodingError U+FAD7");
expect(() => {ms932Encoder.encode("\uFAD8")}).to.throw(Error, "EncodingError U+FAD8");
expect(() => {ms932Encoder.encode("\uFAD9")}).to.throw(Error, "EncodingError U+FAD9");
expect(() => {ms932Encoder.encode("\uFADA")}).to.throw(Error, "EncodingError U+FADA");
expect(() => {ms932Encoder.encode("\uFADB")}).to.throw(Error, "EncodingError U+FADB");
expect(() => {ms932Encoder.encode("\uFADC")}).to.throw(Error, "EncodingError U+FADC");
expect(() => {ms932Encoder.encode("\uFADD")}).to.throw(Error, "EncodingError U+FADD");
expect(() => {ms932Encoder.encode("\uFADE")}).to.throw(Error, "EncodingError U+FADE");
expect(() => {ms932Encoder.encode("\uFADF")}).to.throw(Error, "EncodingError U+FADF");
expect(() => {ms932Encoder.encode("\uFAE0")}).to.throw(Error, "EncodingError U+FAE0");
expect(() => {ms932Encoder.encode("\uFAE1")}).to.throw(Error, "EncodingError U+FAE1");
expect(() => {ms932Encoder.encode("\uFAE2")}).to.throw(Error, "EncodingError U+FAE2");
expect(() => {ms932Encoder.encode("\uFAE3")}).to.throw(Error, "EncodingError U+FAE3");
expect(() => {ms932Encoder.encode("\uFAE4")}).to.throw(Error, "EncodingError U+FAE4");
expect(() => {ms932Encoder.encode("\uFAE5")}).to.throw(Error, "EncodingError U+FAE5");
expect(() => {ms932Encoder.encode("\uFAE6")}).to.throw(Error, "EncodingError U+FAE6");
expect(() => {ms932Encoder.encode("\uFAE7")}).to.throw(Error, "EncodingError U+FAE7");
expect(() => {ms932Encoder.encode("\uFAE8")}).to.throw(Error, "EncodingError U+FAE8");
expect(() => {ms932Encoder.encode("\uFAE9")}).to.throw(Error, "EncodingError U+FAE9");
expect(() => {ms932Encoder.encode("\uFAEA")}).to.throw(Error, "EncodingError U+FAEA");
expect(() => {ms932Encoder.encode("\uFAEB")}).to.throw(Error, "EncodingError U+FAEB");
expect(() => {ms932Encoder.encode("\uFAEC")}).to.throw(Error, "EncodingError U+FAEC");
expect(() => {ms932Encoder.encode("\uFAED")}).to.throw(Error, "EncodingError U+FAED");
expect(() => {ms932Encoder.encode("\uFAEE")}).to.throw(Error, "EncodingError U+FAEE");
expect(() => {ms932Encoder.encode("\uFAEF")}).to.throw(Error, "EncodingError U+FAEF");
expect(() => {ms932Encoder.encode("\uFAF0")}).to.throw(Error, "EncodingError U+FAF0");
expect(() => {ms932Encoder.encode("\uFAF1")}).to.throw(Error, "EncodingError U+FAF1");
expect(() => {ms932Encoder.encode("\uFAF2")}).to.throw(Error, "EncodingError U+FAF2");
expect(() => {ms932Encoder.encode("\uFAF3")}).to.throw(Error, "EncodingError U+FAF3");
expect(() => {ms932Encoder.encode("\uFAF4")}).to.throw(Error, "EncodingError U+FAF4");
expect(() => {ms932Encoder.encode("\uFAF5")}).to.throw(Error, "EncodingError U+FAF5");
expect(() => {ms932Encoder.encode("\uFAF6")}).to.throw(Error, "EncodingError U+FAF6");
expect(() => {ms932Encoder.encode("\uFAF7")}).to.throw(Error, "EncodingError U+FAF7");
expect(() => {ms932Encoder.encode("\uFAF8")}).to.throw(Error, "EncodingError U+FAF8");
expect(() => {ms932Encoder.encode("\uFAF9")}).to.throw(Error, "EncodingError U+FAF9");
expect(() => {ms932Encoder.encode("\uFAFA")}).to.throw(Error, "EncodingError U+FAFA");
expect(() => {ms932Encoder.encode("\uFAFB")}).to.throw(Error, "EncodingError U+FAFB");
expect(() => {ms932Encoder.encode("\uFAFC")}).to.throw(Error, "EncodingError U+FAFC");
expect(() => {ms932Encoder.encode("\uFAFD")}).to.throw(Error, "EncodingError U+FAFD");
expect(() => {ms932Encoder.encode("\uFAFE")}).to.throw(Error, "EncodingError U+FAFE");
expect(() => {ms932Encoder.encode("\uFAFF")}).to.throw(Error, "EncodingError U+FAFF");
expect(() => {ms932Encoder.encode("\uFB00")}).to.throw(Error, "EncodingError U+FB00");
expect(() => {ms932Encoder.encode("\uFB01")}).to.throw(Error, "EncodingError U+FB01");
expect(() => {ms932Encoder.encode("\uFB02")}).to.throw(Error, "EncodingError U+FB02");
expect(() => {ms932Encoder.encode("\uFB03")}).to.throw(Error, "EncodingError U+FB03");
expect(() => {ms932Encoder.encode("\uFB04")}).to.throw(Error, "EncodingError U+FB04");
expect(() => {ms932Encoder.encode("\uFB05")}).to.throw(Error, "EncodingError U+FB05");
expect(() => {ms932Encoder.encode("\uFB06")}).to.throw(Error, "EncodingError U+FB06");
expect(() => {ms932Encoder.encode("\uFB07")}).to.throw(Error, "EncodingError U+FB07");
expect(() => {ms932Encoder.encode("\uFB08")}).to.throw(Error, "EncodingError U+FB08");
expect(() => {ms932Encoder.encode("\uFB09")}).to.throw(Error, "EncodingError U+FB09");
expect(() => {ms932Encoder.encode("\uFB0A")}).to.throw(Error, "EncodingError U+FB0A");
expect(() => {ms932Encoder.encode("\uFB0B")}).to.throw(Error, "EncodingError U+FB0B");
expect(() => {ms932Encoder.encode("\uFB0C")}).to.throw(Error, "EncodingError U+FB0C");
expect(() => {ms932Encoder.encode("\uFB0D")}).to.throw(Error, "EncodingError U+FB0D");
expect(() => {ms932Encoder.encode("\uFB0E")}).to.throw(Error, "EncodingError U+FB0E");
expect(() => {ms932Encoder.encode("\uFB0F")}).to.throw(Error, "EncodingError U+FB0F");
expect(() => {ms932Encoder.encode("\uFB10")}).to.throw(Error, "EncodingError U+FB10");
expect(() => {ms932Encoder.encode("\uFB11")}).to.throw(Error, "EncodingError U+FB11");
expect(() => {ms932Encoder.encode("\uFB12")}).to.throw(Error, "EncodingError U+FB12");
expect(() => {ms932Encoder.encode("\uFB13")}).to.throw(Error, "EncodingError U+FB13");
expect(() => {ms932Encoder.encode("\uFB14")}).to.throw(Error, "EncodingError U+FB14");
expect(() => {ms932Encoder.encode("\uFB15")}).to.throw(Error, "EncodingError U+FB15");
expect(() => {ms932Encoder.encode("\uFB16")}).to.throw(Error, "EncodingError U+FB16");
expect(() => {ms932Encoder.encode("\uFB17")}).to.throw(Error, "EncodingError U+FB17");
expect(() => {ms932Encoder.encode("\uFB18")}).to.throw(Error, "EncodingError U+FB18");
expect(() => {ms932Encoder.encode("\uFB19")}).to.throw(Error, "EncodingError U+FB19");
expect(() => {ms932Encoder.encode("\uFB1A")}).to.throw(Error, "EncodingError U+FB1A");
expect(() => {ms932Encoder.encode("\uFB1B")}).to.throw(Error, "EncodingError U+FB1B");
expect(() => {ms932Encoder.encode("\uFB1C")}).to.throw(Error, "EncodingError U+FB1C");
expect(() => {ms932Encoder.encode("\uFB1D")}).to.throw(Error, "EncodingError U+FB1D");
expect(() => {ms932Encoder.encode("\uFB1E")}).to.throw(Error, "EncodingError U+FB1E");
expect(() => {ms932Encoder.encode("\uFB1F")}).to.throw(Error, "EncodingError U+FB1F");
expect(() => {ms932Encoder.encode("\uFB20")}).to.throw(Error, "EncodingError U+FB20");
expect(() => {ms932Encoder.encode("\uFB21")}).to.throw(Error, "EncodingError U+FB21");
expect(() => {ms932Encoder.encode("\uFB22")}).to.throw(Error, "EncodingError U+FB22");
expect(() => {ms932Encoder.encode("\uFB23")}).to.throw(Error, "EncodingError U+FB23");
expect(() => {ms932Encoder.encode("\uFB24")}).to.throw(Error, "EncodingError U+FB24");
expect(() => {ms932Encoder.encode("\uFB25")}).to.throw(Error, "EncodingError U+FB25");
expect(() => {ms932Encoder.encode("\uFB26")}).to.throw(Error, "EncodingError U+FB26");
expect(() => {ms932Encoder.encode("\uFB27")}).to.throw(Error, "EncodingError U+FB27");
expect(() => {ms932Encoder.encode("\uFB28")}).to.throw(Error, "EncodingError U+FB28");
expect(() => {ms932Encoder.encode("\uFB29")}).to.throw(Error, "EncodingError U+FB29");
expect(() => {ms932Encoder.encode("\uFB2A")}).to.throw(Error, "EncodingError U+FB2A");
expect(() => {ms932Encoder.encode("\uFB2B")}).to.throw(Error, "EncodingError U+FB2B");
expect(() => {ms932Encoder.encode("\uFB2C")}).to.throw(Error, "EncodingError U+FB2C");
expect(() => {ms932Encoder.encode("\uFB2D")}).to.throw(Error, "EncodingError U+FB2D");
expect(() => {ms932Encoder.encode("\uFB2E")}).to.throw(Error, "EncodingError U+FB2E");
expect(() => {ms932Encoder.encode("\uFB2F")}).to.throw(Error, "EncodingError U+FB2F");
expect(() => {ms932Encoder.encode("\uFB30")}).to.throw(Error, "EncodingError U+FB30");
expect(() => {ms932Encoder.encode("\uFB31")}).to.throw(Error, "EncodingError U+FB31");
expect(() => {ms932Encoder.encode("\uFB32")}).to.throw(Error, "EncodingError U+FB32");
expect(() => {ms932Encoder.encode("\uFB33")}).to.throw(Error, "EncodingError U+FB33");
expect(() => {ms932Encoder.encode("\uFB34")}).to.throw(Error, "EncodingError U+FB34");
expect(() => {ms932Encoder.encode("\uFB35")}).to.throw(Error, "EncodingError U+FB35");
expect(() => {ms932Encoder.encode("\uFB36")}).to.throw(Error, "EncodingError U+FB36");
expect(() => {ms932Encoder.encode("\uFB37")}).to.throw(Error, "EncodingError U+FB37");
expect(() => {ms932Encoder.encode("\uFB38")}).to.throw(Error, "EncodingError U+FB38");
expect(() => {ms932Encoder.encode("\uFB39")}).to.throw(Error, "EncodingError U+FB39");
expect(() => {ms932Encoder.encode("\uFB3A")}).to.throw(Error, "EncodingError U+FB3A");
expect(() => {ms932Encoder.encode("\uFB3B")}).to.throw(Error, "EncodingError U+FB3B");
expect(() => {ms932Encoder.encode("\uFB3C")}).to.throw(Error, "EncodingError U+FB3C");
expect(() => {ms932Encoder.encode("\uFB3D")}).to.throw(Error, "EncodingError U+FB3D");
expect(() => {ms932Encoder.encode("\uFB3E")}).to.throw(Error, "EncodingError U+FB3E");
expect(() => {ms932Encoder.encode("\uFB3F")}).to.throw(Error, "EncodingError U+FB3F");
expect(() => {ms932Encoder.encode("\uFB40")}).to.throw(Error, "EncodingError U+FB40");
expect(() => {ms932Encoder.encode("\uFB41")}).to.throw(Error, "EncodingError U+FB41");
expect(() => {ms932Encoder.encode("\uFB42")}).to.throw(Error, "EncodingError U+FB42");
expect(() => {ms932Encoder.encode("\uFB43")}).to.throw(Error, "EncodingError U+FB43");
expect(() => {ms932Encoder.encode("\uFB44")}).to.throw(Error, "EncodingError U+FB44");
expect(() => {ms932Encoder.encode("\uFB45")}).to.throw(Error, "EncodingError U+FB45");
expect(() => {ms932Encoder.encode("\uFB46")}).to.throw(Error, "EncodingError U+FB46");
expect(() => {ms932Encoder.encode("\uFB47")}).to.throw(Error, "EncodingError U+FB47");
expect(() => {ms932Encoder.encode("\uFB48")}).to.throw(Error, "EncodingError U+FB48");
expect(() => {ms932Encoder.encode("\uFB49")}).to.throw(Error, "EncodingError U+FB49");
expect(() => {ms932Encoder.encode("\uFB4A")}).to.throw(Error, "EncodingError U+FB4A");
expect(() => {ms932Encoder.encode("\uFB4B")}).to.throw(Error, "EncodingError U+FB4B");
expect(() => {ms932Encoder.encode("\uFB4C")}).to.throw(Error, "EncodingError U+FB4C");
expect(() => {ms932Encoder.encode("\uFB4D")}).to.throw(Error, "EncodingError U+FB4D");
expect(() => {ms932Encoder.encode("\uFB4E")}).to.throw(Error, "EncodingError U+FB4E");
expect(() => {ms932Encoder.encode("\uFB4F")}).to.throw(Error, "EncodingError U+FB4F");
expect(() => {ms932Encoder.encode("\uFB50")}).to.throw(Error, "EncodingError U+FB50");
expect(() => {ms932Encoder.encode("\uFB51")}).to.throw(Error, "EncodingError U+FB51");
expect(() => {ms932Encoder.encode("\uFB52")}).to.throw(Error, "EncodingError U+FB52");
expect(() => {ms932Encoder.encode("\uFB53")}).to.throw(Error, "EncodingError U+FB53");
expect(() => {ms932Encoder.encode("\uFB54")}).to.throw(Error, "EncodingError U+FB54");
expect(() => {ms932Encoder.encode("\uFB55")}).to.throw(Error, "EncodingError U+FB55");
expect(() => {ms932Encoder.encode("\uFB56")}).to.throw(Error, "EncodingError U+FB56");
expect(() => {ms932Encoder.encode("\uFB57")}).to.throw(Error, "EncodingError U+FB57");
expect(() => {ms932Encoder.encode("\uFB58")}).to.throw(Error, "EncodingError U+FB58");
expect(() => {ms932Encoder.encode("\uFB59")}).to.throw(Error, "EncodingError U+FB59");
expect(() => {ms932Encoder.encode("\uFB5A")}).to.throw(Error, "EncodingError U+FB5A");
expect(() => {ms932Encoder.encode("\uFB5B")}).to.throw(Error, "EncodingError U+FB5B");
expect(() => {ms932Encoder.encode("\uFB5C")}).to.throw(Error, "EncodingError U+FB5C");
expect(() => {ms932Encoder.encode("\uFB5D")}).to.throw(Error, "EncodingError U+FB5D");
expect(() => {ms932Encoder.encode("\uFB5E")}).to.throw(Error, "EncodingError U+FB5E");
expect(() => {ms932Encoder.encode("\uFB5F")}).to.throw(Error, "EncodingError U+FB5F");
expect(() => {ms932Encoder.encode("\uFB60")}).to.throw(Error, "EncodingError U+FB60");
expect(() => {ms932Encoder.encode("\uFB61")}).to.throw(Error, "EncodingError U+FB61");
expect(() => {ms932Encoder.encode("\uFB62")}).to.throw(Error, "EncodingError U+FB62");
expect(() => {ms932Encoder.encode("\uFB63")}).to.throw(Error, "EncodingError U+FB63");
expect(() => {ms932Encoder.encode("\uFB64")}).to.throw(Error, "EncodingError U+FB64");
expect(() => {ms932Encoder.encode("\uFB65")}).to.throw(Error, "EncodingError U+FB65");
expect(() => {ms932Encoder.encode("\uFB66")}).to.throw(Error, "EncodingError U+FB66");
expect(() => {ms932Encoder.encode("\uFB67")}).to.throw(Error, "EncodingError U+FB67");
expect(() => {ms932Encoder.encode("\uFB68")}).to.throw(Error, "EncodingError U+FB68");
expect(() => {ms932Encoder.encode("\uFB69")}).to.throw(Error, "EncodingError U+FB69");
expect(() => {ms932Encoder.encode("\uFB6A")}).to.throw(Error, "EncodingError U+FB6A");
expect(() => {ms932Encoder.encode("\uFB6B")}).to.throw(Error, "EncodingError U+FB6B");
expect(() => {ms932Encoder.encode("\uFB6C")}).to.throw(Error, "EncodingError U+FB6C");
expect(() => {ms932Encoder.encode("\uFB6D")}).to.throw(Error, "EncodingError U+FB6D");
expect(() => {ms932Encoder.encode("\uFB6E")}).to.throw(Error, "EncodingError U+FB6E");
expect(() => {ms932Encoder.encode("\uFB6F")}).to.throw(Error, "EncodingError U+FB6F");
expect(() => {ms932Encoder.encode("\uFB70")}).to.throw(Error, "EncodingError U+FB70");
expect(() => {ms932Encoder.encode("\uFB71")}).to.throw(Error, "EncodingError U+FB71");
expect(() => {ms932Encoder.encode("\uFB72")}).to.throw(Error, "EncodingError U+FB72");
expect(() => {ms932Encoder.encode("\uFB73")}).to.throw(Error, "EncodingError U+FB73");
expect(() => {ms932Encoder.encode("\uFB74")}).to.throw(Error, "EncodingError U+FB74");
expect(() => {ms932Encoder.encode("\uFB75")}).to.throw(Error, "EncodingError U+FB75");
expect(() => {ms932Encoder.encode("\uFB76")}).to.throw(Error, "EncodingError U+FB76");
expect(() => {ms932Encoder.encode("\uFB77")}).to.throw(Error, "EncodingError U+FB77");
expect(() => {ms932Encoder.encode("\uFB78")}).to.throw(Error, "EncodingError U+FB78");
expect(() => {ms932Encoder.encode("\uFB79")}).to.throw(Error, "EncodingError U+FB79");
expect(() => {ms932Encoder.encode("\uFB7A")}).to.throw(Error, "EncodingError U+FB7A");
expect(() => {ms932Encoder.encode("\uFB7B")}).to.throw(Error, "EncodingError U+FB7B");
expect(() => {ms932Encoder.encode("\uFB7C")}).to.throw(Error, "EncodingError U+FB7C");
expect(() => {ms932Encoder.encode("\uFB7D")}).to.throw(Error, "EncodingError U+FB7D");
expect(() => {ms932Encoder.encode("\uFB7E")}).to.throw(Error, "EncodingError U+FB7E");
expect(() => {ms932Encoder.encode("\uFB7F")}).to.throw(Error, "EncodingError U+FB7F");
expect(() => {ms932Encoder.encode("\uFB80")}).to.throw(Error, "EncodingError U+FB80");
expect(() => {ms932Encoder.encode("\uFB81")}).to.throw(Error, "EncodingError U+FB81");
expect(() => {ms932Encoder.encode("\uFB82")}).to.throw(Error, "EncodingError U+FB82");
expect(() => {ms932Encoder.encode("\uFB83")}).to.throw(Error, "EncodingError U+FB83");
expect(() => {ms932Encoder.encode("\uFB84")}).to.throw(Error, "EncodingError U+FB84");
expect(() => {ms932Encoder.encode("\uFB85")}).to.throw(Error, "EncodingError U+FB85");
expect(() => {ms932Encoder.encode("\uFB86")}).to.throw(Error, "EncodingError U+FB86");
expect(() => {ms932Encoder.encode("\uFB87")}).to.throw(Error, "EncodingError U+FB87");
expect(() => {ms932Encoder.encode("\uFB88")}).to.throw(Error, "EncodingError U+FB88");
expect(() => {ms932Encoder.encode("\uFB89")}).to.throw(Error, "EncodingError U+FB89");
expect(() => {ms932Encoder.encode("\uFB8A")}).to.throw(Error, "EncodingError U+FB8A");
expect(() => {ms932Encoder.encode("\uFB8B")}).to.throw(Error, "EncodingError U+FB8B");
expect(() => {ms932Encoder.encode("\uFB8C")}).to.throw(Error, "EncodingError U+FB8C");
expect(() => {ms932Encoder.encode("\uFB8D")}).to.throw(Error, "EncodingError U+FB8D");
expect(() => {ms932Encoder.encode("\uFB8E")}).to.throw(Error, "EncodingError U+FB8E");
expect(() => {ms932Encoder.encode("\uFB8F")}).to.throw(Error, "EncodingError U+FB8F");
expect(() => {ms932Encoder.encode("\uFB90")}).to.throw(Error, "EncodingError U+FB90");
expect(() => {ms932Encoder.encode("\uFB91")}).to.throw(Error, "EncodingError U+FB91");
expect(() => {ms932Encoder.encode("\uFB92")}).to.throw(Error, "EncodingError U+FB92");
expect(() => {ms932Encoder.encode("\uFB93")}).to.throw(Error, "EncodingError U+FB93");
expect(() => {ms932Encoder.encode("\uFB94")}).to.throw(Error, "EncodingError U+FB94");
expect(() => {ms932Encoder.encode("\uFB95")}).to.throw(Error, "EncodingError U+FB95");
expect(() => {ms932Encoder.encode("\uFB96")}).to.throw(Error, "EncodingError U+FB96");
expect(() => {ms932Encoder.encode("\uFB97")}).to.throw(Error, "EncodingError U+FB97");
expect(() => {ms932Encoder.encode("\uFB98")}).to.throw(Error, "EncodingError U+FB98");
expect(() => {ms932Encoder.encode("\uFB99")}).to.throw(Error, "EncodingError U+FB99");
expect(() => {ms932Encoder.encode("\uFB9A")}).to.throw(Error, "EncodingError U+FB9A");
expect(() => {ms932Encoder.encode("\uFB9B")}).to.throw(Error, "EncodingError U+FB9B");
expect(() => {ms932Encoder.encode("\uFB9C")}).to.throw(Error, "EncodingError U+FB9C");
expect(() => {ms932Encoder.encode("\uFB9D")}).to.throw(Error, "EncodingError U+FB9D");
expect(() => {ms932Encoder.encode("\uFB9E")}).to.throw(Error, "EncodingError U+FB9E");
expect(() => {ms932Encoder.encode("\uFB9F")}).to.throw(Error, "EncodingError U+FB9F");
expect(() => {ms932Encoder.encode("\uFBA0")}).to.throw(Error, "EncodingError U+FBA0");
expect(() => {ms932Encoder.encode("\uFBA1")}).to.throw(Error, "EncodingError U+FBA1");
expect(() => {ms932Encoder.encode("\uFBA2")}).to.throw(Error, "EncodingError U+FBA2");
expect(() => {ms932Encoder.encode("\uFBA3")}).to.throw(Error, "EncodingError U+FBA3");
expect(() => {ms932Encoder.encode("\uFBA4")}).to.throw(Error, "EncodingError U+FBA4");
expect(() => {ms932Encoder.encode("\uFBA5")}).to.throw(Error, "EncodingError U+FBA5");
expect(() => {ms932Encoder.encode("\uFBA6")}).to.throw(Error, "EncodingError U+FBA6");
expect(() => {ms932Encoder.encode("\uFBA7")}).to.throw(Error, "EncodingError U+FBA7");
expect(() => {ms932Encoder.encode("\uFBA8")}).to.throw(Error, "EncodingError U+FBA8");
expect(() => {ms932Encoder.encode("\uFBA9")}).to.throw(Error, "EncodingError U+FBA9");
expect(() => {ms932Encoder.encode("\uFBAA")}).to.throw(Error, "EncodingError U+FBAA");
expect(() => {ms932Encoder.encode("\uFBAB")}).to.throw(Error, "EncodingError U+FBAB");
expect(() => {ms932Encoder.encode("\uFBAC")}).to.throw(Error, "EncodingError U+FBAC");
expect(() => {ms932Encoder.encode("\uFBAD")}).to.throw(Error, "EncodingError U+FBAD");
expect(() => {ms932Encoder.encode("\uFBAE")}).to.throw(Error, "EncodingError U+FBAE");
expect(() => {ms932Encoder.encode("\uFBAF")}).to.throw(Error, "EncodingError U+FBAF");
expect(() => {ms932Encoder.encode("\uFBB0")}).to.throw(Error, "EncodingError U+FBB0");
expect(() => {ms932Encoder.encode("\uFBB1")}).to.throw(Error, "EncodingError U+FBB1");
expect(() => {ms932Encoder.encode("\uFBB2")}).to.throw(Error, "EncodingError U+FBB2");
expect(() => {ms932Encoder.encode("\uFBB3")}).to.throw(Error, "EncodingError U+FBB3");
expect(() => {ms932Encoder.encode("\uFBB4")}).to.throw(Error, "EncodingError U+FBB4");
expect(() => {ms932Encoder.encode("\uFBB5")}).to.throw(Error, "EncodingError U+FBB5");
expect(() => {ms932Encoder.encode("\uFBB6")}).to.throw(Error, "EncodingError U+FBB6");
expect(() => {ms932Encoder.encode("\uFBB7")}).to.throw(Error, "EncodingError U+FBB7");
expect(() => {ms932Encoder.encode("\uFBB8")}).to.throw(Error, "EncodingError U+FBB8");
expect(() => {ms932Encoder.encode("\uFBB9")}).to.throw(Error, "EncodingError U+FBB9");
expect(() => {ms932Encoder.encode("\uFBBA")}).to.throw(Error, "EncodingError U+FBBA");
expect(() => {ms932Encoder.encode("\uFBBB")}).to.throw(Error, "EncodingError U+FBBB");
expect(() => {ms932Encoder.encode("\uFBBC")}).to.throw(Error, "EncodingError U+FBBC");
expect(() => {ms932Encoder.encode("\uFBBD")}).to.throw(Error, "EncodingError U+FBBD");
expect(() => {ms932Encoder.encode("\uFBBE")}).to.throw(Error, "EncodingError U+FBBE");
expect(() => {ms932Encoder.encode("\uFBBF")}).to.throw(Error, "EncodingError U+FBBF");
expect(() => {ms932Encoder.encode("\uFBC0")}).to.throw(Error, "EncodingError U+FBC0");
expect(() => {ms932Encoder.encode("\uFBC1")}).to.throw(Error, "EncodingError U+FBC1");
expect(() => {ms932Encoder.encode("\uFBC2")}).to.throw(Error, "EncodingError U+FBC2");
expect(() => {ms932Encoder.encode("\uFBC3")}).to.throw(Error, "EncodingError U+FBC3");
expect(() => {ms932Encoder.encode("\uFBC4")}).to.throw(Error, "EncodingError U+FBC4");
expect(() => {ms932Encoder.encode("\uFBC5")}).to.throw(Error, "EncodingError U+FBC5");
expect(() => {ms932Encoder.encode("\uFBC6")}).to.throw(Error, "EncodingError U+FBC6");
expect(() => {ms932Encoder.encode("\uFBC7")}).to.throw(Error, "EncodingError U+FBC7");
expect(() => {ms932Encoder.encode("\uFBC8")}).to.throw(Error, "EncodingError U+FBC8");
expect(() => {ms932Encoder.encode("\uFBC9")}).to.throw(Error, "EncodingError U+FBC9");
expect(() => {ms932Encoder.encode("\uFBCA")}).to.throw(Error, "EncodingError U+FBCA");
expect(() => {ms932Encoder.encode("\uFBCB")}).to.throw(Error, "EncodingError U+FBCB");
expect(() => {ms932Encoder.encode("\uFBCC")}).to.throw(Error, "EncodingError U+FBCC");
expect(() => {ms932Encoder.encode("\uFBCD")}).to.throw(Error, "EncodingError U+FBCD");
expect(() => {ms932Encoder.encode("\uFBCE")}).to.throw(Error, "EncodingError U+FBCE");
expect(() => {ms932Encoder.encode("\uFBCF")}).to.throw(Error, "EncodingError U+FBCF");
expect(() => {ms932Encoder.encode("\uFBD0")}).to.throw(Error, "EncodingError U+FBD0");
expect(() => {ms932Encoder.encode("\uFBD1")}).to.throw(Error, "EncodingError U+FBD1");
expect(() => {ms932Encoder.encode("\uFBD2")}).to.throw(Error, "EncodingError U+FBD2");
expect(() => {ms932Encoder.encode("\uFBD3")}).to.throw(Error, "EncodingError U+FBD3");
expect(() => {ms932Encoder.encode("\uFBD4")}).to.throw(Error, "EncodingError U+FBD4");
expect(() => {ms932Encoder.encode("\uFBD5")}).to.throw(Error, "EncodingError U+FBD5");
expect(() => {ms932Encoder.encode("\uFBD6")}).to.throw(Error, "EncodingError U+FBD6");
expect(() => {ms932Encoder.encode("\uFBD7")}).to.throw(Error, "EncodingError U+FBD7");
expect(() => {ms932Encoder.encode("\uFBD8")}).to.throw(Error, "EncodingError U+FBD8");
expect(() => {ms932Encoder.encode("\uFBD9")}).to.throw(Error, "EncodingError U+FBD9");
expect(() => {ms932Encoder.encode("\uFBDA")}).to.throw(Error, "EncodingError U+FBDA");
expect(() => {ms932Encoder.encode("\uFBDB")}).to.throw(Error, "EncodingError U+FBDB");
expect(() => {ms932Encoder.encode("\uFBDC")}).to.throw(Error, "EncodingError U+FBDC");
expect(() => {ms932Encoder.encode("\uFBDD")}).to.throw(Error, "EncodingError U+FBDD");
expect(() => {ms932Encoder.encode("\uFBDE")}).to.throw(Error, "EncodingError U+FBDE");
expect(() => {ms932Encoder.encode("\uFBDF")}).to.throw(Error, "EncodingError U+FBDF");
expect(() => {ms932Encoder.encode("\uFBE0")}).to.throw(Error, "EncodingError U+FBE0");
expect(() => {ms932Encoder.encode("\uFBE1")}).to.throw(Error, "EncodingError U+FBE1");
expect(() => {ms932Encoder.encode("\uFBE2")}).to.throw(Error, "EncodingError U+FBE2");
expect(() => {ms932Encoder.encode("\uFBE3")}).to.throw(Error, "EncodingError U+FBE3");
expect(() => {ms932Encoder.encode("\uFBE4")}).to.throw(Error, "EncodingError U+FBE4");
expect(() => {ms932Encoder.encode("\uFBE5")}).to.throw(Error, "EncodingError U+FBE5");
expect(() => {ms932Encoder.encode("\uFBE6")}).to.throw(Error, "EncodingError U+FBE6");
expect(() => {ms932Encoder.encode("\uFBE7")}).to.throw(Error, "EncodingError U+FBE7");
expect(() => {ms932Encoder.encode("\uFBE8")}).to.throw(Error, "EncodingError U+FBE8");
expect(() => {ms932Encoder.encode("\uFBE9")}).to.throw(Error, "EncodingError U+FBE9");
expect(() => {ms932Encoder.encode("\uFBEA")}).to.throw(Error, "EncodingError U+FBEA");
expect(() => {ms932Encoder.encode("\uFBEB")}).to.throw(Error, "EncodingError U+FBEB");
expect(() => {ms932Encoder.encode("\uFBEC")}).to.throw(Error, "EncodingError U+FBEC");
expect(() => {ms932Encoder.encode("\uFBED")}).to.throw(Error, "EncodingError U+FBED");
expect(() => {ms932Encoder.encode("\uFBEE")}).to.throw(Error, "EncodingError U+FBEE");
expect(() => {ms932Encoder.encode("\uFBEF")}).to.throw(Error, "EncodingError U+FBEF");
expect(() => {ms932Encoder.encode("\uFBF0")}).to.throw(Error, "EncodingError U+FBF0");
expect(() => {ms932Encoder.encode("\uFBF1")}).to.throw(Error, "EncodingError U+FBF1");
expect(() => {ms932Encoder.encode("\uFBF2")}).to.throw(Error, "EncodingError U+FBF2");
expect(() => {ms932Encoder.encode("\uFBF3")}).to.throw(Error, "EncodingError U+FBF3");
expect(() => {ms932Encoder.encode("\uFBF4")}).to.throw(Error, "EncodingError U+FBF4");
expect(() => {ms932Encoder.encode("\uFBF5")}).to.throw(Error, "EncodingError U+FBF5");
expect(() => {ms932Encoder.encode("\uFBF6")}).to.throw(Error, "EncodingError U+FBF6");
expect(() => {ms932Encoder.encode("\uFBF7")}).to.throw(Error, "EncodingError U+FBF7");
expect(() => {ms932Encoder.encode("\uFBF8")}).to.throw(Error, "EncodingError U+FBF8");
expect(() => {ms932Encoder.encode("\uFBF9")}).to.throw(Error, "EncodingError U+FBF9");
expect(() => {ms932Encoder.encode("\uFBFA")}).to.throw(Error, "EncodingError U+FBFA");
expect(() => {ms932Encoder.encode("\uFBFB")}).to.throw(Error, "EncodingError U+FBFB");
expect(() => {ms932Encoder.encode("\uFBFC")}).to.throw(Error, "EncodingError U+FBFC");
expect(() => {ms932Encoder.encode("\uFBFD")}).to.throw(Error, "EncodingError U+FBFD");
expect(() => {ms932Encoder.encode("\uFBFE")}).to.throw(Error, "EncodingError U+FBFE");
expect(() => {ms932Encoder.encode("\uFBFF")}).to.throw(Error, "EncodingError U+FBFF");
expect(() => {ms932Encoder.encode("\uFC00")}).to.throw(Error, "EncodingError U+FC00");
expect(() => {ms932Encoder.encode("\uFC01")}).to.throw(Error, "EncodingError U+FC01");
expect(() => {ms932Encoder.encode("\uFC02")}).to.throw(Error, "EncodingError U+FC02");
expect(() => {ms932Encoder.encode("\uFC03")}).to.throw(Error, "EncodingError U+FC03");
expect(() => {ms932Encoder.encode("\uFC04")}).to.throw(Error, "EncodingError U+FC04");
expect(() => {ms932Encoder.encode("\uFC05")}).to.throw(Error, "EncodingError U+FC05");
expect(() => {ms932Encoder.encode("\uFC06")}).to.throw(Error, "EncodingError U+FC06");
expect(() => {ms932Encoder.encode("\uFC07")}).to.throw(Error, "EncodingError U+FC07");
expect(() => {ms932Encoder.encode("\uFC08")}).to.throw(Error, "EncodingError U+FC08");
expect(() => {ms932Encoder.encode("\uFC09")}).to.throw(Error, "EncodingError U+FC09");
expect(() => {ms932Encoder.encode("\uFC0A")}).to.throw(Error, "EncodingError U+FC0A");
expect(() => {ms932Encoder.encode("\uFC0B")}).to.throw(Error, "EncodingError U+FC0B");
expect(() => {ms932Encoder.encode("\uFC0C")}).to.throw(Error, "EncodingError U+FC0C");
expect(() => {ms932Encoder.encode("\uFC0D")}).to.throw(Error, "EncodingError U+FC0D");
expect(() => {ms932Encoder.encode("\uFC0E")}).to.throw(Error, "EncodingError U+FC0E");
expect(() => {ms932Encoder.encode("\uFC0F")}).to.throw(Error, "EncodingError U+FC0F");
expect(() => {ms932Encoder.encode("\uFC10")}).to.throw(Error, "EncodingError U+FC10");
expect(() => {ms932Encoder.encode("\uFC11")}).to.throw(Error, "EncodingError U+FC11");
expect(() => {ms932Encoder.encode("\uFC12")}).to.throw(Error, "EncodingError U+FC12");
expect(() => {ms932Encoder.encode("\uFC13")}).to.throw(Error, "EncodingError U+FC13");
expect(() => {ms932Encoder.encode("\uFC14")}).to.throw(Error, "EncodingError U+FC14");
expect(() => {ms932Encoder.encode("\uFC15")}).to.throw(Error, "EncodingError U+FC15");
expect(() => {ms932Encoder.encode("\uFC16")}).to.throw(Error, "EncodingError U+FC16");
expect(() => {ms932Encoder.encode("\uFC17")}).to.throw(Error, "EncodingError U+FC17");
expect(() => {ms932Encoder.encode("\uFC18")}).to.throw(Error, "EncodingError U+FC18");
expect(() => {ms932Encoder.encode("\uFC19")}).to.throw(Error, "EncodingError U+FC19");
expect(() => {ms932Encoder.encode("\uFC1A")}).to.throw(Error, "EncodingError U+FC1A");
expect(() => {ms932Encoder.encode("\uFC1B")}).to.throw(Error, "EncodingError U+FC1B");
expect(() => {ms932Encoder.encode("\uFC1C")}).to.throw(Error, "EncodingError U+FC1C");
expect(() => {ms932Encoder.encode("\uFC1D")}).to.throw(Error, "EncodingError U+FC1D");
expect(() => {ms932Encoder.encode("\uFC1E")}).to.throw(Error, "EncodingError U+FC1E");
expect(() => {ms932Encoder.encode("\uFC1F")}).to.throw(Error, "EncodingError U+FC1F");
expect(() => {ms932Encoder.encode("\uFC20")}).to.throw(Error, "EncodingError U+FC20");
expect(() => {ms932Encoder.encode("\uFC21")}).to.throw(Error, "EncodingError U+FC21");
expect(() => {ms932Encoder.encode("\uFC22")}).to.throw(Error, "EncodingError U+FC22");
expect(() => {ms932Encoder.encode("\uFC23")}).to.throw(Error, "EncodingError U+FC23");
expect(() => {ms932Encoder.encode("\uFC24")}).to.throw(Error, "EncodingError U+FC24");
expect(() => {ms932Encoder.encode("\uFC25")}).to.throw(Error, "EncodingError U+FC25");
expect(() => {ms932Encoder.encode("\uFC26")}).to.throw(Error, "EncodingError U+FC26");
expect(() => {ms932Encoder.encode("\uFC27")}).to.throw(Error, "EncodingError U+FC27");
expect(() => {ms932Encoder.encode("\uFC28")}).to.throw(Error, "EncodingError U+FC28");
expect(() => {ms932Encoder.encode("\uFC29")}).to.throw(Error, "EncodingError U+FC29");
expect(() => {ms932Encoder.encode("\uFC2A")}).to.throw(Error, "EncodingError U+FC2A");
expect(() => {ms932Encoder.encode("\uFC2B")}).to.throw(Error, "EncodingError U+FC2B");
expect(() => {ms932Encoder.encode("\uFC2C")}).to.throw(Error, "EncodingError U+FC2C");
expect(() => {ms932Encoder.encode("\uFC2D")}).to.throw(Error, "EncodingError U+FC2D");
expect(() => {ms932Encoder.encode("\uFC2E")}).to.throw(Error, "EncodingError U+FC2E");
expect(() => {ms932Encoder.encode("\uFC2F")}).to.throw(Error, "EncodingError U+FC2F");
expect(() => {ms932Encoder.encode("\uFC30")}).to.throw(Error, "EncodingError U+FC30");
expect(() => {ms932Encoder.encode("\uFC31")}).to.throw(Error, "EncodingError U+FC31");
expect(() => {ms932Encoder.encode("\uFC32")}).to.throw(Error, "EncodingError U+FC32");
expect(() => {ms932Encoder.encode("\uFC33")}).to.throw(Error, "EncodingError U+FC33");
expect(() => {ms932Encoder.encode("\uFC34")}).to.throw(Error, "EncodingError U+FC34");
expect(() => {ms932Encoder.encode("\uFC35")}).to.throw(Error, "EncodingError U+FC35");
expect(() => {ms932Encoder.encode("\uFC36")}).to.throw(Error, "EncodingError U+FC36");
expect(() => {ms932Encoder.encode("\uFC37")}).to.throw(Error, "EncodingError U+FC37");
expect(() => {ms932Encoder.encode("\uFC38")}).to.throw(Error, "EncodingError U+FC38");
expect(() => {ms932Encoder.encode("\uFC39")}).to.throw(Error, "EncodingError U+FC39");
expect(() => {ms932Encoder.encode("\uFC3A")}).to.throw(Error, "EncodingError U+FC3A");
expect(() => {ms932Encoder.encode("\uFC3B")}).to.throw(Error, "EncodingError U+FC3B");
expect(() => {ms932Encoder.encode("\uFC3C")}).to.throw(Error, "EncodingError U+FC3C");
expect(() => {ms932Encoder.encode("\uFC3D")}).to.throw(Error, "EncodingError U+FC3D");
expect(() => {ms932Encoder.encode("\uFC3E")}).to.throw(Error, "EncodingError U+FC3E");
expect(() => {ms932Encoder.encode("\uFC3F")}).to.throw(Error, "EncodingError U+FC3F");
expect(() => {ms932Encoder.encode("\uFC40")}).to.throw(Error, "EncodingError U+FC40");
expect(() => {ms932Encoder.encode("\uFC41")}).to.throw(Error, "EncodingError U+FC41");
expect(() => {ms932Encoder.encode("\uFC42")}).to.throw(Error, "EncodingError U+FC42");
expect(() => {ms932Encoder.encode("\uFC43")}).to.throw(Error, "EncodingError U+FC43");
expect(() => {ms932Encoder.encode("\uFC44")}).to.throw(Error, "EncodingError U+FC44");
expect(() => {ms932Encoder.encode("\uFC45")}).to.throw(Error, "EncodingError U+FC45");
expect(() => {ms932Encoder.encode("\uFC46")}).to.throw(Error, "EncodingError U+FC46");
expect(() => {ms932Encoder.encode("\uFC47")}).to.throw(Error, "EncodingError U+FC47");
expect(() => {ms932Encoder.encode("\uFC48")}).to.throw(Error, "EncodingError U+FC48");
expect(() => {ms932Encoder.encode("\uFC49")}).to.throw(Error, "EncodingError U+FC49");
expect(() => {ms932Encoder.encode("\uFC4A")}).to.throw(Error, "EncodingError U+FC4A");
expect(() => {ms932Encoder.encode("\uFC4B")}).to.throw(Error, "EncodingError U+FC4B");
expect(() => {ms932Encoder.encode("\uFC4C")}).to.throw(Error, "EncodingError U+FC4C");
expect(() => {ms932Encoder.encode("\uFC4D")}).to.throw(Error, "EncodingError U+FC4D");
expect(() => {ms932Encoder.encode("\uFC4E")}).to.throw(Error, "EncodingError U+FC4E");
expect(() => {ms932Encoder.encode("\uFC4F")}).to.throw(Error, "EncodingError U+FC4F");
expect(() => {ms932Encoder.encode("\uFC50")}).to.throw(Error, "EncodingError U+FC50");
expect(() => {ms932Encoder.encode("\uFC51")}).to.throw(Error, "EncodingError U+FC51");
expect(() => {ms932Encoder.encode("\uFC52")}).to.throw(Error, "EncodingError U+FC52");
expect(() => {ms932Encoder.encode("\uFC53")}).to.throw(Error, "EncodingError U+FC53");
expect(() => {ms932Encoder.encode("\uFC54")}).to.throw(Error, "EncodingError U+FC54");
expect(() => {ms932Encoder.encode("\uFC55")}).to.throw(Error, "EncodingError U+FC55");
expect(() => {ms932Encoder.encode("\uFC56")}).to.throw(Error, "EncodingError U+FC56");
expect(() => {ms932Encoder.encode("\uFC57")}).to.throw(Error, "EncodingError U+FC57");
expect(() => {ms932Encoder.encode("\uFC58")}).to.throw(Error, "EncodingError U+FC58");
expect(() => {ms932Encoder.encode("\uFC59")}).to.throw(Error, "EncodingError U+FC59");
expect(() => {ms932Encoder.encode("\uFC5A")}).to.throw(Error, "EncodingError U+FC5A");
expect(() => {ms932Encoder.encode("\uFC5B")}).to.throw(Error, "EncodingError U+FC5B");
expect(() => {ms932Encoder.encode("\uFC5C")}).to.throw(Error, "EncodingError U+FC5C");
expect(() => {ms932Encoder.encode("\uFC5D")}).to.throw(Error, "EncodingError U+FC5D");
expect(() => {ms932Encoder.encode("\uFC5E")}).to.throw(Error, "EncodingError U+FC5E");
expect(() => {ms932Encoder.encode("\uFC5F")}).to.throw(Error, "EncodingError U+FC5F");
expect(() => {ms932Encoder.encode("\uFC60")}).to.throw(Error, "EncodingError U+FC60");
expect(() => {ms932Encoder.encode("\uFC61")}).to.throw(Error, "EncodingError U+FC61");
expect(() => {ms932Encoder.encode("\uFC62")}).to.throw(Error, "EncodingError U+FC62");
expect(() => {ms932Encoder.encode("\uFC63")}).to.throw(Error, "EncodingError U+FC63");
expect(() => {ms932Encoder.encode("\uFC64")}).to.throw(Error, "EncodingError U+FC64");
expect(() => {ms932Encoder.encode("\uFC65")}).to.throw(Error, "EncodingError U+FC65");
expect(() => {ms932Encoder.encode("\uFC66")}).to.throw(Error, "EncodingError U+FC66");
expect(() => {ms932Encoder.encode("\uFC67")}).to.throw(Error, "EncodingError U+FC67");
expect(() => {ms932Encoder.encode("\uFC68")}).to.throw(Error, "EncodingError U+FC68");
expect(() => {ms932Encoder.encode("\uFC69")}).to.throw(Error, "EncodingError U+FC69");
expect(() => {ms932Encoder.encode("\uFC6A")}).to.throw(Error, "EncodingError U+FC6A");
expect(() => {ms932Encoder.encode("\uFC6B")}).to.throw(Error, "EncodingError U+FC6B");
expect(() => {ms932Encoder.encode("\uFC6C")}).to.throw(Error, "EncodingError U+FC6C");
expect(() => {ms932Encoder.encode("\uFC6D")}).to.throw(Error, "EncodingError U+FC6D");
expect(() => {ms932Encoder.encode("\uFC6E")}).to.throw(Error, "EncodingError U+FC6E");
expect(() => {ms932Encoder.encode("\uFC6F")}).to.throw(Error, "EncodingError U+FC6F");
expect(() => {ms932Encoder.encode("\uFC70")}).to.throw(Error, "EncodingError U+FC70");
expect(() => {ms932Encoder.encode("\uFC71")}).to.throw(Error, "EncodingError U+FC71");
expect(() => {ms932Encoder.encode("\uFC72")}).to.throw(Error, "EncodingError U+FC72");
expect(() => {ms932Encoder.encode("\uFC73")}).to.throw(Error, "EncodingError U+FC73");
expect(() => {ms932Encoder.encode("\uFC74")}).to.throw(Error, "EncodingError U+FC74");
expect(() => {ms932Encoder.encode("\uFC75")}).to.throw(Error, "EncodingError U+FC75");
expect(() => {ms932Encoder.encode("\uFC76")}).to.throw(Error, "EncodingError U+FC76");
expect(() => {ms932Encoder.encode("\uFC77")}).to.throw(Error, "EncodingError U+FC77");
expect(() => {ms932Encoder.encode("\uFC78")}).to.throw(Error, "EncodingError U+FC78");
expect(() => {ms932Encoder.encode("\uFC79")}).to.throw(Error, "EncodingError U+FC79");
expect(() => {ms932Encoder.encode("\uFC7A")}).to.throw(Error, "EncodingError U+FC7A");
expect(() => {ms932Encoder.encode("\uFC7B")}).to.throw(Error, "EncodingError U+FC7B");
expect(() => {ms932Encoder.encode("\uFC7C")}).to.throw(Error, "EncodingError U+FC7C");
expect(() => {ms932Encoder.encode("\uFC7D")}).to.throw(Error, "EncodingError U+FC7D");
expect(() => {ms932Encoder.encode("\uFC7E")}).to.throw(Error, "EncodingError U+FC7E");
expect(() => {ms932Encoder.encode("\uFC7F")}).to.throw(Error, "EncodingError U+FC7F");
expect(() => {ms932Encoder.encode("\uFC80")}).to.throw(Error, "EncodingError U+FC80");
expect(() => {ms932Encoder.encode("\uFC81")}).to.throw(Error, "EncodingError U+FC81");
expect(() => {ms932Encoder.encode("\uFC82")}).to.throw(Error, "EncodingError U+FC82");
expect(() => {ms932Encoder.encode("\uFC83")}).to.throw(Error, "EncodingError U+FC83");
expect(() => {ms932Encoder.encode("\uFC84")}).to.throw(Error, "EncodingError U+FC84");
expect(() => {ms932Encoder.encode("\uFC85")}).to.throw(Error, "EncodingError U+FC85");
expect(() => {ms932Encoder.encode("\uFC86")}).to.throw(Error, "EncodingError U+FC86");
expect(() => {ms932Encoder.encode("\uFC87")}).to.throw(Error, "EncodingError U+FC87");
expect(() => {ms932Encoder.encode("\uFC88")}).to.throw(Error, "EncodingError U+FC88");
expect(() => {ms932Encoder.encode("\uFC89")}).to.throw(Error, "EncodingError U+FC89");
expect(() => {ms932Encoder.encode("\uFC8A")}).to.throw(Error, "EncodingError U+FC8A");
expect(() => {ms932Encoder.encode("\uFC8B")}).to.throw(Error, "EncodingError U+FC8B");
expect(() => {ms932Encoder.encode("\uFC8C")}).to.throw(Error, "EncodingError U+FC8C");
expect(() => {ms932Encoder.encode("\uFC8D")}).to.throw(Error, "EncodingError U+FC8D");
expect(() => {ms932Encoder.encode("\uFC8E")}).to.throw(Error, "EncodingError U+FC8E");
expect(() => {ms932Encoder.encode("\uFC8F")}).to.throw(Error, "EncodingError U+FC8F");
expect(() => {ms932Encoder.encode("\uFC90")}).to.throw(Error, "EncodingError U+FC90");
expect(() => {ms932Encoder.encode("\uFC91")}).to.throw(Error, "EncodingError U+FC91");
expect(() => {ms932Encoder.encode("\uFC92")}).to.throw(Error, "EncodingError U+FC92");
expect(() => {ms932Encoder.encode("\uFC93")}).to.throw(Error, "EncodingError U+FC93");
expect(() => {ms932Encoder.encode("\uFC94")}).to.throw(Error, "EncodingError U+FC94");
expect(() => {ms932Encoder.encode("\uFC95")}).to.throw(Error, "EncodingError U+FC95");
expect(() => {ms932Encoder.encode("\uFC96")}).to.throw(Error, "EncodingError U+FC96");
expect(() => {ms932Encoder.encode("\uFC97")}).to.throw(Error, "EncodingError U+FC97");
expect(() => {ms932Encoder.encode("\uFC98")}).to.throw(Error, "EncodingError U+FC98");
expect(() => {ms932Encoder.encode("\uFC99")}).to.throw(Error, "EncodingError U+FC99");
expect(() => {ms932Encoder.encode("\uFC9A")}).to.throw(Error, "EncodingError U+FC9A");
expect(() => {ms932Encoder.encode("\uFC9B")}).to.throw(Error, "EncodingError U+FC9B");
expect(() => {ms932Encoder.encode("\uFC9C")}).to.throw(Error, "EncodingError U+FC9C");
expect(() => {ms932Encoder.encode("\uFC9D")}).to.throw(Error, "EncodingError U+FC9D");
expect(() => {ms932Encoder.encode("\uFC9E")}).to.throw(Error, "EncodingError U+FC9E");
expect(() => {ms932Encoder.encode("\uFC9F")}).to.throw(Error, "EncodingError U+FC9F");
expect(() => {ms932Encoder.encode("\uFCA0")}).to.throw(Error, "EncodingError U+FCA0");
expect(() => {ms932Encoder.encode("\uFCA1")}).to.throw(Error, "EncodingError U+FCA1");
expect(() => {ms932Encoder.encode("\uFCA2")}).to.throw(Error, "EncodingError U+FCA2");
expect(() => {ms932Encoder.encode("\uFCA3")}).to.throw(Error, "EncodingError U+FCA3");
expect(() => {ms932Encoder.encode("\uFCA4")}).to.throw(Error, "EncodingError U+FCA4");
expect(() => {ms932Encoder.encode("\uFCA5")}).to.throw(Error, "EncodingError U+FCA5");
expect(() => {ms932Encoder.encode("\uFCA6")}).to.throw(Error, "EncodingError U+FCA6");
expect(() => {ms932Encoder.encode("\uFCA7")}).to.throw(Error, "EncodingError U+FCA7");
expect(() => {ms932Encoder.encode("\uFCA8")}).to.throw(Error, "EncodingError U+FCA8");
expect(() => {ms932Encoder.encode("\uFCA9")}).to.throw(Error, "EncodingError U+FCA9");
expect(() => {ms932Encoder.encode("\uFCAA")}).to.throw(Error, "EncodingError U+FCAA");
expect(() => {ms932Encoder.encode("\uFCAB")}).to.throw(Error, "EncodingError U+FCAB");
expect(() => {ms932Encoder.encode("\uFCAC")}).to.throw(Error, "EncodingError U+FCAC");
expect(() => {ms932Encoder.encode("\uFCAD")}).to.throw(Error, "EncodingError U+FCAD");
expect(() => {ms932Encoder.encode("\uFCAE")}).to.throw(Error, "EncodingError U+FCAE");
expect(() => {ms932Encoder.encode("\uFCAF")}).to.throw(Error, "EncodingError U+FCAF");
expect(() => {ms932Encoder.encode("\uFCB0")}).to.throw(Error, "EncodingError U+FCB0");
expect(() => {ms932Encoder.encode("\uFCB1")}).to.throw(Error, "EncodingError U+FCB1");
expect(() => {ms932Encoder.encode("\uFCB2")}).to.throw(Error, "EncodingError U+FCB2");
expect(() => {ms932Encoder.encode("\uFCB3")}).to.throw(Error, "EncodingError U+FCB3");
expect(() => {ms932Encoder.encode("\uFCB4")}).to.throw(Error, "EncodingError U+FCB4");
expect(() => {ms932Encoder.encode("\uFCB5")}).to.throw(Error, "EncodingError U+FCB5");
expect(() => {ms932Encoder.encode("\uFCB6")}).to.throw(Error, "EncodingError U+FCB6");
expect(() => {ms932Encoder.encode("\uFCB7")}).to.throw(Error, "EncodingError U+FCB7");
expect(() => {ms932Encoder.encode("\uFCB8")}).to.throw(Error, "EncodingError U+FCB8");
expect(() => {ms932Encoder.encode("\uFCB9")}).to.throw(Error, "EncodingError U+FCB9");
expect(() => {ms932Encoder.encode("\uFCBA")}).to.throw(Error, "EncodingError U+FCBA");
expect(() => {ms932Encoder.encode("\uFCBB")}).to.throw(Error, "EncodingError U+FCBB");
expect(() => {ms932Encoder.encode("\uFCBC")}).to.throw(Error, "EncodingError U+FCBC");
expect(() => {ms932Encoder.encode("\uFCBD")}).to.throw(Error, "EncodingError U+FCBD");
expect(() => {ms932Encoder.encode("\uFCBE")}).to.throw(Error, "EncodingError U+FCBE");
expect(() => {ms932Encoder.encode("\uFCBF")}).to.throw(Error, "EncodingError U+FCBF");
expect(() => {ms932Encoder.encode("\uFCC0")}).to.throw(Error, "EncodingError U+FCC0");
expect(() => {ms932Encoder.encode("\uFCC1")}).to.throw(Error, "EncodingError U+FCC1");
expect(() => {ms932Encoder.encode("\uFCC2")}).to.throw(Error, "EncodingError U+FCC2");
expect(() => {ms932Encoder.encode("\uFCC3")}).to.throw(Error, "EncodingError U+FCC3");
expect(() => {ms932Encoder.encode("\uFCC4")}).to.throw(Error, "EncodingError U+FCC4");
expect(() => {ms932Encoder.encode("\uFCC5")}).to.throw(Error, "EncodingError U+FCC5");
expect(() => {ms932Encoder.encode("\uFCC6")}).to.throw(Error, "EncodingError U+FCC6");
expect(() => {ms932Encoder.encode("\uFCC7")}).to.throw(Error, "EncodingError U+FCC7");
expect(() => {ms932Encoder.encode("\uFCC8")}).to.throw(Error, "EncodingError U+FCC8");
expect(() => {ms932Encoder.encode("\uFCC9")}).to.throw(Error, "EncodingError U+FCC9");
expect(() => {ms932Encoder.encode("\uFCCA")}).to.throw(Error, "EncodingError U+FCCA");
expect(() => {ms932Encoder.encode("\uFCCB")}).to.throw(Error, "EncodingError U+FCCB");
expect(() => {ms932Encoder.encode("\uFCCC")}).to.throw(Error, "EncodingError U+FCCC");
expect(() => {ms932Encoder.encode("\uFCCD")}).to.throw(Error, "EncodingError U+FCCD");
expect(() => {ms932Encoder.encode("\uFCCE")}).to.throw(Error, "EncodingError U+FCCE");
expect(() => {ms932Encoder.encode("\uFCCF")}).to.throw(Error, "EncodingError U+FCCF");
expect(() => {ms932Encoder.encode("\uFCD0")}).to.throw(Error, "EncodingError U+FCD0");
expect(() => {ms932Encoder.encode("\uFCD1")}).to.throw(Error, "EncodingError U+FCD1");
expect(() => {ms932Encoder.encode("\uFCD2")}).to.throw(Error, "EncodingError U+FCD2");
expect(() => {ms932Encoder.encode("\uFCD3")}).to.throw(Error, "EncodingError U+FCD3");
expect(() => {ms932Encoder.encode("\uFCD4")}).to.throw(Error, "EncodingError U+FCD4");
expect(() => {ms932Encoder.encode("\uFCD5")}).to.throw(Error, "EncodingError U+FCD5");
expect(() => {ms932Encoder.encode("\uFCD6")}).to.throw(Error, "EncodingError U+FCD6");
expect(() => {ms932Encoder.encode("\uFCD7")}).to.throw(Error, "EncodingError U+FCD7");
expect(() => {ms932Encoder.encode("\uFCD8")}).to.throw(Error, "EncodingError U+FCD8");
expect(() => {ms932Encoder.encode("\uFCD9")}).to.throw(Error, "EncodingError U+FCD9");
expect(() => {ms932Encoder.encode("\uFCDA")}).to.throw(Error, "EncodingError U+FCDA");
expect(() => {ms932Encoder.encode("\uFCDB")}).to.throw(Error, "EncodingError U+FCDB");
expect(() => {ms932Encoder.encode("\uFCDC")}).to.throw(Error, "EncodingError U+FCDC");
expect(() => {ms932Encoder.encode("\uFCDD")}).to.throw(Error, "EncodingError U+FCDD");
expect(() => {ms932Encoder.encode("\uFCDE")}).to.throw(Error, "EncodingError U+FCDE");
expect(() => {ms932Encoder.encode("\uFCDF")}).to.throw(Error, "EncodingError U+FCDF");
expect(() => {ms932Encoder.encode("\uFCE0")}).to.throw(Error, "EncodingError U+FCE0");
expect(() => {ms932Encoder.encode("\uFCE1")}).to.throw(Error, "EncodingError U+FCE1");
expect(() => {ms932Encoder.encode("\uFCE2")}).to.throw(Error, "EncodingError U+FCE2");
expect(() => {ms932Encoder.encode("\uFCE3")}).to.throw(Error, "EncodingError U+FCE3");
expect(() => {ms932Encoder.encode("\uFCE4")}).to.throw(Error, "EncodingError U+FCE4");
expect(() => {ms932Encoder.encode("\uFCE5")}).to.throw(Error, "EncodingError U+FCE5");
expect(() => {ms932Encoder.encode("\uFCE6")}).to.throw(Error, "EncodingError U+FCE6");
expect(() => {ms932Encoder.encode("\uFCE7")}).to.throw(Error, "EncodingError U+FCE7");
expect(() => {ms932Encoder.encode("\uFCE8")}).to.throw(Error, "EncodingError U+FCE8");
expect(() => {ms932Encoder.encode("\uFCE9")}).to.throw(Error, "EncodingError U+FCE9");
expect(() => {ms932Encoder.encode("\uFCEA")}).to.throw(Error, "EncodingError U+FCEA");
expect(() => {ms932Encoder.encode("\uFCEB")}).to.throw(Error, "EncodingError U+FCEB");
expect(() => {ms932Encoder.encode("\uFCEC")}).to.throw(Error, "EncodingError U+FCEC");
expect(() => {ms932Encoder.encode("\uFCED")}).to.throw(Error, "EncodingError U+FCED");
expect(() => {ms932Encoder.encode("\uFCEE")}).to.throw(Error, "EncodingError U+FCEE");
expect(() => {ms932Encoder.encode("\uFCEF")}).to.throw(Error, "EncodingError U+FCEF");
expect(() => {ms932Encoder.encode("\uFCF0")}).to.throw(Error, "EncodingError U+FCF0");
expect(() => {ms932Encoder.encode("\uFCF1")}).to.throw(Error, "EncodingError U+FCF1");
expect(() => {ms932Encoder.encode("\uFCF2")}).to.throw(Error, "EncodingError U+FCF2");
expect(() => {ms932Encoder.encode("\uFCF3")}).to.throw(Error, "EncodingError U+FCF3");
expect(() => {ms932Encoder.encode("\uFCF4")}).to.throw(Error, "EncodingError U+FCF4");
expect(() => {ms932Encoder.encode("\uFCF5")}).to.throw(Error, "EncodingError U+FCF5");
expect(() => {ms932Encoder.encode("\uFCF6")}).to.throw(Error, "EncodingError U+FCF6");
expect(() => {ms932Encoder.encode("\uFCF7")}).to.throw(Error, "EncodingError U+FCF7");
expect(() => {ms932Encoder.encode("\uFCF8")}).to.throw(Error, "EncodingError U+FCF8");
expect(() => {ms932Encoder.encode("\uFCF9")}).to.throw(Error, "EncodingError U+FCF9");
expect(() => {ms932Encoder.encode("\uFCFA")}).to.throw(Error, "EncodingError U+FCFA");
expect(() => {ms932Encoder.encode("\uFCFB")}).to.throw(Error, "EncodingError U+FCFB");
expect(() => {ms932Encoder.encode("\uFCFC")}).to.throw(Error, "EncodingError U+FCFC");
expect(() => {ms932Encoder.encode("\uFCFD")}).to.throw(Error, "EncodingError U+FCFD");
expect(() => {ms932Encoder.encode("\uFCFE")}).to.throw(Error, "EncodingError U+FCFE");
expect(() => {ms932Encoder.encode("\uFCFF")}).to.throw(Error, "EncodingError U+FCFF");
expect(() => {ms932Encoder.encode("\uFD00")}).to.throw(Error, "EncodingError U+FD00");
expect(() => {ms932Encoder.encode("\uFD01")}).to.throw(Error, "EncodingError U+FD01");
expect(() => {ms932Encoder.encode("\uFD02")}).to.throw(Error, "EncodingError U+FD02");
expect(() => {ms932Encoder.encode("\uFD03")}).to.throw(Error, "EncodingError U+FD03");
expect(() => {ms932Encoder.encode("\uFD04")}).to.throw(Error, "EncodingError U+FD04");
expect(() => {ms932Encoder.encode("\uFD05")}).to.throw(Error, "EncodingError U+FD05");
expect(() => {ms932Encoder.encode("\uFD06")}).to.throw(Error, "EncodingError U+FD06");
expect(() => {ms932Encoder.encode("\uFD07")}).to.throw(Error, "EncodingError U+FD07");
expect(() => {ms932Encoder.encode("\uFD08")}).to.throw(Error, "EncodingError U+FD08");
expect(() => {ms932Encoder.encode("\uFD09")}).to.throw(Error, "EncodingError U+FD09");
expect(() => {ms932Encoder.encode("\uFD0A")}).to.throw(Error, "EncodingError U+FD0A");
expect(() => {ms932Encoder.encode("\uFD0B")}).to.throw(Error, "EncodingError U+FD0B");
expect(() => {ms932Encoder.encode("\uFD0C")}).to.throw(Error, "EncodingError U+FD0C");
expect(() => {ms932Encoder.encode("\uFD0D")}).to.throw(Error, "EncodingError U+FD0D");
expect(() => {ms932Encoder.encode("\uFD0E")}).to.throw(Error, "EncodingError U+FD0E");
expect(() => {ms932Encoder.encode("\uFD0F")}).to.throw(Error, "EncodingError U+FD0F");
expect(() => {ms932Encoder.encode("\uFD10")}).to.throw(Error, "EncodingError U+FD10");
expect(() => {ms932Encoder.encode("\uFD11")}).to.throw(Error, "EncodingError U+FD11");
expect(() => {ms932Encoder.encode("\uFD12")}).to.throw(Error, "EncodingError U+FD12");
expect(() => {ms932Encoder.encode("\uFD13")}).to.throw(Error, "EncodingError U+FD13");
expect(() => {ms932Encoder.encode("\uFD14")}).to.throw(Error, "EncodingError U+FD14");
expect(() => {ms932Encoder.encode("\uFD15")}).to.throw(Error, "EncodingError U+FD15");
expect(() => {ms932Encoder.encode("\uFD16")}).to.throw(Error, "EncodingError U+FD16");
expect(() => {ms932Encoder.encode("\uFD17")}).to.throw(Error, "EncodingError U+FD17");
expect(() => {ms932Encoder.encode("\uFD18")}).to.throw(Error, "EncodingError U+FD18");
expect(() => {ms932Encoder.encode("\uFD19")}).to.throw(Error, "EncodingError U+FD19");
expect(() => {ms932Encoder.encode("\uFD1A")}).to.throw(Error, "EncodingError U+FD1A");
expect(() => {ms932Encoder.encode("\uFD1B")}).to.throw(Error, "EncodingError U+FD1B");
expect(() => {ms932Encoder.encode("\uFD1C")}).to.throw(Error, "EncodingError U+FD1C");
expect(() => {ms932Encoder.encode("\uFD1D")}).to.throw(Error, "EncodingError U+FD1D");
expect(() => {ms932Encoder.encode("\uFD1E")}).to.throw(Error, "EncodingError U+FD1E");
expect(() => {ms932Encoder.encode("\uFD1F")}).to.throw(Error, "EncodingError U+FD1F");
expect(() => {ms932Encoder.encode("\uFD20")}).to.throw(Error, "EncodingError U+FD20");
expect(() => {ms932Encoder.encode("\uFD21")}).to.throw(Error, "EncodingError U+FD21");
expect(() => {ms932Encoder.encode("\uFD22")}).to.throw(Error, "EncodingError U+FD22");
expect(() => {ms932Encoder.encode("\uFD23")}).to.throw(Error, "EncodingError U+FD23");
expect(() => {ms932Encoder.encode("\uFD24")}).to.throw(Error, "EncodingError U+FD24");
expect(() => {ms932Encoder.encode("\uFD25")}).to.throw(Error, "EncodingError U+FD25");
expect(() => {ms932Encoder.encode("\uFD26")}).to.throw(Error, "EncodingError U+FD26");
expect(() => {ms932Encoder.encode("\uFD27")}).to.throw(Error, "EncodingError U+FD27");
expect(() => {ms932Encoder.encode("\uFD28")}).to.throw(Error, "EncodingError U+FD28");
expect(() => {ms932Encoder.encode("\uFD29")}).to.throw(Error, "EncodingError U+FD29");
expect(() => {ms932Encoder.encode("\uFD2A")}).to.throw(Error, "EncodingError U+FD2A");
expect(() => {ms932Encoder.encode("\uFD2B")}).to.throw(Error, "EncodingError U+FD2B");
expect(() => {ms932Encoder.encode("\uFD2C")}).to.throw(Error, "EncodingError U+FD2C");
expect(() => {ms932Encoder.encode("\uFD2D")}).to.throw(Error, "EncodingError U+FD2D");
expect(() => {ms932Encoder.encode("\uFD2E")}).to.throw(Error, "EncodingError U+FD2E");
expect(() => {ms932Encoder.encode("\uFD2F")}).to.throw(Error, "EncodingError U+FD2F");
expect(() => {ms932Encoder.encode("\uFD30")}).to.throw(Error, "EncodingError U+FD30");
expect(() => {ms932Encoder.encode("\uFD31")}).to.throw(Error, "EncodingError U+FD31");
expect(() => {ms932Encoder.encode("\uFD32")}).to.throw(Error, "EncodingError U+FD32");
expect(() => {ms932Encoder.encode("\uFD33")}).to.throw(Error, "EncodingError U+FD33");
expect(() => {ms932Encoder.encode("\uFD34")}).to.throw(Error, "EncodingError U+FD34");
expect(() => {ms932Encoder.encode("\uFD35")}).to.throw(Error, "EncodingError U+FD35");
expect(() => {ms932Encoder.encode("\uFD36")}).to.throw(Error, "EncodingError U+FD36");
expect(() => {ms932Encoder.encode("\uFD37")}).to.throw(Error, "EncodingError U+FD37");
expect(() => {ms932Encoder.encode("\uFD38")}).to.throw(Error, "EncodingError U+FD38");
expect(() => {ms932Encoder.encode("\uFD39")}).to.throw(Error, "EncodingError U+FD39");
expect(() => {ms932Encoder.encode("\uFD3A")}).to.throw(Error, "EncodingError U+FD3A");
expect(() => {ms932Encoder.encode("\uFD3B")}).to.throw(Error, "EncodingError U+FD3B");
expect(() => {ms932Encoder.encode("\uFD3C")}).to.throw(Error, "EncodingError U+FD3C");
expect(() => {ms932Encoder.encode("\uFD3D")}).to.throw(Error, "EncodingError U+FD3D");
expect(() => {ms932Encoder.encode("\uFD3E")}).to.throw(Error, "EncodingError U+FD3E");
expect(() => {ms932Encoder.encode("\uFD3F")}).to.throw(Error, "EncodingError U+FD3F");
expect(() => {ms932Encoder.encode("\uFD40")}).to.throw(Error, "EncodingError U+FD40");
expect(() => {ms932Encoder.encode("\uFD41")}).to.throw(Error, "EncodingError U+FD41");
expect(() => {ms932Encoder.encode("\uFD42")}).to.throw(Error, "EncodingError U+FD42");
expect(() => {ms932Encoder.encode("\uFD43")}).to.throw(Error, "EncodingError U+FD43");
expect(() => {ms932Encoder.encode("\uFD44")}).to.throw(Error, "EncodingError U+FD44");
expect(() => {ms932Encoder.encode("\uFD45")}).to.throw(Error, "EncodingError U+FD45");
expect(() => {ms932Encoder.encode("\uFD46")}).to.throw(Error, "EncodingError U+FD46");
expect(() => {ms932Encoder.encode("\uFD47")}).to.throw(Error, "EncodingError U+FD47");
expect(() => {ms932Encoder.encode("\uFD48")}).to.throw(Error, "EncodingError U+FD48");
expect(() => {ms932Encoder.encode("\uFD49")}).to.throw(Error, "EncodingError U+FD49");
expect(() => {ms932Encoder.encode("\uFD4A")}).to.throw(Error, "EncodingError U+FD4A");
expect(() => {ms932Encoder.encode("\uFD4B")}).to.throw(Error, "EncodingError U+FD4B");
expect(() => {ms932Encoder.encode("\uFD4C")}).to.throw(Error, "EncodingError U+FD4C");
expect(() => {ms932Encoder.encode("\uFD4D")}).to.throw(Error, "EncodingError U+FD4D");
expect(() => {ms932Encoder.encode("\uFD4E")}).to.throw(Error, "EncodingError U+FD4E");
expect(() => {ms932Encoder.encode("\uFD4F")}).to.throw(Error, "EncodingError U+FD4F");
expect(() => {ms932Encoder.encode("\uFD50")}).to.throw(Error, "EncodingError U+FD50");
expect(() => {ms932Encoder.encode("\uFD51")}).to.throw(Error, "EncodingError U+FD51");
expect(() => {ms932Encoder.encode("\uFD52")}).to.throw(Error, "EncodingError U+FD52");
expect(() => {ms932Encoder.encode("\uFD53")}).to.throw(Error, "EncodingError U+FD53");
expect(() => {ms932Encoder.encode("\uFD54")}).to.throw(Error, "EncodingError U+FD54");
expect(() => {ms932Encoder.encode("\uFD55")}).to.throw(Error, "EncodingError U+FD55");
expect(() => {ms932Encoder.encode("\uFD56")}).to.throw(Error, "EncodingError U+FD56");
expect(() => {ms932Encoder.encode("\uFD57")}).to.throw(Error, "EncodingError U+FD57");
expect(() => {ms932Encoder.encode("\uFD58")}).to.throw(Error, "EncodingError U+FD58");
expect(() => {ms932Encoder.encode("\uFD59")}).to.throw(Error, "EncodingError U+FD59");
expect(() => {ms932Encoder.encode("\uFD5A")}).to.throw(Error, "EncodingError U+FD5A");
expect(() => {ms932Encoder.encode("\uFD5B")}).to.throw(Error, "EncodingError U+FD5B");
expect(() => {ms932Encoder.encode("\uFD5C")}).to.throw(Error, "EncodingError U+FD5C");
expect(() => {ms932Encoder.encode("\uFD5D")}).to.throw(Error, "EncodingError U+FD5D");
expect(() => {ms932Encoder.encode("\uFD5E")}).to.throw(Error, "EncodingError U+FD5E");
expect(() => {ms932Encoder.encode("\uFD5F")}).to.throw(Error, "EncodingError U+FD5F");
expect(() => {ms932Encoder.encode("\uFD60")}).to.throw(Error, "EncodingError U+FD60");
expect(() => {ms932Encoder.encode("\uFD61")}).to.throw(Error, "EncodingError U+FD61");
expect(() => {ms932Encoder.encode("\uFD62")}).to.throw(Error, "EncodingError U+FD62");
expect(() => {ms932Encoder.encode("\uFD63")}).to.throw(Error, "EncodingError U+FD63");
expect(() => {ms932Encoder.encode("\uFD64")}).to.throw(Error, "EncodingError U+FD64");
expect(() => {ms932Encoder.encode("\uFD65")}).to.throw(Error, "EncodingError U+FD65");
expect(() => {ms932Encoder.encode("\uFD66")}).to.throw(Error, "EncodingError U+FD66");
expect(() => {ms932Encoder.encode("\uFD67")}).to.throw(Error, "EncodingError U+FD67");
expect(() => {ms932Encoder.encode("\uFD68")}).to.throw(Error, "EncodingError U+FD68");
expect(() => {ms932Encoder.encode("\uFD69")}).to.throw(Error, "EncodingError U+FD69");
expect(() => {ms932Encoder.encode("\uFD6A")}).to.throw(Error, "EncodingError U+FD6A");
expect(() => {ms932Encoder.encode("\uFD6B")}).to.throw(Error, "EncodingError U+FD6B");
expect(() => {ms932Encoder.encode("\uFD6C")}).to.throw(Error, "EncodingError U+FD6C");
expect(() => {ms932Encoder.encode("\uFD6D")}).to.throw(Error, "EncodingError U+FD6D");
expect(() => {ms932Encoder.encode("\uFD6E")}).to.throw(Error, "EncodingError U+FD6E");
expect(() => {ms932Encoder.encode("\uFD6F")}).to.throw(Error, "EncodingError U+FD6F");
expect(() => {ms932Encoder.encode("\uFD70")}).to.throw(Error, "EncodingError U+FD70");
expect(() => {ms932Encoder.encode("\uFD71")}).to.throw(Error, "EncodingError U+FD71");
expect(() => {ms932Encoder.encode("\uFD72")}).to.throw(Error, "EncodingError U+FD72");
expect(() => {ms932Encoder.encode("\uFD73")}).to.throw(Error, "EncodingError U+FD73");
expect(() => {ms932Encoder.encode("\uFD74")}).to.throw(Error, "EncodingError U+FD74");
expect(() => {ms932Encoder.encode("\uFD75")}).to.throw(Error, "EncodingError U+FD75");
expect(() => {ms932Encoder.encode("\uFD76")}).to.throw(Error, "EncodingError U+FD76");
expect(() => {ms932Encoder.encode("\uFD77")}).to.throw(Error, "EncodingError U+FD77");
expect(() => {ms932Encoder.encode("\uFD78")}).to.throw(Error, "EncodingError U+FD78");
expect(() => {ms932Encoder.encode("\uFD79")}).to.throw(Error, "EncodingError U+FD79");
expect(() => {ms932Encoder.encode("\uFD7A")}).to.throw(Error, "EncodingError U+FD7A");
expect(() => {ms932Encoder.encode("\uFD7B")}).to.throw(Error, "EncodingError U+FD7B");
expect(() => {ms932Encoder.encode("\uFD7C")}).to.throw(Error, "EncodingError U+FD7C");
expect(() => {ms932Encoder.encode("\uFD7D")}).to.throw(Error, "EncodingError U+FD7D");
expect(() => {ms932Encoder.encode("\uFD7E")}).to.throw(Error, "EncodingError U+FD7E");
expect(() => {ms932Encoder.encode("\uFD7F")}).to.throw(Error, "EncodingError U+FD7F");
expect(() => {ms932Encoder.encode("\uFD80")}).to.throw(Error, "EncodingError U+FD80");
expect(() => {ms932Encoder.encode("\uFD81")}).to.throw(Error, "EncodingError U+FD81");
expect(() => {ms932Encoder.encode("\uFD82")}).to.throw(Error, "EncodingError U+FD82");
expect(() => {ms932Encoder.encode("\uFD83")}).to.throw(Error, "EncodingError U+FD83");
expect(() => {ms932Encoder.encode("\uFD84")}).to.throw(Error, "EncodingError U+FD84");
expect(() => {ms932Encoder.encode("\uFD85")}).to.throw(Error, "EncodingError U+FD85");
expect(() => {ms932Encoder.encode("\uFD86")}).to.throw(Error, "EncodingError U+FD86");
expect(() => {ms932Encoder.encode("\uFD87")}).to.throw(Error, "EncodingError U+FD87");
expect(() => {ms932Encoder.encode("\uFD88")}).to.throw(Error, "EncodingError U+FD88");
expect(() => {ms932Encoder.encode("\uFD89")}).to.throw(Error, "EncodingError U+FD89");
expect(() => {ms932Encoder.encode("\uFD8A")}).to.throw(Error, "EncodingError U+FD8A");
expect(() => {ms932Encoder.encode("\uFD8B")}).to.throw(Error, "EncodingError U+FD8B");
expect(() => {ms932Encoder.encode("\uFD8C")}).to.throw(Error, "EncodingError U+FD8C");
expect(() => {ms932Encoder.encode("\uFD8D")}).to.throw(Error, "EncodingError U+FD8D");
expect(() => {ms932Encoder.encode("\uFD8E")}).to.throw(Error, "EncodingError U+FD8E");
expect(() => {ms932Encoder.encode("\uFD8F")}).to.throw(Error, "EncodingError U+FD8F");
expect(() => {ms932Encoder.encode("\uFD90")}).to.throw(Error, "EncodingError U+FD90");
expect(() => {ms932Encoder.encode("\uFD91")}).to.throw(Error, "EncodingError U+FD91");
expect(() => {ms932Encoder.encode("\uFD92")}).to.throw(Error, "EncodingError U+FD92");
expect(() => {ms932Encoder.encode("\uFD93")}).to.throw(Error, "EncodingError U+FD93");
expect(() => {ms932Encoder.encode("\uFD94")}).to.throw(Error, "EncodingError U+FD94");
expect(() => {ms932Encoder.encode("\uFD95")}).to.throw(Error, "EncodingError U+FD95");
expect(() => {ms932Encoder.encode("\uFD96")}).to.throw(Error, "EncodingError U+FD96");
expect(() => {ms932Encoder.encode("\uFD97")}).to.throw(Error, "EncodingError U+FD97");
expect(() => {ms932Encoder.encode("\uFD98")}).to.throw(Error, "EncodingError U+FD98");
expect(() => {ms932Encoder.encode("\uFD99")}).to.throw(Error, "EncodingError U+FD99");
expect(() => {ms932Encoder.encode("\uFD9A")}).to.throw(Error, "EncodingError U+FD9A");
expect(() => {ms932Encoder.encode("\uFD9B")}).to.throw(Error, "EncodingError U+FD9B");
expect(() => {ms932Encoder.encode("\uFD9C")}).to.throw(Error, "EncodingError U+FD9C");
expect(() => {ms932Encoder.encode("\uFD9D")}).to.throw(Error, "EncodingError U+FD9D");
expect(() => {ms932Encoder.encode("\uFD9E")}).to.throw(Error, "EncodingError U+FD9E");
expect(() => {ms932Encoder.encode("\uFD9F")}).to.throw(Error, "EncodingError U+FD9F");
expect(() => {ms932Encoder.encode("\uFDA0")}).to.throw(Error, "EncodingError U+FDA0");
expect(() => {ms932Encoder.encode("\uFDA1")}).to.throw(Error, "EncodingError U+FDA1");
expect(() => {ms932Encoder.encode("\uFDA2")}).to.throw(Error, "EncodingError U+FDA2");
expect(() => {ms932Encoder.encode("\uFDA3")}).to.throw(Error, "EncodingError U+FDA3");
expect(() => {ms932Encoder.encode("\uFDA4")}).to.throw(Error, "EncodingError U+FDA4");
expect(() => {ms932Encoder.encode("\uFDA5")}).to.throw(Error, "EncodingError U+FDA5");
expect(() => {ms932Encoder.encode("\uFDA6")}).to.throw(Error, "EncodingError U+FDA6");
expect(() => {ms932Encoder.encode("\uFDA7")}).to.throw(Error, "EncodingError U+FDA7");
expect(() => {ms932Encoder.encode("\uFDA8")}).to.throw(Error, "EncodingError U+FDA8");
expect(() => {ms932Encoder.encode("\uFDA9")}).to.throw(Error, "EncodingError U+FDA9");
expect(() => {ms932Encoder.encode("\uFDAA")}).to.throw(Error, "EncodingError U+FDAA");
expect(() => {ms932Encoder.encode("\uFDAB")}).to.throw(Error, "EncodingError U+FDAB");
expect(() => {ms932Encoder.encode("\uFDAC")}).to.throw(Error, "EncodingError U+FDAC");
expect(() => {ms932Encoder.encode("\uFDAD")}).to.throw(Error, "EncodingError U+FDAD");
expect(() => {ms932Encoder.encode("\uFDAE")}).to.throw(Error, "EncodingError U+FDAE");
expect(() => {ms932Encoder.encode("\uFDAF")}).to.throw(Error, "EncodingError U+FDAF");
expect(() => {ms932Encoder.encode("\uFDB0")}).to.throw(Error, "EncodingError U+FDB0");
expect(() => {ms932Encoder.encode("\uFDB1")}).to.throw(Error, "EncodingError U+FDB1");
expect(() => {ms932Encoder.encode("\uFDB2")}).to.throw(Error, "EncodingError U+FDB2");
expect(() => {ms932Encoder.encode("\uFDB3")}).to.throw(Error, "EncodingError U+FDB3");
expect(() => {ms932Encoder.encode("\uFDB4")}).to.throw(Error, "EncodingError U+FDB4");
expect(() => {ms932Encoder.encode("\uFDB5")}).to.throw(Error, "EncodingError U+FDB5");
expect(() => {ms932Encoder.encode("\uFDB6")}).to.throw(Error, "EncodingError U+FDB6");
expect(() => {ms932Encoder.encode("\uFDB7")}).to.throw(Error, "EncodingError U+FDB7");
expect(() => {ms932Encoder.encode("\uFDB8")}).to.throw(Error, "EncodingError U+FDB8");
expect(() => {ms932Encoder.encode("\uFDB9")}).to.throw(Error, "EncodingError U+FDB9");
expect(() => {ms932Encoder.encode("\uFDBA")}).to.throw(Error, "EncodingError U+FDBA");
expect(() => {ms932Encoder.encode("\uFDBB")}).to.throw(Error, "EncodingError U+FDBB");
expect(() => {ms932Encoder.encode("\uFDBC")}).to.throw(Error, "EncodingError U+FDBC");
expect(() => {ms932Encoder.encode("\uFDBD")}).to.throw(Error, "EncodingError U+FDBD");
expect(() => {ms932Encoder.encode("\uFDBE")}).to.throw(Error, "EncodingError U+FDBE");
expect(() => {ms932Encoder.encode("\uFDBF")}).to.throw(Error, "EncodingError U+FDBF");
expect(() => {ms932Encoder.encode("\uFDC0")}).to.throw(Error, "EncodingError U+FDC0");
expect(() => {ms932Encoder.encode("\uFDC1")}).to.throw(Error, "EncodingError U+FDC1");
expect(() => {ms932Encoder.encode("\uFDC2")}).to.throw(Error, "EncodingError U+FDC2");
expect(() => {ms932Encoder.encode("\uFDC3")}).to.throw(Error, "EncodingError U+FDC3");
expect(() => {ms932Encoder.encode("\uFDC4")}).to.throw(Error, "EncodingError U+FDC4");
expect(() => {ms932Encoder.encode("\uFDC5")}).to.throw(Error, "EncodingError U+FDC5");
expect(() => {ms932Encoder.encode("\uFDC6")}).to.throw(Error, "EncodingError U+FDC6");
expect(() => {ms932Encoder.encode("\uFDC7")}).to.throw(Error, "EncodingError U+FDC7");
expect(() => {ms932Encoder.encode("\uFDC8")}).to.throw(Error, "EncodingError U+FDC8");
expect(() => {ms932Encoder.encode("\uFDC9")}).to.throw(Error, "EncodingError U+FDC9");
expect(() => {ms932Encoder.encode("\uFDCA")}).to.throw(Error, "EncodingError U+FDCA");
expect(() => {ms932Encoder.encode("\uFDCB")}).to.throw(Error, "EncodingError U+FDCB");
expect(() => {ms932Encoder.encode("\uFDCC")}).to.throw(Error, "EncodingError U+FDCC");
expect(() => {ms932Encoder.encode("\uFDCD")}).to.throw(Error, "EncodingError U+FDCD");
expect(() => {ms932Encoder.encode("\uFDCE")}).to.throw(Error, "EncodingError U+FDCE");
expect(() => {ms932Encoder.encode("\uFDCF")}).to.throw(Error, "EncodingError U+FDCF");
expect(() => {ms932Encoder.encode("\uFDD0")}).to.throw(Error, "EncodingError U+FDD0");
expect(() => {ms932Encoder.encode("\uFDD1")}).to.throw(Error, "EncodingError U+FDD1");
expect(() => {ms932Encoder.encode("\uFDD2")}).to.throw(Error, "EncodingError U+FDD2");
expect(() => {ms932Encoder.encode("\uFDD3")}).to.throw(Error, "EncodingError U+FDD3");
expect(() => {ms932Encoder.encode("\uFDD4")}).to.throw(Error, "EncodingError U+FDD4");
expect(() => {ms932Encoder.encode("\uFDD5")}).to.throw(Error, "EncodingError U+FDD5");
expect(() => {ms932Encoder.encode("\uFDD6")}).to.throw(Error, "EncodingError U+FDD6");
expect(() => {ms932Encoder.encode("\uFDD7")}).to.throw(Error, "EncodingError U+FDD7");
expect(() => {ms932Encoder.encode("\uFDD8")}).to.throw(Error, "EncodingError U+FDD8");
expect(() => {ms932Encoder.encode("\uFDD9")}).to.throw(Error, "EncodingError U+FDD9");
expect(() => {ms932Encoder.encode("\uFDDA")}).to.throw(Error, "EncodingError U+FDDA");
expect(() => {ms932Encoder.encode("\uFDDB")}).to.throw(Error, "EncodingError U+FDDB");
expect(() => {ms932Encoder.encode("\uFDDC")}).to.throw(Error, "EncodingError U+FDDC");
expect(() => {ms932Encoder.encode("\uFDDD")}).to.throw(Error, "EncodingError U+FDDD");
expect(() => {ms932Encoder.encode("\uFDDE")}).to.throw(Error, "EncodingError U+FDDE");
expect(() => {ms932Encoder.encode("\uFDDF")}).to.throw(Error, "EncodingError U+FDDF");
expect(() => {ms932Encoder.encode("\uFDE0")}).to.throw(Error, "EncodingError U+FDE0");
expect(() => {ms932Encoder.encode("\uFDE1")}).to.throw(Error, "EncodingError U+FDE1");
expect(() => {ms932Encoder.encode("\uFDE2")}).to.throw(Error, "EncodingError U+FDE2");
expect(() => {ms932Encoder.encode("\uFDE3")}).to.throw(Error, "EncodingError U+FDE3");
expect(() => {ms932Encoder.encode("\uFDE4")}).to.throw(Error, "EncodingError U+FDE4");
expect(() => {ms932Encoder.encode("\uFDE5")}).to.throw(Error, "EncodingError U+FDE5");
expect(() => {ms932Encoder.encode("\uFDE6")}).to.throw(Error, "EncodingError U+FDE6");
expect(() => {ms932Encoder.encode("\uFDE7")}).to.throw(Error, "EncodingError U+FDE7");
expect(() => {ms932Encoder.encode("\uFDE8")}).to.throw(Error, "EncodingError U+FDE8");
expect(() => {ms932Encoder.encode("\uFDE9")}).to.throw(Error, "EncodingError U+FDE9");
expect(() => {ms932Encoder.encode("\uFDEA")}).to.throw(Error, "EncodingError U+FDEA");
expect(() => {ms932Encoder.encode("\uFDEB")}).to.throw(Error, "EncodingError U+FDEB");
expect(() => {ms932Encoder.encode("\uFDEC")}).to.throw(Error, "EncodingError U+FDEC");
expect(() => {ms932Encoder.encode("\uFDED")}).to.throw(Error, "EncodingError U+FDED");
expect(() => {ms932Encoder.encode("\uFDEE")}).to.throw(Error, "EncodingError U+FDEE");
expect(() => {ms932Encoder.encode("\uFDEF")}).to.throw(Error, "EncodingError U+FDEF");
expect(() => {ms932Encoder.encode("\uFDF0")}).to.throw(Error, "EncodingError U+FDF0");
expect(() => {ms932Encoder.encode("\uFDF1")}).to.throw(Error, "EncodingError U+FDF1");
expect(() => {ms932Encoder.encode("\uFDF2")}).to.throw(Error, "EncodingError U+FDF2");
expect(() => {ms932Encoder.encode("\uFDF3")}).to.throw(Error, "EncodingError U+FDF3");
expect(() => {ms932Encoder.encode("\uFDF4")}).to.throw(Error, "EncodingError U+FDF4");
expect(() => {ms932Encoder.encode("\uFDF5")}).to.throw(Error, "EncodingError U+FDF5");
expect(() => {ms932Encoder.encode("\uFDF6")}).to.throw(Error, "EncodingError U+FDF6");
expect(() => {ms932Encoder.encode("\uFDF7")}).to.throw(Error, "EncodingError U+FDF7");
expect(() => {ms932Encoder.encode("\uFDF8")}).to.throw(Error, "EncodingError U+FDF8");
expect(() => {ms932Encoder.encode("\uFDF9")}).to.throw(Error, "EncodingError U+FDF9");
expect(() => {ms932Encoder.encode("\uFDFA")}).to.throw(Error, "EncodingError U+FDFA");
expect(() => {ms932Encoder.encode("\uFDFB")}).to.throw(Error, "EncodingError U+FDFB");
expect(() => {ms932Encoder.encode("\uFDFC")}).to.throw(Error, "EncodingError U+FDFC");
expect(() => {ms932Encoder.encode("\uFDFD")}).to.throw(Error, "EncodingError U+FDFD");
expect(() => {ms932Encoder.encode("\uFDFE")}).to.throw(Error, "EncodingError U+FDFE");
expect(() => {ms932Encoder.encode("\uFDFF")}).to.throw(Error, "EncodingError U+FDFF");
expect(() => {ms932Encoder.encode("\uFE00")}).to.throw(Error, "EncodingError U+FE00");
expect(() => {ms932Encoder.encode("\uFE01")}).to.throw(Error, "EncodingError U+FE01");
expect(() => {ms932Encoder.encode("\uFE02")}).to.throw(Error, "EncodingError U+FE02");
expect(() => {ms932Encoder.encode("\uFE03")}).to.throw(Error, "EncodingError U+FE03");
expect(() => {ms932Encoder.encode("\uFE04")}).to.throw(Error, "EncodingError U+FE04");
expect(() => {ms932Encoder.encode("\uFE05")}).to.throw(Error, "EncodingError U+FE05");
expect(() => {ms932Encoder.encode("\uFE06")}).to.throw(Error, "EncodingError U+FE06");
expect(() => {ms932Encoder.encode("\uFE07")}).to.throw(Error, "EncodingError U+FE07");
expect(() => {ms932Encoder.encode("\uFE08")}).to.throw(Error, "EncodingError U+FE08");
expect(() => {ms932Encoder.encode("\uFE09")}).to.throw(Error, "EncodingError U+FE09");
expect(() => {ms932Encoder.encode("\uFE0A")}).to.throw(Error, "EncodingError U+FE0A");
expect(() => {ms932Encoder.encode("\uFE0B")}).to.throw(Error, "EncodingError U+FE0B");
expect(() => {ms932Encoder.encode("\uFE0C")}).to.throw(Error, "EncodingError U+FE0C");
expect(() => {ms932Encoder.encode("\uFE0D")}).to.throw(Error, "EncodingError U+FE0D");
expect(() => {ms932Encoder.encode("\uFE0E")}).to.throw(Error, "EncodingError U+FE0E");
expect(() => {ms932Encoder.encode("\uFE0F")}).to.throw(Error, "EncodingError U+FE0F");
expect(() => {ms932Encoder.encode("\uFE10")}).to.throw(Error, "EncodingError U+FE10");
expect(() => {ms932Encoder.encode("\uFE11")}).to.throw(Error, "EncodingError U+FE11");
expect(() => {ms932Encoder.encode("\uFE12")}).to.throw(Error, "EncodingError U+FE12");
expect(() => {ms932Encoder.encode("\uFE13")}).to.throw(Error, "EncodingError U+FE13");
expect(() => {ms932Encoder.encode("\uFE14")}).to.throw(Error, "EncodingError U+FE14");
expect(() => {ms932Encoder.encode("\uFE15")}).to.throw(Error, "EncodingError U+FE15");
expect(() => {ms932Encoder.encode("\uFE16")}).to.throw(Error, "EncodingError U+FE16");
expect(() => {ms932Encoder.encode("\uFE17")}).to.throw(Error, "EncodingError U+FE17");
expect(() => {ms932Encoder.encode("\uFE18")}).to.throw(Error, "EncodingError U+FE18");
expect(() => {ms932Encoder.encode("\uFE19")}).to.throw(Error, "EncodingError U+FE19");
expect(() => {ms932Encoder.encode("\uFE1A")}).to.throw(Error, "EncodingError U+FE1A");
expect(() => {ms932Encoder.encode("\uFE1B")}).to.throw(Error, "EncodingError U+FE1B");
expect(() => {ms932Encoder.encode("\uFE1C")}).to.throw(Error, "EncodingError U+FE1C");
expect(() => {ms932Encoder.encode("\uFE1D")}).to.throw(Error, "EncodingError U+FE1D");
expect(() => {ms932Encoder.encode("\uFE1E")}).to.throw(Error, "EncodingError U+FE1E");
expect(() => {ms932Encoder.encode("\uFE1F")}).to.throw(Error, "EncodingError U+FE1F");
expect(() => {ms932Encoder.encode("\uFE20")}).to.throw(Error, "EncodingError U+FE20");
expect(() => {ms932Encoder.encode("\uFE21")}).to.throw(Error, "EncodingError U+FE21");
expect(() => {ms932Encoder.encode("\uFE22")}).to.throw(Error, "EncodingError U+FE22");
expect(() => {ms932Encoder.encode("\uFE23")}).to.throw(Error, "EncodingError U+FE23");
expect(() => {ms932Encoder.encode("\uFE24")}).to.throw(Error, "EncodingError U+FE24");
expect(() => {ms932Encoder.encode("\uFE25")}).to.throw(Error, "EncodingError U+FE25");
expect(() => {ms932Encoder.encode("\uFE26")}).to.throw(Error, "EncodingError U+FE26");
expect(() => {ms932Encoder.encode("\uFE27")}).to.throw(Error, "EncodingError U+FE27");
expect(() => {ms932Encoder.encode("\uFE28")}).to.throw(Error, "EncodingError U+FE28");
expect(() => {ms932Encoder.encode("\uFE29")}).to.throw(Error, "EncodingError U+FE29");
expect(() => {ms932Encoder.encode("\uFE2A")}).to.throw(Error, "EncodingError U+FE2A");
expect(() => {ms932Encoder.encode("\uFE2B")}).to.throw(Error, "EncodingError U+FE2B");
expect(() => {ms932Encoder.encode("\uFE2C")}).to.throw(Error, "EncodingError U+FE2C");
expect(() => {ms932Encoder.encode("\uFE2D")}).to.throw(Error, "EncodingError U+FE2D");
expect(() => {ms932Encoder.encode("\uFE2E")}).to.throw(Error, "EncodingError U+FE2E");
expect(() => {ms932Encoder.encode("\uFE2F")}).to.throw(Error, "EncodingError U+FE2F");
expect(() => {ms932Encoder.encode("\uFE30")}).to.throw(Error, "EncodingError U+FE30");
expect(() => {ms932Encoder.encode("\uFE31")}).to.throw(Error, "EncodingError U+FE31");
expect(() => {ms932Encoder.encode("\uFE32")}).to.throw(Error, "EncodingError U+FE32");
expect(() => {ms932Encoder.encode("\uFE33")}).to.throw(Error, "EncodingError U+FE33");
expect(() => {ms932Encoder.encode("\uFE34")}).to.throw(Error, "EncodingError U+FE34");
expect(() => {ms932Encoder.encode("\uFE35")}).to.throw(Error, "EncodingError U+FE35");
expect(() => {ms932Encoder.encode("\uFE36")}).to.throw(Error, "EncodingError U+FE36");
expect(() => {ms932Encoder.encode("\uFE37")}).to.throw(Error, "EncodingError U+FE37");
expect(() => {ms932Encoder.encode("\uFE38")}).to.throw(Error, "EncodingError U+FE38");
expect(() => {ms932Encoder.encode("\uFE39")}).to.throw(Error, "EncodingError U+FE39");
expect(() => {ms932Encoder.encode("\uFE3A")}).to.throw(Error, "EncodingError U+FE3A");
expect(() => {ms932Encoder.encode("\uFE3B")}).to.throw(Error, "EncodingError U+FE3B");
expect(() => {ms932Encoder.encode("\uFE3C")}).to.throw(Error, "EncodingError U+FE3C");
expect(() => {ms932Encoder.encode("\uFE3D")}).to.throw(Error, "EncodingError U+FE3D");
expect(() => {ms932Encoder.encode("\uFE3E")}).to.throw(Error, "EncodingError U+FE3E");
expect(() => {ms932Encoder.encode("\uFE3F")}).to.throw(Error, "EncodingError U+FE3F");
expect(() => {ms932Encoder.encode("\uFE40")}).to.throw(Error, "EncodingError U+FE40");
expect(() => {ms932Encoder.encode("\uFE41")}).to.throw(Error, "EncodingError U+FE41");
expect(() => {ms932Encoder.encode("\uFE42")}).to.throw(Error, "EncodingError U+FE42");
expect(() => {ms932Encoder.encode("\uFE43")}).to.throw(Error, "EncodingError U+FE43");
expect(() => {ms932Encoder.encode("\uFE44")}).to.throw(Error, "EncodingError U+FE44");
expect(() => {ms932Encoder.encode("\uFE45")}).to.throw(Error, "EncodingError U+FE45");
expect(() => {ms932Encoder.encode("\uFE46")}).to.throw(Error, "EncodingError U+FE46");
expect(() => {ms932Encoder.encode("\uFE47")}).to.throw(Error, "EncodingError U+FE47");
expect(() => {ms932Encoder.encode("\uFE48")}).to.throw(Error, "EncodingError U+FE48");
expect(() => {ms932Encoder.encode("\uFE49")}).to.throw(Error, "EncodingError U+FE49");
expect(() => {ms932Encoder.encode("\uFE4A")}).to.throw(Error, "EncodingError U+FE4A");
expect(() => {ms932Encoder.encode("\uFE4B")}).to.throw(Error, "EncodingError U+FE4B");
expect(() => {ms932Encoder.encode("\uFE4C")}).to.throw(Error, "EncodingError U+FE4C");
expect(() => {ms932Encoder.encode("\uFE4D")}).to.throw(Error, "EncodingError U+FE4D");
expect(() => {ms932Encoder.encode("\uFE4E")}).to.throw(Error, "EncodingError U+FE4E");
expect(() => {ms932Encoder.encode("\uFE4F")}).to.throw(Error, "EncodingError U+FE4F");
expect(() => {ms932Encoder.encode("\uFE50")}).to.throw(Error, "EncodingError U+FE50");
expect(() => {ms932Encoder.encode("\uFE51")}).to.throw(Error, "EncodingError U+FE51");
expect(() => {ms932Encoder.encode("\uFE52")}).to.throw(Error, "EncodingError U+FE52");
expect(() => {ms932Encoder.encode("\uFE53")}).to.throw(Error, "EncodingError U+FE53");
expect(() => {ms932Encoder.encode("\uFE54")}).to.throw(Error, "EncodingError U+FE54");
expect(() => {ms932Encoder.encode("\uFE55")}).to.throw(Error, "EncodingError U+FE55");
expect(() => {ms932Encoder.encode("\uFE56")}).to.throw(Error, "EncodingError U+FE56");
expect(() => {ms932Encoder.encode("\uFE57")}).to.throw(Error, "EncodingError U+FE57");
expect(() => {ms932Encoder.encode("\uFE58")}).to.throw(Error, "EncodingError U+FE58");
expect(() => {ms932Encoder.encode("\uFE59")}).to.throw(Error, "EncodingError U+FE59");
expect(() => {ms932Encoder.encode("\uFE5A")}).to.throw(Error, "EncodingError U+FE5A");
expect(() => {ms932Encoder.encode("\uFE5B")}).to.throw(Error, "EncodingError U+FE5B");
expect(() => {ms932Encoder.encode("\uFE5C")}).to.throw(Error, "EncodingError U+FE5C");
expect(() => {ms932Encoder.encode("\uFE5D")}).to.throw(Error, "EncodingError U+FE5D");
expect(() => {ms932Encoder.encode("\uFE5E")}).to.throw(Error, "EncodingError U+FE5E");
expect(() => {ms932Encoder.encode("\uFE5F")}).to.throw(Error, "EncodingError U+FE5F");
expect(() => {ms932Encoder.encode("\uFE60")}).to.throw(Error, "EncodingError U+FE60");
expect(() => {ms932Encoder.encode("\uFE61")}).to.throw(Error, "EncodingError U+FE61");
expect(() => {ms932Encoder.encode("\uFE62")}).to.throw(Error, "EncodingError U+FE62");
expect(() => {ms932Encoder.encode("\uFE63")}).to.throw(Error, "EncodingError U+FE63");
expect(() => {ms932Encoder.encode("\uFE64")}).to.throw(Error, "EncodingError U+FE64");
expect(() => {ms932Encoder.encode("\uFE65")}).to.throw(Error, "EncodingError U+FE65");
expect(() => {ms932Encoder.encode("\uFE66")}).to.throw(Error, "EncodingError U+FE66");
expect(() => {ms932Encoder.encode("\uFE67")}).to.throw(Error, "EncodingError U+FE67");
expect(() => {ms932Encoder.encode("\uFE68")}).to.throw(Error, "EncodingError U+FE68");
expect(() => {ms932Encoder.encode("\uFE69")}).to.throw(Error, "EncodingError U+FE69");
expect(() => {ms932Encoder.encode("\uFE6A")}).to.throw(Error, "EncodingError U+FE6A");
expect(() => {ms932Encoder.encode("\uFE6B")}).to.throw(Error, "EncodingError U+FE6B");
expect(() => {ms932Encoder.encode("\uFE6C")}).to.throw(Error, "EncodingError U+FE6C");
expect(() => {ms932Encoder.encode("\uFE6D")}).to.throw(Error, "EncodingError U+FE6D");
expect(() => {ms932Encoder.encode("\uFE6E")}).to.throw(Error, "EncodingError U+FE6E");
expect(() => {ms932Encoder.encode("\uFE6F")}).to.throw(Error, "EncodingError U+FE6F");
expect(() => {ms932Encoder.encode("\uFE70")}).to.throw(Error, "EncodingError U+FE70");
expect(() => {ms932Encoder.encode("\uFE71")}).to.throw(Error, "EncodingError U+FE71");
expect(() => {ms932Encoder.encode("\uFE72")}).to.throw(Error, "EncodingError U+FE72");
expect(() => {ms932Encoder.encode("\uFE73")}).to.throw(Error, "EncodingError U+FE73");
expect(() => {ms932Encoder.encode("\uFE74")}).to.throw(Error, "EncodingError U+FE74");
expect(() => {ms932Encoder.encode("\uFE75")}).to.throw(Error, "EncodingError U+FE75");
expect(() => {ms932Encoder.encode("\uFE76")}).to.throw(Error, "EncodingError U+FE76");
expect(() => {ms932Encoder.encode("\uFE77")}).to.throw(Error, "EncodingError U+FE77");
expect(() => {ms932Encoder.encode("\uFE78")}).to.throw(Error, "EncodingError U+FE78");
expect(() => {ms932Encoder.encode("\uFE79")}).to.throw(Error, "EncodingError U+FE79");
expect(() => {ms932Encoder.encode("\uFE7A")}).to.throw(Error, "EncodingError U+FE7A");
expect(() => {ms932Encoder.encode("\uFE7B")}).to.throw(Error, "EncodingError U+FE7B");
expect(() => {ms932Encoder.encode("\uFE7C")}).to.throw(Error, "EncodingError U+FE7C");
expect(() => {ms932Encoder.encode("\uFE7D")}).to.throw(Error, "EncodingError U+FE7D");
expect(() => {ms932Encoder.encode("\uFE7E")}).to.throw(Error, "EncodingError U+FE7E");
expect(() => {ms932Encoder.encode("\uFE7F")}).to.throw(Error, "EncodingError U+FE7F");
expect(() => {ms932Encoder.encode("\uFE80")}).to.throw(Error, "EncodingError U+FE80");
expect(() => {ms932Encoder.encode("\uFE81")}).to.throw(Error, "EncodingError U+FE81");
expect(() => {ms932Encoder.encode("\uFE82")}).to.throw(Error, "EncodingError U+FE82");
expect(() => {ms932Encoder.encode("\uFE83")}).to.throw(Error, "EncodingError U+FE83");
expect(() => {ms932Encoder.encode("\uFE84")}).to.throw(Error, "EncodingError U+FE84");
expect(() => {ms932Encoder.encode("\uFE85")}).to.throw(Error, "EncodingError U+FE85");
expect(() => {ms932Encoder.encode("\uFE86")}).to.throw(Error, "EncodingError U+FE86");
expect(() => {ms932Encoder.encode("\uFE87")}).to.throw(Error, "EncodingError U+FE87");
expect(() => {ms932Encoder.encode("\uFE88")}).to.throw(Error, "EncodingError U+FE88");
expect(() => {ms932Encoder.encode("\uFE89")}).to.throw(Error, "EncodingError U+FE89");
expect(() => {ms932Encoder.encode("\uFE8A")}).to.throw(Error, "EncodingError U+FE8A");
expect(() => {ms932Encoder.encode("\uFE8B")}).to.throw(Error, "EncodingError U+FE8B");
expect(() => {ms932Encoder.encode("\uFE8C")}).to.throw(Error, "EncodingError U+FE8C");
expect(() => {ms932Encoder.encode("\uFE8D")}).to.throw(Error, "EncodingError U+FE8D");
expect(() => {ms932Encoder.encode("\uFE8E")}).to.throw(Error, "EncodingError U+FE8E");
expect(() => {ms932Encoder.encode("\uFE8F")}).to.throw(Error, "EncodingError U+FE8F");
expect(() => {ms932Encoder.encode("\uFE90")}).to.throw(Error, "EncodingError U+FE90");
expect(() => {ms932Encoder.encode("\uFE91")}).to.throw(Error, "EncodingError U+FE91");
expect(() => {ms932Encoder.encode("\uFE92")}).to.throw(Error, "EncodingError U+FE92");
expect(() => {ms932Encoder.encode("\uFE93")}).to.throw(Error, "EncodingError U+FE93");
expect(() => {ms932Encoder.encode("\uFE94")}).to.throw(Error, "EncodingError U+FE94");
expect(() => {ms932Encoder.encode("\uFE95")}).to.throw(Error, "EncodingError U+FE95");
expect(() => {ms932Encoder.encode("\uFE96")}).to.throw(Error, "EncodingError U+FE96");
expect(() => {ms932Encoder.encode("\uFE97")}).to.throw(Error, "EncodingError U+FE97");
expect(() => {ms932Encoder.encode("\uFE98")}).to.throw(Error, "EncodingError U+FE98");
expect(() => {ms932Encoder.encode("\uFE99")}).to.throw(Error, "EncodingError U+FE99");
expect(() => {ms932Encoder.encode("\uFE9A")}).to.throw(Error, "EncodingError U+FE9A");
expect(() => {ms932Encoder.encode("\uFE9B")}).to.throw(Error, "EncodingError U+FE9B");
expect(() => {ms932Encoder.encode("\uFE9C")}).to.throw(Error, "EncodingError U+FE9C");
expect(() => {ms932Encoder.encode("\uFE9D")}).to.throw(Error, "EncodingError U+FE9D");
expect(() => {ms932Encoder.encode("\uFE9E")}).to.throw(Error, "EncodingError U+FE9E");
expect(() => {ms932Encoder.encode("\uFE9F")}).to.throw(Error, "EncodingError U+FE9F");
expect(() => {ms932Encoder.encode("\uFEA0")}).to.throw(Error, "EncodingError U+FEA0");
expect(() => {ms932Encoder.encode("\uFEA1")}).to.throw(Error, "EncodingError U+FEA1");
expect(() => {ms932Encoder.encode("\uFEA2")}).to.throw(Error, "EncodingError U+FEA2");
expect(() => {ms932Encoder.encode("\uFEA3")}).to.throw(Error, "EncodingError U+FEA3");
expect(() => {ms932Encoder.encode("\uFEA4")}).to.throw(Error, "EncodingError U+FEA4");
expect(() => {ms932Encoder.encode("\uFEA5")}).to.throw(Error, "EncodingError U+FEA5");
expect(() => {ms932Encoder.encode("\uFEA6")}).to.throw(Error, "EncodingError U+FEA6");
expect(() => {ms932Encoder.encode("\uFEA7")}).to.throw(Error, "EncodingError U+FEA7");
expect(() => {ms932Encoder.encode("\uFEA8")}).to.throw(Error, "EncodingError U+FEA8");
expect(() => {ms932Encoder.encode("\uFEA9")}).to.throw(Error, "EncodingError U+FEA9");
expect(() => {ms932Encoder.encode("\uFEAA")}).to.throw(Error, "EncodingError U+FEAA");
expect(() => {ms932Encoder.encode("\uFEAB")}).to.throw(Error, "EncodingError U+FEAB");
expect(() => {ms932Encoder.encode("\uFEAC")}).to.throw(Error, "EncodingError U+FEAC");
expect(() => {ms932Encoder.encode("\uFEAD")}).to.throw(Error, "EncodingError U+FEAD");
expect(() => {ms932Encoder.encode("\uFEAE")}).to.throw(Error, "EncodingError U+FEAE");
expect(() => {ms932Encoder.encode("\uFEAF")}).to.throw(Error, "EncodingError U+FEAF");
expect(() => {ms932Encoder.encode("\uFEB0")}).to.throw(Error, "EncodingError U+FEB0");
expect(() => {ms932Encoder.encode("\uFEB1")}).to.throw(Error, "EncodingError U+FEB1");
expect(() => {ms932Encoder.encode("\uFEB2")}).to.throw(Error, "EncodingError U+FEB2");
expect(() => {ms932Encoder.encode("\uFEB3")}).to.throw(Error, "EncodingError U+FEB3");
expect(() => {ms932Encoder.encode("\uFEB4")}).to.throw(Error, "EncodingError U+FEB4");
expect(() => {ms932Encoder.encode("\uFEB5")}).to.throw(Error, "EncodingError U+FEB5");
expect(() => {ms932Encoder.encode("\uFEB6")}).to.throw(Error, "EncodingError U+FEB6");
expect(() => {ms932Encoder.encode("\uFEB7")}).to.throw(Error, "EncodingError U+FEB7");
expect(() => {ms932Encoder.encode("\uFEB8")}).to.throw(Error, "EncodingError U+FEB8");
expect(() => {ms932Encoder.encode("\uFEB9")}).to.throw(Error, "EncodingError U+FEB9");
expect(() => {ms932Encoder.encode("\uFEBA")}).to.throw(Error, "EncodingError U+FEBA");
expect(() => {ms932Encoder.encode("\uFEBB")}).to.throw(Error, "EncodingError U+FEBB");
expect(() => {ms932Encoder.encode("\uFEBC")}).to.throw(Error, "EncodingError U+FEBC");
expect(() => {ms932Encoder.encode("\uFEBD")}).to.throw(Error, "EncodingError U+FEBD");
expect(() => {ms932Encoder.encode("\uFEBE")}).to.throw(Error, "EncodingError U+FEBE");
expect(() => {ms932Encoder.encode("\uFEBF")}).to.throw(Error, "EncodingError U+FEBF");
expect(() => {ms932Encoder.encode("\uFEC0")}).to.throw(Error, "EncodingError U+FEC0");
expect(() => {ms932Encoder.encode("\uFEC1")}).to.throw(Error, "EncodingError U+FEC1");
expect(() => {ms932Encoder.encode("\uFEC2")}).to.throw(Error, "EncodingError U+FEC2");
expect(() => {ms932Encoder.encode("\uFEC3")}).to.throw(Error, "EncodingError U+FEC3");
expect(() => {ms932Encoder.encode("\uFEC4")}).to.throw(Error, "EncodingError U+FEC4");
expect(() => {ms932Encoder.encode("\uFEC5")}).to.throw(Error, "EncodingError U+FEC5");
expect(() => {ms932Encoder.encode("\uFEC6")}).to.throw(Error, "EncodingError U+FEC6");
expect(() => {ms932Encoder.encode("\uFEC7")}).to.throw(Error, "EncodingError U+FEC7");
expect(() => {ms932Encoder.encode("\uFEC8")}).to.throw(Error, "EncodingError U+FEC8");
expect(() => {ms932Encoder.encode("\uFEC9")}).to.throw(Error, "EncodingError U+FEC9");
expect(() => {ms932Encoder.encode("\uFECA")}).to.throw(Error, "EncodingError U+FECA");
expect(() => {ms932Encoder.encode("\uFECB")}).to.throw(Error, "EncodingError U+FECB");
expect(() => {ms932Encoder.encode("\uFECC")}).to.throw(Error, "EncodingError U+FECC");
expect(() => {ms932Encoder.encode("\uFECD")}).to.throw(Error, "EncodingError U+FECD");
expect(() => {ms932Encoder.encode("\uFECE")}).to.throw(Error, "EncodingError U+FECE");
expect(() => {ms932Encoder.encode("\uFECF")}).to.throw(Error, "EncodingError U+FECF");
expect(() => {ms932Encoder.encode("\uFED0")}).to.throw(Error, "EncodingError U+FED0");
expect(() => {ms932Encoder.encode("\uFED1")}).to.throw(Error, "EncodingError U+FED1");
expect(() => {ms932Encoder.encode("\uFED2")}).to.throw(Error, "EncodingError U+FED2");
expect(() => {ms932Encoder.encode("\uFED3")}).to.throw(Error, "EncodingError U+FED3");
expect(() => {ms932Encoder.encode("\uFED4")}).to.throw(Error, "EncodingError U+FED4");
expect(() => {ms932Encoder.encode("\uFED5")}).to.throw(Error, "EncodingError U+FED5");
expect(() => {ms932Encoder.encode("\uFED6")}).to.throw(Error, "EncodingError U+FED6");
expect(() => {ms932Encoder.encode("\uFED7")}).to.throw(Error, "EncodingError U+FED7");
expect(() => {ms932Encoder.encode("\uFED8")}).to.throw(Error, "EncodingError U+FED8");
expect(() => {ms932Encoder.encode("\uFED9")}).to.throw(Error, "EncodingError U+FED9");
expect(() => {ms932Encoder.encode("\uFEDA")}).to.throw(Error, "EncodingError U+FEDA");
expect(() => {ms932Encoder.encode("\uFEDB")}).to.throw(Error, "EncodingError U+FEDB");
expect(() => {ms932Encoder.encode("\uFEDC")}).to.throw(Error, "EncodingError U+FEDC");
expect(() => {ms932Encoder.encode("\uFEDD")}).to.throw(Error, "EncodingError U+FEDD");
expect(() => {ms932Encoder.encode("\uFEDE")}).to.throw(Error, "EncodingError U+FEDE");
expect(() => {ms932Encoder.encode("\uFEDF")}).to.throw(Error, "EncodingError U+FEDF");
expect(() => {ms932Encoder.encode("\uFEE0")}).to.throw(Error, "EncodingError U+FEE0");
expect(() => {ms932Encoder.encode("\uFEE1")}).to.throw(Error, "EncodingError U+FEE1");
expect(() => {ms932Encoder.encode("\uFEE2")}).to.throw(Error, "EncodingError U+FEE2");
expect(() => {ms932Encoder.encode("\uFEE3")}).to.throw(Error, "EncodingError U+FEE3");
expect(() => {ms932Encoder.encode("\uFEE4")}).to.throw(Error, "EncodingError U+FEE4");
expect(() => {ms932Encoder.encode("\uFEE5")}).to.throw(Error, "EncodingError U+FEE5");
expect(() => {ms932Encoder.encode("\uFEE6")}).to.throw(Error, "EncodingError U+FEE6");
expect(() => {ms932Encoder.encode("\uFEE7")}).to.throw(Error, "EncodingError U+FEE7");
expect(() => {ms932Encoder.encode("\uFEE8")}).to.throw(Error, "EncodingError U+FEE8");
expect(() => {ms932Encoder.encode("\uFEE9")}).to.throw(Error, "EncodingError U+FEE9");
expect(() => {ms932Encoder.encode("\uFEEA")}).to.throw(Error, "EncodingError U+FEEA");
expect(() => {ms932Encoder.encode("\uFEEB")}).to.throw(Error, "EncodingError U+FEEB");
expect(() => {ms932Encoder.encode("\uFEEC")}).to.throw(Error, "EncodingError U+FEEC");
expect(() => {ms932Encoder.encode("\uFEED")}).to.throw(Error, "EncodingError U+FEED");
expect(() => {ms932Encoder.encode("\uFEEE")}).to.throw(Error, "EncodingError U+FEEE");
expect(() => {ms932Encoder.encode("\uFEEF")}).to.throw(Error, "EncodingError U+FEEF");
expect(() => {ms932Encoder.encode("\uFEF0")}).to.throw(Error, "EncodingError U+FEF0");
expect(() => {ms932Encoder.encode("\uFEF1")}).to.throw(Error, "EncodingError U+FEF1");
expect(() => {ms932Encoder.encode("\uFEF2")}).to.throw(Error, "EncodingError U+FEF2");
expect(() => {ms932Encoder.encode("\uFEF3")}).to.throw(Error, "EncodingError U+FEF3");
expect(() => {ms932Encoder.encode("\uFEF4")}).to.throw(Error, "EncodingError U+FEF4");
expect(() => {ms932Encoder.encode("\uFEF5")}).to.throw(Error, "EncodingError U+FEF5");
expect(() => {ms932Encoder.encode("\uFEF6")}).to.throw(Error, "EncodingError U+FEF6");
expect(() => {ms932Encoder.encode("\uFEF7")}).to.throw(Error, "EncodingError U+FEF7");
expect(() => {ms932Encoder.encode("\uFEF8")}).to.throw(Error, "EncodingError U+FEF8");
expect(() => {ms932Encoder.encode("\uFEF9")}).to.throw(Error, "EncodingError U+FEF9");
expect(() => {ms932Encoder.encode("\uFEFA")}).to.throw(Error, "EncodingError U+FEFA");
expect(() => {ms932Encoder.encode("\uFEFB")}).to.throw(Error, "EncodingError U+FEFB");
expect(() => {ms932Encoder.encode("\uFEFC")}).to.throw(Error, "EncodingError U+FEFC");
expect(() => {ms932Encoder.encode("\uFEFD")}).to.throw(Error, "EncodingError U+FEFD");
expect(() => {ms932Encoder.encode("\uFEFE")}).to.throw(Error, "EncodingError U+FEFE");
expect(() => {ms932Encoder.encode("\uFEFF")}).to.throw(Error, "EncodingError U+FEFF");
expect(() => {ms932Encoder.encode("\uFF00")}).to.throw(Error, "EncodingError U+FF00");
r = r && ([...ms932Encoder.encode("！＂＃＄％＆＇（）＊＋，－．／０１２３４５６７８９：；＜＝＞？＠ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ［＼］＾＿｀ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ｛｜｝～")].join(",") === "129,73,250,87,129,148,129,144,129,147,129,149,250,86,129,105,129,106,129,150,129,123,129,67,129,124,129,68,129,94,130,79,130,80,130,81,130,82,130,83,130,84,130,85,130,86,130,87,130,88,129,70,129,71,129,131,129,129,129,132,129,72,129,151,130,96,130,97,130,98,130,99,130,100,130,101,130,102,130,103,130,104,130,105,130,106,130,107,130,108,130,109,130,110,130,111,130,112,130,113,130,114,130,115,130,116,130,117,130,118,130,119,130,120,130,121,129,109,129,95,129,110,129,79,129,81,129,77,130,129,130,130,130,131,130,132,130,133,130,134,130,135,130,136,130,137,130,138,130,139,130,140,130,141,130,142,130,143,130,144,130,145,130,146,130,147,130,148,130,149,130,150,130,151,130,152,130,153,130,154,129,111,129,98,129,112,129,96"); // U+FF01
expect(() => {ms932Encoder.encode("\uFF5F")}).to.throw(Error, "EncodingError U+FF5F");
expect(() => {ms932Encoder.encode("\uFF60")}).to.throw(Error, "EncodingError U+FF60");
r = r && ([...ms932Encoder.encode("｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｰｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞﾟ")].join(",") === "161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223"); // U+FF61
expect(() => {ms932Encoder.encode("\uFFA0")}).to.throw(Error, "EncodingError U+FFA0");
expect(() => {ms932Encoder.encode("\uFFA1")}).to.throw(Error, "EncodingError U+FFA1");
expect(() => {ms932Encoder.encode("\uFFA2")}).to.throw(Error, "EncodingError U+FFA2");
expect(() => {ms932Encoder.encode("\uFFA3")}).to.throw(Error, "EncodingError U+FFA3");
expect(() => {ms932Encoder.encode("\uFFA4")}).to.throw(Error, "EncodingError U+FFA4");
expect(() => {ms932Encoder.encode("\uFFA5")}).to.throw(Error, "EncodingError U+FFA5");
expect(() => {ms932Encoder.encode("\uFFA6")}).to.throw(Error, "EncodingError U+FFA6");
expect(() => {ms932Encoder.encode("\uFFA7")}).to.throw(Error, "EncodingError U+FFA7");
expect(() => {ms932Encoder.encode("\uFFA8")}).to.throw(Error, "EncodingError U+FFA8");
expect(() => {ms932Encoder.encode("\uFFA9")}).to.throw(Error, "EncodingError U+FFA9");
expect(() => {ms932Encoder.encode("\uFFAA")}).to.throw(Error, "EncodingError U+FFAA");
expect(() => {ms932Encoder.encode("\uFFAB")}).to.throw(Error, "EncodingError U+FFAB");
expect(() => {ms932Encoder.encode("\uFFAC")}).to.throw(Error, "EncodingError U+FFAC");
expect(() => {ms932Encoder.encode("\uFFAD")}).to.throw(Error, "EncodingError U+FFAD");
expect(() => {ms932Encoder.encode("\uFFAE")}).to.throw(Error, "EncodingError U+FFAE");
expect(() => {ms932Encoder.encode("\uFFAF")}).to.throw(Error, "EncodingError U+FFAF");
expect(() => {ms932Encoder.encode("\uFFB0")}).to.throw(Error, "EncodingError U+FFB0");
expect(() => {ms932Encoder.encode("\uFFB1")}).to.throw(Error, "EncodingError U+FFB1");
expect(() => {ms932Encoder.encode("\uFFB2")}).to.throw(Error, "EncodingError U+FFB2");
expect(() => {ms932Encoder.encode("\uFFB3")}).to.throw(Error, "EncodingError U+FFB3");
expect(() => {ms932Encoder.encode("\uFFB4")}).to.throw(Error, "EncodingError U+FFB4");
expect(() => {ms932Encoder.encode("\uFFB5")}).to.throw(Error, "EncodingError U+FFB5");
expect(() => {ms932Encoder.encode("\uFFB6")}).to.throw(Error, "EncodingError U+FFB6");
expect(() => {ms932Encoder.encode("\uFFB7")}).to.throw(Error, "EncodingError U+FFB7");
expect(() => {ms932Encoder.encode("\uFFB8")}).to.throw(Error, "EncodingError U+FFB8");
expect(() => {ms932Encoder.encode("\uFFB9")}).to.throw(Error, "EncodingError U+FFB9");
expect(() => {ms932Encoder.encode("\uFFBA")}).to.throw(Error, "EncodingError U+FFBA");
expect(() => {ms932Encoder.encode("\uFFBB")}).to.throw(Error, "EncodingError U+FFBB");
expect(() => {ms932Encoder.encode("\uFFBC")}).to.throw(Error, "EncodingError U+FFBC");
expect(() => {ms932Encoder.encode("\uFFBD")}).to.throw(Error, "EncodingError U+FFBD");
expect(() => {ms932Encoder.encode("\uFFBE")}).to.throw(Error, "EncodingError U+FFBE");
expect(() => {ms932Encoder.encode("\uFFBF")}).to.throw(Error, "EncodingError U+FFBF");
expect(() => {ms932Encoder.encode("\uFFC0")}).to.throw(Error, "EncodingError U+FFC0");
expect(() => {ms932Encoder.encode("\uFFC1")}).to.throw(Error, "EncodingError U+FFC1");
expect(() => {ms932Encoder.encode("\uFFC2")}).to.throw(Error, "EncodingError U+FFC2");
expect(() => {ms932Encoder.encode("\uFFC3")}).to.throw(Error, "EncodingError U+FFC3");
expect(() => {ms932Encoder.encode("\uFFC4")}).to.throw(Error, "EncodingError U+FFC4");
expect(() => {ms932Encoder.encode("\uFFC5")}).to.throw(Error, "EncodingError U+FFC5");
expect(() => {ms932Encoder.encode("\uFFC6")}).to.throw(Error, "EncodingError U+FFC6");
expect(() => {ms932Encoder.encode("\uFFC7")}).to.throw(Error, "EncodingError U+FFC7");
expect(() => {ms932Encoder.encode("\uFFC8")}).to.throw(Error, "EncodingError U+FFC8");
expect(() => {ms932Encoder.encode("\uFFC9")}).to.throw(Error, "EncodingError U+FFC9");
expect(() => {ms932Encoder.encode("\uFFCA")}).to.throw(Error, "EncodingError U+FFCA");
expect(() => {ms932Encoder.encode("\uFFCB")}).to.throw(Error, "EncodingError U+FFCB");
expect(() => {ms932Encoder.encode("\uFFCC")}).to.throw(Error, "EncodingError U+FFCC");
expect(() => {ms932Encoder.encode("\uFFCD")}).to.throw(Error, "EncodingError U+FFCD");
expect(() => {ms932Encoder.encode("\uFFCE")}).to.throw(Error, "EncodingError U+FFCE");
expect(() => {ms932Encoder.encode("\uFFCF")}).to.throw(Error, "EncodingError U+FFCF");
expect(() => {ms932Encoder.encode("\uFFD0")}).to.throw(Error, "EncodingError U+FFD0");
expect(() => {ms932Encoder.encode("\uFFD1")}).to.throw(Error, "EncodingError U+FFD1");
expect(() => {ms932Encoder.encode("\uFFD2")}).to.throw(Error, "EncodingError U+FFD2");
expect(() => {ms932Encoder.encode("\uFFD3")}).to.throw(Error, "EncodingError U+FFD3");
expect(() => {ms932Encoder.encode("\uFFD4")}).to.throw(Error, "EncodingError U+FFD4");
expect(() => {ms932Encoder.encode("\uFFD5")}).to.throw(Error, "EncodingError U+FFD5");
expect(() => {ms932Encoder.encode("\uFFD6")}).to.throw(Error, "EncodingError U+FFD6");
expect(() => {ms932Encoder.encode("\uFFD7")}).to.throw(Error, "EncodingError U+FFD7");
expect(() => {ms932Encoder.encode("\uFFD8")}).to.throw(Error, "EncodingError U+FFD8");
expect(() => {ms932Encoder.encode("\uFFD9")}).to.throw(Error, "EncodingError U+FFD9");
expect(() => {ms932Encoder.encode("\uFFDA")}).to.throw(Error, "EncodingError U+FFDA");
expect(() => {ms932Encoder.encode("\uFFDB")}).to.throw(Error, "EncodingError U+FFDB");
expect(() => {ms932Encoder.encode("\uFFDC")}).to.throw(Error, "EncodingError U+FFDC");
expect(() => {ms932Encoder.encode("\uFFDD")}).to.throw(Error, "EncodingError U+FFDD");
expect(() => {ms932Encoder.encode("\uFFDE")}).to.throw(Error, "EncodingError U+FFDE");
expect(() => {ms932Encoder.encode("\uFFDF")}).to.throw(Error, "EncodingError U+FFDF");
r = r && ([...ms932Encoder.encode("￠￡￢￣￤￥")].join(",") === "129,145,129,146,129,202,129,80,250,85,129,143"); // U+FFE0
expect(() => {ms932Encoder.encode("\uFFE6")}).to.throw(Error, "EncodingError U+FFE6");
expect(() => {ms932Encoder.encode("\uFFE7")}).to.throw(Error, "EncodingError U+FFE7");
expect(() => {ms932Encoder.encode("\uFFE8")}).to.throw(Error, "EncodingError U+FFE8");
expect(() => {ms932Encoder.encode("\uFFE9")}).to.throw(Error, "EncodingError U+FFE9");
expect(() => {ms932Encoder.encode("\uFFEA")}).to.throw(Error, "EncodingError U+FFEA");
expect(() => {ms932Encoder.encode("\uFFEB")}).to.throw(Error, "EncodingError U+FFEB");
expect(() => {ms932Encoder.encode("\uFFEC")}).to.throw(Error, "EncodingError U+FFEC");
expect(() => {ms932Encoder.encode("\uFFED")}).to.throw(Error, "EncodingError U+FFED");
expect(() => {ms932Encoder.encode("\uFFEE")}).to.throw(Error, "EncodingError U+FFEE");
expect(() => {ms932Encoder.encode("\uFFEF")}).to.throw(Error, "EncodingError U+FFEF");
expect(() => {ms932Encoder.encode("\uFFF0")}).to.throw(Error, "EncodingError U+FFF0");
expect(() => {ms932Encoder.encode("\uFFF1")}).to.throw(Error, "EncodingError U+FFF1");
expect(() => {ms932Encoder.encode("\uFFF2")}).to.throw(Error, "EncodingError U+FFF2");
expect(() => {ms932Encoder.encode("\uFFF3")}).to.throw(Error, "EncodingError U+FFF3");
expect(() => {ms932Encoder.encode("\uFFF4")}).to.throw(Error, "EncodingError U+FFF4");
expect(() => {ms932Encoder.encode("\uFFF5")}).to.throw(Error, "EncodingError U+FFF5");
expect(() => {ms932Encoder.encode("\uFFF6")}).to.throw(Error, "EncodingError U+FFF6");
expect(() => {ms932Encoder.encode("\uFFF7")}).to.throw(Error, "EncodingError U+FFF7");
expect(() => {ms932Encoder.encode("\uFFF8")}).to.throw(Error, "EncodingError U+FFF8");
expect(() => {ms932Encoder.encode("\uFFF9")}).to.throw(Error, "EncodingError U+FFF9");
expect(() => {ms932Encoder.encode("\uFFFA")}).to.throw(Error, "EncodingError U+FFFA");
expect(() => {ms932Encoder.encode("\uFFFB")}).to.throw(Error, "EncodingError U+FFFB");
expect(() => {ms932Encoder.encode("\uFFFC")}).to.throw(Error, "EncodingError U+FFFC");
expect(() => {ms932Encoder.encode("\uFFFD")}).to.throw(Error, "EncodingError U+FFFD");
expect(() => {ms932Encoder.encode("\uFFFE")}).to.throw(Error, "EncodingError U+FFFE");
expect(() => {ms932Encoder.encode("\uFFFF")}).to.throw(Error, "EncodingError U+FFFF");

expect(r).to.equal(true);

  });

});
